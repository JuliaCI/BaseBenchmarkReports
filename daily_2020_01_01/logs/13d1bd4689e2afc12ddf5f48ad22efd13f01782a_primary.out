cset: moving following pidspec: 8024
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.416099272 seconds)
loading group "string"... done (took 0.594956939 seconds)
loading group "linalg"... done (took 7.317702736 seconds)
loading group "parallel"... done (took 0.164327379 seconds)
loading group "find"... done (took 1.165958931 seconds)
loading group "tuple"... done (took 1.804756934 seconds)
loading group "dates"... done (took 1.255920835 seconds)
loading group "micro"... done (took 0.222749987 seconds)
loading group "io"... done (took 1.022456063 seconds)
loading group "scalar"... done (took 38.182220186 seconds)
loading group "sparse"... done (took 12.017774279 seconds)
loading group "broadcast"... done (took 1.016101967 seconds)
loading group "union"... done (took 13.010873548 seconds)
loading group "simd"... done (took 4.825281414 seconds)
loading group "random"... done (took 9.790557247 seconds)
loading group "problem"... done (took 1.860089258 seconds)
loading group "array"... done (took 22.383136334 seconds)
loading group "misc"... done (took 1.734414217 seconds)
loading group "sort"... done (took 3.419418123 seconds)
loading group "collection"... done (took 18.389372638 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.52201641 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125382754 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118341343 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119808918 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147261692 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112562709 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125108949 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085757843 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.840237739 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155550871 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117576727 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.431144941 seconds)
done (took 5.214489282 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.1756733 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083525017 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083002688 seconds)
  done (took 1.302309551 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06571385 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122652168 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066982862 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067585139 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067719739 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06655475 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066597803 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066252707 seconds)
  done (took 1.660477915 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.0758307 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069491557 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066321235 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068543349 seconds)
  done (took 1.421113712 seconds)
done (took 5.772894547 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.792609322 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203348004 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187629041 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.411155878 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131545885 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159285336 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.631348215 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.299745531 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188941728 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081258516 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109272577 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.328389685 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11118088 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637190989 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074249581 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091163408 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137736191 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.428083806 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067069533 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082182057 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089177913 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128212641 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084849928 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074098128 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148783945 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067862465 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136888742 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081257344 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06683569 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213302574 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172853802 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658478934 seconds)
  done (took 10.252127918 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097946854 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096725258 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069360381 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122930488 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09698507 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069506739 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071220421 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067379323 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086587674 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127523283 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088658637 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102137387 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065878613 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06830426 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085092574 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204890264 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079951703 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082479357 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070944263 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075217178 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104718783 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078275559 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076984703 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076851695 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128824673 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180064872 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096481365 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097892544 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066632098 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079397933 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115040491 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125025082 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065563678 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066259409 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123444278 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095193568 seconds)
  done (took 4.578302309 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.003178448 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144195687 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090559379 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135237202 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065134501 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085076042 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109082228 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065455264 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081048803 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.208972236 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.399437827 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.59095313 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111674055 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10436997 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067580232 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068457281 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067079156 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.503222106 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096360101 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107665209 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081714195 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070763137 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069952845 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.352551286 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067706723 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063932055 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068099277 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057211862 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12608799 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06817265 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.047821756 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.070297928 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127624591 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06734741 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091303097 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068764045 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101583131 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088300495 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274644507 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068457056 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064851124 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15345199 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070243848 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067124414 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084287967 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104164206 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113137837 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065826704 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066384408 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165533732 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065950847 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079626519 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.645642125 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152150691 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076645361 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064573919 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064942699 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.252754487 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088665551 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06934289 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064791928 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182090892 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129567259 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06779744 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067044289 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069573909 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071378537 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.369040327 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068801933 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.882680987 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070788272 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078270478 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069408392 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069785844 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073649967 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07241721 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087745217 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066668862 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074807892 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066326704 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066293726 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067152807 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083448807 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.380280709 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06727926 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068472056 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065449031 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089556312 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097266835 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067221462 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065751247 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100146235 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068566551 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066352448 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107331723 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066457007 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083683097 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07012907 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113310662 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066239848 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.183502584 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065804348 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096898705 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069828626 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098998357 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08085559 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069044701 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.424905963 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066163243 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064809282 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069480656 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065959496 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067629526 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06658831 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078387008 seconds)
  done (took 21.095476069 seconds)
done (took 38.067202921 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.237877887 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083150641 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079981656 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074441843 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074862984 seconds)
  done (took 1.783029349 seconds)
done (took 2.994831908 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126042475 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101299565 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064994029 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097506469 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065009493 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102674009 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10103907 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082163199 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100534944 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064515642 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098297504 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065218141 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064324486 seconds)
  done (took 2.368040025 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086016034 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087389335 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072148993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086084699 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066196311 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085988768 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084459718 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09283123 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084043542 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07481303 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065686131 seconds)
  done (took 2.093175556 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08538179 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087530439 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071788324 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084888993 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065981433 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084783207 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084373035 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089001507 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084564421 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076467002 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065629924 seconds)
  done (took 2.081324636 seconds)
done (took 7.743265511 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080538088 seconds)
  done (took 1.273117463 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.59323714 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.09206466 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082249419 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111863402 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189382304 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118666175 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272126648 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086844088 seconds)
  done (took 8.920798436 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105807832 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070634773 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072019518 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072075059 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068943251 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070983539 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068322945 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07231591 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069818954 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069466612 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06896195 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071049592 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068512199 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071414467 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06881488 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07147526 seconds)
  done (took 2.429326936 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09312889 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091671124 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074037481 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075198348 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072097355 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072112165 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073716343 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073555608 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071114604 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072058763 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074368664 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073377395 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071649174 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064935575 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073411154 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075199702 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070919794 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074170722 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074918119 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07519719 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074514576 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064249002 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071271326 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073944051 seconds)
  done (took 3.086436615 seconds)
done (took 16.911970713 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116007597 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071520757 seconds)
  done (took 1.385989936 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082446937 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083085982 seconds)
  done (took 1.374974571 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084321425 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065140561 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091287341 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077837219 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066286037 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065560086 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087422846 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065964658 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065779715 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06584919 seconds)
  done (took 1.946846472 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069855591 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077412496 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071052618 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080679148 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073662875 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063820773 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072020371 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067789916 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077076752 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062362779 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070929751 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.0823738 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07104833 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084323708 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071713716 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068143517 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070816214 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066973224 seconds)
  done (took 2.514758658 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066883603 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067151833 seconds)
  done (took 1.350628626 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068662669 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064212183 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067004966 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066508937 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063479617 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062350192 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063351559 seconds)
  done (took 1.668530881 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38638441 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113829876 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310727849 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070954251 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082165456 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256241469 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065391744 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070357858 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070244234 seconds)
  done (took 2.683302881 seconds)
done (took 14.139529283 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08172426 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086686668 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096371401 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.37572889 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091385755 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065674772 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114488475 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186610069 seconds)
done (took 2.32611088 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214760005 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.640699929 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402044775 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204273478 seconds)
  done (took 2.461557684 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345179125 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087821745 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059314698 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067123544 seconds)
  done (took 1.78405843 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068545168 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070418234 seconds)
  done (took 1.362129257 seconds)
done (took 7.04532014 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069236217 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086270139 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066680472 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064013252 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066504768 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063407702 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063540744 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063453038 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066786321 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06599929 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.06875355 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065960387 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066433261 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.068964299 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064342168 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063639104 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066159551 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065898143 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063629829 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06379749 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063575421 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066513104 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06402422 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063814065 seconds)
  done (took 2.84825398 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085853021 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065940862 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072472788 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071896028 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069853095 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071406277 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071255164 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065904766 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070842922 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068350309 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06908324 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069501401 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06811218 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06956497 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068374907 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069467768 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071785822 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065899119 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068299424 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069775459 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070956419 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066017281 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069206057 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071561138 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069547687 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070810495 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068493964 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066096021 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071066471 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06892273 seconds)
  done (took 3.328972241 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070894567 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063115112 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064940065 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071260395 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064072192 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064159857 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063096876 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064127887 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065126915 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063929414 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064940652 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063075449 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063832688 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064339168 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064305524 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067495638 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079531165 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064088277 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063591219 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06447656 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066647015 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063396617 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064098288 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063907328 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06386295 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063603158 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064546544 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064194674 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064449778 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06328694 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066508043 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067228407 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063671876 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07061198 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067426814 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063800406 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067822438 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063390638 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064059929 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063020024 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063040411 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063179977 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063165791 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070730476 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063820059 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064892973 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064144001 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064880014 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.177277519 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06592863 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063332518 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06366605 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065654587 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064803198 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067236583 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062794155 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063909226 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063069164 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06432843 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063366844 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063343172 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06292374 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066536273 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063993649 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078312908 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070026264 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063075247 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064756458 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063779695 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065691885 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065039591 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077019231 seconds)
  done (took 6.056150263 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091080064 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086750146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065520902 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064955279 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061445669 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064235186 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06968668 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063834424 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065567709 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082001006 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064042666 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065805249 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065523695 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067427074 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064041665 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065390152 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072342573 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061767343 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063644233 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068319708 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064012649 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069173646 seconds)
  done (took 2.747913788 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157299179 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071053197 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106009547 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075881044 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070275881 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075423457 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069902842 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069828964 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069631752 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067444608 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067939157 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069700863 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069718203 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067704595 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067891693 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067438471 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070053147 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067268876 seconds)
  done (took 2.619843995 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077958005 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06565914 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087386538 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066194457 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065851748 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06848587 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070102562 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074131011 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068284278 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065785547 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073689817 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068374897 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068236812 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065925316 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067844453 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066057668 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068181195 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065777848 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073329714 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069740132 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07029255 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073452797 seconds)
  done (took 2.782002988 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081605098 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068383797 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081982331 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068533048 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061883136 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063851368 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070476444 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065353738 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070105302 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067826754 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06560601 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064184211 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068968473 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065532914 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.067830965 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065618576 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06802168 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065648054 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068080955 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061874205 seconds)
  done (took 2.605018044 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088088663 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068420229 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067921381 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07581089 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068212399 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068062459 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074903559 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067597531 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067486694 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088559969 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067129649 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067193035 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07556418 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071813563 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067329982 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074621143 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074240386 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074620091 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066823954 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067633168 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088859042 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067560986 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074761469 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067623711 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067432835 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067372386 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067659593 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07265137 seconds)
  done (took 3.260917237 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069037344 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067244813 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063887389 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063864072 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063551322 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063234501 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063265953 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063399206 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065837268 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063200385 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065863352 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065827493 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066061956 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065741555 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065998666 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066454253 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066125592 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063991254 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063494113 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063653862 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066003747 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066149077 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065692743 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063427801 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063762134 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065859791 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063415209 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063579831 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06593996 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063904233 seconds)
  done (took 3.195682912 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077085526 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073696522 seconds)
  done (took 1.399810171 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064536305 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079883642 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063516991 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070182896 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070031541 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066844218 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073370407 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06919281 seconds)
  done (took 1.801964077 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083652867 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077597437 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068012068 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079635187 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077865067 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083224129 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135422926 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066812568 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07322206 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064608187 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080159521 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065572823 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072837566 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066843426 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072056182 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073435368 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063760907 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071536077 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068526409 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065279237 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067749674 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075141856 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069216227 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061566856 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067501091 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088882171 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077901434 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065353145 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068850938 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073523422 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071945659 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060301454 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066008552 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066426035 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063778378 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075786376 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081124319 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068739716 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074754878 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066701802 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075993341 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061198641 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070637504 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072536254 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07646822 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066352749 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066374914 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061082374 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064341811 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068544812 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061117685 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069529479 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060858118 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07333574 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070537871 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077204529 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065241896 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067940248 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068944375 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069370016 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072432285 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068461978 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069369994 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065761437 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075607807 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071196352 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074467813 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061182113 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059844932 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063697369 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075391051 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089539292 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072418447 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066783345 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066583657 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063611315 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069019215 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066774793 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071117802 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072867426 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066344102 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071075508 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07387119 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066108764 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068636231 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073539756 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064527681 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068731633 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064458315 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082238256 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064763508 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063678513 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064222446 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076429182 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069535258 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066036736 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064038226 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073097983 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060141542 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06633503 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067233764 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067327792 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077119493 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070048836 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070578748 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073695605 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072623692 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065768593 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068028989 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062051911 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066074234 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064316993 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071673853 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05873121 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067660474 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066334429 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065162295 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072743225 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063222821 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064518366 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072066936 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07080276 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.188315283 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063638238 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070335029 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066625007 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070113425 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07470613 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065802165 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061901679 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062091082 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070007394 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066171923 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070502765 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071538791 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0701461 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060024399 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064565541 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07193905 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075537334 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067152479 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067224214 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072937902 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068708525 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065703974 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073576884 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069143207 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066226284 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072837802 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067931155 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061104795 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06915231 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069636215 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065428209 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070554036 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069970677 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069215536 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067466511 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064783703 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073067768 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067556553 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065912445 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066987944 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065592503 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077364426 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068880658 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062022956 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063705549 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075317733 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064579997 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065548014 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065827186 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06975999 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067493535 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064767184 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066101696 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068479637 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076713241 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070444677 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067867391 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072414115 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078502523 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066586345 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069439995 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065987402 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067318727 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067470324 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075243331 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07211113 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070800575 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068912921 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063549046 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071202563 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074467513 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065273124 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063604621 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064790162 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069856455 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072255002 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070334683 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066316265 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064230077 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06680672 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069218815 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068596032 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066019483 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065689155 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071855726 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064291273 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072260141 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066358786 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076564091 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069158559 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061016828 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069141263 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064630364 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072923721 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061392083 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064432541 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065664605 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066793438 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065803422 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069237197 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060612102 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073234908 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074048464 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067131482 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065712554 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065784102 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072847299 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06741033 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06944903 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06867564 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070639604 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07529941 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064218271 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068609179 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075010083 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065174297 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05887891 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070233041 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063256584 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063341128 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063958007 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063600653 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068040559 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072186598 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071328788 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.187650775 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.0702246 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066063415 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066278041 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062067031 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072067513 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069966126 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067824176 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073860389 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067622629 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066944345 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070726355 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065922752 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067748887 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068532758 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069359074 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067842266 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.0683318 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066486109 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070135915 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06540911 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064523304 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069079658 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067137136 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067496307 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072324772 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066679055 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067259745 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069232408 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06779365 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067699672 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06760117 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066737918 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069775773 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067303483 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067225531 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068835224 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062094075 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074132319 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066009296 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074235483 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067076463 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063551431 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073666993 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068687276 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071510295 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067425744 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067078319 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068254559 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065857126 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070095354 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073997493 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064826219 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076927763 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074754597 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067558395 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068963987 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067578199 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068384482 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066555047 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067506604 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06773366 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066469477 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066020924 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071625512 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069828057 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066947398 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069018205 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067375805 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066746121 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067535943 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060580159 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065603244 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066803537 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066384086 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076257446 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066864346 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066174953 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065118325 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066920631 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065198554 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062735964 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073478069 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074358243 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06649247 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072779497 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065261373 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067844921 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076493876 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060106416 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064654095 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063383803 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064179105 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073488178 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066420142 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075406872 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066114462 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065464239 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062952234 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066721066 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064721533 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060675029 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064005412 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069742116 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06492636 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065706209 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066073529 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06874717 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067235588 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075631201 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06509034 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066864111 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065901016 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062952871 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064428932 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064433232 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067797732 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065562609 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063229353 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062629141 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06473621 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066114372 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066611275 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067650153 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066518731 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071959037 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064952339 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067910112 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067978006 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059742339 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.200633102 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067611095 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066904021 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066041794 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071267124 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070049037 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068017623 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076294209 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067054121 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067744149 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067082093 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065458017 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065716435 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066800316 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066296459 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066910476 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068259574 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075550319 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065262682 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069577689 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066703392 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067453349 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073419285 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067195668 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070563044 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072728182 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066986264 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069138691 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074751538 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070973335 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069867163 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067732554 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068247597 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073280195 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066119842 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072891451 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067446942 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068455771 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068986548 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064588372 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067477386 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066508761 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066199472 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073472243 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068250821 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066486189 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065761353 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064615838 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067846186 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069161543 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074156135 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069349594 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069476874 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061812289 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063211111 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068090309 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065052995 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.0675326 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06931244 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072008826 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069326644 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066568379 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065459225 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075332928 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072989805 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070234961 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064792807 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070530993 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067625674 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068602094 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068340408 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066676392 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068059538 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070931559 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068459758 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066193805 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072964533 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070141727 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067200135 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067859961 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067263694 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066069771 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061303954 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066715877 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068194127 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071251809 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068656109 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066471796 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076597095 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064250396 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066868985 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069183014 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065147164 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07053268 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061013164 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06799315 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066770065 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067269231 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061266894 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065767235 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064619439 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068721043 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065467238 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061608286 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077269657 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075550478 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070115654 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065588157 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065580738 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061669248 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061663153 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.0659964 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067365074 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068065956 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076203363 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065412557 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064953829 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060610896 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065551467 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068282833 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068606235 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063188976 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060339492 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064574556 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068539264 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070811174 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064058568 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064941429 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068518323 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067199635 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063162308 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.201467733 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064798563 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070956483 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080296954 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067227132 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067559297 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073531624 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074794068 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067260023 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062049845 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068232878 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069813353 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067971901 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067285325 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067954939 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082635067 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070929028 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066878885 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065636338 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069867009 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066289314 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074861952 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068572719 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067090825 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07131713 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069378609 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07533738 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070585512 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074692385 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070572804 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069427463 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06671419 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067787638 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065044516 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066768706 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067633002 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067529969 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072398671 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075165188 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066105718 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077271328 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076217902 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068682783 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063916831 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066515073 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066665769 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061824416 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068311113 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06517135 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065577036 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065262377 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066346251 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068140737 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071931786 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068339931 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067686286 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066480972 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060908907 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069228397 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069627391 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068264164 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062977634 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067052653 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067993878 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071512999 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069833308 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06454925 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068671342 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069048129 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0677494 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061566055 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072631544 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066291208 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068666153 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065277009 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066574552 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067327695 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069758482 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070997571 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067532284 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068555973 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070550133 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068407635 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06402125 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063702005 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071864105 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064357827 seconds)
  done (took 42.565592526 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101328515 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063320871 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062335762 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062198973 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072818997 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062870628 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061834984 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062304393 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062772553 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064722002 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061393307 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061725731 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069952943 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077289627 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072954957 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066394808 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061564351 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062703743 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061247724 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063284663 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070163202 seconds)
  done (took 2.742677303 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075170235 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077382945 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075388409 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082137524 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070283359 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070174981 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075136573 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070274123 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077838192 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07271032 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077911873 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069774495 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071982151 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07263542 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072674678 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070007943 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077581775 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070386557 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070207285 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074773203 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06989201 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074788252 seconds)
  done (took 2.940674499 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068940232 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065809627 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067796691 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061363602 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06581132 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061330288 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069176289 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064060607 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068959652 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065259186 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065893365 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065242461 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067454096 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061805072 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066149706 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063770835 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107278415 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069421961 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065987091 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066893819 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060826364 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067713965 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061030217 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061746765 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065021738 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069079547 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066141264 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064098821 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065141262 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064632271 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065573537 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063807653 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067026644 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066441992 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064749782 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065000716 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065080343 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065718983 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061276822 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063458901 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066536374 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061235809 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065830347 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066675874 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063550504 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063307793 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067021604 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065629685 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060638402 seconds)
  done (took 4.555318165 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080893287 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108968229 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06753896 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090826528 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079521467 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072274282 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069198586 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089352024 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063073415 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064202962 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080242794 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078247244 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065481348 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069502282 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069179961 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065456036 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066006808 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064452304 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068895204 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064593796 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068758758 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071771679 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078812958 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077340186 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068875939 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064134293 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064412264 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069255659 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077333618 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068917671 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069119217 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070086661 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079447929 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070428854 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063991286 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067465904 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081269853 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065412424 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067620804 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062951078 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067153413 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06938902 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071878075 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081351647 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065904474 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069992484 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064890853 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06261106 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077307829 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067322031 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072692855 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07889595 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068652524 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065297632 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069339025 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079620332 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064791535 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063278538 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068459146 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076699046 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063608601 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068811934 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078156 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066819682 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071439386 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078611604 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069857396 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068761685 seconds)
  done (took 6.319817771 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077129467 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094666869 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083749113 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083486939 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075696788 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075573402 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075085935 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075250059 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075241023 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079393893 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074916748 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114701485 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070987005 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077572141 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074814879 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076146949 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075372908 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07525364 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075118137 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075195067 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075011883 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082564979 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075520177 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082536684 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07886596 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071131363 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07497879 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075337635 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082114018 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075136999 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08785381 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075144358 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075099667 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082205269 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.0792943 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075067668 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065071958 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075136284 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075690037 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075251566 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070574653 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082566063 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074623282 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070463457 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075274121 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074694385 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082361862 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079410078 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077393104 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079630024 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075184917 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082828663 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075547142 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075368311 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082774081 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085538582 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082218632 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082466448 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076177479 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082478162 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082140164 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084989436 seconds)
  done (took 6.204363067 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083776888 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073728227 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08154085 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061202642 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064100872 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071277308 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064009461 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064135733 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073583087 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074129751 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075832323 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071614791 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07463686 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075585727 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071451285 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074064032 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071206407 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071365346 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07343927 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071725559 seconds)
  done (took 2.788229074 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075696144 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083345718 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066696715 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071920856 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069292436 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071276156 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068423701 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069154263 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066843454 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069072642 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075771936 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075482488 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066575209 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071413841 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075675085 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070780168 seconds)
  done (took 2.486098533 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084904262 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073007628 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080030058 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067099325 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067091696 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062186669 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065763793 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061196923 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062256829 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077679294 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065763139 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076320556 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065615668 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064902015 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062188242 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07104259 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062610716 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062907425 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065437294 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078613504 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069390336 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063911786 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06884429 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065642607 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067965133 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070046767 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064979689 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065930561 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062872928 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065762247 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068492344 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068742117 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062238654 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062995435 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064227639 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062607567 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065645598 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065499542 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070448913 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065180279 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063644887 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067188131 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065084092 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066171052 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062139106 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065531716 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061880363 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067775223 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063228298 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067555562 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065229889 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068055532 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065742204 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072268456 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068094337 seconds)
  done (took 5.027371644 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080789838 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068932897 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061627157 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064063993 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068732563 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067102026 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069312907 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066643201 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067101027 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063887883 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067274777 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068856735 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066915328 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069517155 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067504053 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069075942 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061744669 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067098684 seconds)
  done (took 2.567666094 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071831614 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065770645 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073040752 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065738328 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06599101 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068248488 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061729937 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064176996 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06437654 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066258188 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066209742 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068147925 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064089852 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067878688 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06560425 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065758508 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068013254 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064640213 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065504803 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06151187 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068434137 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064497002 seconds)
  done (took 2.802545807 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09403134 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082695631 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140427623 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078992537 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084068363 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071261603 seconds)
  done (took 1.897852315 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091021203 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101073867 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06663328 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068862146 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07508799 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069487055 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069915316 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069596919 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077350734 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075539426 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069493522 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078106363 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077544048 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077169844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075085554 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075003208 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069777288 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069565527 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065904896 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083019417 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069062599 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077701458 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069752621 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069353512 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069138924 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077066579 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077616711 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075377348 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069817632 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077880135 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074978051 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069524053 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077718325 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075394704 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069395427 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077829622 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070001594 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083069468 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075845265 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077139867 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069136713 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075278749 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078083693 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074338609 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078218235 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069851406 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073944802 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069815741 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069842965 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084775492 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075009427 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077045779 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077829445 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077967613 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078467612 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085085766 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074879199 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076518981 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075505708 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075507336 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076967923 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075180745 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076692876 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075736259 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075729188 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077063306 seconds)
  done (took 6.313886523 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105859132 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066998931 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069843933 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076391604 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077473382 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069760886 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070752347 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069950854 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070211252 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066281519 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106981629 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070307081 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07705464 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077608303 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070125604 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0698708 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070519805 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076811024 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066484198 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084908923 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0695309 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076684875 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076788468 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076903483 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075431405 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074996174 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069813408 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069751437 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069488013 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069619296 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073903162 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069891635 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076936297 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066384263 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077104878 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070146022 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069713798 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074723463 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069686802 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074940811 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077189075 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08292414 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069438867 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069991977 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075596494 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069953069 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069741573 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066674889 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070022579 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066504269 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075224764 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075359748 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075864682 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076826219 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069840822 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069743232 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070279706 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069551902 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069553517 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074995357 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077525938 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069480578 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085472731 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069466648 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069926311 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076886785 seconds)
  done (took 6.227034316 seconds)
done (took 129.305711408 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.190108763 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164573213 seconds)
  done (took 1.695154848 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070613979 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097959842 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077230304 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128010432 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066254248 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100100984 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099661864 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078173565 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066181858 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065597709 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066000334 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068548795 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131354602 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065931123 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065863871 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068871724 seconds)
  done (took 2.671180989 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099939397 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161089512 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101776602 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064847473 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099187807 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07278232 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064816867 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074999898 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070937496 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065159648 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072948555 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070740504 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065086731 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070629619 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07051479 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072802138 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064996901 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072625385 seconds)
  done (took 2.792466727 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100232789 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091089901 seconds)
  done (took 1.551166898 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157823369 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105671337 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146128527 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351081401 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.163747338 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148126286 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143877118 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143108622 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116345923 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138306451 seconds)
  done (took 2.967592283 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100388227 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.15305228 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.2663306 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117395464 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072797386 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093496027 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118115433 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07827518 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080155259 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079629457 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07954261 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075982844 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09929379 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072615592 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073918688 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075894712 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103270682 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072785357 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074398593 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075508477 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10011443 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066140052 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073450121 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073031942 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076980352 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076824904 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065932648 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065552162 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075477041 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073918256 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075988237 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092187976 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076622038 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105553526 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071086557 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105722861 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076346035 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07276452 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074149667 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073034484 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077375276 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077351188 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072869794 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07614993 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065356751 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076095844 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065387998 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065313056 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07830117 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066804321 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07710855 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075924383 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104774319 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066658374 seconds)
  done (took 5.96763697 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104628386 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106609756 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071307425 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112894964 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1020219 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071585532 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102750611 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095065528 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103274509 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070188563 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068941268 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070074787 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082441194 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082677038 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114691331 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106240963 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073545063 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07084122 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105600025 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104657388 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068376861 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097112089 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091712543 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103180303 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067174843 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071130374 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067648059 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070261217 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076719199 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078090292 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069346385 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080087438 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084572524 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077745374 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067059901 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067807007 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068472228 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079575012 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080014283 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078714862 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077142124 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067777944 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06823138 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069209339 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070238923 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067887273 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078243461 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08022163 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078346205 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069397258 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070243564 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068035829 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069593018 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07972153 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077482162 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080445627 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079758063 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068569499 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06804969 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071897363 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080185406 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078702414 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078798834 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069489386 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078748927 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068588962 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079441574 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084170679 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068032354 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070053933 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068006918 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069226376 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069815672 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077994433 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07758278 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069468119 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069431543 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068378079 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07981495 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077477373 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067977126 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076485769 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067260006 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068756812 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06981336 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069521368 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077489581 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07992826 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069976059 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068159654 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069564326 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068259603 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066601112 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076827088 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079468652 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078653809 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077076485 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068378157 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07741293 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077431453 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069308569 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077554073 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067564555 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069202443 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068508606 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076593612 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075507722 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077305024 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.197405103 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068939033 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078883649 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081368476 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069610439 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079128878 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081354497 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078999553 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069429916 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081176768 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069495418 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080872545 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069484089 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080650283 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068941544 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079042624 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069472159 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068368631 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069180678 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079274552 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074014173 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068544021 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070934352 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070913999 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079334875 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08270641 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071082864 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078335547 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079214094 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069615955 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079232508 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069516082 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079247753 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069878323 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069707281 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06733354 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082193362 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069495244 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069017747 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070259947 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08002247 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068721216 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080044953 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077903762 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068400101 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081996355 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080002592 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077310405 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079686296 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070765314 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069235195 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069116581 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070228406 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078532361 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080407494 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070970508 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069038782 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077812208 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079827729 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067353756 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079273869 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079084107 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078405355 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069182741 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070322053 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080427283 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080563033 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078091983 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077704973 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077925183 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068305439 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077540018 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077727541 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068175906 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084077997 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067991412 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082945901 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078557075 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076261898 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07820945 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080107406 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080225376 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079932598 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082909644 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067918439 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067584946 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078954844 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068384497 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069114511 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077658039 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069708698 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069873209 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083018559 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06935839 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079606327 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073931025 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079064166 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067097884 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069470612 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081712886 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067130876 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068178738 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076916338 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068376804 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07553749 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077773144 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075847798 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066738371 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06857701 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207555452 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079425883 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068957838 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069093297 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070064049 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078579237 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077481508 seconds)
  done (took 18.644335185 seconds)
done (took 37.658173416 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210791683 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153828796 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18298446 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119077758 seconds)
  done (took 2.128930515 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11897819 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102086856 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093118732 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065534613 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099963257 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065539987 seconds)
  done (took 1.946533215 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312828767 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213854146 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189093386 seconds)
  done (took 2.109918184 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201839865 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189494395 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.423260785 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.265509765 seconds)
  done (took 2.591615447 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144830044 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089275082 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067654011 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084589207 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133701287 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161062738 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100802312 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126154067 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079268547 seconds)
  done (took 2.442092061 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149800078 seconds)
done (took 12.775495421 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101569531 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070619364 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.261145614 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106800877 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.150617982 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.193397672 seconds)
    (7/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.218305027 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.145280572 seconds)
    (9/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.227628331 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082985897 seconds)
    (11/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076826023 seconds)
    (12/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.112193477 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078767195 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.143215931 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073787623 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11658603 seconds)
    (17/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074897621 seconds)
    (18/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.204905347 seconds)
    (19/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052356436 seconds)
    (20/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079960417 seconds)
    (21/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.180845539 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.217054671 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100616297 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131118022 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110801359 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148536171 seconds)
    (27/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081339506 seconds)
    (28/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075555695 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072373479 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088609548 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067788833 seconds)
    (32/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063047448 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092065002 seconds)
    (34/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.202847933 seconds)
    (35/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.0768525 seconds)
    (36/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.237166884 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13894217 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09413993 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089926833 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071912236 seconds)
    (41/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.183586137 seconds)
    (42/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.186541362 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.161655633 seconds)
    (44/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.176654427 seconds)
    (45/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051677112 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073698606 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086152367 seconds)
    (48/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.152991286 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.203931323 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076204688 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077617636 seconds)
    (52/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098796681 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.18017308 seconds)
    (54/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193210861 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090623294 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067146339 seconds)
    (57/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.156916311 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.180507594 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067830532 seconds)
    (60/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074230729 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102668662 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105108334 seconds)
    (63/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110935695 seconds)
    (64/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.112136813 seconds)
    (65/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072673257 seconds)
    (66/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089248978 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.07709594 seconds)
    (68/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073764643 seconds)
    (69/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073710482 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123090138 seconds)
    (71/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074721573 seconds)
    (72/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.10142585 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.205451447 seconds)
    (74/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051925187 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069136356 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.195159734 seconds)
    (77/309) benchmarking ("sort", Float64, false)...
    done (took 0.130225759 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053374772 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075595254 seconds)
    (80/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.211449514 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.154328024 seconds)
    (82/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.09240716 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065374025 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.167891784 seconds)
    (85/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.121719189 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064544545 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.065683528 seconds)
    (88/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087774891 seconds)
    (89/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073662286 seconds)
    (90/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075361568 seconds)
    (91/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.206875508 seconds)
    (92/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184867111 seconds)
    (93/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06066202 seconds)
    (94/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.161293217 seconds)
    (95/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.050734043 seconds)
    (96/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072121633 seconds)
    (97/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070795745 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088425541 seconds)
    (99/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064724312 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064851916 seconds)
    (101/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160234425 seconds)
    (102/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.181775183 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074637115 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.152970389 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064170326 seconds)
    (106/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.049769698 seconds)
    (107/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.050748365 seconds)
    (108/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.181077955 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050356477 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.049969273 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.049751625 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084232486 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064852167 seconds)
    (114/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072655136 seconds)
    (115/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100484773 seconds)
    (116/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106031771 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08830887 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143518899 seconds)
    (119/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075539789 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180893462 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089116908 seconds)
    (122/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073769614 seconds)
    (123/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094190328 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13729388 seconds)
    (125/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080237236 seconds)
    (126/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.04967064 seconds)
    (127/309) benchmarking ("sort", Float32, false)...
    done (took 0.12851553 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.051602772 seconds)
    (129/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071118711 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050092105 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 0.131672074 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071798065 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050348012 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070611598 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.062309697 seconds)
    (136/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070645382 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070393662 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085805801 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070297238 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.075739614 seconds)
    (141/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.065893995 seconds)
    (142/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079619651 seconds)
    (143/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115674827 seconds)
    (144/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172974984 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091437942 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.049348686 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.145951239 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.050603992 seconds)
    (149/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.049094882 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051233438 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069994594 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125666752 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091426478 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064652362 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.063841386 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069923512 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065616387 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106522764 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.073437116 seconds)
    (160/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070892271 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088921851 seconds)
    (162/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.294676976 seconds)
    (163/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.151092429 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063598077 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070598914 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.050721885 seconds)
    (167/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052138247 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06348902 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071324742 seconds)
    (170/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.049937032 seconds)
    (171/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078286619 seconds)
    (172/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.191612966 seconds)
    (173/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071355703 seconds)
    (174/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.09891045 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089833496 seconds)
    (176/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.050976509 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070380211 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064026292 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.049538277 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.049774838 seconds)
    (181/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.050397657 seconds)
    (182/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067873144 seconds)
    (183/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.1095695 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.049413838 seconds)
    (185/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051132623 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070230359 seconds)
    (187/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060070467 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071472184 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089710651 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050540469 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070395872 seconds)
    (192/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102110564 seconds)
    (193/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060363968 seconds)
    (194/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072607117 seconds)
    (195/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06541391 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066280243 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072096168 seconds)
    (198/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051293069 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072931822 seconds)
    (200/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067131073 seconds)
    (201/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062152275 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086433424 seconds)
    (203/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.052448929 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.051752082 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062495646 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.049801394 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.447493408 seconds)
    (208/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054150487 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151529772 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067669305 seconds)
    (211/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.055106636 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094958066 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092454298 seconds)
    (214/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054382918 seconds)
    (215/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080127041 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07810968 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076557228 seconds)
    (218/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.160080526 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070729918 seconds)
    (220/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074249383 seconds)
    (221/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09164105 seconds)
    (222/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064063848 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.066532107 seconds)
    (224/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074138081 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067113169 seconds)
    (226/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062212193 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072480157 seconds)
    (228/309) benchmarking ("sort", Int8, false)...
    done (took 0.143517054 seconds)
    (229/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122815965 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066136949 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075957921 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067688552 seconds)
    (233/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066203646 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141535138 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.178207923 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091833937 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067006611 seconds)
    (238/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081202363 seconds)
    (239/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075246045 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067680481 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066512617 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066500535 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066461408 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052727915 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051549802 seconds)
    (246/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067217452 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068331178 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093917036 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184380475 seconds)
    (250/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073370007 seconds)
    (251/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052240944 seconds)
    (252/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079869622 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065928887 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173782582 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149346534 seconds)
    (256/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072419586 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111055323 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097445497 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066599463 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089695689 seconds)
    (261/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052845341 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09015302 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073382312 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074949554 seconds)
    (265/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082219122 seconds)
    (266/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051981972 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051472841 seconds)
    (268/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067269175 seconds)
    (269/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08023256 seconds)
    (270/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06279101 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066085075 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051973506 seconds)
    (273/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053045027 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091998235 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113325174 seconds)
    (276/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090051853 seconds)
    (277/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068058692 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051278154 seconds)
    (279/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08763257 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074145076 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066060636 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065130084 seconds)
    (283/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074640733 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05199147 seconds)
    (285/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070750041 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052039434 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064675868 seconds)
    (288/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051854642 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073904569 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089168165 seconds)
    (291/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.05283069 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091926064 seconds)
    (293/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.157425975 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073156213 seconds)
    (295/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067511871 seconds)
    (296/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065290805 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172987509 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06775672 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06637644 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065999634 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053128234 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051588956 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051299359 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139672339 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071721081 seconds)
    (306/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051367524 seconds)
    (307/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069066533 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089383689 seconds)
    (309/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052512715 seconds)
  done (took 30.853192227 seconds)
done (took 32.263506128 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087440971 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094370495 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076056689 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094855706 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081572438 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077105771 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073816345 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079821028 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081104741 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083064718 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078671773 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055062779 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075535949 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075172376 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075996628 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093277808 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079332768 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.0737246 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074076355 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065031432 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074252253 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06597344 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067411084 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054697051 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079264481 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072627588 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073135851 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074380543 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06635047 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065934913 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069471624 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073869153 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06613841 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078708349 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072957731 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073867303 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075910193 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077275413 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067413135 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066177188 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074596752 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065690756 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073625815 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074259032 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072142504 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071970682 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073105017 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078107997 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092297527 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067942445 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074988155 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076555003 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07629414 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073333316 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069935126 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073563517 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071418295 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092134616 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074421806 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06834713 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074828345 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074687776 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072210766 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075891327 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076906032 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078804927 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07908271 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074676196 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077837686 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074663485 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068287822 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076159728 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071590682 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068095803 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078959379 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080402734 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066705342 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075018575 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075893731 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074320644 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067332453 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071181373 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069982038 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074837271 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07025032 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056797472 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072421856 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075654046 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067433692 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076554346 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074861422 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075411707 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06970867 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.0786868 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067597422 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073741115 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068244679 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068124193 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069684003 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072420044 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06788015 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070289052 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077362447 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069643304 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074603805 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082056169 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065817297 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07243901 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064164228 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064616377 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079968486 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075135418 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065341678 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067943489 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064346627 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073182207 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064586538 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06534836 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065307505 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065814588 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071912282 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065595805 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067508761 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073145186 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.0786617 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065466242 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068823753 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067138212 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065272956 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071117399 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065787439 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065183111 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066592004 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061751653 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066775597 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064863457 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072242352 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067174329 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.207913633 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070597737 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076267812 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071564323 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071553207 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071840622 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064607214 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059884117 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067432725 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068516185 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067832234 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066539821 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067876371 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06539891 seconds)
done (took 12.713350384 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069102483 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143067885 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099069028 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096843573 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088701052 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069278765 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07937597 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104059908 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070703978 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10612634 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092034338 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087069457 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114100339 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064877584 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066290174 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071767291 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069761797 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085443933 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.102277928 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087405262 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115179525 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065409823 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093031004 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089877632 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088640272 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104212809 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069260491 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069994184 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069871604 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09327372 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08905902 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070282621 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067352293 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098657823 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093797434 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08416998 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066211264 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083304048 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066782736 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066105882 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067582677 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099586052 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08135041 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081697396 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070348796 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069562893 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067234377 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084332393 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090316834 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079786245 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086677608 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101921678 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069467302 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066052426 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064566038 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086740747 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065256349 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06959127 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067731405 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069466075 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067269114 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070213157 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083722751 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082206467 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070766907 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079904839 seconds)
  done (took 6.935993815 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087555271 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092388168 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084773038 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085161713 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065953433 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066601114 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066084704 seconds)
  done (took 2.113587044 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069864819 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092238435 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091255548 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089659593 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082130264 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087808838 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075871696 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066522572 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088225747 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067860725 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088114868 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101003465 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070178411 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074029715 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090980664 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066433476 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090797549 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066690912 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070340923 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090469097 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068964786 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095706856 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070022515 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067239121 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080789469 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067084238 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114199496 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073097765 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07083161 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071913986 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066559256 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110637689 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083202747 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077299463 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068861175 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.083888429 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083796489 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067620897 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086047533 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07814698 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083484009 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067507529 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067707055 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064692072 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070869762 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077238117 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068138264 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069980532 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070062214 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087656456 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06986388 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083358415 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07244282 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073819814 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068855789 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073941603 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077654921 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069218484 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089697293 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070601906 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087375198 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086648658 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083699791 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086710203 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072246788 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083435698 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083694214 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071884588 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071012694 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073025137 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087241673 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067657912 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071451843 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080271158 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071303186 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093812056 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093691813 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071050117 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083813681 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070175815 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069604796 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069346874 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093921582 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07522591 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06933519 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074120321 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072378123 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067548077 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068372861 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073309917 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067246412 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070935645 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072099355 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072885026 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072846763 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087489092 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072274004 seconds)
  done (took 9.076721571 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072222447 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070872935 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070969333 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067756571 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069168611 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068275996 seconds)
  done (took 2.007634253 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095536681 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069766027 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080158561 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073388286 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105205346 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087560421 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088419541 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079051163 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083816121 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078886534 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087294956 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088503802 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09258727 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072692206 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086989427 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071814844 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.0871788 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075452265 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078500967 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07317447 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086820024 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072804679 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072661309 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081959119 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076706023 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072188527 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067506244 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078877259 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078841692 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078789197 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072342605 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076319732 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071082818 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078091413 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087317253 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071012182 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071584201 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077804227 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072667248 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076522259 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088817311 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072542699 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074541373 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077455984 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078173625 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070723567 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077642812 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07544742 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086716661 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07710189 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076967602 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071842644 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075742999 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077500493 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07117453 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078290435 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077349933 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087410982 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072551789 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071006089 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068915912 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076022285 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078459733 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075700653 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078909666 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077069565 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070897696 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072886637 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073139942 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072349767 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077592123 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069318867 seconds)
  done (took 7.173516052 seconds)
done (took 28.85886985 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540335053 seconds)
  done (took 2.092183023 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.619078263 seconds)
  done (took 2.194760012 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.478211723 seconds)
  done (took 8.055297867 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403429568 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.524013687 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.72283003 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131358818 seconds)
  done (took 3.393375395 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.700898818 seconds)
  done (took 2.288014626 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.217923846 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202766023 seconds)
  done (took 2.017893456 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378600524 seconds)
  done (took 1.954684662 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.141769902 seconds)
  done (took 2.718849565 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259875695 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175796404 seconds)
  done (took 2.016901533 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.478694088 seconds)
  done (took 2.059671381 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.878574008 seconds)
  done (took 6.461264455 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214574752 seconds)
  done (took 1.839062481 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243936468 seconds)
  done (took 1.828286461 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.716302655 seconds)
  done (took 3.300487066 seconds)
done (took 43.804218148 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084281 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081859285 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082101189 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079560933 seconds)
  done (took 1.898838479 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078591903 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073054432 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.077256907 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073286147 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077350083 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073450286 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074673328 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075788172 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073453135 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073904753 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073494175 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073389583 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075973361 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074986277 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071851428 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075492275 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076966565 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072935756 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075792279 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073568015 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070953142 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07528911 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075262234 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072237449 seconds)
  done (took 3.379678653 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080768241 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073507411 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075951733 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072849922 seconds)
  done (took 1.900169893 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080239607 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095350899 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090356537 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078884148 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093254684 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086903047 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069505437 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069418053 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071430802 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.0785441 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068671115 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09668438 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088803822 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078110176 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080804895 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066631972 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068937057 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088015304 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078485025 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078879917 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070676081 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078515368 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068486374 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089448647 seconds)
  done (took 3.507145295 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089884481 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105987231 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082557413 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088977123 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09170801 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065869457 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088201472 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091835932 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127090701 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065776623 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070932056 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065829562 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073565938 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065652266 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081536944 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10845017 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111668528 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06937372 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097455289 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065946936 seconds)
  done (took 3.309438226 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075145187 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07048685 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066318866 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069944272 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078547549 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074200791 seconds)
  done (took 2.038177421 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07160111 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068465021 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.0686286 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067649914 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072675065 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068861634 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06693879 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068515938 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068236163 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067360617 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067436764 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066931429 seconds)
  done (took 2.420810293 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203741434 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068881283 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07032331 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066907659 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071600055 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066903356 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081398939 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068318511 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092433193 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067314342 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067177669 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069024595 seconds)
  done (took 2.594941081 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210679666 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07673402 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239891398 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151806356 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111239201 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116282851 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112750473 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114900458 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141953604 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10083979 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168900515 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168041493 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107958552 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138153908 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089656317 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101480736 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154420901 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163513085 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1057014 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168164144 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146295251 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126753138 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15443884 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102667457 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106704406 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122722849 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071452425 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080049333 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170678334 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133763137 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144459155 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111644625 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092330253 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177224315 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17261507 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141965769 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148545524 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085365313 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10548876 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134907608 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20141942 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089129897 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163607783 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109929815 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21827538 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135508109 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120816677 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121915009 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10623202 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090469248 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147607582 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185934532 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138471546 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088050088 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125352702 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114569849 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114944349 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114197432 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182977704 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165801225 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130092446 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073544124 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109128107 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155734731 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13509483 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110292732 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126994292 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092301913 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135870773 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156727266 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121115712 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146144186 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117604116 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09030939 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123915868 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142506525 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128314967 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161968801 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124982163 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073757879 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124801148 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102141891 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081165246 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145814186 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076158591 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177694757 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100477077 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110268015 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125956967 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110280831 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109832915 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160151137 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145745069 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103871412 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06788379 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252271837 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122941535 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147574686 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088666124 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11073498 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118958135 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078414672 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13787306 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075516858 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124536189 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079146993 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128009365 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131175996 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078159575 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123875099 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105383539 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10201929 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132988682 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161418286 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089127256 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082931783 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170470493 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123660971 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104589652 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14607441 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15877965 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102805748 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102795555 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15079689 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181004436 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089963955 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164651477 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107055659 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083790807 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08808402 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124553725 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112952732 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124676633 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082497943 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118355553 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170017639 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07543609 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095998228 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134518909 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079606543 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081610471 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106557386 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106725073 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096740557 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101048443 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103266288 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136172244 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125882734 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10968629 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125019046 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099031249 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316634128 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088718837 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10363735 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105563015 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070935241 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137436072 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159045381 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080390953 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165981399 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124746333 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116766572 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120689671 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084943795 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141359387 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080018425 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071498682 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146020422 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111283548 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111366118 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153066276 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117408768 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127128911 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120596432 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134679278 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132982305 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131597957 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106373773 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088831515 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112804844 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127845355 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07379662 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091746102 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080692237 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105599303 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096335143 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083283807 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141417532 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124089494 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109904072 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112922811 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097684441 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148876758 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076388809 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128637597 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119727533 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096078032 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153755184 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154355042 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132516912 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099463217 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139345021 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073400697 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077371135 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089231327 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123110521 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083149042 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083280251 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115554065 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.292791184 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131558635 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138649961 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125436024 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121740942 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156452805 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071482603 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118691444 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149737832 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122678545 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105000333 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091332311 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099451275 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144635966 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108835661 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18335963 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118393766 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125200357 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154506292 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101757493 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080018895 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103961028 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137547354 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104875284 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145512362 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100405748 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08917549 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110849322 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074870226 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099314699 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127113872 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119184183 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135825803 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116450836 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133054158 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078076143 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116076391 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122473838 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122815984 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064465343 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121715414 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162770054 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095339929 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120130804 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154620552 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079520372 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134207615 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175424052 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144920774 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085317197 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108339738 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.265497517 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130449035 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121978079 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142290117 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108926124 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13913342 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111061928 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086667256 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088940158 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098313167 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105701618 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095910224 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106810558 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114892322 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096386875 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133642127 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104326028 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110616675 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119575337 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099589713 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092048629 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097674816 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178626391 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120688926 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172059826 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100715864 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146231199 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166238373 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075411989 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079987955 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078806267 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141814492 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084774005 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13177233 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107658817 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118068685 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124391992 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143260289 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096048393 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068786081 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109703824 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13377276 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12512223 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098867778 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10411019 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165201253 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102031563 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079875234 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114535972 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117377945 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10399653 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171888486 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061888276 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106098842 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076460132 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080495737 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128110105 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151772509 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.224170878 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.105738057 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121294724 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113299938 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129970041 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101615667 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109686067 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130371422 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152065587 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129452992 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089547627 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112369172 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1292009 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157774981 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106402798 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097213439 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17395231 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153804739 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162203901 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08775882 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114922621 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114885094 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110342957 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139154904 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084318546 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163342727 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08302414 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137225041 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104303271 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089762259 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129515062 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108791437 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088395416 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148956024 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118322947 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083447156 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077984956 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118284674 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120723461 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107049389 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076146808 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139629564 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074478338 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132662325 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161221282 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081715806 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108228942 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096770647 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079283914 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106105525 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102050973 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087217508 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099589065 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319305818 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089251881 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151803646 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135561445 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114736066 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139103185 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104723278 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641527113 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078297619 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153842448 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117800997 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175575527 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101894184 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119921053 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111517526 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12486759 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146187458 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105484977 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180539219 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132060273 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117771689 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080648919 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103294495 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104987713 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087885839 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108530815 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114743933 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115785675 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094296891 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116760946 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125085134 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082906112 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096441113 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157285863 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117315928 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144150527 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141349408 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086069357 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118810488 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138365498 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081109602 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121347973 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1532237 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106828978 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10027554 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081462577 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100345352 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158766862 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073452626 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15862987 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119671417 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109889922 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113350312 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112024227 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129209985 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106175066 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120280857 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091316213 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.1089655 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112402598 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080676575 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07584077 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104067667 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108828101 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097218619 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09483769 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097521714 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14830086 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071516166 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096491694 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112586442 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139399819 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169577407 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087764617 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081393278 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115413277 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111847675 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110247716 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11813555 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077696013 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080446631 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07933643 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.080233673 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107102658 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110951593 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112414854 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10836404 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158833095 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081946776 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.229953242 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093546011 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103243775 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069736662 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076538877 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093799999 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095749365 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104952975 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107696095 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154576101 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093655101 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087956425 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089033222 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073043617 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082167441 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125915422 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106804837 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115757912 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097334994 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062090241 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105327789 seconds)
  done (took 59.176704494 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.117287655 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085643859 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097420233 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148599177 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12691195 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206117287 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156935713 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191986514 seconds)
  done (took 2.967873471 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07275045 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09929212 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106539133 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085809039 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069458071 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07145456 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.237046879 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084118802 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068442341 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101470075 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080127601 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070950082 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.435232181 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070533593 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072007827 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062777396 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068896604 seconds)
  done (took 3.575556591 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.397593067 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.614745445 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.355773985 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073651157 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.470625473 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089397031 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.151393988 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.133089374 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073553605 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538678344 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.402638703 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128793754 seconds)
  done (took 18.157463943 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077552514 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070412672 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084849347 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084752218 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074706817 seconds)
  done (took 2.122621697 seconds)
done (took 108.689842946 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083572383 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.611294595 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053958411 seconds)
  done (took 2.422094925 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087826472 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086713418 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086767709 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083853533 seconds)
  done (took 2.08064284 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075906386 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077398967 seconds)
  done (took 1.883241104 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234292452 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16538221 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096606109 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084911726 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079968329 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080418354 seconds)
  done (took 1.97510575 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074259439 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07614457 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073484318 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076928658 seconds)
  done (took 2.026404084 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080104646 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055334209 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057423339 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060760728 seconds)
  done (took 1.979869325 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089508666 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080197449 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079612586 seconds)
  done (took 1.979127656 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103986209 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087845488 seconds)
  done (took 1.917922367 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085243067 seconds)
  done (took 1.811791179 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104325487 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104438602 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132776875 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111965218 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14146385 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110099242 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085042038 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086451526 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077342609 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087181911 seconds)
  done (took 2.769234967 seconds)
done (took 23.151151634 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081547767 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369357118 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361241186 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090545872 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672371208 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357459691 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991350556 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094219878 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116044319 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068333898 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085606475 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651747478 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983429632 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324321142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968042139 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320024841 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651993297 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068994101 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068056741 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069009293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976129955 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068733389 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068817034 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068938486 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649298028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372756196 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069109171 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325431835 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068894598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070556365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355734763 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069456209 seconds)
  done (took 16.268920268 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072485032 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121361017 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07410621 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085948725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071092024 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070923541 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07249979 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070222879 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122150073 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068990773 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086063379 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068431431 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072824134 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086749009 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088793467 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06900956 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069569894 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069805354 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069157572 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069050278 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088019059 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068662333 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069141558 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069371115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069443182 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08106452 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069544182 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068893663 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069166238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071337947 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071924717 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069700111 seconds)
  done (took 4.186181303 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117831647 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125475415 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075000091 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105123591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112928865 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071052177 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143974341 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094972351 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128208728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068708671 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08614206 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068527567 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10354399 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069874259 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088788841 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06906762 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069908761 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069602451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068973205 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069167103 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089070629 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068626342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069220418 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069663815 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069419924 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083273957 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069029841 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070081006 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069621278 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071317233 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072496585 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069966495 seconds)
  done (took 4.421747394 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074380606 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075985855 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084416162 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085050857 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070609481 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073118858 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074457872 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070477834 seconds)
  done (took 2.353661443 seconds)
done (took 28.964601287 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081639229 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071179648 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073684542 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083647978 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07359179 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079888454 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067978517 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076804306 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07288504 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074279215 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075565575 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068727075 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07248352 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067735029 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075176978 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068416001 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080386032 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072710297 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081320021 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080262479 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070718397 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074561671 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075701576 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079995859 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080637233 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079807862 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07844183 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074351336 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069615882 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071820484 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078144227 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.0849907 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069481616 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080234561 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068451913 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068453631 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072666816 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068568037 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080093046 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077612869 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070574766 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077406225 seconds)
  done (took 4.87229546 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090967377 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096455716 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087786565 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06526382 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070001313 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066161945 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090565165 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060630351 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060115429 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089074077 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056113162 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060564462 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066673957 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054282434 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060964564 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057670696 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063508758 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056192655 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061476412 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06068667 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090269633 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05656445 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080433832 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064561141 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056717538 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06219111 seconds)
  done (took 3.540121533 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07664138 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086966178 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091197652 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133079939 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107539258 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081019884 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080571465 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096723777 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.090043998 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067762416 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072044404 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094007155 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091142211 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.08620859 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068735172 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087431407 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084893892 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070453791 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074302214 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096105682 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087837976 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08692774 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097021151 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084131784 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06748708 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070565111 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072210454 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082875667 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073504333 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07758625 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072255154 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071608892 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071247271 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.0799757 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072132516 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069986192 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093343344 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078699754 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079503923 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068738997 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076209403 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069512899 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093717591 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127504961 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070646298 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074717391 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072509275 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078235265 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068751888 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089961775 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079927063 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068002224 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072283748 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067542813 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06878912 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082436329 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070803787 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070805605 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077822295 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074621848 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093341717 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073177479 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084818179 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068053015 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076570527 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067579376 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069569412 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067755012 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097124967 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070269048 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112559822 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072350599 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070162558 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077716184 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076429632 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074692818 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069045099 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083987351 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079170944 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072084045 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07773459 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071472565 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071471582 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092839963 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071487145 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069944117 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069584231 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074754844 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073162083 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069860949 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082364198 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068563468 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072092323 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086468901 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06893296 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070590845 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07473488 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073861313 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068990453 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080058861 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074371426 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070431373 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078704606 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068925255 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07231118 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082235941 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075857216 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067699451 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073123731 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074490677 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069790911 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070808746 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071940381 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071191198 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078167044 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078432036 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075996832 seconds)
  done (took 10.906944359 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167851375 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.159402649 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071196808 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150402444 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077682424 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080267964 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155077813 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096193687 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068803873 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069242184 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069950102 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112439068 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107821854 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117768039 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079921994 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069164209 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086769944 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116362647 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155191942 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148977261 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08686364 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078408971 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071039911 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070093648 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071830522 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079409052 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087350209 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077598955 seconds)
  done (took 4.570155483 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083333496 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106915968 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075853147 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092306743 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091865985 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068401122 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071029507 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071382014 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083012074 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079115638 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068322106 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074336907 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075456767 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071649956 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069537226 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076124684 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076431563 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070129869 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072082678 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074213978 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079699311 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09371062 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072071007 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068291105 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073484313 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068003072 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063870141 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085565011 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068907696 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097007579 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066614268 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073411187 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083387532 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069560371 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068455777 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068875734 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068667122 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068814225 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070360495 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067194726 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06726648 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058362181 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067724428 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079917848 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075327357 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057298661 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073376979 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074225171 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073918148 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066232367 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071893347 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07205101 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071679007 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076810097 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072937074 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074105351 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070890049 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079003867 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.08091829 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071773234 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068661231 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069741878 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076858362 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068988661 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080681359 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076768443 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069888964 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071469776 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074243803 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07912035 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07153688 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076067874 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069117922 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07375737 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076945764 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073380171 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072702881 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069924715 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071460749 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072140842 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059114833 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071419305 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056679335 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074292735 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069273433 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070048178 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069220442 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073303629 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080301809 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069769147 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074331431 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069463391 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067319349 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071844065 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060860091 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070976301 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084168465 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083288537 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068272331 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066514294 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081563335 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073096035 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067352497 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056428551 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073356217 seconds)
  done (took 9.468556511 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093453966 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071337157 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085475767 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092447036 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089533868 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076219421 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078866948 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070315075 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084277511 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074939319 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078437492 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068801738 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079612607 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07850287 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070821669 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079070203 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.0730746 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086170444 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084096973 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069053109 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077298566 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08160727 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091749268 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08357131 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08179372 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083000845 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091541302 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078878929 seconds)
  done (took 4.043574352 seconds)
done (took 39.142190291 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.821435269 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.003676549 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.826699082 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.196378865 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.907614218 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.081040727 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.970827318 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.822545945 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.300034781 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.857828279 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.057057706 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.949847595 seconds)
done (took 66.554000214 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.879114952 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.964157601 seconds)
    (2/2) benchmarking "String"...
    done (took 2.061242155 seconds)
  done (took 5.784943026 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.051366079 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.385012387 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.068832168 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.821169332 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.828149418 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.16268561 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.614662566 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.324753599 seconds)
  done (took 30.967655453 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.924309563 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.052697852 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.497317441 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.529497746 seconds)
  done (took 15.809201671 seconds)
done (took 64.328948627 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.844149877 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.842306112 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.839691262 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.810573726 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.880519861 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.841153046 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.17898856 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.833016815 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.823367645 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.816140054 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.825121432 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.265148164 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.838203268 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.226238255 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.822897488 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.8293082 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.830283426 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.400825214 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.981276276 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.838567084 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.841626127 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.863997241 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.824668245 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.831340619 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.874788856 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.825488315 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.268220403 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.837252328 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.454102699 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.827301625 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.852543593 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.309934605 seconds)
  done (took 205.938776403 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.825100895 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 4.083892715 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.152337034 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.87301751 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.446421529 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.009167059 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.943084184 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.489714277 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.829228546 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.839579643 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.978375207 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.82584437 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.984594331 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.775091767 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.854384666 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.829177563 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.132705445 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.995589352 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.862373282 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.999393018 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.837855093 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.828802566 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.80344279 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.954683741 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.837597206 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.924148838 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.83149132 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.835655579 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.015851374 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.105588871 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.856393936 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.847154893 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.961526348 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.698916878 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.849078985 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.842340377 seconds)
  done (took 172.522285134 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.205921117 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.828551267 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.826745533 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.825521592 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.836481712 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.826119681 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.827598699 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.949061982 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.952981112 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.420066445 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.292488777 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.882288237 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.653612876 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.825133937 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.898089637 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.838666871 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.832427637 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.844650926 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.851529974 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.829817181 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.829172551 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.951523179 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.838842922 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.889868367 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.836010364 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.829777225 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834927406 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.20210573 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.825291013 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.835569655 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.129793894 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.256918977 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.828426537 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.827696926 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.829078113 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.828987306 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.814656028 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.911006291 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.827860904 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83669122 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.828437988 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.05023524 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.829062371 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.831192185 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.833304996 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.006833388 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.825698062 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.954257564 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.827847422 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.336889009 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.829430707 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.830104571 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.646823504 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.519060853 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.827615545 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.829481656 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.829695263 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.833126209 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.829487173 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.830367075 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.837106179 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.648017804 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.909585183 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.833035896 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.836490775 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838877484 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.833886553 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.913079295 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.833932431 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.586522617 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.891827974 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.955740651 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.952249508 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.836145609 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.901618353 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.927040856 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.830597329 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.832136096 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.832386008 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.834264931 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.914886087 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.834342299 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.977012297 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.842162507 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.835245508 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.887169668 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.904102353 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.833461589 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.743605677 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.833463206 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.836195816 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.154619046 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.900057027 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.833621406 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.83230135 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.835205437 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.967058343 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.955867305 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.630491747 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.836111605 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.566314632 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.837223882 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.982980114 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.833425425 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.022018467 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.834820979 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.91785717 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.838502676 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.837532526 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.8342392 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.868797757 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.836610817 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.893784634 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.836238728 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.205959677 seconds)
  done (took 410.308082592 seconds)
done (took 792.78891855 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.489083552 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.442665135 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.564234021 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.471292666 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.440653654 seconds)
  done (took 14.178032035 seconds)
done (took 15.951213749 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.9241607 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.925553568 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.85706663 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.925355612 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.852630128 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.926309441 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.905131706 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.857795959 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.891653493 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.861746459 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.895175166 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.860903324 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.848959398 seconds)
  done (took 26.305629373 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.064861045 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.074709736 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.911094727 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.071609329 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.884967358 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.067384133 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.996387561 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.988543399 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.988124241 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.851276578 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.848732092 seconds)
  done (took 23.520710592 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.06847602 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.080339329 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.914282561 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.083683214 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.888507224 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.06801323 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.000732659 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.991135409 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.992428861 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.851686682 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.849142448 seconds)
  done (took 23.561463228 seconds)
done (took 75.159316683 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.844939887 seconds)
  done (took 3.618129662 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.869619753 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.029289393 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.852839344 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.848299038 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.846146463 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.845748976 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.848575815 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.847622443 seconds)
  done (took 16.759972254 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.84549987 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.841369555 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.845871371 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.845657256 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.84212112 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.842219709 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.841674675 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.845508129 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.841043883 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.843823127 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.844110988 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.843939435 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.841942722 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.844711923 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.839726872 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.846200374 seconds)
  done (took 31.270228354 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.846359674 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.842440666 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.843921861 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.843085889 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.842877597 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.843801421 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.844004755 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.841445878 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.841608206 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.843332523 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.842957178 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.842027064 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.843198984 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.842502665 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.841958775 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.84616291 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.843727687 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.846171255 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.848085962 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.842466184 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.844279537 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.842687355 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.842338076 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.844426221 seconds)
  done (took 46.024032365 seconds)
done (took 99.445006987 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.737177097 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.232854634 seconds)
  done (took 8.745477569 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.850476201 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.848047031 seconds)
  done (took 5.508575702 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.847598986 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.846896935 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.845768382 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.847611234 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.848772529 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.849253199 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.845616542 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.849505061 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.846733076 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.847190459 seconds)
  done (took 20.251502067 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.84917863 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.847771896 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.845096146 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.848137278 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.848640154 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.845397546 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.848799808 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.846696106 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.848927046 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.846453302 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.848207232 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.84799568 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.85011386 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.848050294 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.850816952 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.846325531 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.847444845 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.847857022 seconds)
  done (took 35.037681234 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.848565568 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.849194363 seconds)
  done (took 5.475061497 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.847322844 seconds)
    (2/7) benchmarking "second"...
    done (took 1.846546282 seconds)
    (3/7) benchmarking "month"...
    done (took 1.849304108 seconds)
    (4/7) benchmarking "year"...
    done (took 1.847094676 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.849088549 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.846747054 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.847170472 seconds)
  done (took 14.710487233 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.850707974 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.012491439 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.085273146 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.479933024 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.851362999 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.856695139 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.768719141 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.854423848 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.855327942 seconds)
  done (took 20.393308118 seconds)
done (took 111.897270663 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.679701238 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.843958146 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.237367847 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.89368849 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.898268875 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.187685064 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.887352334 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.145160644 seconds)
done (took 43.553879442 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.91615251 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.395847118 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.441286594 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.240787051 seconds)
  done (took 12.856377642 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.833656131 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.367237426 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.879800102 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.423410934 seconds)
  done (took 20.30519823 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.211558851 seconds)
    (2/2) benchmarking "read"...
    done (took 2.20055179 seconds)
  done (took 6.196388546 seconds)
done (took 48.05318409 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850389257 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.849020249 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.850319532 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.848206203 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.850803624 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.846715375 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.84736888 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.846242716 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.850525346 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.851858686 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.850725762 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.849803613 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85109025 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.848084305 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848148034 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846326862 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.850768439 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85118476 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.847162532 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848766847 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849743401 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.850259562 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.848719193 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.848175546 seconds)
  done (took 46.158961623 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.851818113 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.849388475 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.852977098 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.850737372 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.849312898 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.852768906 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.851265526 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.848673043 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.851069697 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.853673877 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.849588695 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.848314302 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.851954371 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.849725701 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851289031 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.849610232 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.853718823 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847997984 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853529375 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.848544408 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.85281175 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849119478 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.849214971 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.852675974 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.850535063 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.85062442 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.852731331 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.850089943 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.853850585 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.850274823 seconds)
  done (took 57.310101618 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.857576527 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.861022178 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.853920543 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.852788557 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.853094074 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.853562191 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.852763733 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.854521222 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.852932853 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.851184193 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.852371956 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.854997212 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.853748342 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.853233164 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.85345527 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.854904737 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.854388635 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.854422921 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.854149258 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.854254971 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.855480391 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.853768324 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.853395912 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.853284437 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.853826624 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.854856758 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.852973973 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.85597947 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.852987262 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.852657035 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.854472165 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.854311655 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.855003421 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.853874454 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.856244465 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.85370097 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.859776541 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.863841191 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.855698776 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.857153964 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.853307089 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.856978568 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.855834052 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.854721787 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.85404234 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.854748761 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.854184346 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.855549893 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.854083448 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.85431565 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.854459369 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.853632959 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.854310835 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.854454588 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.855087537 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.856488731 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.853876924 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.855120441 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.856521462 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.854719474 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.856894075 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.856331479 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.856459939 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.856916941 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.856904398 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.856739806 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.856183434 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.854482445 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.856291325 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.856174216 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.857267241 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.855759946 seconds)
  done (took 135.343803141 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.856209519 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.855418369 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.854014862 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.855486876 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.853955303 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.857305323 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.854664276 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856422196 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853134802 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.857794982 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85564641 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.855389637 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852757653 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.857800066 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.856433579 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.85268779 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.856487111 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.855296374 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.85701343 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.858659675 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.857701985 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.855274408 seconds)
  done (took 42.611388358 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.856216811 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.85533273 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.854106033 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.857670242 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.855089939 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.85904726 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.858474979 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.857036418 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859938126 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.855423452 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.85534251 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.858117435 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.855816976 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85766105 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.855962227 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.854975927 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.856805517 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.855717236 seconds)
  done (took 35.206067205 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.855227893 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.855984191 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.858915899 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.85716138 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.856247147 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.859548004 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.855016951 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.859929814 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.859971464 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.857768222 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.859631515 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862791446 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.861383597 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857960111 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860454739 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.855896664 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.859844849 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.858292809 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.859926057 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.857021245 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.857559004 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.861298324 seconds)
  done (took 42.676403965 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.861667401 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.858538693 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.859362117 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.857278671 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.857897744 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.861050568 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.860271029 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.85808502 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.861773707 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.860917522 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.858482869 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.859376793 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.859691933 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.858463001 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.858147172 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.858052446 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.860622325 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.858236693 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.862188568 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.861302591 seconds)
  done (took 38.980401881 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.862142053 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.862635711 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.863171517 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.863806188 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.863508588 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.864563415 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.862580725 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.862190396 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.863076366 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.864621275 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.866433994 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.862806669 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.864577459 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.863815552 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.864088949 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.86362197 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.86207393 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.863304882 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.864316399 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.865279777 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.863377213 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.862464908 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.862466624 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.864315933 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.865752478 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.864324259 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.864717634 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.863552344 seconds)
  done (took 53.974175625 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.863602285 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.863715444 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.860035222 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.860147171 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.861458766 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.860100527 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.860174412 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.863133718 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.864465433 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.862223413 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.863301988 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.861709832 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.863957737 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.86540184 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.864506366 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.8634845 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864920869 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.8621347 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.860510736 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86157157 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.865242013 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.865665917 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.863731969 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.861169293 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.861987266 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.866498579 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.863608131 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.861685355 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.865103718 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.863443496 seconds)
  done (took 57.681074139 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.883926979 seconds)
    (2/2) benchmarking "in"...
    done (took 1.884564349 seconds)
  done (took 5.561253672 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.862955138 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.864874953 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.866686354 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.863153501 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.86132122 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.866496816 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.866695587 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.864145044 seconds)
  done (took 16.708549916 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.866438922 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.867558783 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.867378121 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.86669533 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.868795442 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.868188351 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.871290939 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.8677459 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.86724592 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.867027827 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.874888848 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.877405976 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.869834935 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.867986584 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.865894737 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.866270745 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.867460456 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.867176224 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.868716897 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.867662305 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.870765277 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.873986042 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.872552044 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.865278888 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.871106828 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.87803538 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.873691231 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.869409462 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.869370651 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.871770787 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.868148167 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.863342333 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.868532365 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.868194932 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.869453756 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.869829692 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.877146671 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.871812692 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.873045559 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.872512059 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.870582872 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.866341166 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.870320732 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.871505492 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.869400052 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.872719768 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.869206467 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.866361994 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.870968236 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.875863203 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.877621851 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.870587576 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.866201693 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.873471097 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.872565596 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.875785526 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.87235697 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.87308975 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.881247134 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.878987125 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.885115106 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.880947497 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.871847763 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.872222589 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.881353906 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.900022088 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.877856055 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.868714682 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.867801315 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.870722274 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.87846493 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.88478043 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.883602806 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.872061457 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.871844442 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.871169881 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.872870667 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.869148139 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.878538653 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.878124239 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.874010698 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.873245539 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.884122965 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.897283041 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.870761118 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.873413497 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.872780302 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.871604719 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.872269089 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.882693059 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.874367587 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.87245298 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.871073918 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.873734313 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.873205449 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.872280544 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.870232463 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.872947156 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.867232294 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.871480668 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.87363683 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.87430832 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.882861154 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.873437094 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.872917768 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.876396161 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.873833303 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.871377915 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.87677666 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.873572128 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.872818323 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.87196076 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.878570959 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.867972229 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.874954296 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.882918032 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.873124648 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.874765305 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.871200074 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.873014436 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.881419541 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.901454313 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.874133415 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.872713787 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.877140875 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.887095036 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.872797751 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.87395477 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.872877057 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.86877552 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.871176876 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.873936824 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.874920575 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.872745358 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.873956118 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.874644749 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.870196853 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.87288198 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.872625636 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.873959744 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.876250478 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.874337535 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.874373038 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.875428564 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.874666822 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.875117213 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.879880761 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.874981222 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.873925967 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.877679543 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.872112965 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.873791138 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.87482983 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.876243866 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.875564542 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.87452159 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.875145432 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.875878338 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.875461744 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.87337415 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.875541335 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.877475311 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.879045257 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.8741474 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.879964206 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.876265805 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.871132503 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.876319508 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.875335007 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.874997465 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.875184251 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.875520052 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.877917609 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.886214523 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.875763228 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.877175793 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.879101597 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.877255666 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.877237815 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.87735267 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.879099713 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.888828568 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.877258289 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.88244469 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.878032533 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.877768526 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.877919476 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.875960523 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.875101372 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.876302069 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.878497623 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.885099779 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.888827612 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.887617179 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.877640797 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.878890084 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.877586647 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.882575608 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.880864732 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.878601705 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.876529589 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.876343506 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.875462761 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.877035634 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.878755554 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.879639829 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.876748864 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.877603363 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.875968445 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.880824489 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.877769537 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.877175054 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.877049435 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.874081619 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.877954144 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.880428025 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.877606145 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.875513506 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.877237772 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.876404582 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.878535323 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.877569168 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.883739373 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.874950366 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.87903284 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.879439478 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.878130115 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.878492578 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.879427464 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.880479554 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.878111806 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.884273645 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.881024944 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.878360831 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.884686582 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.878764012 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.880298644 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.881341498 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.879649013 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.874710039 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.881845338 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.888582205 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.880857481 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.880532515 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.879386244 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.877596179 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.879067265 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.885830841 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.879171502 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.877794435 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.877759238 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.881212694 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.876102868 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.879580699 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.880808792 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.880918198 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.882878391 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.879440909 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.880218578 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.881369145 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.881110939 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.881426509 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.881104428 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.88278987 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.890286857 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.883189412 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.88016784 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.882285516 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.882380926 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.883457054 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.880953879 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.881103547 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.880228087 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.893819729 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.892377349 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.886249898 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.884566019 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.879292294 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.886636036 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.886008314 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.884975515 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.881451798 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.881211155 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.8814248 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.880319688 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.880670217 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.885175958 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.880804344 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.883491009 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.884404335 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.886416184 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.882181619 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.881352013 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.882725541 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.883415448 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.881258697 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.882338505 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.881624346 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.885334378 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.883964824 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.882873633 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.880929392 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.88735112 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.88523103 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.883201887 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.882482382 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.882573576 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.882236854 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.884026933 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.883979062 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.887911749 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.893738931 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.8884554 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.895085043 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.883486549 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.893239754 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.884177087 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.8870406 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.890873953 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.88053628 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.881108234 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.883536074 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.884654603 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.88955677 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.883994143 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.882902777 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.888430142 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.885718657 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.884107832 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.882030787 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.885348811 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.884173498 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.885833096 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.892826081 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.888044148 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.88795714 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.886463382 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.882981454 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.885261301 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.883170218 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.883250753 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.88645797 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.885409389 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.886120395 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.883917756 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.884567111 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.88424598 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.886716556 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.884544965 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.880370784 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.885027358 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.891065323 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.887440553 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.89129518 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.885736177 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.892852848 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.887514971 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.891617639 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.886650316 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.887394223 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.885790249 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.884658427 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.888123591 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.885681232 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.887969768 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.886289453 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.887965689 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.890168556 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.887003441 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.887310353 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.885828866 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.886188829 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.887565386 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.896701896 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.914528577 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.890404619 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.892338006 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.884345399 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.886221548 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.893081883 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.887796017 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.887047783 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.888183048 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.900647794 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.897486546 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.888329897 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.887707568 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.889003563 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.88729796 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.887486684 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.888578664 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.888237869 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.88858333 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.887764093 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.887765908 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.890789964 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.887854869 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.888658508 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.887516844 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.889233302 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.8963442 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.889900512 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.889967462 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.888587984 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.88674475 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.889546401 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.886311155 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.886826449 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.88691501 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.887436356 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.88838769 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.895158222 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.896022918 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.89090958 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.888064754 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.887244756 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.888184262 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.888127101 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.887364021 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.888976511 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.888818959 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.890199572 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.888110511 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.887857914 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.885977274 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.888181622 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.888042868 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.888973426 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.891505796 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.897349566 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.888942937 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.885734165 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.886606908 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.88945728 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.887984831 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.8896396 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.896801632 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.895198973 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.902713234 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.898596879 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.893894241 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.890347482 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.891580954 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.900607601 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.889144535 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.889830459 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.89100579 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.89180671 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.891102685 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.893566123 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.89082174 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.895577591 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.891887156 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.889877973 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.898245717 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.893645994 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.891735254 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.891714449 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.894396631 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.889495777 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.887728229 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.889538444 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.890194174 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.89464411 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.892066976 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.892780014 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.891403153 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.888077427 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.892219152 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.897003389 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.890327023 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.891778745 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.887718635 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.891543233 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.89246353 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.891839065 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.888149779 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.891960284 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.892061941 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.893667338 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.899927537 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.889655878 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.894579028 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.892430352 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.891718586 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.892735467 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.892250953 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.88730992 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.889185266 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.892082262 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.891821241 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.894186077 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.895017167 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.893263681 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.893574481 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.895026165 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.894157425 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.897375581 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.905222025 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.903100381 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.889715418 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.893103382 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.894411727 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.896145387 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.895487466 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.893574607 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.894709308 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.893196264 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.893312872 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.895365229 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.894302089 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.896971941 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.912219508 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.896520746 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.893369601 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.893774043 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.895999656 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.89657622 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.888847363 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.892907104 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.895542746 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.896333655 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.903588295 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.89442498 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.898635004 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.895257471 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.893737873 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.896984392 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.898410915 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.904561027 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.895447456 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.896791879 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.894892064 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.898960056 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.912826682 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.896261018 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.903518567 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.92555988 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.897161579 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.894283836 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.894862035 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.892902466 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.893770324 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.896324987 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.895103204 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.895433661 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.894744084 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.895979412 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.899307486 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.902360428 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.897925731 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.895154612 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.895513896 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.895047021 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.895932508 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.891130737 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.894781012 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.895533228 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.895860507 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.895736462 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.898014921 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.896369989 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.90833797 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.910336935 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.896542343 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.896100464 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.89302437 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.900538097 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.900457938 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.908590759 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.905171372 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.896484246 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.897530648 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.898406488 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.896665202 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.894947461 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.895863074 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.895535931 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.897090018 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.891936078 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.911342224 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.908103024 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.900959219 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.898419836 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.898140789 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.897376061 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.899598167 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.895929532 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.898740706 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.900648439 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.899765997 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.902217211 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.894754365 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.895614733 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.898340568 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.912420825 seconds)
  done (took 1124.91019903 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.891265785 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.891353557 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.891603895 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.890881465 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.892976949 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.891657124 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.890893581 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.890756423 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.890864146 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.894234825 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.893610251 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.891485564 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.892343691 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.892389767 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.895315394 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.893001782 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.892443859 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.892351355 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.891206574 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.893454519 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.888358838 seconds)
  done (took 41.554593626 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.892205028 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.888949867 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.889794689 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.897231184 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.888836335 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.892294841 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.888951971 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.89213902 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.893856514 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890617183 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.891291691 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.891732788 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.887582765 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.895892123 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.883035218 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.884092565 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.8853968 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.880646204 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.884705721 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.89097611 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.88117749 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.88091041 seconds)
  done (took 43.372748126 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.88260967 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.889959628 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.878912283 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.876736922 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.880907867 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.877652267 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.887992801 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.877728463 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.879578089 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.879702159 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.879348502 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.879825093 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.892610055 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.88516654 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.880584588 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.878206368 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.027857232 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.882617147 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.879408505 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.879211171 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.873881838 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.882569206 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.877514892 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.877330212 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.877126878 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.880080784 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.880569733 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.87996787 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.883810359 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.880620196 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.886144148 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.878907442 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.880285706 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.882997805 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.879030621 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.882182573 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.886930564 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.882655736 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.877555262 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.880588721 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.888814882 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.90417028 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.882698813 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.885789887 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.882614323 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.883418935 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.885618091 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.893111904 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.88046277 seconds)
  done (took 94.183795943 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.884193479 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.882686513 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.880840014 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.882074948 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.881402029 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.880047327 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.882210225 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.880716007 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.880618269 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.883287646 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.88504115 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.88007288 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.880165742 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.881568792 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.882302908 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.882585418 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.88016733 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.879308178 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.878866784 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.878563443 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.89006414 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.883657562 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.881656093 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.882563296 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.88289303 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.884955466 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.880484419 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.882532276 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.878475133 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.87917028 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.882720276 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.884781401 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.882972118 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.882214525 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.880215814 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.885701186 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.885011372 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.882476182 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.883077756 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.883529755 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.886979156 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.888737408 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.885423732 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.885387007 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.876983263 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.879278385 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.883041579 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.883265933 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.882308129 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.885714779 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.882891431 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.878181378 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.889087682 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.882242225 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.884722875 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.885385071 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.880804068 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.884583253 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.86752255 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.868085329 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.86705919 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.868567489 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.866841935 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.874601291 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.867899088 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.864495207 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.86502742 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.867930686 seconds)
  done (took 129.679916407 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.867366894 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.869151463 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.868258978 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.869141046 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.876052297 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.870317299 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.87126476 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.869691138 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.868193877 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.873121341 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.870989579 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.870860027 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.871456843 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.868534665 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.869586474 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.87444957 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.871461979 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.869595467 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.873796135 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.871158217 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.875324275 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.869718113 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.871319147 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.871927779 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.87059375 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.87052897 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.872918444 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.871491092 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.86787814 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.87225684 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.870207996 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.870512029 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.870085952 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.869323619 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.871087865 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.870351333 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.87225219 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.872258967 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.871560422 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.872000979 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.867656439 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.871554149 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.87138925 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.871243032 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.871220911 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.873057309 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.87079902 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.877722712 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.871415944 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.870873354 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.875134241 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.870692785 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.869734458 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.87463691 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.868517621 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.871439261 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.870343099 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.870829712 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.879564016 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.870475028 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.869134135 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.87097366 seconds)
  done (took 117.816260438 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.873527897 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.869175941 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.86378745 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.863465594 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.869649447 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.866546304 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.879979741 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.872700033 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.871569066 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.87160507 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8706942 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.876771855 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.86789879 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.867733088 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.867722994 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.869859648 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.870638107 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.867058076 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.868487659 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.867585895 seconds)
  done (took 39.19626491 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.867170493 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.876400938 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.865557908 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.865352586 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.86935611 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.866339777 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.871684083 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.870567665 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.866612754 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870779575 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.871296064 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.87606175 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867982877 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.870231965 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.870163576 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.870457588 seconds)
  done (took 31.710696908 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.872742445 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.87081079 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.871675838 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.872913064 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.86801579 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.874919052 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.870866641 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.867587111 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.866761508 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.870407652 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.869619704 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.875630028 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.869055928 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.86816462 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.866153641 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.869501722 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.8694218 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.865833198 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.867629464 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.869256705 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.8655442 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.872853618 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.870648792 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.869498109 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.867255945 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.866603215 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.866418807 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.869603652 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.866949659 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.86770171 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.865051916 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.865266493 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.871236647 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.865159019 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.867634332 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.863278983 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.867677601 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.86841355 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.865920166 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.865917238 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.866260555 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.863560038 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.867014274 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.871454755 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.863546068 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.865371518 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.862604858 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.86404409 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.863620748 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.863489464 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.865541889 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.86616035 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.866458699 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.867451731 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.866438012 seconds)
  done (took 104.528504516 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.864443475 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.865854384 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.864007816 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.867021995 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.86474678 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.862246882 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.865921405 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.862986525 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.86720212 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.862642672 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.861508186 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.862935561 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.86210222 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863243745 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.866092045 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.865949335 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.862027211 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.863501521 seconds)
  done (took 35.348157489 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.868847795 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.861383283 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.863919888 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.859867155 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.861755564 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.864759344 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.860102627 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.863182596 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863312882 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.861672404 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860529826 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.867413527 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.86543958 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.86500516 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.861975514 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86207659 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.868524153 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.864787609 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.86128893 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.859690288 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.863947157 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.868901958 seconds)
  done (took 42.790156203 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.864380438 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.86336387 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.878967011 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.883428682 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.886431538 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.896478699 seconds)
  done (took 13.063669834 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862628613 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863924143 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.866954553 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865138091 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863820561 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861484746 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863466373 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86282059 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866118061 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863434499 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864322539 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866824517 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86581224 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866211181 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866533694 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865344517 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862770059 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862564611 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866366394 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864332094 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862718074 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866965691 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86382582 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86415392 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868130463 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862820923 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865627534 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862554569 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861911222 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868835795 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864717479 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861475765 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865437362 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864340546 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870612148 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86618075 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862482581 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86661288 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865637668 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864372889 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.870015328 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865930463 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867206648 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863284224 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864904648 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868660428 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86366102 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86298362 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863193076 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866941744 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869169729 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865548732 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866308302 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866205772 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864898244 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865507829 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866691875 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86265476 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865959492 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864051701 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861788918 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.871284505 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863251363 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863035442 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865503235 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862782582 seconds)
  done (took 124.883372946 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867290326 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.863330615 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863294089 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863322256 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863087198 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869490025 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862060918 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863490011 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861577714 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861495898 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.871014831 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862380108 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863420764 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863186101 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860685388 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862261213 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867442887 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862052934 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861881009 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864059785 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862154796 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865719844 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863114879 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863750896 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863478527 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866512975 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866661091 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860976609 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862721051 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862224807 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861064002 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861149341 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865134036 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.861247629 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86206296 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863010138 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862291756 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86880624 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863117832 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865235385 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863806582 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865905014 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863456153 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866081168 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862761597 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862274013 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863049241 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863905084 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869394821 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863180253 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863294086 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862233958 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863343796 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869656387 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864911123 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863315243 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864668087 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864520269 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862934157 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87132879 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864364908 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863521344 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8681891 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863928773 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868873163 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863534606 seconds)
  done (took 124.82724493 seconds)
done (took 2601.857318478 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.890727178 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.941203534 seconds)
  done (took 15.622957116 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.027873009 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.982319165 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.867802635 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.914062885 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.864321176 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.885692952 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.881191741 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.863945723 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.865163572 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.865671291 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.866725161 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.053511377 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.868971951 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.863778638 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.869538034 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.962774169 seconds)
  done (took 52.301185971 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.871836509 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.871930579 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.880786579 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.873865608 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.86908582 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.881065274 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.901821835 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.87337865 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.906714038 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.882278212 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.938708783 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.879627503 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.870721514 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.923204979 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.882559604 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.882348449 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.964316632 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.943630339 seconds)
  done (took 35.893166508 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.947304982 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.876078862 seconds)
  done (took 10.628392906 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.868715329 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.889199945 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.890431645 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.878580002 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.896985584 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.861537946 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.895372731 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.897094448 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.885080413 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.876536802 seconds)
  done (took 70.638377545 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.876088824 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.869902141 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.871706897 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.870104214 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.864539279 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.867500476 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.871467263 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.869212283 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.541146492 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.906137805 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.874462031 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.876931323 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.873892581 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.873277312 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.871447782 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.896789568 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.9936751 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.870032985 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.870049125 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.877440422 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.872134106 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.942275425 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.883917378 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.873840076 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.901479889 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.550163442 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.880173402 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.878165821 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.993021364 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.867866448 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.873302576 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.87383452 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.874949172 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.255669497 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.158573934 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.868160886 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.879606033 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.880786152 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.8705666 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.001299589 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.871855436 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.879632953 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.829101678 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.13677396 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.980146991 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.914093576 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.24681563 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.873667922 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.873778946 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.904298432 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.876434668 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.875206426 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.888986263 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.38924008 seconds)
  done (took 132.809846934 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.871427167 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.130062198 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022826007 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.870587475 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.156553445 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074514624 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.868301229 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.918262485 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.87173674 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.097565377 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.087824632 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.97795073 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868872306 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.86881666 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.865536371 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866313211 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.030066237 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.940120858 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.872048514 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.864782019 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.901102395 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.116585105 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.998493403 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.868987583 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.888728481 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.08372255 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.993271646 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.978972159 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.245262539 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.866492097 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.935983669 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.874511545 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.871707912 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.8652235 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.024587912 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.964984773 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958399821 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.872134167 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.869481922 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.868237355 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.548839624 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067340438 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.967923848 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.014703538 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.122465793 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.074766211 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.662857177 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.869567136 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.608673542 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.03632114 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.103485995 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.102102152 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.997140328 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.872360114 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.137728033 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.868726901 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.8703241 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.103849665 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.114826829 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.973245444 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871205397 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.870449046 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.867895115 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.121262491 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.872486612 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.965402827 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873519464 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.868405894 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.968175711 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.976905946 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.117278147 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08659275 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.904503975 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.173258305 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.343926369 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.124408532 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.939587417 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105215216 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.871519802 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.86896308 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.957235598 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.714658716 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.072644277 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.125090369 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.129839556 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911525515 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.604610768 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.872099679 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.100500045 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.09753317 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.124892013 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.110373216 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.024796945 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.201375452 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.87205454 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.871923585 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.108853071 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.008639958 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.875196542 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.237511447 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106727352 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.447454954 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.907262909 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.186180207 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00655875 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.875690964 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.518756304 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.872773911 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.099721089 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.914198761 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.873386825 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.875440422 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.093999883 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.853600248 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.873557024 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.579779456 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.936444854 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.877336632 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109497259 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.876617884 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.142565448 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.875126324 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.117910989 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.141358567 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.906544695 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.045991701 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.118376043 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.875316543 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.133911481 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.119246563 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.9913516 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.147838249 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.796721316 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.872425482 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.166167634 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.874935725 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.87400288 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.04956606 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.875876748 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.10451288 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.877964594 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.166171086 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.901158117 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033522509 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.877321091 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.135544616 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.911007571 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.931754324 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.875146251 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.010424743 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.876084824 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.752531035 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.029894356 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.879707161 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.872597462 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.409210373 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.875825861 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.03273944 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.108788408 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900890215 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.950061399 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.545473108 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.875423703 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.965531971 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.899798838 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.220811693 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.878909322 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.091759755 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.878933649 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.413229005 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.877252219 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.123830637 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.107684723 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.879977495 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.87506979 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.784419553 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.876378095 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.876997163 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.039344264 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.713804369 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.873669165 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082027505 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.878719897 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00750424 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.882079234 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.953939794 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.231827419 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.875082388 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.879526088 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.878855141 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.880145071 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.879019454 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.090394164 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.910458543 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.400613578 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.01811414 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.149260569 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.197674595 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.133633301 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.923671396 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.87887139 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.124252936 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.880239641 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.947186961 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.877486929 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.902633494 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114295766 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.880988147 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.091599637 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.161713492 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.813571787 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.93243381 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.880834923 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.877156112 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.795696998 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.034780527 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.971840174 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.880402101 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.879184991 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.997797079 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.006677878 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.095625264 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.881260365 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.115991042 seconds)
  done (took 904.508647325 seconds)
done (took 1224.193612242 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.88057089 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.882462546 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.868538089 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.879959769 seconds)
  done (took 29.321320164 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.889188257 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.883798162 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.886556024 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.885049498 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.88606065 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.885097521 seconds)
  done (took 13.126781469 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.910091344 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.882242925 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.881760302 seconds)
  done (took 21.485522013 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.956964497 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.293702313 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.997449427 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.323604471 seconds)
  done (took 10.384184474 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.888270225 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.888245993 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.886693821 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.889496826 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.888533892 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.889624641 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.888421038 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.888543548 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.889589669 seconds)
  done (took 18.810109452 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.2859941 seconds)
done (took 99.224213959 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.902446051 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.011928377 seconds)
    (3/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.882871471 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.303083641 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.00665397 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.005301444 seconds)
    (7/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.217303213 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.918434745 seconds)
    (9/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.476450956 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.079094804 seconds)
    (11/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.895900213 seconds)
    (12/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.242779695 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.938635759 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.99435961 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.920936672 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.970731549 seconds)
    (17/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.980759432 seconds)
    (18/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.895684842 seconds)
    (19/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.28024007 seconds)
    (20/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.019331233 seconds)
    (21/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.426721871 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.314856608 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.961076487 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.020768051 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.860997775 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.016366543 seconds)
    (27/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.059327983 seconds)
    (28/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.918311147 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.999854067 seconds)
    (30/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.955852208 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.002964779 seconds)
    (32/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.065487945 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.111934383 seconds)
    (34/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.39237086 seconds)
    (35/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.986059213 seconds)
    (36/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.948853264 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.900319188 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.894136899 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 3.653390311 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.134036013 seconds)
    (41/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.052814094 seconds)
    (42/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.046617894 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.379676532 seconds)
    (44/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.458458592 seconds)
    (45/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.232499518 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.007727404 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.157577042 seconds)
    (48/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.098786078 seconds)
    (49/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.082478917 seconds)
    (50/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.910936622 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.8965315 seconds)
    (52/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.106759031 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.085514191 seconds)
    (54/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.88505625 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.53758468 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.965374548 seconds)
    (57/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.117948238 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.289550258 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.90501195 seconds)
    (60/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 3.470936103 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.970657055 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.733422984 seconds)
    (63/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.219659923 seconds)
    (64/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.112606819 seconds)
    (65/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.026013733 seconds)
    (66/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.915296241 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.195909158 seconds)
    (68/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.927214395 seconds)
    (69/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.923492815 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.543694607 seconds)
    (71/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.133039665 seconds)
    (72/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.242324616 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.039639646 seconds)
    (74/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.319259529 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.064891418 seconds)
    (76/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.886889166 seconds)
    (77/309) benchmarking ("sort", Float64, false)...
    done (took 5.723894217 seconds)
    (78/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.887256642 seconds)
    (79/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.062817117 seconds)
    (80/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.367957823 seconds)
    (81/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.16456843 seconds)
    (82/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.818496914 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.289315864 seconds)
    (84/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.395753103 seconds)
    (85/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.031702272 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.281928088 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.630850742 seconds)
    (88/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.97316456 seconds)
    (89/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.070846732 seconds)
    (90/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.896787308 seconds)
    (91/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.265490402 seconds)
    (92/309) benchmarking ("sort", BigInt, false)...
    done (took 6.900957871 seconds)
    (93/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.083805859 seconds)
    (94/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.54079479 seconds)
    (95/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.044961096 seconds)
    (96/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.927309008 seconds)
    (97/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.055518706 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.818888202 seconds)
    (99/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.903584761 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.950744831 seconds)
    (101/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.142319938 seconds)
    (102/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.286258446 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.016426314 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.11624858 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.291260012 seconds)
    (106/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.007739187 seconds)
    (107/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.12794143 seconds)
    (108/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.09513527 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.272944466 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.147954057 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.094466113 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.101491852 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.199203911 seconds)
    (114/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.502123013 seconds)
    (115/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.148737195 seconds)
    (116/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.080851692 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.018518282 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.903809397 seconds)
    (119/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.926028006 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.899056763 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.61769111 seconds)
    (122/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.876774362 seconds)
    (123/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.007626063 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.902900579 seconds)
    (125/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.458277426 seconds)
    (126/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.277595902 seconds)
    (127/309) benchmarking ("sort", Float32, false)...
    done (took 5.665165638 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.888912887 seconds)
    (129/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.311053721 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.507947945 seconds)
    (131/309) benchmarking ("sort", Bool, false)...
    done (took 2.347459473 seconds)
    (132/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.921774913 seconds)
    (133/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.983213206 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.176059604 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.982389763 seconds)
    (136/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.030841327 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.11589169 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.206394643 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.170236447 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.17635566 seconds)
    (141/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.996187589 seconds)
    (142/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.414669616 seconds)
    (143/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.894269806 seconds)
    (144/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.966580549 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.965498321 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.265449169 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.007504694 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.888686928 seconds)
    (149/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.090566677 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.892386109 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.006424589 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.931719815 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.925517896 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.906397728 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.613115593 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.175362833 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.902779989 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.973809725 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.927815537 seconds)
    (160/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.929494053 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.7003861 seconds)
    (162/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.023899894 seconds)
    (163/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.975941644 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.144795884 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.932640549 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.248475736 seconds)
    (167/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.083935273 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.205359769 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.925229831 seconds)
    (170/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.108147488 seconds)
    (171/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.74846176 seconds)
    (172/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.350502531 seconds)
    (173/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.313838324 seconds)
    (174/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.05253656 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.311765309 seconds)
    (176/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.232632916 seconds)
    (177/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.051085816 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.315325741 seconds)
    (179/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.208900139 seconds)
    (180/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.147399872 seconds)
    (181/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.2469424 seconds)
    (182/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.988730443 seconds)
    (183/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.163357914 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.525071518 seconds)
    (185/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.036191165 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.161953238 seconds)
    (187/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.111010769 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.936327814 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.553156155 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.220234246 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.93735141 seconds)
    (192/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.892582953 seconds)
    (193/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 4.076518137 seconds)
    (194/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.913871942 seconds)
    (195/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.007179854 seconds)
    (196/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.968160873 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.936840338 seconds)
    (198/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.476485148 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.338792302 seconds)
    (200/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.109151197 seconds)
    (201/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.12010184 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.984223543 seconds)
    (203/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.901158088 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 9.25821202 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.054289533 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.019948036 seconds)
    (207/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.911598045 seconds)
    (208/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.921199884 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.90646513 seconds)
    (210/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.910033778 seconds)
    (211/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.931330338 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.552774085 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.835089025 seconds)
    (214/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.05414484 seconds)
    (215/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.921925666 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.696927277 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.110473877 seconds)
    (218/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.008603664 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.661211106 seconds)
    (220/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.066427323 seconds)
    (221/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.989827332 seconds)
    (222/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.243144923 seconds)
    (223/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.241443376 seconds)
    (224/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.934919303 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.610893832 seconds)
    (226/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.079860291 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.933423199 seconds)
    (228/309) benchmarking ("sort", Int8, false)...
    done (took 4.893701152 seconds)
    (229/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.908983133 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.948146612 seconds)
    (231/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.959089336 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.077318156 seconds)
    (233/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.859315641 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.845241398 seconds)
    (235/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.844398422 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.720980122 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.158546265 seconds)
    (238/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.426361488 seconds)
    (239/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.92641302 seconds)
    (240/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.983916704 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.246184681 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.238034491 seconds)
    (243/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.12953402 seconds)
    (244/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.370892796 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.230393105 seconds)
    (246/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.61432529 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.00885802 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 3.738430694 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.906778186 seconds)
    (250/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.925099231 seconds)
    (251/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.047266537 seconds)
    (252/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.607406608 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.007831499 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.0089311 seconds)
    (255/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.91164248 seconds)
    (256/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.935692483 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.899170092 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.157079307 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.247930967 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.888948515 seconds)
    (261/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.902212732 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.9420706 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.991097563 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.272852218 seconds)
    (265/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.478397914 seconds)
    (266/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.907220368 seconds)
    (267/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.110130785 seconds)
    (268/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.614711571 seconds)
    (269/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.725999627 seconds)
    (270/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.21889515 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.080398985 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.292312399 seconds)
    (273/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.380467645 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.029776643 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.990949514 seconds)
    (276/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.936474415 seconds)
    (277/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.988342445 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.401606318 seconds)
    (279/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.926521607 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.992344983 seconds)
    (281/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.250488564 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.996975382 seconds)
    (283/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.927871177 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.23329024 seconds)
    (285/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.030912745 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.229431037 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.067608362 seconds)
    (288/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.943465266 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.644620008 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.836165518 seconds)
    (291/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.492368271 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.601371853 seconds)
    (293/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.029307501 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.950241802 seconds)
    (295/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.010072026 seconds)
    (296/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.992689299 seconds)
    (297/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.909915372 seconds)
    (298/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.998818248 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.290465779 seconds)
    (300/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.001115126 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.397085766 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.860688492 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.209146655 seconds)
    (304/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.912238849 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.93327072 seconds)
    (306/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.00711594 seconds)
    (307/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.057719059 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.135270498 seconds)
    (309/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.864262294 seconds)
  done (took 1031.337425223 seconds)
done (took 1033.452994866 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.948534644 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.938680797 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.920935028 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.942587311 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.035629502 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.954075412 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.931249599 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.92410106 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.968760954 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.973504116 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.920731341 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.96084217 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.924303108 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.922158783 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.923061123 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.936873935 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.233376262 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.948862181 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.940284803 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.9333336 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.942010588 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.922400408 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.972591212 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.952640491 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.925735476 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.924693601 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.926127817 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.941984199 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.034790908 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.929249625 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.925834358 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.936367633 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.232693258 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.950522131 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.919751124 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.942849749 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.934433341 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.93316306 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.925930519 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.957684262 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.378321541 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.927918454 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.924838758 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.924521193 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.924216892 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.926513964 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.925251316 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.929197075 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.937900539 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.937250609 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.375933159 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.94360437 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.927567072 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.924536468 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.934456661 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.925274274 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.92675194 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.940222622 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.944111006 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.940973036 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.226220147 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.952281316 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.929132056 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.945047313 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.935854957 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.415888444 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.927008108 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.929654239 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.378884937 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.93254019 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.413783352 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.938831922 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.925830055 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.940781385 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.958273747 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.236206247 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.944808461 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.924228392 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.933830431 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.925300275 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.935929098 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.939016076 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.930487103 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.925411566 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.940214589 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.95757196 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.935825655 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.926907833 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.935482733 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.945972323 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.933962995 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.938573216 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.928376379 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.920735985 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.935573015 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.930668884 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.929566185 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.929582263 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.930119118 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.937084784 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.37921412 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.947296839 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.922298178 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.923271502 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.924785675 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.942729331 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.377955462 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.932678432 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.948698938 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.973347397 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.930324755 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.232301248 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.962286778 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.946371248 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.937651901 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.933565305 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.924098695 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.229567165 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.405977806 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.946849845 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.93112869 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.926664494 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.944960932 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.929805569 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.924877701 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.240515564 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.953522469 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.94330463 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.050571045 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.937532072 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.961377488 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.927888424 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.930366875 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.95975079 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.945448498 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.960190435 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.929831267 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.944550589 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.944813423 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.925581486 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.941793717 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.939107014 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.92814228 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.93269377 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.922269959 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.963670953 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.941731807 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.941480484 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.949017416 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.050083375 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.928132733 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.230212855 seconds)
done (took 302.77133277 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.998127461 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.9254607 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.026631225 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.926538345 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.009106223 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.012593098 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.922465615 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.923166935 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.922868358 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.297963882 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.924032516 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.924275676 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.920750137 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.92405475 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.00987092 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.925198893 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.922727531 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.26341867 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.927624523 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.998316118 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.923721356 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.923670292 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.926680261 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.302657302 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.924575456 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.924171595 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.000164807 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.926934962 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.267166105 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.927180274 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.926106533 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.266100841 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.019653705 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.945525358 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.937176801 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.93505703 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.010036608 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.930412097 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.009835208 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.010226726 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.028206938 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.96943759 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.927571456 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.92389904 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.9334761 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.931417642 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.925311766 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.957117665 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.929101866 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.92811927 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.26488116 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.937834824 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.928881813 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.926684916 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.9270408 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.960588717 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.925188717 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.931010402 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.021375686 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.930356938 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.993090891 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.303961608 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.303108318 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.929413261 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.925675367 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.926541671 seconds)
  done (took 188.181264612 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.996031848 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.003260739 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.996533696 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.930480341 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.980117581 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.997093121 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.930637623 seconds)
  done (took 15.686838541 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.935296684 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.928682215 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.978361089 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.978753776 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.930443398 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.085279073 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.93023599 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.941506276 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.927426992 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.98277156 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.932064462 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.930510701 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.936809068 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.925246507 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.978384835 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.942257269 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.04603508 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.932042546 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.932240908 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.081861524 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.927433641 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.938261615 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.985858997 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.942573737 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.931329064 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.936233051 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.51579336 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.932476614 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.927990692 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.931973126 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.927995757 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.972615333 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.930774981 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.925232433 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.928813191 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.048275577 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.932442049 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.92911497 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.931777086 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.933645396 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.930962317 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.930849165 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.932942327 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.929582958 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.931531933 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.957948988 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.932385615 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.932246535 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.934687863 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.932380764 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.983041049 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.93263403 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.930681778 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.930285953 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.987780455 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.939570013 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.934780038 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.92943413 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.934132827 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.931392609 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.08467329 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.982600233 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.933109409 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.98350534 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.933224275 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.934473322 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.934812282 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.935818222 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.028267133 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.935413356 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.983475312 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.932893972 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.092156057 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.956854689 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.937351164 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.93670366 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.936162899 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.936155785 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.931687887 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.940676129 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.931135897 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.935249014 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.940364875 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.931549518 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.930767775 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.04603295 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.040626808 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.931399476 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.946454524 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.942189645 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.932161784 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.986836826 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.93518357 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.932688675 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.989879869 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.051672471 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.989596938 seconds)
  done (took 211.985709434 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.940531642 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.942288204 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.936388421 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.951835572 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.935986175 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.935359365 seconds)
  done (took 13.499979532 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.939791346 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.936268824 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.936485568 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.935352529 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.936229614 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.937556487 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.937564606 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.938353247 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.942131573 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.935192785 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.939574282 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.936267482 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.937561146 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.936371859 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.938563462 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.935661871 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.939940485 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.933609824 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.936515527 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.938695207 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.094334848 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.93728694 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.935380471 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.936487067 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.940001185 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.936379902 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.943659983 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.935673311 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.936986736 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.944410328 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.939684518 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.938833727 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.937754422 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.943748978 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.944858612 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.938779928 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.941659353 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.938442969 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.935012662 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.937213885 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.938622174 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.938896776 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.939353927 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.938585368 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.938279394 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.942893002 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.941345718 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.944573182 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.939948147 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.938321831 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.940845862 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.937110924 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.94073939 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.93834762 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.936505591 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.941381833 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.943734162 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.938083983 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.938405982 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.939755856 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.94221607 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.940153429 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.941660379 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.945139404 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.937137896 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.940253132 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.942263962 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.943972999 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.939305217 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.937861646 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.939828474 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.93551022 seconds)
  done (took 142.626404989 seconds)
done (took 573.84591861 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.054174721 seconds)
  done (took 8.912025719 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.042771837 seconds)
  done (took 8.997113861 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.468360399 seconds)
  done (took 10.334039845 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.939762574 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.00409909 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.934563435 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.93844264 seconds)
  done (took 29.692093337 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.008650187 seconds)
  done (took 8.874492226 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.950780974 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.933054542 seconds)
  done (took 15.779704157 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.02253862 seconds)
  done (took 8.888806387 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.033744518 seconds)
  done (took 8.901015333 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.955929184 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.978838809 seconds)
  done (took 15.810845355 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.92401542 seconds)
  done (took 8.788814254 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.643577385 seconds)
  done (took 11.515948075 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.94442344 seconds)
  done (took 8.821522464 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.001393584 seconds)
  done (took 8.867615166 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.189078363 seconds)
  done (took 10.05316269 seconds)
done (took 166.097338493 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.939769252 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.934130526 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.931373677 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.932094783 seconds)
  done (took 29.601317365 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.976555884 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.975770688 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.977943933 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.986691374 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.979643082 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.975388969 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.968244184 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.968720986 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.988614009 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.979210131 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.978876373 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.978860877 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.977260909 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.968922874 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.980004374 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.980859589 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.988902713 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.978670284 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.970395705 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.981040597 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.945628023 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.988841922 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.981046542 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.945579607 seconds)
  done (took 49.285954203 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.140699626 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.016621066 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.097338479 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.996634856 seconds)
  done (took 10.117653386 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.996802445 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.998963406 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.009153021 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.049301606 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.0721773 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.009067645 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.972908072 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.96345434 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.952234555 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.99874217 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.074415013 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.994434784 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.101027453 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.94628751 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.132507053 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.945328613 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.945686272 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.998558089 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.049786063 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.061693514 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.946573265 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.995755132 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.001899332 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.992999985 seconds)
  done (took 50.077746576 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.944920899 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.951906004 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.951498862 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.945075059 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.945664174 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.945368586 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.952417525 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.946490009 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.967428068 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.945947982 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.944362137 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.944157599 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.94442222 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.946146994 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.944466038 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.957794254 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.959223616 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.947334508 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.949296309 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.952803013 seconds)
  done (took 40.854851452 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.939951504 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.682034608 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.291968314 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.194833809 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.941524839 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.943229246 seconds)
  done (took 32.861903255 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.959475147 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.950262181 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.947055482 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.002547434 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.083084056 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.949728325 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.945596717 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.955654986 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.992846796 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.008777567 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.967473532 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.975228813 seconds)
  done (took 25.608035355 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.943148143 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.942905161 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.942568656 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.958092018 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.957576384 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.951671641 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.954700107 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.941198013 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.960195389 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.965724416 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.953437127 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.959897127 seconds)
  done (took 45.305024964 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031766764 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.832235431 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.982934524 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.651417438 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.416164037 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151681971 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.458974526 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.28519001 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.94743425 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215894943 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.005073891 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047632946 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.19823202 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942724596 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.958750024 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.422124379 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238880811 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162980126 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962480766 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.705283523 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990300476 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.474719689 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.777260072 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.998229199 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1535273 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.075807525 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.204932523 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.905128551 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073497227 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976457556 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954815632 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.945148745 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219268102 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313998381 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040756876 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955697567 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.598917705 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.664864751 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.936467704 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.712263195 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.734881492 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.058901399 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953702861 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943589004 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.879280297 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.475125235 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32068783 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.951557865 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.656156503 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.945211555 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956525118 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032922924 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.949316342 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.761348095 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896966672 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.225711904 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.943435072 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95278433 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.590640656 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.045717305 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.50686696 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.917879693 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.141114008 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.742168454 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330583837 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.08875216 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.948309446 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.951027613 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881983353 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.712758052 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442909729 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.091790135 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.96366476 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.596653874 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246214899 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.041396291 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.887348575 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222726166 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.753147553 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.918659199 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175319031 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.896835141 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881411101 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.819341269 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.881447965 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201962297 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979928294 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.576584736 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981828286 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.28364867 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.959638941 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963708254 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954812328 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.170377851 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.515895605 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946512271 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.778739342 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.09314211 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967033613 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.285303931 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.884708532 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.948309423 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202473182 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.158423704 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.212327148 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.45951875 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104878748 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949584959 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.027841674 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.88770177 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.993501487 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.217966087 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004567028 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.047886691 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004082592 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.909514941 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246921168 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971090722 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.116114919 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.057782748 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.07597079 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.270143628 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.235573298 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014169422 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.951007874 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.949927526 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.754083968 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.49871438 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.216810568 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.953695171 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.468325928 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.995484803 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.951515946 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885574348 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.581113632 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.0084728 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.921139732 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.174986243 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.922310307 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259637005 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885936396 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.096474616 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.062820703 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.173866803 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.597570972 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.017581202 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208423302 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46521601 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.236284909 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995912266 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969860039 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041168847 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973067293 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.395656022 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.238562583 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.954160537 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.955256467 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.764551439 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.950854145 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951967032 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.956467723 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.750309969 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231603987 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996161567 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.952982565 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.225690083 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.966251338 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020255888 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.959598097 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.962474352 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.498822399 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.698602888 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.964117512 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.585656006 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174649752 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96265318 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.685590477 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061804458 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.035605744 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.222870827 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010106778 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.886523431 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.664739778 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.647040764 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953218483 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.890263945 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.953877817 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962791739 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965285668 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.335655076 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.225052203 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992977127 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.816751298 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.996131979 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965819003 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.958733194 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954265862 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.500737479 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.055961722 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.534816165 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.997095717 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091842225 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.969035389 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.897054855 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.959159394 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95989115 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.955334273 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.912545146 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007945827 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.725049754 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329958887 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21423147 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.602326313 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9720113 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.839802158 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.008781231 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.977785605 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.803272712 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918087486 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.994800403 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969276352 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.966633381 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.71791082 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.662076435 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.52114992 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266104402 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.258612581 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387771433 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.467273442 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.256997155 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299706395 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193384281 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.487136063 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.016994048 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.303484936 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902409476 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039313306 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.600384728 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29866122 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968703202 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185225718 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.339312968 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.717764787 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090731704 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.168734275 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989451153 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.889117331 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.916243043 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.162126691 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098276733 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.743285647 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15397636 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300938399 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.671000095 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.046309894 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.955716058 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.64755097 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03764956 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.673957535 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.3207649 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.493325595 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.925610553 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429922562 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.964709903 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.404367165 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324291719 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.284349831 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.076645499 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894849257 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.969542868 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.971029268 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.96153759 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.956760708 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.836190654 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.208632815 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968804232 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194756386 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.252931444 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.246831766 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.859255672 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.962004503 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959760423 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24458918 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.774680356 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119520391 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.443374287 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.488847812 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960475261 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.894510416 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893782189 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.654113941 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.968841457 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.936905544 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173497463 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.142248257 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.944422102 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.486004735 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201099123 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.214456937 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.975641564 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.232893614 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228400578 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.694016334 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989524056 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.060904212 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.654924543 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.062718613 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.231017861 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.196837227 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760398349 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.192930053 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.001086586 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.774158691 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.96070661 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177067659 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.231341347 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.893421492 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179792057 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.680999881 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.969260439 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270523676 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015615838 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.939167515 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.103505489 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.155391798 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970186094 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047219123 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972675155 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.972712929 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.97298469 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009187388 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.940442957 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.076038205 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.976400431 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050749604 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.076749773 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.496002111 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.965254314 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240135153 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307915675 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.282597375 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016402646 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.963048962 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.964290093 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.897784543 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094966049 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.408888693 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236660076 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.094912277 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.262442169 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986262411 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.940955736 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358201206 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202110405 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238011786 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.858753991 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963575719 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.981978828 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.230226588 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973406652 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.174214084 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186431805 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271122376 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.431095752 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.230159649 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.329370947 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239203769 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.333557678 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.965821407 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554470511 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.973197179 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.65392031 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.000632651 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.025061385 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221987204 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.975207122 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339484594 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.987166192 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.165606839 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.481738056 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.727151442 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250950475 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.938748076 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.012818237 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24048634 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341560125 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271887542 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033941264 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977195429 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.680406966 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102801321 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.849018717 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.232032524 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.96624461 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177427315 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.675433393 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.975921184 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241727783 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268081826 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.960610484 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.895377441 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971844025 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.975602163 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190403579 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.235086898 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.217017332 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.975583318 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.975349884 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.78211839 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240885942 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.018620531 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901411249 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.967119941 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062135319 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.210067702 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988435867 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.484561176 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.677162353 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256085979 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.906875337 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989485129 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.501849006 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334025938 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.284623776 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.510592126 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1855004 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.522901147 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.942746022 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269471577 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.973173356 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.506027246 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.272841978 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.971356304 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.615248614 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005112156 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.237775398 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282067383 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.985074104 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734031527 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.934547936 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193275364 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559763032 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910722564 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.967471953 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.031525313 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.970498836 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.097972618 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976988911 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.895069143 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928095407 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.72041656 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.463023639 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.970712313 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.956986335 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.723448918 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.629844864 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001596343 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113995716 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.979559251 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.680195533 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.272167508 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.225879881 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.614890534 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.976678313 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.974199969 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.970599839 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.898912043 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.163612598 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.347929742 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26260454 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.453210612 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.005974385 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.974582382 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.187773711 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182689166 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.935709942 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098454679 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491217526 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008378082 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.739848952 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.651636174 seconds)
  done (took 1728.908799462 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.988729273 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.968778844 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.975029222 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.985627265 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.034586826 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.020677814 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.010945708 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.041960714 seconds)
  done (took 57.924628002 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.972583452 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.166667579 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.977775193 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.972213249 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.977274261 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.971734746 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.1477458 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.978176256 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.003849861 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.98241128 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.972426654 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.968022083 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.292229706 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.993091323 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.972442148 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.968740596 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.977262041 seconds)
  done (took 76.218039353 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.972111494 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.197332331 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.007071452 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.992897935 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.946343588 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.980517286 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.003754644 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.984367245 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.975359095 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.204343757 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.307413841 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.997952454 seconds)
  done (took 91.4685462 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.983417378 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.979148369 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.979913017 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.979622555 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.980150072 seconds)
  done (took 11.804893358 seconds)
done (took 2251.932252381 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.221052327 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.209291408 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.203672525 seconds)
  done (took 6.311650431 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.119698771 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.165981616 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.287770859 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.292096116 seconds)
  done (took 10.76597509 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.265441414 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.357554124 seconds)
  done (took 6.518182483 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.387280352 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.972160106 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.36642181 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.971774104 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.969499751 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.969571861 seconds)
  done (took 22.812630186 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.974837363 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.978947611 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.975149772 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.978267507 seconds)
  done (took 9.804695706 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.957824401 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.704932682 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.955699158 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.967671595 seconds)
  done (took 21.482239986 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.724265861 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.373906537 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.718208294 seconds)
  done (took 9.713968172 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.75470356 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.874551749 seconds)
  done (took 9.526263614 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.239870709 seconds)
  done (took 4.13689742 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.003199098 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.245570513 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.517439641 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.530334784 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.610566015 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.901078317 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.294920658 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.223793229 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.39772849 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.423300889 seconds)
  done (took 26.047210434 seconds)
done (took 142.964657722 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.358534924 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.989998897 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.174718574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.327663872 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.201787591 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.175938734 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.167266419 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.31163793 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.8228694 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.817741948 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.320064001 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.229846323 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.126786373 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.215706375 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.131246424 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.216738295 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.197660216 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.381342376 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.019040571 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.216804374 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.184608437 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.954333749 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.160997915 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.967754405 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.197900552 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.124865675 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.545683408 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.215516701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.175058182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.55397383 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.123156011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.37423821 seconds)
  done (took 174.88007165 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.974324556 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.971597875 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.970110755 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.97153448 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.430125321 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.971335602 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.972423382 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.971272705 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.076628979 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.055974238 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.972875173 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.390948533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.974884461 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.971926083 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.971495854 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.971247599 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.242443301 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.971632718 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.970880599 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.971538415 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.97405132 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.251159755 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.972122058 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.266594781 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.211518914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.97330866 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.97249456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.973209833 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.972942405 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.972163032 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.972943594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.972398264 seconds)
  done (took 211.16237368 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.975801639 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.973650276 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.972258365 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.973605597 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.973594073 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.973575672 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.974101993 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.973408952 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.562186883 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.555707475 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.971326524 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.973701437 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.976092426 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.973050645 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.978515748 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.9735553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.978210264 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.979362833 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.979083499 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.982662952 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.990817086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.775305194 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.989695097 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.781653127 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.985529656 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.987468748 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.974625472 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.992710348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.998190798 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.998610133 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.997357919 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.973795101 seconds)
  done (took 224.023314377 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.175600935 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.983976303 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.985729145 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.925736782 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.985051364 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.98402492 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.938035104 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.182662589 seconds)
  done (took 20.090428994 seconds)
done (took 632.068152281 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.446359058 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.296665183 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.16295176 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.004957279 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.259438116 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.043990828 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.004616199 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.069367388 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.738444679 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.073671911 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.651914609 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.018688981 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.745562675 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.024681874 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.130363311 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.059548118 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.55225433 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.651875052 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.179749294 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.076712901 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.184596359 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.968705549 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.081233398 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.757121352 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.769033897 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.011576785 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.190370304 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.560242372 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.011623241 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.167829438 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.794109923 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.399829462 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.012534703 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.999700201 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.05814644 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.037699844 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.366281949 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.012713424 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.123837935 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.776677442 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.079634067 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.619823595 seconds)
  done (took 108.08003683 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.979117186 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.978118214 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.976431528 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.976482825 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.979431075 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.977553136 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.97662014 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.976220896 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.976606474 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.977675239 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.977141661 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.978819161 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.97690381 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.978377546 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.976221868 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.977047417 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.97693728 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.980412921 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.977711218 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.976596399 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.9777313 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.977413238 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.988828524 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.97932643 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.97710483 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.979216627 seconds)
  done (took 53.349934786 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.989966406 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.141996922 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.243749898 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.003522216 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.986300969 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.99119242 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.00585359 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.990574371 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.991525186 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.989578305 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.095340879 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.992278449 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.008646441 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.255933518 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.000413228 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.988333612 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.988793178 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.988941949 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.148144144 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.002626244 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.007645397 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.990674685 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.00974978 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.0005878 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.991299492 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.988331693 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.992864307 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.461809316 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.994289632 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.093606767 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.028690028 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.010682422 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.404011199 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.253315662 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.038326032 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.996084017 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.989915265 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.100139114 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.991257617 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.989840769 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.007706377 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.991035714 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.249291111 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.474071227 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.000526453 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.991354978 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.475720338 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.105675958 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.025621785 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.001208629 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.247543155 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.003161162 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.991487238 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.991774711 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.026395778 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.001034392 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.989295838 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.317290401 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.998499486 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.008480886 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.991943609 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.992284689 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.155948946 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.996288471 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.143091799 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.996749688 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.997155714 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.98993151 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.249588955 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.00349786 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.486780516 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.001080654 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.992794916 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.099807776 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.143280447 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.499915781 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.001271484 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.154958774 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.42017789 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.012297821 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.99580253 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.450866387 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.015895976 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.996358429 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.99323225 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.994913001 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.993486938 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.03742724 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.008343753 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.407944279 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.486576725 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.328122683 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.015918865 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.005713647 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.991916065 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.316865084 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.997664641 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.993483941 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.245469524 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.493180891 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.002646488 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.999967055 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.469567594 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.004010267 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.01164667 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.998855541 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.254323623 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.004384834 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.036353274 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.99427222 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.000309295 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.996886169 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.011717614 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.998698973 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.993520759 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.462671681 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.115936346 seconds)
  done (took 246.399896848 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.990376624 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.98521503 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.986297268 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.986842371 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.988675787 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.992838306 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.984301969 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.986557474 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.99326474 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.986859242 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.988773872 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.989442943 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.98859342 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.997439682 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.024878069 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.996184797 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.598243055 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.987115599 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.98905728 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.986480418 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.636694806 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.994243256 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.989301538 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.991043499 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.987805097 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.989810648 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.99088045 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.01626952 seconds)
  done (took 170.940278791 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.996683593 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.110786625 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.011515091 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.023620012 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.001565983 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.994197651 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.018255297 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.009806757 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.996627209 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.994277775 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.994229526 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.055431682 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.00614782 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.098605103 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.021902215 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.021733574 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.10172212 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.99952686 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.995875102 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.994783081 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.024371417 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.990802407 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.055224429 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.121801191 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.012279759 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.112033554 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.001259093 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.997535099 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.996737878 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.114510981 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.009612183 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.055178099 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.023288448 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.012022923 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.111856529 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.111810363 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.101072173 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.02066067 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.997587711 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.995181157 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.995111344 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.987843151 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.112064293 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.011784279 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.998414668 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.106921575 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.012930515 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.99930515 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.006091578 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.99594332 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.010367213 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.010829594 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.058183224 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.127395985 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.028083119 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.022403698 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.021518276 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.286012602 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.009057155 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.100365042 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.989758111 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.114331522 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.012286419 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.988809515 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.997671424 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.003453593 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.027618356 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.024898578 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.105029967 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.002710032 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.099773995 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.028546129 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.999823568 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.997431734 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.000264372 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.113247777 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.115121543 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.027709213 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.031349515 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.024463077 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.990876236 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.998546557 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.989526043 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.015512142 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.000958272 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.114641116 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.114520282 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.004940657 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.00070809 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.00006863 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.001053544 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.023224387 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.118112128 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.031959792 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.099955142 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.060957379 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.070578647 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.010596302 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.011828749 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.997893822 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.06206815 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.011840479 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.011463863 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.336121564 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.075347849 seconds)
  done (took 215.990072393 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.46802069 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.050305525 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.053807723 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.328841997 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.426808697 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.854312797 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.045217555 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.046410312 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.068192139 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.232561325 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.119872979 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.066536312 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.033520117 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.019627627 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.043075604 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.064622831 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.059516008 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.361885279 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.170898966 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.123459909 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.021492888 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.334060001 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.365901127 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.483168349 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.084269098 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.383296471 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.738348613 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.191211567 seconds)
  done (took 65.165831064 seconds)
done (took 861.830044516 seconds)
SAVING RESULT...
DONE!
