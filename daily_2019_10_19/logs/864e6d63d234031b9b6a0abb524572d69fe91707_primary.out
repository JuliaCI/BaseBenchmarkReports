cset: moving following pidspec: 20256
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341248161 seconds)
loading group "string"... done (took 0.546820297 seconds)
loading group "linalg"... done (took 7.075727355 seconds)
loading group "parallel"... done (took 0.165228345 seconds)
loading group "find"... done (took 1.092314173 seconds)
loading group "tuple"... done (took 1.816985332 seconds)
loading group "dates"... done (took 1.16889334 seconds)
loading group "micro"... done (took 0.227992391 seconds)
loading group "io"... done (took 0.90989981 seconds)
loading group "scalar"... done (took 36.073272081 seconds)
loading group "sparse"... done (took 11.119438134 seconds)
loading group "broadcast"... done (took 0.92654471 seconds)
loading group "union"... done (took 12.10004963 seconds)
loading group "simd"... done (took 4.108291416 seconds)
loading group "random"... done (took 8.485046676 seconds)
loading group "problem"... done (took 1.853115312 seconds)
loading group "array"... done (took 19.805477369 seconds)
loading group "misc"... done (took 1.62062095 seconds)
loading group "sort"... done (took 3.064998471 seconds)
loading group "collection"... done (took 16.839534363 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.484514861 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122595209 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11407233 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117853994 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145426735 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113833474 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123242521 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083442445 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.769298673 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147687901 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118577815 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414315961 seconds)
done (took 5.04003469 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171583777 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082141127 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08137894 seconds)
  done (took 1.29229295 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065176813 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121246309 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066274317 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066775835 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066475254 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065958452 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065832976 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066396131 seconds)
  done (took 1.647729873 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072397297 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067904788 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068704142 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068161402 seconds)
  done (took 1.408416959 seconds)
done (took 5.723996206 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.765130922 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.20419362 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182775029 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396448508 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13089394 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.155016255 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.635190363 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311018121 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182646493 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080888316 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104159938 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316889187 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106814892 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635320551 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.073796459 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090047064 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136648658 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.40836449 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067088864 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.0817313 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088471257 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128769634 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085457769 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074067827 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148978454 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067469543 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133353604 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080494107 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066404788 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.207678505 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172753241 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659304766 seconds)
  done (took 10.147044613 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096852048 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097722169 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068399744 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137027384 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09561417 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069207202 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070530982 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066738852 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085996686 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127733465 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088623101 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101545662 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065267959 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068888834 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085011373 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204088224 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08132278 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08190865 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069889573 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075193265 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118487624 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077642331 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077366662 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077236723 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128243008 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180427925 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098255225 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09696841 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066571952 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080048851 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114633083 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125652025 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0650768 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06613883 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123924549 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094550328 seconds)
  done (took 4.593942408 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.29546327 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139381319 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089600348 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.132476847 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064686438 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107189693 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065388555 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080647334 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199582466 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.302899733 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.584770696 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111003467 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103608071 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067715092 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068665826 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067071247 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.344819415 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084223506 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103481956 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107321489 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081172623 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069978654 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068009544 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067404128 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064114394 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067911061 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.100791457 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.296158359 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123155921 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068342502 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.920395488 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123929103 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066652678 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100460422 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162161721 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08672667 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272440516 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068035928 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063856568 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149910474 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069984327 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066055139 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082895315 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103603143 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112085874 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065353135 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066967563 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16110982 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064124032 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079292746 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.988694102 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153733932 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076481062 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064131904 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246215558 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085298065 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068859472 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064540712 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.186239483 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135078342 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067081133 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066125577 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067275125 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.089816607 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069314087 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.35627786 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068087105 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.720151457 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070033291 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078100631 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071005222 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069389453 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07339929 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07669409 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085854737 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064984137 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067797714 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077451547 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067533246 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067419167 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068414025 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064899629 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087451632 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35464036 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066551788 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067852811 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064089 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085766772 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096322073 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065943039 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064531576 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.200988853 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069494757 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066177671 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105874488 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0665813 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083983467 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069353764 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112857469 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066152746 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.091044167 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072391783 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099409388 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07008079 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099352678 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08245018 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069273016 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398444154 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064966223 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065874953 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070431111 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066835147 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069139451 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.0676343 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082216498 seconds)
  done (took 20.864698112 seconds)
done (took 38.030843385 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.233322831 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078921598 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077866879 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07610682 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074760028 seconds)
  done (took 1.763814538 seconds)
done (took 2.96960416 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119491171 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098612543 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064185378 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095015377 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064018459 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100275613 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098356535 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080582398 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09846007 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063784012 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095619721 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064378312 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06464692 seconds)
  done (took 2.331209489 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082527068 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083957166 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071455455 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084292013 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065079659 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083902552 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082625131 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090437737 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082291287 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07361164 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065212634 seconds)
  done (took 2.064886336 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081299664 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084989723 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071301993 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083234455 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067552887 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082638893 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082329727 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087358089 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082587884 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074535382 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065429558 seconds)
  done (took 2.059964184 seconds)
done (took 7.649686675 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078653398 seconds)
  done (took 1.26735693 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.589904296 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.042577062 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081198386 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111910669 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18304048 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119927134 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277629867 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086759024 seconds)
  done (took 8.861989498 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088683958 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06862117 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069093122 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081330051 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068951147 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069192333 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072400118 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06874391 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071334842 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070174869 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068119853 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071191096 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067882575 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071512054 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070453049 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071928642 seconds)
  done (took 2.410177779 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091748587 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090378418 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074141765 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074787864 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071865897 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071664854 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074195472 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072976205 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070770357 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071877102 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074307988 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073619324 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071203517 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064831538 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074302423 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075508536 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070758695 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073846373 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074840359 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074650356 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074529544 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064777384 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070925535 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073501426 seconds)
  done (took 3.070097227 seconds)
done (took 16.806820944 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11375832 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071621943 seconds)
  done (took 1.381890035 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081027932 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083334376 seconds)
  done (took 1.369799202 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083925055 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065819234 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091898969 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078989063 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066329638 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065572958 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089114933 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066419404 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066094224 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066640504 seconds)
  done (took 1.946610857 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068921004 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078895614 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070937549 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081136143 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073845915 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064412633 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072841645 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067674171 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078511319 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063310756 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071300221 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082485066 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071667087 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083798512 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072299381 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069200199 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070809682 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068807442 seconds)
  done (took 2.517388329 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065260342 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066810476 seconds)
  done (took 1.34113124 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067064707 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063711358 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067464472 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067128363 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063330167 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062292275 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063598574 seconds)
  done (took 1.659214198 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381124338 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109816827 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.2997082 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072135005 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08352365 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249311638 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064925267 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069842247 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070018358 seconds)
  done (took 2.648645382 seconds)
done (took 14.075272848 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078321906 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085140646 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09474355 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.362612253 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091335425 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067171383 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115446836 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193482975 seconds)
done (took 2.308343559 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215546361 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611993039 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.389211478 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.197780243 seconds)
  done (took 2.412691478 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329196158 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086011737 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059206821 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066601627 seconds)
  done (took 1.761104848 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066133393 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06851093 seconds)
  done (took 1.353267914 seconds)
done (took 6.962897261 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066279677 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065171352 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063963249 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06609344 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.063306882 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06361624 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082375803 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06563514 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065679562 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065796801 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068579964 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06592146 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063306235 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063537479 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066062079 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065422454 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063451513 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06606196 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063013149 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063275589 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064086114 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065296785 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063146039 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063161631 seconds)
  done (took 2.825877152 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082713915 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065896834 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07132283 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070816404 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069991109 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074381832 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072801532 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06699859 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072840128 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069271078 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069970712 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070396141 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069622134 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071961097 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070132043 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071041568 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072287919 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067841793 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068422728 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071647244 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072890528 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068239442 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071759072 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072921571 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071272777 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073436073 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068293437 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066283002 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070671825 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069487421 seconds)
  done (took 3.352833041 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069346395 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062780712 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064883759 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070942207 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063495641 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064440821 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063178423 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063760973 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064282736 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063489228 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064866564 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063161465 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063435587 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064154473 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064354402 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067180799 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078665242 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063515437 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063367695 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063818129 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066635883 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063267644 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063792021 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063639132 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063611527 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063328843 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063735241 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063047827 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063736054 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.174418589 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066260081 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066894476 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063090212 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069806937 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066580814 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062870587 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066908776 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062886846 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063684649 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06277702 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062464899 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063009645 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062825029 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070054572 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063337628 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064807552 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063456604 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064266181 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063510109 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065869947 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062733881 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063259957 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065000758 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064236576 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067071584 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062459735 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064047458 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062216567 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064094645 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062910282 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062692441 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062700476 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065480578 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063855402 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077349773 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069982731 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063674397 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065164812 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064159933 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06580225 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065367368 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076335076 seconds)
  done (took 6.023305198 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090705932 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086924723 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065715266 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06522314 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062040641 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063828318 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067389436 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063727762 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065640957 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069569941 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064530578 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065116183 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065060861 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076378436 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064924404 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066079995 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069807239 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061601449 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063892731 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067177653 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064080081 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068914341 seconds)
  done (took 2.736120397 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153617723 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070489777 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105470269 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073283351 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067613392 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073287451 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06936708 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069820782 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070200057 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068608776 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067844432 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069765644 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067671866 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068522053 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067990807 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068005167 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069725746 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068274299 seconds)
  done (took 2.605457028 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077176614 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06577698 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086365442 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065774192 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066171141 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068112505 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070526277 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074340371 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067850522 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06591364 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074134296 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068134274 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067941269 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065902078 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068139554 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065963057 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06797904 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065617714 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073777775 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070471492 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070760217 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073831361 seconds)
  done (took 2.776095124 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079785159 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067668522 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082469561 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068713576 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061780681 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064344941 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070111447 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065948199 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069814298 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067746963 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066011628 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064328759 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069193271 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065740214 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068864845 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06592931 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067494547 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065738271 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067222424 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061907831 seconds)
  done (took 2.597348682 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086559671 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067936313 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067558241 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075956413 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067376139 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067743568 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074984348 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06692413 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067251596 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087223138 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067236794 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066820794 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074287562 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071499855 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067624022 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075033725 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074771183 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074638368 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067094062 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066843328 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086620522 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067053379 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074405149 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066997197 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066695435 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066939558 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067273736 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071467549 seconds)
  done (took 3.241233967 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065962958 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0657424 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063649368 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06329589 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06391986 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063318566 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063380877 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063811698 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06589067 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062959842 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065302331 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065608122 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065488819 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066079563 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065381971 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065765495 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065711471 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063188117 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063097025 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063332551 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065546686 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065419498 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065389495 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063087703 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063272929 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065934395 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063570465 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063437812 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066013424 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063128421 seconds)
  done (took 3.1771488 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075343113 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072973509 seconds)
  done (took 1.390740375 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063051894 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080522809 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063255577 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070307557 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069872959 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066262883 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072717162 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0695999 seconds)
  done (took 1.794342422 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080808423 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077383717 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067582436 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079778292 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076047533 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082997276 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132088774 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066895686 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072628173 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064266715 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079746437 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064951602 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072325819 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066418857 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071438285 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072083682 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063668602 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071930709 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068304761 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064904637 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067421641 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074534304 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068285571 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061356605 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067006516 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087478031 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076514264 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065562241 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069280451 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073066262 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072079034 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060126785 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065958859 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06643434 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064068925 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075401001 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08094492 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068639838 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074337144 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067067092 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076277552 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061054912 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07064332 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072751519 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076027689 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066227366 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067356873 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061685744 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063998343 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068435434 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061425003 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066483634 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061105028 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075521843 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069608468 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076570369 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065265565 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068220188 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0689868 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069383993 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072915975 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068052755 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068848082 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065612137 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07594627 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070773196 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07518977 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061931131 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060445173 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064894433 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075602333 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088600982 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072805476 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066678789 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06707406 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064023616 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069736612 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067087033 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071896581 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072699143 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066318142 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071866687 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07372138 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066363903 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068904288 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074446704 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065246101 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068798877 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064411745 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082224541 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065190398 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064404879 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064445296 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07676053 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069360594 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066023792 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064240785 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073125788 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060435871 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066299772 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065785365 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065803094 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075092004 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068997719 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06961805 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073410868 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071799255 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065044093 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067732331 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061482439 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0657715 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064119545 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071789179 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058982404 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067526772 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066739526 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065116339 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200044919 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065291865 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067613838 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074981033 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072113028 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065727117 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063780268 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069870269 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066706426 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069526028 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074731387 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065927347 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061192894 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061387298 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070277394 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066754981 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07048617 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07204764 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069520112 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061680626 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065014293 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072275611 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07495679 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067948326 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067326551 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072724504 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068530647 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066205982 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072946274 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06971015 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066598418 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072287979 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068208213 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061923432 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069136131 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069980933 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064812197 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070383041 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070184767 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069108445 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067339498 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064655435 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07405237 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067921998 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065775022 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066597446 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065597217 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077258889 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068434419 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062090944 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064144413 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075853287 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06455976 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065934855 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06541783 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068544249 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067299314 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065502355 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06666081 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068992795 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076652557 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07136881 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067662756 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071486796 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077994085 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066665246 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06949087 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06701071 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067905433 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067336928 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074931777 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071937455 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070729491 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068630193 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063304456 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072922677 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073765377 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065837898 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063972419 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065095196 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070213635 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071407801 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070284354 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066950479 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064003865 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066718005 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068931839 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068775641 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065453475 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065106229 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072651661 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064385342 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073027743 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067028555 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075778204 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069603759 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061379061 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068868546 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063911423 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071699622 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061457357 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063816683 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06539297 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066630002 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064249635 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067206277 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059127623 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071727271 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071986842 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065549564 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064657077 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064618208 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071293888 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066451313 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068576572 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068091421 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070582309 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075062104 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064187322 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068040118 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.203846451 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066987402 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061254533 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072161863 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065554654 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065629538 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065583326 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064422374 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070190555 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075521198 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073190049 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060977157 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069381613 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065182008 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065926643 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061829445 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071534481 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070233325 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067554801 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074208272 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067285572 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067818852 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070525318 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066461514 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067184866 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068263535 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069715561 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067212541 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069222179 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065860316 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069714085 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065893343 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064385506 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068556095 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067478206 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066822576 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072277044 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065984206 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067443978 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068920077 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067467245 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067537272 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067001026 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066229215 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070012111 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067553518 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067367638 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069659555 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061713509 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073956656 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066565335 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074721051 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067536727 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063557154 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073947159 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068976263 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072209727 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067177422 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067236999 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067897959 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06620295 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069653034 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073661054 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064485901 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077379887 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07452091 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066895132 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06971318 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066857298 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068571915 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065993617 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067731206 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067505126 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066277208 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065366548 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070460528 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068398382 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066578915 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067772988 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06673575 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066550011 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067068682 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060744881 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065449829 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065529562 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065934369 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075763551 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066430095 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065657593 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064774807 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06679704 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065096005 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062956756 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074142177 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07530966 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066876815 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07350394 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06529602 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067788441 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076511413 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060285283 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064121631 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063852712 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063806875 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073061005 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066607824 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074734488 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065753166 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064685154 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062761996 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065642392 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063735203 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059475227 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062401299 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0682436 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063729679 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064356777 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06531511 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067383344 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066135726 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073889838 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064375776 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065664305 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065142362 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.194987104 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066255112 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066506558 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069937843 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067403875 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064655406 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06474455 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066766777 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067795445 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068052572 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066769105 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068559152 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075776849 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066572735 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069892849 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06979721 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061846722 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06931073 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066896951 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067168969 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066019445 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070250151 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069436823 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068195503 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075596145 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066432667 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067708356 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06714801 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064753008 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066059721 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066633896 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067331018 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065859506 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068225677 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074637011 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064112261 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069552043 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067185962 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067266688 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074133545 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068209308 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069705305 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07325371 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06687166 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068554702 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07466912 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070821817 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069281795 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067760599 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068680545 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073246894 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06622131 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073201268 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067475511 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067133583 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068141939 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065028928 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066682477 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066226858 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066535656 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073996523 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068152618 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066045598 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065873215 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063615784 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067819251 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069947875 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073982885 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068597472 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070159606 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06149665 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064634149 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066959534 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064760361 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068522255 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068262738 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071633944 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06812996 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06649188 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064818548 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075017597 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071726193 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069743234 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063905853 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069683848 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067103478 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068605358 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067493988 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067062053 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068095162 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072255739 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068417423 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065783944 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073306049 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069813367 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067362352 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067965109 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067246212 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066692574 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061549761 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067086829 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067983197 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071512954 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068696581 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065993511 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076813346 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063810703 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065887455 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06858917 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065157115 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070059781 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06079573 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066969918 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065782914 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065301808 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060296382 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06411979 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06286797 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067351216 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063809965 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06020893 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075001868 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073816726 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067474013 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063708459 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.196374393 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061907792 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062419851 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066081628 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068246965 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069064971 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076832515 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066161973 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06514998 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061877205 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066683738 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069334922 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069611398 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063973314 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061434727 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065673836 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070219981 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072233664 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066090895 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06846172 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071940092 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070468523 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066506153 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072251587 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065564142 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072707461 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081900553 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068749043 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068628276 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075130809 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076502737 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069064674 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062981517 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069000429 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069972415 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067033196 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067397881 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068348302 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081818501 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069738734 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066218797 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065594773 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068533651 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066528781 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075198941 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06727766 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067488955 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072074729 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068416398 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075160647 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068428279 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074229117 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070143467 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070023318 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065430644 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068409335 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06524219 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065265615 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067227019 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067608679 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071830054 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074770836 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065729356 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077144812 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075372842 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068597692 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062572113 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065568173 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065631685 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06191498 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067891054 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064304686 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064594423 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064236805 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065103062 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067004041 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071271686 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066998422 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06638573 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065891738 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060319629 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06806065 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068144554 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066824431 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063263226 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065709689 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066544287 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069804992 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069441323 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063822586 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067487481 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06775456 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066981133 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061715358 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073961592 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066283867 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069100621 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065802105 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066658845 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.0672986 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070337189 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071748334 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067407548 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068692008 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07024973 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068141133 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063854827 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062912775 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071165371 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063794113 seconds)
  done (took 42.535590527 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099476375 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0635074 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061764577 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062050135 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073564156 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062630134 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06143139 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062995292 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062858558 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065020855 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061989939 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06172283 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0703168 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077266695 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073821956 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066234953 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061687955 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06302407 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062174124 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062736295 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070669913 seconds)
  done (took 2.748511555 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074119 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070324187 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072447032 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075486899 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0671974 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070674911 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072341859 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071104271 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075904468 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0676593 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076081563 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070299197 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066761822 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066792575 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066791543 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070824492 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075696987 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067093077 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070105086 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072526794 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071123487 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072156237 seconds)
  done (took 2.881003031 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066975136 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065135756 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067846541 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061480123 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065966463 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.069367732 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070774472 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06525794 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069621599 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065403859 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065646492 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064750631 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067609917 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061242241 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066029351 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063392606 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107422762 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068481512 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065285312 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066465605 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061200996 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067615416 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06125053 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061993461 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065051926 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06889812 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066676123 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063924693 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065463618 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064561989 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065430463 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063299081 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067402462 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066160121 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064983888 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064518646 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065939587 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065270006 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061153509 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063546103 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066136954 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061579474 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065747793 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066888422 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063951624 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063311041 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067067527 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065585676 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060814799 seconds)
  done (took 4.560693022 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079295336 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10729706 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067909145 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08768364 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079551525 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075174377 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068643249 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088586495 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063159193 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064329723 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080916967 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079186389 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065719169 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069917676 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072375244 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065741301 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066360906 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065047019 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069218551 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064695429 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069320902 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07200154 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079608282 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078719043 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069370737 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064420858 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064754903 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069801682 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078025628 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070233026 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069934782 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070743836 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081124634 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073032829 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066064052 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068272724 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082855589 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067407048 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069696095 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065006086 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069503004 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071050554 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072496525 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082291487 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066379407 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070769774 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065447431 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063081106 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077961876 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068061654 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073003498 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079670543 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069687775 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065612445 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070286514 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080217208 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065414912 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063781692 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068788475 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077830783 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063263092 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069506993 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078785016 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067619033 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07260864 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079610256 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070696125 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069119942 seconds)
  done (took 6.35981158 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075684671 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072691828 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080743261 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080656587 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073390694 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072961302 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07415296 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074232987 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073734181 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079373759 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074614951 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09607661 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070125172 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076940278 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074293819 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074328527 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074410955 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074862185 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0744706 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074285271 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074645985 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081787888 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074986433 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081791618 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100108218 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069983323 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073939541 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074234475 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082157265 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074105615 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081670262 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074801132 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074758445 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082068355 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081321421 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073930681 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066882576 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074111394 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072752419 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07174016 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067739188 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079530237 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071615686 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06700667 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071924014 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071295066 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079297064 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078953125 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074236804 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076658215 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071526746 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08004413 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071729906 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071771549 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079459539 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103711135 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079668631 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079448059 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071752632 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079434709 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079257186 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08568839 seconds)
  done (took 6.098893708 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083385175 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075034051 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07608563 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061317726 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064178035 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069762934 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06401633 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064522436 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074490759 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074397084 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076461 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069885423 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072267717 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076598103 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069196118 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072767183 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069370369 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069437142 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073805692 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069447912 seconds)
  done (took 2.769595953 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074368787 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082712766 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067172625 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07217266 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068259488 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071260941 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067892402 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068824678 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066623825 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068618866 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075641241 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075668634 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066582963 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071616319 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075922892 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071506775 seconds)
  done (took 2.480373876 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075040021 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072083073 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080220977 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066607008 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064450235 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063134287 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065762959 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062082631 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062876219 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077873249 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065813165 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068111719 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065621249 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06415235 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062535346 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068986109 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062446613 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063146642 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06549919 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078051086 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077005243 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064226519 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066314236 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065605863 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065840666 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070644211 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065595455 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063250417 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063686548 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066162601 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066000474 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069202439 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062745924 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063456304 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064122848 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062973927 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065447352 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066058638 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067854191 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065275687 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063471963 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065323319 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065928807 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06674789 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06312589 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068083811 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063267087 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069279173 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064093283 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065712662 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065380752 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068019301 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.0664663 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071965201 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068743851 seconds)
  done (took 5.008303482 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079335526 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069140049 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062059071 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063573573 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069263443 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067502208 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069071105 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067521806 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068100392 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064259737 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067851398 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068379898 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067352174 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069252988 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067213192 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068912919 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061934825 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067559334 seconds)
  done (took 2.567039089 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071141485 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066449313 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072771103 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065743839 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065780919 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067833377 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061684515 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06411107 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064384517 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065650788 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065879035 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068031886 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064527179 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06836587 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065683284 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06554772 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067778841 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064506238 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065438285 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062318658 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067675878 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064164387 seconds)
  done (took 2.797307678 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091474916 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081048614 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137076079 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078169702 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082714659 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071368594 seconds)
  done (took 1.885023159 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090470875 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078905739 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066501275 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087954296 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073211926 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067218727 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067484903 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068754162 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075800081 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075512234 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067245948 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075204305 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075573359 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074686872 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072988038 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072561777 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066859061 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067107918 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06572884 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083576457 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06760182 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075446297 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067130736 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066763879 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067131408 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075010753 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075983751 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075680332 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067436859 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075928312 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072919979 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067749907 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075951707 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07593574 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069476757 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075958314 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067767833 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084353165 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073348669 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076792307 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070820584 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075286683 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077922723 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073945541 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078267074 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06958092 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073839906 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069183097 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068958566 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086491499 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073227349 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075015001 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072955882 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075890435 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075856344 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085569692 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075744265 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075087217 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07291463 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077999857 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075016229 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072749005 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075044207 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075972536 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072967706 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075375802 seconds)
  done (took 6.225522835 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082379931 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085607349 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067573686 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07573711 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075234317 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067487223 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067785556 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067501305 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067356872 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066623873 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107801356 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067984541 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075672743 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075272741 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067491787 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067369579 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067525391 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075616148 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067168392 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086065579 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067295222 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0756714 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075582309 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075742339 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076192206 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07295353 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067584269 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067511879 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067272206 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067543914 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072451364 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067602044 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075119261 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066997109 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075357534 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067753652 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067401393 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072533634 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068239538 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073532554 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075512735 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084053887 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067178438 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068759746 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077582313 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069116516 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06887664 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067878918 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068001311 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068214163 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077397553 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076216459 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076006943 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074962843 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067212275 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067470559 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06726914 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067162984 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067158899 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072999116 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075035377 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067298454 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085568103 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06726615 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067492474 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074990131 seconds)
  done (took 6.129748984 seconds)
done (took 128.784573802 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182158885 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16543369 seconds)
  done (took 1.687648036 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068897034 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097392761 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077455755 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128175381 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066583371 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099961116 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099358858 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077752971 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065925615 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066098953 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066032083 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068678682 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130988596 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066005818 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066061234 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068885861 seconds)
  done (took 2.666593923 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097366282 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157585622 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099518239 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064622629 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096442085 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07287297 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064804416 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075001052 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070905847 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065128197 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072732526 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070553904 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064950399 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07041654 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070686452 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07243912 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064963717 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072804604 seconds)
  done (took 2.780534987 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100870708 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091556283 seconds)
  done (took 1.550986229 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154752122 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104940293 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.155721117 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345320358 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166981399 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228401895 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126400015 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127172389 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117313472 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123460331 seconds)
  done (took 3.005309481 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097814809 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150454739 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254816583 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11502373 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.0721073 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094836958 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115550699 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077702364 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080645864 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080319093 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079917861 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076037154 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098135789 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073463905 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073190101 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075770912 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10214929 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072216287 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07421271 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076375933 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099096108 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065481615 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073359792 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.0719222 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077088182 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077390864 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065685317 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065574955 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076604657 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074525987 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07717068 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093784368 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077255021 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107010716 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070086268 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107919932 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076406741 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073935352 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073894139 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073821752 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078659355 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078696715 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.0720896 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076661683 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065668884 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076467203 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065337923 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065303207 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078060855 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066718374 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077967466 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07706598 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106834125 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067124786 seconds)
  done (took 5.954583452 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101453877 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103218249 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071077931 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110835046 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100056251 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071824997 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101255045 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093479293 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103047536 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070076778 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068441132 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070429927 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082653748 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083499876 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112608332 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104797146 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073769958 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071533209 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104138486 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102713681 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068820467 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094680339 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089633639 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101561134 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067376872 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070247957 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068181292 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070192048 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076767396 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078541348 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069787257 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080684196 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085012606 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078192309 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067337027 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067782553 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068943678 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080126597 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07959525 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079060137 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077650453 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067556752 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069093171 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069552215 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070616708 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067389134 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078867124 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080429749 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07910317 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069304149 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070563291 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068039209 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069302925 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080364979 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077715159 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081297305 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079952761 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068348553 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068467768 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072582112 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081404281 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079326016 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079579094 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069627871 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07902992 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068059908 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079926049 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084762313 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068576899 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070078196 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06839431 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069495928 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069909999 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07807144 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077968468 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069455284 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069387906 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068113378 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079921809 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078600199 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068212632 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077288452 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067324763 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068406211 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069853792 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069710873 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077933252 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080109291 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069722693 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068060856 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069205199 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06777664 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066510754 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075425661 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078847236 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077894517 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077249597 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068572488 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077624869 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078078257 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068623704 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078124268 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067063159 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.197608896 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070689578 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079519348 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079126396 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080356404 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070169366 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068838406 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079021889 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081777104 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069398843 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079376152 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082070481 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080287598 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068380689 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082125984 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069259183 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080712583 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06967937 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081034324 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068498856 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080020305 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069570078 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068231401 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069197967 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080432702 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070881549 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068780165 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069247459 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070473574 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080495222 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082714803 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070912618 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081157293 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079294149 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071199742 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079237228 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068598132 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07969374 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070272226 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070202907 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067943435 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083052409 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068633594 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068922739 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069890456 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081012979 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069088931 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080303554 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078897709 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068352866 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082383418 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081129607 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077979497 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080055484 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07052071 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068634683 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068025095 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069751732 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078222203 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080552182 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070625755 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069076261 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07850096 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.0799265 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06767062 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078434432 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077884808 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078653066 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068477745 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069444053 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080459304 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081250383 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078352992 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078030882 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078380552 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068153694 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07773976 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078317935 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068144427 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084498832 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067820184 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083100611 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07919772 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076900237 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078966595 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080899641 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08053532 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080109373 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083823845 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067925129 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067991607 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079629588 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068007554 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068855563 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077456937 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06851232 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068360119 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081947789 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067403904 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078426146 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06656491 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077754995 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066124062 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069173913 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08208606 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06745673 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068619491 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078067577 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068657432 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076002796 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078810408 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076733273 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066639323 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068883806 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078055901 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076902467 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066674461 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066538011 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068542815 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076175497 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074796849 seconds)
  done (took 18.498735276 seconds)
done (took 37.508228211 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211450421 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155345078 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.20068476 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119605063 seconds)
  done (took 2.154223511 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122068647 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10189809 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095282103 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06534635 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102518914 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065624776 seconds)
  done (took 1.952659736 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314660748 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213027243 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183949353 seconds)
  done (took 2.109583047 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.19981735 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188772773 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.398225901 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255526869 seconds)
  done (took 2.551389281 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143005265 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089772738 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067448131 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083602525 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.135103435 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161801051 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101592838 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126687529 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078544958 seconds)
  done (took 2.441222461 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14768177 seconds)
done (took 12.795165976 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.10834334 seconds)
    (2/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099842185 seconds)
    (3/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.245411852 seconds)
    (4/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110561835 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.184397099 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.204072291 seconds)
    (7/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.221321394 seconds)
    (8/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196201394 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07177405 seconds)
    (10/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143638614 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.109544244 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077765774 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074343794 seconds)
    (14/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.219662884 seconds)
    (15/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068296314 seconds)
    (16/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079249678 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074261635 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.154681522 seconds)
    (19/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.174735221 seconds)
    (20/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.198704594 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.146635566 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.062253358 seconds)
    (23/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074021626 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.196383724 seconds)
    (25/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07749632 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139789862 seconds)
    (27/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080614924 seconds)
    (28/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.150124835 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071917217 seconds)
    (30/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140667325 seconds)
    (31/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069192433 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164650648 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.184374942 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120335269 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.094605023 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.166428129 seconds)
    (37/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.110051357 seconds)
    (38/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069682785 seconds)
    (39/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073126921 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.100826533 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076729734 seconds)
    (42/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072461262 seconds)
    (43/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.2185848 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087545786 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072836901 seconds)
    (46/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.062508965 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085463387 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.092802177 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090025954 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053640796 seconds)
    (51/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06671822 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064655048 seconds)
    (53/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081180821 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092178268 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.146131568 seconds)
    (56/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073836366 seconds)
    (57/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183632743 seconds)
    (58/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.159190055 seconds)
    (59/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.108678315 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175148991 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136688277 seconds)
    (62/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.20932099 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.150173601 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.173893205 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.138370075 seconds)
    (66/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069231057 seconds)
    (67/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099664726 seconds)
    (68/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074192747 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 0.065397085 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074128853 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102304974 seconds)
    (72/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101552009 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.075240347 seconds)
    (74/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150329637 seconds)
    (75/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073053383 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088308091 seconds)
    (77/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073355158 seconds)
    (78/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065784557 seconds)
    (79/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061756686 seconds)
    (80/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074084725 seconds)
    (81/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062276782 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052621849 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.292461721 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.200076279 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07256569 seconds)
    (86/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110239202 seconds)
    (87/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062157396 seconds)
    (88/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.152563742 seconds)
    (89/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072277201 seconds)
    (90/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.296186653 seconds)
    (91/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052021615 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066153094 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136615608 seconds)
    (94/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074953121 seconds)
    (95/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075398842 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.211122333 seconds)
    (97/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051809649 seconds)
    (98/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082483205 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067271257 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07231739 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136643099 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.096786958 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071773097 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.185474658 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.151155502 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066029964 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066460047 seconds)
    (108/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052048349 seconds)
    (109/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.10719722 seconds)
    (110/309) benchmarking ("sort", Float32, false)...
    done (took 0.127568288 seconds)
    (111/309) benchmarking ("sort", Bool, false)...
    done (took 0.135456778 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074879295 seconds)
    (113/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072565977 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.198831198 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080179029 seconds)
    (116/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052236794 seconds)
    (117/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054265439 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071293101 seconds)
    (119/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07251004 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.177816639 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07155057 seconds)
    (122/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052477823 seconds)
    (123/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051995478 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090789376 seconds)
    (125/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067549563 seconds)
    (126/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.151415763 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094720446 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05145423 seconds)
    (129/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071134294 seconds)
    (130/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051724464 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089934513 seconds)
    (132/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072787516 seconds)
    (133/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073560272 seconds)
    (134/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066970033 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072162632 seconds)
    (136/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.151399397 seconds)
    (137/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051421887 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066976873 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066597246 seconds)
    (140/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074528199 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067760009 seconds)
    (142/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.166519635 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090137254 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132451733 seconds)
    (145/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073501461 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089241696 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119353438 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088561997 seconds)
    (149/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065794889 seconds)
    (150/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076121221 seconds)
    (151/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079290476 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121618695 seconds)
    (153/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077619271 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067261636 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091045081 seconds)
    (156/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06843668 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052239468 seconds)
    (158/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073390895 seconds)
    (159/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052155572 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094004373 seconds)
    (161/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073984352 seconds)
    (162/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052410942 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086744241 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071165329 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168222211 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064916475 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.159026227 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065586118 seconds)
    (169/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071504014 seconds)
    (170/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171686096 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092931933 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.165561026 seconds)
    (173/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073889617 seconds)
    (174/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075017723 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066136643 seconds)
    (176/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.09778454 seconds)
    (177/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063372154 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050866624 seconds)
    (179/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064797843 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052040791 seconds)
    (181/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051692984 seconds)
    (182/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060467503 seconds)
    (183/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053970732 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.073299253 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.178589297 seconds)
    (186/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149857647 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.102799674 seconds)
    (188/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073075154 seconds)
    (189/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071630683 seconds)
    (190/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050870199 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072307108 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085696536 seconds)
    (193/309) benchmarking ("sort", Float64, false)...
    done (took 0.279304611 seconds)
    (194/309) benchmarking ("sort", Int8, false)...
    done (took 0.14258659 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090627139 seconds)
    (196/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052123171 seconds)
    (197/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069351798 seconds)
    (198/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072580819 seconds)
    (199/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053274469 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052162558 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053269503 seconds)
    (202/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072497446 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066033384 seconds)
    (204/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053263746 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175621839 seconds)
    (206/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071210333 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052075029 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10016833 seconds)
    (209/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064419368 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107696022 seconds)
    (211/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072176003 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065795304 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089412054 seconds)
    (214/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071818492 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090494559 seconds)
    (216/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066113271 seconds)
    (217/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06986874 seconds)
    (218/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052781954 seconds)
    (219/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062540421 seconds)
    (220/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076516345 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.134149658 seconds)
    (222/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053420255 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066282203 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.151419073 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068534127 seconds)
    (226/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052094007 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138838202 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088557993 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079663851 seconds)
    (230/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066940625 seconds)
    (231/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053141929 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051768987 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051685952 seconds)
    (234/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068595751 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096371703 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091519257 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067061381 seconds)
    (238/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087989583 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065603131 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.188174853 seconds)
    (241/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075955276 seconds)
    (242/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099359057 seconds)
    (243/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063107618 seconds)
    (244/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097134477 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067284795 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065606759 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05151969 seconds)
    (248/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065424728 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095720979 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051973689 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072030685 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053167426 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053711595 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052021659 seconds)
    (255/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063309713 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065024935 seconds)
    (257/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052185343 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074711021 seconds)
    (259/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051755998 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073075089 seconds)
    (261/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060833717 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064653016 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.100039931 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.1058948 seconds)
    (265/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067913939 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065166113 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073305057 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065039443 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065229206 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05330181 seconds)
    (271/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071784531 seconds)
    (272/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070775442 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164837213 seconds)
    (274/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08222802 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092394603 seconds)
    (276/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061043986 seconds)
    (277/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051817273 seconds)
    (278/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079001764 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131276839 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064651435 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072554691 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084817691 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063610444 seconds)
    (284/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064906279 seconds)
    (285/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065895468 seconds)
    (286/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087418748 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063807096 seconds)
    (288/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05125086 seconds)
    (289/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052482989 seconds)
    (290/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117009503 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072642187 seconds)
    (292/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051667087 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085816301 seconds)
    (294/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052410713 seconds)
    (295/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051541826 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051497491 seconds)
    (297/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064186612 seconds)
    (298/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07292559 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070775239 seconds)
    (300/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068447575 seconds)
    (301/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073365396 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.10683846 seconds)
    (303/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051037948 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051985562 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070113123 seconds)
    (306/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067797926 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06482165 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078572544 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065291029 seconds)
  done (took 30.53142993 seconds)
done (took 31.944249874 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084643913 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091179857 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074229605 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092557706 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080078338 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075937458 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071841292 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077704164 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079120046 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080783336 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077589713 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054710022 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073419076 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07316348 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073571558 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09117854 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077422771 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07222137 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072875926 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065555041 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075233186 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068194887 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069297615 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056759828 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080096077 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074044849 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074668584 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075806537 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067462627 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068088918 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071410076 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075351638 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06801789 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080083404 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07430716 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075030998 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07689647 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078636321 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069451828 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068494324 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076347077 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068340366 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074685113 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075310533 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073755644 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073635888 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075220577 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080005013 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092147759 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067889214 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073929826 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075221239 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075889015 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071588133 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068800408 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072788639 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070421523 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090455927 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07298012 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06737605 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073405774 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073354671 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070683835 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07295455 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073110151 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07471072 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074540411 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070609599 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074453916 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07055252 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065354477 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072534142 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068522877 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065336901 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074779478 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076334806 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.0642088 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070370749 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071925171 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071027262 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064689688 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067113225 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066610984 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071021343 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06714589 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054416285 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068134198 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070944064 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064269757 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072732862 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071698547 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071667166 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066802773 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074572251 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064419296 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069847879 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065084561 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06525576 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066481187 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068708203 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064581362 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067093127 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073662421 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066323052 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071266643 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078499453 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065108683 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07097147 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064071273 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064040674 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07873048 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073785721 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064669646 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067250856 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063749553 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071893539 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064124995 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064624652 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064990196 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064912332 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070579924 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064617374 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066096576 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070958737 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076071549 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063703617 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067348013 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065701826 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063935364 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069150921 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063957085 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.19888131 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067654723 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062302739 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067778601 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065491172 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07228359 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068043545 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072732171 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066763366 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073169491 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069932364 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072601275 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071255577 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064674933 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058593359 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068803004 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067556553 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067539567 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065660586 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066921301 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065831206 seconds)
done (took 12.461532117 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066391998 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143118619 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099390132 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094988051 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085423049 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066476341 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076221303 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101289422 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067613903 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10245565 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08688665 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084790374 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112131236 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064400554 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06559296 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069725699 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067570411 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081805562 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100460918 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086529551 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115545129 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065011114 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094457121 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089731631 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086780127 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101374798 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06669307 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069760823 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069086089 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090945601 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08608987 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06936076 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066075426 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100749227 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092578103 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082994223 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066405755 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081925848 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06635072 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065888199 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066995267 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097978438 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079488208 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080134144 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069453662 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068967491 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066855464 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083011489 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088457811 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078285238 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086046375 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102264531 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068169887 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065148715 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064045752 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084741005 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065001512 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068638743 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06618339 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068107622 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.0654619 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06866405 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080926244 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081815538 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069354579 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079912455 seconds)
  done (took 6.788128117 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082627222 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089386411 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082529221 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082897712 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065418953 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066071596 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066020311 seconds)
  done (took 2.041041115 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066954352 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08775897 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088988182 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088859368 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083868392 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088113305 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075914607 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065972158 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080542441 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067152189 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087178971 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101304686 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.06677823 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07262114 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089997257 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066379258 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090006303 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066467844 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069324464 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089436969 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068103733 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081698057 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06959079 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066674952 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081499459 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06634134 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113098823 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070683999 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067693729 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069060613 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064209952 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106566803 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.07982185 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075735805 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06630274 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080985324 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080546659 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064945018 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082332082 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070977688 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079974651 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066548499 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066987252 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064004841 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07118774 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076437702 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066742465 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066753385 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068965663 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085374866 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06667012 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079560718 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069418104 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068598834 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067323785 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069747747 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075721625 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066882436 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085616909 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067297186 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082642978 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081829377 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080063517 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082263587 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069224237 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079733368 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080543764 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068825937 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067971322 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069866285 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082383879 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064594042 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067977544 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076605309 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068143816 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088949421 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088505092 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06761687 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075578288 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066549803 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066353796 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066592685 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088928489 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068581519 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065973785 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070198602 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06916522 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064582094 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0651476 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069559119 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064393408 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06740106 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069368805 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069161697 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068685892 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082929491 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068733799 seconds)
  done (took 8.74050783 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068309863 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067791206 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069333928 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067736177 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06795687 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067672153 seconds)
  done (took 1.936793929 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093315368 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070064165 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.07995675 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07232671 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104171509 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086443796 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087769785 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078611116 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083674082 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078846069 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086365407 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087800286 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092697158 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072828602 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086236011 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071769076 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086877125 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075914088 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078330785 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073136929 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086357535 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072399528 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072900089 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081384065 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075263076 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072164494 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067327952 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078857968 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07884078 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07872438 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072291561 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075606782 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070844792 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078552081 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086671551 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070886812 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071830055 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076855676 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072512672 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075890196 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087910027 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073239029 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07464058 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076986967 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078530775 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070522343 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077178395 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075902419 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08635264 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076626165 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076871842 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072344469 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075085777 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07690056 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070265315 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078171551 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07702826 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086184815 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072024846 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07054924 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068975448 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075289201 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07780644 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074883367 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079135381 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077453025 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070176412 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071901361 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072589702 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071555236 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076494621 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068547334 seconds)
  done (took 7.086640632 seconds)
done (took 28.084946363 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539721063 seconds)
  done (took 2.035067385 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600289366 seconds)
  done (took 2.119130748 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.498219527 seconds)
  done (took 8.012387574 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.392602044 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.477328069 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.693633338 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130529473 seconds)
  done (took 3.250315984 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.668874418 seconds)
  done (took 2.194157934 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207945959 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195531447 seconds)
  done (took 1.940912116 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375708616 seconds)
  done (took 1.896249941 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.105874374 seconds)
  done (took 2.624757978 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262147126 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162968472 seconds)
  done (took 1.944811598 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457317581 seconds)
  done (took 1.977962257 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.82658934 seconds)
  done (took 6.348705028 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205258783 seconds)
  done (took 1.769342013 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240269866 seconds)
  done (took 1.760433507 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.656265271 seconds)
  done (took 3.177371311 seconds)
done (took 42.575413398 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.0788353 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080691366 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079937031 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077916592 seconds)
  done (took 1.82884035 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075729515 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072239207 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075685684 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071427478 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076211757 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071815667 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073814788 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076615529 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071846622 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072543445 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071959398 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072183674 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074212747 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074043179 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070316536 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074957174 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075497366 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07180552 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074740195 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071789135 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070430159 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073747479 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074410485 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071098821 seconds)
  done (took 3.285383644 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077169004 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072082654 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074120979 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071655952 seconds)
  done (took 1.830349917 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076531108 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092200527 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088839625 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077541796 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091686561 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085653382 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068754003 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068441098 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073018864 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076211455 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067697425 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095019058 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087360529 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076142285 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078488048 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065654085 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06767138 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086682473 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077142605 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07675356 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06929174 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07645658 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067277643 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087044171 seconds)
  done (took 3.407025029 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077034141 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102456365 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077935108 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087288184 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088840393 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064951139 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073907447 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088742645 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122429358 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065044468 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069084441 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064882621 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071618728 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064649943 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075751825 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104626832 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107504618 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06783057 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095117562 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064910557 seconds)
  done (took 3.172607625 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072492436 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069922372 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065032913 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068616482 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076695134 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072731471 seconds)
  done (took 1.963322008 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067901593 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067750155 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066286122 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066598737 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071074912 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066401918 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065758187 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067015574 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067060658 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066463762 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065740876 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065456967 seconds)
  done (took 2.336810824 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.169446997 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068370627 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068606384 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066097617 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070287997 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066087668 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079245903 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067388194 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089678792 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066474832 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066226927 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068017885 seconds)
  done (took 2.482097169 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206249021 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075634667 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235764156 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136465243 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111111709 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114636787 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103434777 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11320201 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142896481 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101576264 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167788289 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165402525 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106373802 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136498685 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088531329 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097767229 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15470346 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162520852 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103104371 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164862535 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14311221 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124197579 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146376994 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100708733 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105394645 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121919746 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070559273 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080111616 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169421776 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131162406 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145559801 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110088294 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093580144 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1755556 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170153068 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141482212 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133285182 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083335424 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101441599 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132021597 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196705942 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087324783 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160743345 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244793787 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080629598 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132585851 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11980409 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120335697 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106227425 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090191633 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14603873 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182987439 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138978844 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086787705 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112349813 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115340724 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116239999 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103108733 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18243931 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161482007 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127591285 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070989053 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099689703 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153957572 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131649491 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108453296 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125804864 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093688098 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132267895 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153039901 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118037829 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142305706 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128156878 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087801507 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118492938 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13898275 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12764804 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169084348 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123713291 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071913544 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124262375 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102792179 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080654784 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141497607 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07486949 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173623502 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09766133 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10525775 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112210286 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107770391 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107898828 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16002114 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.283608967 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103795909 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065912027 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103973534 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119389969 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147261988 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087985611 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109068977 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11597917 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07834684 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139117929 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075332984 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123075291 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075098951 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126136739 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132443748 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075737533 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122278875 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101179675 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100127305 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13226493 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159329175 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088908325 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08171479 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166258799 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121728182 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103862515 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143701396 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155923707 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098367077 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101901215 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149973142 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179904662 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088774583 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162439209 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106801864 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083027101 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087272913 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123290246 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111822899 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121416186 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081884625 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118506817 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167619563 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074711162 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094530068 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132902409 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078319825 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079867597 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102302825 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09960569 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093953102 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09955317 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104030014 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136753362 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121914385 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102330401 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121367775 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095803494 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16402381 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085901212 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.097713866 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100181792 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067846599 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131548208 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151345387 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077029548 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157654175 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.11876548 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101491856 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114475146 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080047936 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134126763 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074835615 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.06750648 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133893195 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105536015 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104648179 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.142085294 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099677151 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.11963295 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112283261 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125809069 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124608071 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122391399 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100357232 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.084079789 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105951545 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118231691 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070577735 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.086744122 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076095255 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097871968 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090535099 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079257804 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132822154 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116034766 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095626553 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105687716 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091652199 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138883339 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072316685 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119535763 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.112748575 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089352856 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.142395399 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143164367 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123384995 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09422124 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135741722 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06745998 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071873294 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.343012602 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124978546 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085731979 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085250621 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118146886 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1491202 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131066855 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139001237 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112948234 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12183215 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15561859 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07045882 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117389546 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14871399 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121425968 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103106343 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090198873 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099678125 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142646425 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107980862 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181879346 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113997707 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126040581 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153416855 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099319406 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079760465 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103166238 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135588875 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104904666 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144617457 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099624757 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08799179 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110011349 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074553454 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10000323 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127075695 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119382702 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140333824 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114533999 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132971488 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0764486 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116728674 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120226979 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121830012 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063622689 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119127322 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16019189 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093618657 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118277245 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152426825 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078898343 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123654192 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.326061277 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147115438 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084802805 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108781586 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118204112 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128117315 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119973394 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139526921 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107367696 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134095842 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108189087 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084775838 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086786639 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096526633 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104197586 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094441221 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107418378 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113676744 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094175239 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13088868 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101946997 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108646276 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117621804 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095857575 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088878216 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09573165 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17360669 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118109046 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169726778 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.0978013 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144586348 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163501945 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074413179 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078778115 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077501091 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139341721 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083819528 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130379485 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097244446 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105289692 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123323365 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141658161 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09436711 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067776682 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107752062 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133669232 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112051075 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096977501 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103081398 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161571997 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099728619 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078602627 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112822 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103917337 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101538757 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319365717 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061549072 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097416012 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075437788 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081141953 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127341571 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152784503 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080745362 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102779723 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118963156 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109892168 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127403349 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100947706 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099620184 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113717007 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148899379 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1286348 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089348353 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111974529 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129057313 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15609435 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108382494 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095060345 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170411867 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151537525 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159664808 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088423944 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114120463 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113467744 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107762946 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138837097 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082805816 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163730061 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082506964 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136071797 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103793778 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089650173 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130170141 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115144129 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08751577 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14765477 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117457317 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081939297 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077213956 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117851575 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119645246 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105292418 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074739834 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137562925 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07274202 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130901146 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166983485 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227547209 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104216381 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096661128 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079436034 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108181605 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101386398 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088920748 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097780738 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172102678 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087879482 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149501768 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140781603 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112879698 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136794656 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099103521 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635844768 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077437871 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151534296 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115415432 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172748611 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096976319 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116896853 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108795336 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123138921 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143511973 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104950549 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176982608 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130889156 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115428819 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079509224 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101745604 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102224007 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088575042 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104912285 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113060474 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115861363 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09314832 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115289939 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122954073 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08156729 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094988878 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155226742 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11632976 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143924514 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139828763 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084400561 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117091692 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137484212 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079362886 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121059891 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150796489 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104847826 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243965794 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080860178 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102791241 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170395472 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073164671 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163694791 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120219409 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1094306 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112083622 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114009981 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130082112 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106573408 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120770091 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092850755 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110530341 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112061328 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081263485 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076507681 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104083426 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111408494 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097021676 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097663052 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097690567 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150566471 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070968603 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095238042 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103192834 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144168283 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17453875 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087849594 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082683889 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118384266 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112587953 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112532345 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1201175 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078858043 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081790994 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081294411 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.07717456 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107849892 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111350837 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104041805 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110921418 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163855036 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082070555 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222188164 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094714322 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104212943 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069788313 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078677525 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09541432 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096700671 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107993915 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099765942 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167514402 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09410294 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089836806 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091825911 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072625443 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229355629 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127891482 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110476166 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118887401 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09694335 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062303015 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108871183 seconds)
  done (took 58.367442805 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108314575 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081828189 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098040579 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.15001065 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123394473 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212474615 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157793618 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199711979 seconds)
  done (took 2.823611455 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070466581 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094503125 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100736661 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084727593 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06697474 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069945628 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22577435 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082106668 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066811198 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088896474 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081489296 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070253133 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421341811 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066258218 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068857461 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064412587 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067314102 seconds)
  done (took 3.459297237 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.367888231 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603553642 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.375108872 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073806543 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.90978665 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089485491 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.139557486 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128324419 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074551805 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.540932783 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702605837 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125167283 seconds)
  done (took 18.807286129 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076755791 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071029794 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08466702 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085031594 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073146667 seconds)
  done (took 2.061192602 seconds)
done (took 107.381570352 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080487654 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.392020496 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054281757 seconds)
  done (took 2.145481632 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083494983 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084786376 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084904572 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083757736 seconds)
  done (took 2.016312087 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074822078 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076468863 seconds)
  done (took 1.82485749 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226092878 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159024795 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087163359 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083054751 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077762862 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079230544 seconds)
  done (took 1.919390961 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072833134 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075073963 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072788762 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076451199 seconds)
  done (took 1.97148179 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076708048 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053008097 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054828711 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056403352 seconds)
  done (took 1.917600907 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086869959 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079954741 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078693194 seconds)
  done (took 1.920247924 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100955908 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084968962 seconds)
  done (took 1.864019807 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081478766 seconds)
  done (took 1.760366443 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099948043 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.114090187 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131402687 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110647401 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138469258 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109039051 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085607947 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08671585 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077200122 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087686085 seconds)
  done (took 2.718872523 seconds)
done (took 22.283997783 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078752276 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363829816 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360942001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089458303 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667525614 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356766947 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.996345089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092763309 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11418616 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067697982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084150456 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.6478089 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.021013773 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324327722 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.009276048 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319852682 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649239724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068304911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068134859 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06827333 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979865266 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067648371 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067989374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068346895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648797648 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371218135 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068484432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319602215 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068081302 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070299857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355279769 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06839292 seconds)
  done (took 16.268979686 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070806137 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11800488 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073841848 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084686772 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071197929 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070192639 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071995492 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069142447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120101704 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068213216 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08475184 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067943786 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072203014 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068822931 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087662467 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068091787 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069275956 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068682751 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068956405 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069011907 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086797804 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068156336 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067872981 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068764798 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06797589 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080309478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068591356 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068523225 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068482673 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070698561 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071719775 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06920854 seconds)
  done (took 4.09422178 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115954724 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125130631 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075239495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10375 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113264205 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070441169 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143716266 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093167888 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127911156 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068668818 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08494465 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068548271 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101555052 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069643466 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088297816 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069053152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069990363 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06935894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068731778 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068970095 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088034147 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068528383 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069114113 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069777481 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069309413 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081691946 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069263907 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069019313 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068746758 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070658399 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071986997 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06908474 seconds)
  done (took 4.357285788 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072758964 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075727274 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083106189 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084344526 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069893275 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072087562 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073038453 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069972731 seconds)
  done (took 2.298448037 seconds)
done (took 28.703905279 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079059791 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06937682 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072820598 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081590586 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07390357 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079739373 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067296944 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07472235 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072413795 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073027475 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075009157 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067532917 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071538943 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067652075 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074371713 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067968417 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079330948 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072384465 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079254382 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079603 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070262143 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073302337 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074296438 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07950942 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079518599 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079577841 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077574851 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073085232 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069390568 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07089174 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077040064 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084359085 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069036758 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079604466 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068178364 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068361557 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071790617 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068064804 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07945164 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077205428 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069953492 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07684698 seconds)
  done (took 4.793582526 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087632907 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09228141 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084496004 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061839676 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066720075 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065855204 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088833042 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.05993286 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060224089 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088250571 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056446569 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059915181 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063118027 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054809092 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060035038 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057151563 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062148794 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056385089 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05959061 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059862412 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058538047 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054833166 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060634354 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063366688 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059199931 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06228445 seconds)
  done (took 3.412822203 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075430769 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084472157 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08956677 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127985613 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104670259 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077227405 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078334184 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092939912 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085824029 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067490418 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07162789 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093882184 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088562096 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074668538 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068170242 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084815082 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082718401 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070328907 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073527709 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091330238 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084477186 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083800365 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093139113 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081217319 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067654628 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070201525 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071775599 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081296762 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072388081 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076723873 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071634848 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070958222 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069554672 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079122212 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071983118 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06938126 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091149911 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077290217 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077886008 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068239469 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071167776 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069115551 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089820688 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123024468 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067429504 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074431382 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075461446 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077195407 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067895049 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086178166 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07901913 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067366039 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070740506 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066829873 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067696706 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080658842 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069760849 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070135556 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07656067 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070485003 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.0854501 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071862038 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08284442 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067332357 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075286723 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067171952 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06838416 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066983571 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092611015 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069478149 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108455954 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069076153 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068747916 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076651354 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.0754831 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073915534 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068283776 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082660744 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077866864 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071476015 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076600149 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071306158 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070682002 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088324382 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070254712 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069615323 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068726598 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073904601 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070516949 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069407164 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080723193 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067882056 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070672311 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.0845223 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.0675723 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068857912 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.085080685 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072436237 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067519831 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079041642 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072726298 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068469486 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077127136 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067947147 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070646771 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077712714 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073809407 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067296362 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072620748 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074367745 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068740253 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069856792 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070485959 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069694273 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076131545 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074337629 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072297454 seconds)
  done (took 10.665683429 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.162101133 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15396945 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070503595 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.1459927 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076648479 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079314141 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150794056 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094850781 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068481386 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069306615 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068962976 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.10987897 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10661513 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116371997 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079674619 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06842139 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084004047 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114226142 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149834087 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.144006917 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084379042 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077686639 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07042257 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069375559 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070802644 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078883343 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085621503 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077134645 seconds)
  done (took 4.469084808 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080830825 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.097422275 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074615334 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090214098 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091431184 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068576177 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070494639 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070079818 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081274814 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079609217 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068136427 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074226522 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075213974 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07191182 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069535738 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076101158 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075591199 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069945526 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071381662 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073754196 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077963889 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081228232 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072605161 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067775386 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074549753 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068188803 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065031118 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085324125 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06866268 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090860425 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066139992 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075483099 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082140072 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069185219 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068170369 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068397969 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068215094 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068242676 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070053213 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066962206 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066919784 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058343953 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06764525 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08038037 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074565524 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05691855 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072834063 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073498283 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073511905 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065837907 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071325613 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071002423 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071548879 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075685405 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073274074 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073363247 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069606115 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074589551 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076192964 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068214513 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065373494 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066943951 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072876174 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066469116 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076183496 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072868582 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067218457 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068195013 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070381833 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074719724 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068596565 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071410784 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066068572 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070244202 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073077362 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069985123 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069405272 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067197342 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06823393 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068401589 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056191505 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067993001 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054420945 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071118834 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066345337 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066932593 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068380035 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072893679 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080626561 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069411158 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074205425 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069121659 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067387036 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071094661 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061279489 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071038858 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083367881 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083358109 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068345896 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066095925 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082524542 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07266438 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067721052 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056777197 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075671331 seconds)
  done (took 9.277719135 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090184196 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070299195 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084311832 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09181545 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087138734 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075282742 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077204616 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069693802 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082631503 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074035525 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077153426 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06854328 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077866687 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077471803 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070828093 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07755214 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072781592 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083750848 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083000676 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068974645 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076414128 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080625695 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.09001362 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080758366 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078574552 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080679663 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090825433 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.072837941 seconds)
  done (took 3.958423911 seconds)
done (took 38.270006547 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.778799277 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.951021804 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.780290321 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.145934395 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.856825355 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.005207964 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.946763075 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.776289963 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.945391599 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.815350901 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.044306898 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.827971214 seconds)
done (took 65.593533208 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.858290116 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.918582623 seconds)
    (2/2) benchmarking "String"...
    done (took 2.053915542 seconds)
  done (took 5.691264858 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.130215957 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.314782172 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.020391955 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.773241493 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.780039258 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.069460265 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.573401573 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.302877653 seconds)
  done (took 30.552868407 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.874057449 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.004930654 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.434554283 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.469369633 seconds)
  done (took 15.54514071 seconds)
done (took 63.575766272 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.796721002 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.825952123 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.78925236 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.760567626 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.834925412 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.793887668 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.193325692 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.807742142 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.77396968 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.760778025 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.7787283 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.215835261 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.777554983 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.230060278 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.77800094 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.782788415 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.82622242 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.329462322 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.93219947 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.796556691 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.789046235 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.818892255 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.779444432 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.782875966 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.781830479 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.778402854 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.214921418 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.788597066 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.403829505 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.779198722 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.813467527 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.336235118 seconds)
  done (took 204.570998641 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.774879558 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.865061509 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.931320512 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.821400118 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.23539377 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.958465665 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.892811574 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.368403211 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.782267914 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.799474434 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.09053282 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.780170953 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.126092501 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.722018095 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.806580026 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.792764406 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.028086608 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.071439015 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.812322383 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.937319174 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.806931117 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.912883956 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.851537123 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.998347008 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.809284224 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.848685534 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.799589788 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.805206177 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.967816971 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.980893524 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.795638756 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.782238887 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.910827638 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.651194944 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.778557273 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.799834889 seconds)
  done (took 170.814849977 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.940775746 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.778987591 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.77761046 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.776044682 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.784059159 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.779969801 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.900742819 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.905321085 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.246753631 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.162419868 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.829736014 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.603583598 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.776385804 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.843247258 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.792675654 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.777525315 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.794983322 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.777670369 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.778917297 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.803065369 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.778680681 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.902758061 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.790401616 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.784199635 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.777918731 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.785091278 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.148470119 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.972158106 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.778996917 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.783082306 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.023651527 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.781018537 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.778595403 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.673743365 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.412708872 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 2.03102984 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.781217131 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.78458582 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.780869661 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.008684147 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.780393297 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.779241214 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.784037623 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.058404951 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.778635745 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.903230364 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.780539606 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.289899997 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.780039222 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.779394947 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.502105695 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.482367783 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.781124278 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.781698295 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.782100257 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.7783844 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.781491461 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.786799858 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.448965107 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.86073002 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.783665621 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.784227383 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.787461377 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.779617452 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.780685749 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.945079244 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.782372235 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.307740282 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.838200584 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.902183354 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.906173298 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.78377943 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.849736738 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.875943772 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.781983942 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.781859312 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.782245874 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.781858643 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.782350248 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.86398792 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.783103095 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.782874009 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.934589004 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.791401057 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.782467003 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.8339312 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.852534183 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.784223379 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.687439315 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.782131068 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.78296057 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.112305616 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.84984012 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.78162757 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.782970516 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.784015948 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.91545013 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.906026002 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.588097776 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.782743399 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.50866574 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.786858984 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.932368912 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.784345359 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.9661957 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.783993889 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.864075889 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.787272663 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.784264533 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.782781134 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.815188859 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.782189169 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.845784448 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.784905718 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.15352446 seconds)
  done (took 403.424886262 seconds)
done (took 782.527106862 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.447807178 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.409753248 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.523218136 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.429448217 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.401387336 seconds)
  done (took 13.939239554 seconds)
done (took 15.665546064 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.877190133 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.877426992 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.810007897 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.874716442 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.807586694 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.875413701 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.857003366 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.811731985 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.840356606 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.810068409 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.842841217 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.809288217 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.794406353 seconds)
  done (took 25.616167822 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.019282982 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.017517446 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.853969832 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.034264589 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.830895027 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.024298985 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.950265542 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.947472764 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.936475143 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.799661781 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.79716519 seconds)
  done (took 22.939559347 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.019255581 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.025047547 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.858475155 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.016563145 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.834411202 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.026489585 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.955281886 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.941358544 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.936599865 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.803510373 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.800648249 seconds)
  done (took 22.946154824 seconds)
done (took 73.229241055 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.794320569 seconds)
  done (took 3.522624031 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.816500381 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.95260472 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.80036161 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.798240967 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.79266968 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.795429231 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.796541556 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.793903008 seconds)
  done (took 16.277404027 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.792318051 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.791363629 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.791052856 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.79242838 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.792335441 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.79283572 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.793758356 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.79201869 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.795373697 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.795032603 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.790379172 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.794838126 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.792494683 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.796439156 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.795038347 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.793926662 seconds)
  done (took 30.421943892 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.795314373 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.791920121 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.791822166 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.792938631 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.792459525 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.795847214 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.79432834 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.794256457 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.794771704 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.795428332 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.796251403 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.793106284 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.794489387 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.790598562 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.7929348 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.794326381 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.794702885 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.792652476 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.797993311 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.792237862 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.793530517 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.792614326 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.795297518 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.793755119 seconds)
  done (took 44.78701938 seconds)
done (took 96.737591996 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.687282414 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.208599901 seconds)
  done (took 8.626875435 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.795493703 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.796429612 seconds)
  done (took 5.356882286 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.795741458 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.794917785 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.796443407 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.797173905 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.795212679 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.795624386 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.796068899 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.795561174 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.795677024 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.795751139 seconds)
  done (took 19.690135167 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.796191774 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.796876602 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.792782242 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.795343976 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.794601264 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.793339109 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.79539382 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.796759575 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.796802948 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.794391076 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.796192835 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.793914414 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.796528206 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.794567217 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.798032383 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.795094785 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.795235911 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.794388626 seconds)
  done (took 34.049125577 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.796232534 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.796944225 seconds)
  done (took 5.327045947 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.795494939 seconds)
    (2/7) benchmarking "second"...
    done (took 1.793357586 seconds)
    (3/7) benchmarking "month"...
    done (took 1.795794622 seconds)
    (4/7) benchmarking "year"...
    done (took 1.796485435 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.795535341 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.797327432 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.794288727 seconds)
  done (took 14.300884118 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.799834034 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.961361768 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.029066952 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.471378377 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.79846008 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.80212267 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.735730026 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.803742665 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.801739711 seconds)
  done (took 19.938144752 seconds)
done (took 109.019182528 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.617091837 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.797185568 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.130254659 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.840322377 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.85029835 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.133732973 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.79722517 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.00880536 seconds)
done (took 42.908672059 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.842973838 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.345886301 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.371628478 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.121511536 seconds)
  done (took 12.572725312 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.797701689 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.31111385 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.828170935 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.390685633 seconds)
  done (took 20.083958683 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.164075054 seconds)
    (2/2) benchmarking "read"...
    done (took 2.149446044 seconds)
  done (took 6.054273526 seconds)
done (took 47.288821869 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800265402 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.801191423 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.797898417 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.799191566 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.797658693 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.799036165 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.797507989 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.80098925 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.799054816 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.800626185 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.800255485 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802490409 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798570059 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798655908 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800770429 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.80167797 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.798582282 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.801455645 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798037924 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799649202 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.797588888 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799939433 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.799420583 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.799494309 seconds)
  done (took 44.926078297 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.801223538 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.802653128 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.803675654 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.802643546 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.799736582 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.803446955 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.801220853 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.799642556 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.800978203 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.800758964 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799223246 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.797335946 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.802403098 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.799668244 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800946197 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.800219961 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.804093269 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800503623 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803554824 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.801894052 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.804714546 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801128248 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.80227584 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802599627 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.799734247 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801403725 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.803368938 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.80110549 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.803371489 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.801305843 seconds)
  done (took 55.784227445 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.8074602 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.812203726 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.804559258 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.803117923 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.802703523 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.802969723 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.804172511 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.803943805 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.803687784 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.803203669 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.803618645 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.80408788 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.804389785 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.80267442 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.80361683 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.805527493 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.80377215 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.804282353 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.803547476 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.805557935 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.804822546 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.804623319 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.802524013 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.80510707 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.805079632 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.804378252 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.804787046 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.806286726 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.805027331 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.805311338 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.80608803 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.804636645 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.806798278 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.805336678 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.804761034 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.804864685 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.81140362 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.813172082 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.804931441 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.807011884 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.805476544 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.805604697 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.805394638 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.806561938 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.807743178 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.806442485 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.805975087 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.806374501 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.806171555 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.808610731 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.806961711 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.807516027 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.806126413 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.806517266 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.807126004 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.808353347 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.807704067 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.806980062 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.80727071 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.807045442 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.806886153 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.806951046 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.807124634 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.805881269 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.807080103 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.806620666 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.807294904 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.807558229 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.808370565 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.807847863 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.806059358 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.806021572 seconds)
  done (took 131.767554334 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.805969778 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805794062 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.805194558 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.805429925 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805327298 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.808015938 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.805104206 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807971505 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804164464 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.805765685 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808139057 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.805825841 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80663816 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.808783837 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805894411 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.80504872 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.808444062 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.805931573 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.807364313 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.807581513 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806717801 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.805355976 seconds)
  done (took 41.483682226 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808333542 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.809950363 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.805470695 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.808567274 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.806951186 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810044073 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.809123556 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.808805912 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810124082 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.807348461 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805830416 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809345187 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.806370433 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806105896 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806739466 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.809318312 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810248776 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.807062285 seconds)
  done (took 34.289043241 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.807302225 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.806688651 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.810635341 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.806709719 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.806731101 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.80956139 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806697919 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.809931892 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.809547377 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.808744781 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.810608406 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809012421 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.810329671 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808612257 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80969263 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.808258864 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.810405915 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.808768934 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810952315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.80860422 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.80806117 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.810889223 seconds)
  done (took 41.54225566 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810078304 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.810591354 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.808965984 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.808949132 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.807961039 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.809655132 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.810726752 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.808015828 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.809932505 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.810044203 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.809558019 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.810392319 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.808286366 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.809046667 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.808058931 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809203855 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.811346751 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.808676394 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.811396558 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.806990946 seconds)
  done (took 37.933610315 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811671993 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811141488 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.811657658 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812644327 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812722938 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.812832141 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813418975 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.81346175 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.813439703 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812574667 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.813393747 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.813126585 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811324814 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813293505 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.81413121 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813257147 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.812088578 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.812723577 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.814280232 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812209098 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.814737783 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.813816021 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814940753 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.813053747 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.815176562 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813981693 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812806112 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.813294211 seconds)
  done (took 52.514076069 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.812444572 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.813840435 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.809942562 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.810810304 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.809940634 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.810179305 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.811925162 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.810978744 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.813433987 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.811430619 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.812962771 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.814094828 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.8118778 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.813556521 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.812631451 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.810939339 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.813160647 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.810806249 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810788866 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810490142 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.811835915 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813939019 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.814466773 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.80953542 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812254186 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.815624582 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812322022 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.813962619 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.815995314 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.812764444 seconds)
  done (took 56.117192324 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.833041464 seconds)
    (2/2) benchmarking "in"...
    done (took 1.833829554 seconds)
  done (took 5.415894905 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.811360147 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.813102677 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.813808338 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.812738455 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.810553494 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.816800298 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.815206742 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.810560818 seconds)
  done (took 16.253534609 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.814293245 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.81491101 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.815592631 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.81480839 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.81491366 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.815683597 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821859223 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.81487607 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.816277545 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.815637882 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.822720554 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.822544599 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.817910486 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815725701 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.815492289 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817489271 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.81499655 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.816513982 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.816442386 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.815165486 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.817632157 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.818321014 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817318376 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.814696519 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.818185826 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.824572504 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.819081086 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.814726783 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.814956917 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.820337843 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.814885045 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.813414472 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.817542486 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.81577166 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.817130147 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.818006911 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.824788161 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.815405188 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.822345227 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.817938322 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.81618829 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.815652498 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.818635745 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.818373684 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816753309 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.81687724 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.816316571 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.815982645 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.816870472 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.821236632 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.821229479 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817588392 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.81435148 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.821199637 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.818791314 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.825105767 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.817742893 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.820041105 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.825833386 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.827312541 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.831321047 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.826025087 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821472971 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.81783775 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.828591857 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.843910905 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.822450013 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.815229698 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.816304372 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.816996055 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.824709483 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.831753202 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.828232868 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.818852501 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.819272957 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.817905485 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.819487436 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.81824223 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.825301128 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.821613168 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.819004593 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.818850944 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.830376414 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.842234085 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.821741865 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.820502152 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.819697489 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.821730837 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.822243523 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.830577165 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.822729343 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.819631078 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.820144855 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.820539841 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.822323731 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.822985802 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.820204253 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.82128366 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.817123722 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.821836844 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.820046712 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.82612787 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.830342757 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.819602318 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.818687827 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.827426221 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.820821692 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.821194101 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.827242067 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.821483569 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.821333095 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.822386974 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.827135275 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.819522585 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82363284 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.830054339 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.821628113 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.821934749 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.821770027 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.823556779 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.831613794 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.84687088 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.82177485 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.821544694 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.828004537 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.835273142 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.821493116 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.824818366 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.820639924 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.820855598 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.819517199 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.823986688 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.821439267 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.822576198 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.822572181 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.823230029 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.821661104 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.822726634 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.82174393 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.824375697 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.825507152 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.823360709 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.822892394 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.825925734 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.824167695 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.824650972 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.827353657 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.822524387 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.823966064 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.821495754 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.817872307 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.823806179 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.823713558 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.823994575 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.824779931 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.821032879 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.821114424 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.824575429 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.825761641 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.824192818 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.823032112 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.825315963 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.829573522 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.82238857 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.827285443 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.824273239 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.81882571 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.822599939 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.824338213 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.825274733 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.82493961 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.822044505 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.828832541 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.831080696 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.82443698 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.825469288 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.827800333 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.824021991 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826236828 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.824820084 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.830046283 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.832590058 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.825044289 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.831215068 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.825965 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.825542764 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.822478019 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.825165732 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.822797116 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.821832319 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.827940722 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.832338207 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.839882405 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.83214465 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.824327998 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.829484351 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.826070271 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.829534241 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.83048228 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.82604225 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.826470799 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.826037977 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.825428692 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.824698915 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.82839322 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.827062724 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.826136934 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.826259277 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.825770404 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.825950421 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.826187953 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.826198991 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.826568927 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.823557105 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.826408937 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.826213646 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.827481739 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.825884435 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.825983766 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.828149608 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.827806203 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.827828268 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.834019969 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.825111276 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.826532604 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.827746437 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.827068651 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.825496853 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.827542318 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.827929469 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.825357474 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.834054498 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.826393291 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.825020596 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.831858911 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.826480305 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.824748422 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.831376715 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.825367847 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.822978994 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.831722795 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.835369236 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.828401527 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.829151004 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.827909585 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.82859924 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.827333842 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.836589152 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.825318111 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.827061507 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.827512866 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.829077635 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.825758795 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.828432735 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.830487182 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.830436902 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.83236406 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.829370023 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.829852021 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.829686277 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.829395695 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.830153234 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.828223597 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83157189 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.837321558 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.834325148 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.829374703 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.831380957 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.83283972 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.833571575 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.831474906 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.831947965 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.828964269 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.844576432 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.838275978 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.835314333 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.830547159 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.830656574 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.833386587 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.829919904 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.833036357 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.829382823 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.83070384 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.829482402 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.830010128 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.827941966 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.831593922 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.830542458 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.832846982 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.831125622 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.835570961 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.830722383 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.830723726 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.831634408 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.831877843 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.830987981 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.831574325 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.830926877 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.834331906 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.834769197 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.828738297 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.832196538 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.836968666 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.831742685 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.833756483 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.833016736 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.830787672 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.830616433 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.833242924 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.831865274 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.835611907 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.83981472 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.834298751 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.842876843 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.832943902 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.842418955 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.831198664 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.835813391 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.841100564 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.828881154 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.832136741 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.831207302 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.834070534 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.841729044 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.833295695 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.832509265 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.838308845 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.833905009 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.832032674 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.832593519 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.83282131 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.832357239 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.834161021 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.840984561 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.834263236 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.836704174 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.836742851 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.82978023 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.833287579 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.835568735 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.83333364 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.836175017 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.833499719 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.833224253 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.833474429 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.834362582 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.834967137 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.83294211 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.834857709 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.832829508 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.831752344 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.840398514 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.836143939 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839359815 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.835920126 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.842414487 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.837889779 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.838694322 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.835120565 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.835026527 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.834432373 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.834608834 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.837039767 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.834507473 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.836721048 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.837717266 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.835792439 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.839340284 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.836910181 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.83670034 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.834884373 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.835881647 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.834790673 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.845802167 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.859906631 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.836694566 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.839846687 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.835025863 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.838864899 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.841962735 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.837082652 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.836521273 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.840246448 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.848366083 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.844412772 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.836977379 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.836730553 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837653767 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.838343641 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.83842058 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.838459306 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.836595336 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.836366349 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.838572715 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.836529968 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.84078992 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.836574693 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.83871649 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.838587389 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.839850269 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.847332627 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.8372462 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.837880442 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836835853 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.837394503 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.837089675 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.838180429 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.838607138 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.838634683 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.83600464 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.837630446 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.844465712 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.843856685 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.839746644 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.837908036 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.83769296 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.837636042 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.837834145 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.840394438 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.838732596 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.841167506 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.839467103 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.838899487 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.840272386 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.838495121 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.837537581 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.838034814 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.840191514 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.841085871 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.846520753 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.84051393 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.836410765 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.83791131 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.840131428 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.838552014 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.839829676 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.846037055 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.84138663 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.848674383 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.848033078 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.843582213 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.839169224 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.840664826 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.848220275 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.837976111 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.839248854 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.841090634 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.841809241 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.842688613 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.843290414 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.842429144 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.847684113 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.84138365 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.837715487 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.847235612 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.841742701 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.840085927 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.840383875 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.844050587 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.841578158 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.838166488 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.84041726 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.841395087 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.847009233 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.842880463 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.842318788 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.842101366 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.839663457 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.842503299 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.845169866 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.841952145 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.842105255 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.838288283 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.84051657 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.841604293 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.842678805 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.840328522 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.840347971 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.841447371 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.843578488 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.84938779 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.838206958 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.84454755 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.842417759 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.844106044 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.84346377 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.841912369 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.839321835 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.84049686 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.840602045 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.844026811 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.84331726 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.844008094 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.842795905 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.84470459 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.844129539 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.843287548 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.845557247 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.852929097 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.851305757 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.840474893 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.842991169 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.844015497 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.845528151 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.842293214 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.842178931 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841442479 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.84580032 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.842136786 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.844313493 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.843432138 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.845726736 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.856931585 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.846021863 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.84342703 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.844710806 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.846062268 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.843724085 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.840136746 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.840409273 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.844684298 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.846960263 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.852477036 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.844969852 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.849715887 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.843040558 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.846013308 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.848514735 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.847458215 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.853959684 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.84743734 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.844083798 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.842481503 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.849893102 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.860491594 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.844372599 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.854492292 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.874991936 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.8474634 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.84621426 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.846756423 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.841193879 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.845534624 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.847548584 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.845896312 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.845912959 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.845942239 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.847637257 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.845918117 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.851620742 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.845905852 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.846860474 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.844638868 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.846596824 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.847275067 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.843360537 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.846639442 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.846190013 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.845755341 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.845159809 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.845453427 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.847330142 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.858622601 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.854575653 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.845944947 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.84584208 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.840160457 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.850271487 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.848040464 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.857180492 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.855368023 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.846545137 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.843977696 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.849669247 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.845436187 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.844728782 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.84767555 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.844785314 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.847567604 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.843624264 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.860524097 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.856550131 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.852301425 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.846130595 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.847649551 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.84730603 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.848127515 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.84733064 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.847624126 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.848955849 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.848397082 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.852676606 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.84870713 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.8481032 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.849908382 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.857123174 seconds)
  done (took 1094.368522441 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.845066208 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846411964 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.84478768 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.844801774 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.84629348 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.846217686 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845911896 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.844470711 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.846720149 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.846013964 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.846384548 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845071355 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.84660592 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.846510707 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846727639 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846070989 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846179093 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.846195256 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.845798072 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.844615157 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.847267569 seconds)
  done (took 40.54735837 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.848653748 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.844545745 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.846383923 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.848321474 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847743875 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.849100067 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.84746481 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848330811 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.848624079 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846487079 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.848286889 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848237834 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.84609968 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.845386348 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845200126 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849220032 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.848575093 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846617419 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.850191249 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.846490436 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.848736615 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.846177072 seconds)
  done (took 42.429173942 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.850711104 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.850583348 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.850219978 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.84724002 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.850287757 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.847803525 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.850945843 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.848704344 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.849509453 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.849418865 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.848296758 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.851319313 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.858669979 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.855066028 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.850784572 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.852093332 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.995489592 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.849143245 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.850979254 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.851083639 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.846003849 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.854186444 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.845890093 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.847682529 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.849315466 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.849550392 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.851924974 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.848461437 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.851295122 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.852106005 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.856575893 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.850743566 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.851193886 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.851325956 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.848722806 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.851393217 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.854020484 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.850759073 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.84844934 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.851233728 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.860913802 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.872168032 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.849700139 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.857349429 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.850325879 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.850275752 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.854500333 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.860387395 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.84898462 seconds)
  done (took 92.65838862 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.851465043 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.851430054 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.847585372 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.851812431 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.851233681 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.851514984 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.850506437 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.852446199 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.847816457 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.848891515 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.851318415 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.851026044 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.849337814 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.851800891 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.851121266 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.849621195 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.849519129 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.847215231 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.849347254 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.850253129 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.849445609 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.853152086 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.850795293 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.851005249 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.8491653 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.84992884 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.851342573 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.853970788 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.851234105 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.851176276 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.853702453 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.853268533 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.852278241 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.850473447 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.849477658 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.853117998 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.855040084 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.849357903 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.853333475 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.847904477 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.851807562 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.852788594 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.85562709 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.850775155 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.849964638 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.850795419 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.847196781 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.849006289 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.849089646 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.851489373 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.852601421 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.84985628 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.851002661 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.847248142 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.852867602 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.85110229 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.848727459 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.851313245 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.851125599 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.851537258 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.850387714 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.851517969 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.851749391 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.85278991 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.851245418 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.851234282 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.851236968 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.855611559 seconds)
  done (took 127.654439159 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853939579 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.855413321 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.8520184 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.854370114 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853972872 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.854157222 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.855881713 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.853282857 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.854113584 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.85273928 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.853196153 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.856546596 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.852959347 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.853226146 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.853102837 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.855084563 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.853099593 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.855189933 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.854957719 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853040819 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.854892197 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.857419376 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.857218182 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.855495916 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855518118 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.855504214 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.854772102 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.852673291 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854049697 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.854091936 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.856405337 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.856990066 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.854521686 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.855555481 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.857992854 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.855438624 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.853944077 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.857656478 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.855856374 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.854591943 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.856901212 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.856671646 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.856876426 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.854317153 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.855849147 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.857167654 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.856125622 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.856804013 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.856743637 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.853299487 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.856579673 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.855957698 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855174529 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.856709315 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.857043344 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.857259282 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.85566007 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.85814495 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856999699 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.856477194 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.856122108 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.854578151 seconds)
  done (took 116.818284666 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.857397783 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.854921505 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.852206456 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.856293916 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.855939147 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.855271737 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.857003792 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.855983138 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.858001517 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.856168423 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856877219 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.852447371 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853166491 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.858334334 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.855166575 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.854330885 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.854293912 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.855219797 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.855640617 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.855167514 seconds)
  done (took 38.901004053 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.853843523 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.856766625 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.855215801 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.855050119 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.853918528 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.855520145 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.857929728 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.857413385 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855963859 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857694051 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.855371059 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.857066263 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852943989 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.857633813 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.857717254 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.853433367 seconds)
  done (took 31.484743758 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.855892294 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.856312409 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.85996828 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.856941978 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.855044786 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.855162144 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.85743952 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.855313136 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.857343871 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.856423149 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.857308972 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.860377342 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.858639963 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.86063171 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.855489325 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.858603777 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.856724927 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.856785183 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.85759586 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.85991361 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.855417029 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.857828378 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.861416426 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.859811332 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.855431082 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.855887861 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.857544017 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.859048218 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.854663978 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.859010342 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.858212293 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.857392434 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.857636536 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.857516857 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.861080054 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.857247887 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.859773735 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.859558392 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.862949451 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.86040652 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.859734184 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.859630851 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.862059249 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.861241109 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.857107633 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.860688016 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.856112352 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.858408376 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.857861086 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.856678594 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.858736429 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.863672178 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.861025555 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.860081637 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.861985303 seconds)
  done (took 104.004159324 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.862413472 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.861824735 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.859938274 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.859895133 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.862915839 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.858395165 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.8621934 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.857179825 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.858932329 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.862047405 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.858804971 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.861838811 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.859484728 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.860848358 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.858459686 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.860465649 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.86000533 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.859745404 seconds)
  done (took 35.282045691 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.859679149 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.85998311 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.860146582 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.857818034 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.858896403 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.861509875 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.859146162 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.862839727 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860242754 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.860163102 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.858859588 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.861524941 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.861275545 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.862749131 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.858302329 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.859577386 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.864461394 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.86228153 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.860493345 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.859666527 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.861434707 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.862915387 seconds)
  done (took 42.730323962 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.860969358 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.862379656 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.880123049 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.88254481 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.884882901 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.901054004 seconds)
  done (took 13.069413681 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864895141 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868922573 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.863327595 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863781262 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865267184 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861135167 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861095047 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8616855 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864259546 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859665955 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859341129 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864064218 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863701685 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86178877 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866764594 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866536136 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863809656 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864470885 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866410741 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866640827 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865126609 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865004468 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863233977 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863128529 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864771233 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.863989632 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867804195 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864450638 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865153085 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866182023 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866482776 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863438586 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866585437 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865008356 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866925727 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867788214 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864461479 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866086983 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867407873 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864041337 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.866398515 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865638382 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865277692 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864680998 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866005306 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8640959 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864214165 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866079569 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864949385 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867360688 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867309444 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865121837 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86812918 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867643823 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866207205 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867946833 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864966141 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864571633 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866769387 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865935534 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86624318 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866781907 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860711071 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861746778 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862436807 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861290967 seconds)
  done (took 124.880677764 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861277715 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.857899711 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857928358 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859261782 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857884916 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859609745 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857551366 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856205651 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857412331 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857200944 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859486647 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857222102 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856568405 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856898206 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85644578 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857521994 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858237484 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856034052 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856280237 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859377116 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855792568 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855462137 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85692817 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856267089 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856176599 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859292268 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856467702 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856556396 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855895751 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855646317 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856110552 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856577329 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857119225 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.856736937 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856734136 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856804841 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856423034 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855774607 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857184895 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858718155 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857162001 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859054333 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857202489 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857789262 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857942684 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857794984 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857062827 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8575623 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857307261 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857972014 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858102505 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.858518166 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858606529 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857998278 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859506703 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858167 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85755502 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857284863 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857182282 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859956745 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85784858 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856896245 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86153346 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857833619 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857622068 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859141116 seconds)
  done (took 124.398680662 seconds)
done (took 2548.988198492 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.930980633 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.916597942 seconds)
  done (took 15.641608192 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.023353027 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.975358288 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.859073243 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.893661234 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.860377694 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.878242194 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.875471759 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.86180588 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.860191321 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.859964808 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.860760239 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.047795079 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.864555258 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.860336166 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.859580298 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.953695195 seconds)
  done (took 52.196340266 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.862229052 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.864012726 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.874645278 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.866949129 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.86246807 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.875383079 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.89570791 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.867026125 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.899481761 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.874783505 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.93369649 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.870753138 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.858250388 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.908375519 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.872968301 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.873425109 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.946464133 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.934586824 seconds)
  done (took 35.737258748 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.938769462 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.875044494 seconds)
  done (took 10.611299114 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.862419811 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.884366656 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.880907208 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.859312508 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.862900817 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.910341028 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.889497748 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.884502164 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.866487944 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.892760224 seconds)
  done (took 70.584534657 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.861472551 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.853821211 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.854987625 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.853780827 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.847025072 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.85122493 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.854108242 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.850155186 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.548892238 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.890904315 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.861330032 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.859907902 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.854876717 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.856637266 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.851868765 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.876743641 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.985079428 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.851385391 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.852998253 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.858769049 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.853287792 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.905299607 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.867206341 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.855170994 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.883702749 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.548745794 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.862929097 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.859616302 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.974364038 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.85013358 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.852542254 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.854248148 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.855123647 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.23340106 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.145753669 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.853462686 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.863462009 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.85915426 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.848723496 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.976015706 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.851933357 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.858575278 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.844656505 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.133448828 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.954513582 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.893613984 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.263076619 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.854130428 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.85318618 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.879612978 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.852885019 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.851679688 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.863684218 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.365109304 seconds)
  done (took 131.889741699 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.843753541 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.154354332 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.994388504 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.840648888 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115806338 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050179129 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.844227462 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89123794 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.842898464 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.045200323 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.007444212 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.950558989 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.843055971 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.842564069 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.840539411 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.840062397 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.001077087 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.910140816 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.843696072 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.839588263 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868790825 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049504496 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.970972362 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.843848369 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.861659374 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052370385 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.963934754 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.948921014 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.133162184 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.83888193 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.90591906 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.842065209 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.839564005 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.839168283 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.997426226 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.939786016 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932016461 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.841202956 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838293193 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.838179567 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.503547965 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036094823 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.939476158 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.984302431 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.036016431 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.044944821 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.485799639 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.836157604 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.475041208 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.001165299 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.052835758 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.045599051 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.96355329 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.840325664 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.079267147 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.837284214 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.836903535 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075000031 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.986447292 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.945828105 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.839269554 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.835577017 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.83581194 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.080938258 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.840306311 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.935600851 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.839722581 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.836825433 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.936257083 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.946086568 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.979106763 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.051333448 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.872450831 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.761745404 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.34400301 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.051839495 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.9060833 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072755954 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.83777632 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834887559 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92114912 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.591123422 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.994889381 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.083173241 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.059515586 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871443414 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.442642321 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.835012083 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.029947928 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.021972426 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.032966959 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.044898497 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.987426341 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.041250278 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.834694607 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.833632244 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.035115974 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.972215521 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.835549803 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.188789765 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067312242 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.471168734 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.855211589 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.128913275 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.967964151 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.260569891 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.467565367 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.834687321 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.002526646 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.873899496 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.834816667 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835193939 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.025227174 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.646848215 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833097007 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.37784593 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.900595673 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.838181728 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037291561 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.837357704 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049070921 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.836215597 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.070663101 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.90275308 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.868278324 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.008090597 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.042010701 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.622788129 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.084118883 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.078768737 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.956375961 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.056335796 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.434740505 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.833707447 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.110036965 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.836782298 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.834594627 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.004586887 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.836553804 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.982336866 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.838861001 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.062723574 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861716213 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993739068 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.839106406 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.06928799 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.873247971 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.889788021 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.842486192 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.967587837 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.838856478 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.72055965 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.990978794 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84078567 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.836273912 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.305071719 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.839768651 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.982893204 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.066633911 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864245184 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.905508355 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.362356393 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.835351717 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922822464 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.864034604 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.246226287 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.838332688 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.993601473 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.781308729 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.279302749 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.836631447 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.076042585 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.024608486 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.838332186 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.838344426 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.578504212 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.542221277 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.835780783 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.995615264 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.513350161 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.486818597 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03915624 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.839629103 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.966284097 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.840967009 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.918655925 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.185312257 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.83591624 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.836922382 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.837583284 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.835778325 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.837810139 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045530355 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.870189706 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.340510004 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.974145858 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.05317937 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.147460915 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.054406369 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.885232844 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.838829923 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.100433362 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.83898269 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.904002836 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.841728675 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.861138606 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.071668233 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842191354 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.066414454 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.090422213 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.741652927 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888295841 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.838897396 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.837399832 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.838541432 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.98640608 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.936533886 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.840576328 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.839263364 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.948301877 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.965936636 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.02998855 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.429430796 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.008663354 seconds)
  done (took 890.578820007 seconds)
done (took 1209.032796253 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.837406359 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.84047592 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.824928488 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.841638176 seconds)
  done (took 29.121046736 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.846016525 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.842586352 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.845142021 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.842766843 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.84517436 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.842007797 seconds)
  done (took 12.839641316 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.909081314 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.842046177 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.841656816 seconds)
  done (took 21.370638571 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.910982662 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.248912977 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.949473575 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.282506996 seconds)
  done (took 10.168075347 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.844857316 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.845398547 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.845264017 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.846312083 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.846267461 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.848591754 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.846072459 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.847330616 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.847544527 seconds)
  done (took 18.395480296 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.295440064 seconds)
done (took 97.967427467 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.99274104 seconds)
    (2/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.723742728 seconds)
    (3/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.337960452 seconds)
    (4/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.882871853 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.142985105 seconds)
    (6/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.064547704 seconds)
    (7/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.042279928 seconds)
    (8/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.848849219 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.010622961 seconds)
    (10/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.848850765 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.756373736 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.897607256 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.871580507 seconds)
    (14/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.471354012 seconds)
    (15/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.945338763 seconds)
    (16/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.961872687 seconds)
    (17/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.015212671 seconds)
    (18/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.927621361 seconds)
    (19/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.122633582 seconds)
    (20/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.195336293 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.970032825 seconds)
    (22/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.187807651 seconds)
    (23/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.877928534 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.634423716 seconds)
    (25/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.940289072 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.944680162 seconds)
    (27/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.847387565 seconds)
    (28/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.132010954 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.956682154 seconds)
    (30/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.174772384 seconds)
    (31/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.338323519 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.85303944 seconds)
    (33/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.213956583 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.873290066 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.177002556 seconds)
    (36/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.943550812 seconds)
    (37/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.993222943 seconds)
    (38/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.916909559 seconds)
    (39/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.856615448 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.761646576 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.855197524 seconds)
    (42/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.963334193 seconds)
    (43/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.443831443 seconds)
    (44/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.865964746 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.96045337 seconds)
    (46/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.981648677 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.119944276 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.847558211 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 3.737773701 seconds)
    (50/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.83622976 seconds)
    (51/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.333735229 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.221992043 seconds)
    (53/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.35993845 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.545687057 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.859883461 seconds)
    (56/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.933453229 seconds)
    (57/309) benchmarking ("sort", BigInt, false)...
    done (took 6.848528946 seconds)
    (58/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.369596509 seconds)
    (59/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.107815772 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.854311886 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.85201361 seconds)
    (62/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.462447137 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.909247962 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.223887856 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.851232128 seconds)
    (66/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.977955162 seconds)
    (67/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.016415117 seconds)
    (68/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.853803066 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 5.634192446 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.729823684 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.596301586 seconds)
    (72/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.835884155 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.886824531 seconds)
    (74/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.854058862 seconds)
    (75/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.937824456 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.1479156 seconds)
    (77/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.881034908 seconds)
    (78/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.849834495 seconds)
    (79/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.234803956 seconds)
    (80/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.958104806 seconds)
    (81/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.955986937 seconds)
    (82/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.058411118 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.02746011 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.840869735 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.208295708 seconds)
    (86/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.128538965 seconds)
    (87/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.352032422 seconds)
    (88/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.074181794 seconds)
    (89/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.340844433 seconds)
    (90/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.06508973 seconds)
    (91/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.040951825 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.184942515 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.949591828 seconds)
    (94/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.852379469 seconds)
    (95/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.987470394 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.495533118 seconds)
    (97/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.157690328 seconds)
    (98/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.764897958 seconds)
    (99/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.85626688 seconds)
    (100/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 3.99787443 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.855193187 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.892959201 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.071854721 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.087764452 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.055864016 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.520382917 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.156271551 seconds)
    (108/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.924022701 seconds)
    (109/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.022546309 seconds)
    (110/309) benchmarking ("sort", Float32, false)...
    done (took 5.627205476 seconds)
    (111/309) benchmarking ("sort", Bool, false)...
    done (took 2.30655042 seconds)
    (112/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.878558644 seconds)
    (113/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.126636253 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.838912635 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.991484694 seconds)
    (116/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.038361922 seconds)
    (117/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.65669353 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.155404249 seconds)
    (119/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.114588165 seconds)
    (120/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.144036406 seconds)
    (121/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.006530876 seconds)
    (122/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.268823204 seconds)
    (123/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.22556796 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.819555506 seconds)
    (125/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.028097277 seconds)
    (126/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.958464806 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.902502382 seconds)
    (128/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.085197314 seconds)
    (129/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.964751668 seconds)
    (130/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.227183484 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.236653125 seconds)
    (132/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.882122589 seconds)
    (133/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.93895862 seconds)
    (134/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.85599158 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.006640852 seconds)
    (136/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.841894654 seconds)
    (137/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.052060565 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.908789264 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.091558929 seconds)
    (140/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.883997967 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.226590815 seconds)
    (142/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.480733151 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.022183973 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.85987545 seconds)
    (145/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.884609449 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.653675443 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.848521267 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.967407952 seconds)
    (149/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.950081014 seconds)
    (150/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.944428924 seconds)
    (151/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.368723858 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.938334262 seconds)
    (153/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.961282057 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.855758775 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.099416614 seconds)
    (156/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.882163681 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.984229189 seconds)
    (158/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.800774174 seconds)
    (159/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.080333602 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.954645391 seconds)
    (161/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.943730418 seconds)
    (162/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.367621868 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.768093392 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.892389086 seconds)
    (165/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.855514699 seconds)
    (166/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.080003933 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.444440097 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.392048424 seconds)
    (169/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.990382671 seconds)
    (170/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.856043991 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.906134685 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.749637432 seconds)
    (173/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.899075212 seconds)
    (174/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.881466214 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.855828833 seconds)
    (176/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.070552653 seconds)
    (177/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.916087843 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.158984115 seconds)
    (179/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.418925121 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.045577473 seconds)
    (181/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.00306824 seconds)
    (182/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.067235588 seconds)
    (183/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.847024698 seconds)
    (184/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.428263691 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.057218285 seconds)
    (186/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.139367611 seconds)
    (187/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.079863089 seconds)
    (188/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.64593738 seconds)
    (189/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.06519975 seconds)
    (190/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.038374398 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.886220125 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.831055533 seconds)
    (193/309) benchmarking ("sort", Float64, false)...
    done (took 5.655808627 seconds)
    (194/309) benchmarking ("sort", Int8, false)...
    done (took 4.8978218 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.507145615 seconds)
    (196/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.226979144 seconds)
    (197/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.924672152 seconds)
    (198/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.87280471 seconds)
    (199/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.430576891 seconds)
    (200/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.306205276 seconds)
    (201/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.455257455 seconds)
    (202/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.94632857 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.144964489 seconds)
    (204/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.077649469 seconds)
    (205/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.85863878 seconds)
    (206/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.882208082 seconds)
    (207/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.95630807 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.934381175 seconds)
    (209/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.898528746 seconds)
    (210/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.368058012 seconds)
    (211/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.885298642 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.197355483 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.501638338 seconds)
    (214/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.974422614 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.249581112 seconds)
    (216/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.86106298 seconds)
    (217/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.029389418 seconds)
    (218/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.237891776 seconds)
    (219/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.148287007 seconds)
    (220/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.945069232 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.756649443 seconds)
    (222/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.348844261 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.136925491 seconds)
    (224/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.847528659 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.926546616 seconds)
    (226/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.157633349 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.881538665 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.10717577 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.547093159 seconds)
    (230/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.995314196 seconds)
    (231/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.844385972 seconds)
    (232/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.676778265 seconds)
    (233/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.171291948 seconds)
    (234/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.969565643 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.895410005 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.130931691 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.927133127 seconds)
    (238/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.946484695 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.01810969 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.150531792 seconds)
    (241/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.869773591 seconds)
    (242/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.014629438 seconds)
    (243/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.846549401 seconds)
    (244/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.051414981 seconds)
    (245/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.946582417 seconds)
    (246/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.956876517 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.028684548 seconds)
    (248/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.275282467 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.848266993 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.08384116 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.892100029 seconds)
    (252/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.845478632 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.850215483 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.236504127 seconds)
    (255/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.392022729 seconds)
    (256/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.130983363 seconds)
    (257/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.209343422 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.270894736 seconds)
    (259/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.297816062 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.253158375 seconds)
    (261/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.03037806 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.966329661 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.934949109 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.118797071 seconds)
    (265/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.042419945 seconds)
    (266/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.99621837 seconds)
    (267/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.476229976 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.306993586 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.112810817 seconds)
    (270/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.850736479 seconds)
    (271/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.892644619 seconds)
    (272/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.886765876 seconds)
    (273/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.81318297 seconds)
    (274/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.687855089 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.921676415 seconds)
    (276/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.057508573 seconds)
    (277/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.853151709 seconds)
    (278/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.46232419 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.97744438 seconds)
    (280/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.115919948 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.961256844 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.878845053 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.943747972 seconds)
    (284/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.791935458 seconds)
    (285/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.886923226 seconds)
    (286/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.956883335 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.067819162 seconds)
    (288/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.014908185 seconds)
    (289/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.244536204 seconds)
    (290/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.868153788 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.640805572 seconds)
    (292/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.932729639 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.786599719 seconds)
    (294/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.350737939 seconds)
    (295/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.762251178 seconds)
    (296/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.130130232 seconds)
    (297/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.988639576 seconds)
    (298/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.872601568 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.904791569 seconds)
    (300/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.644661085 seconds)
    (301/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.026843262 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.647218276 seconds)
    (303/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.176848552 seconds)
    (304/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.252147848 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.888409583 seconds)
    (306/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.925286917 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.455395328 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.68914598 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.112256104 seconds)
  done (took 1013.961851022 seconds)
done (took 1016.033523381 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.897345064 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.891002552 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.873706256 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.895234126 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.986732945 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.912154595 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.884853028 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.876795689 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.922650422 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.923901677 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.874375995 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.911446323 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.877713184 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.87617793 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.873832017 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.889414428 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.181154636 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.903440045 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.891943035 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.884977981 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.892266611 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.87412426 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.924610323 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.911987093 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.878601913 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.877859274 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.879614817 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.895707505 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.988123546 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.87941237 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.879076256 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.888148864 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.182823896 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.901692451 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.869989232 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.895584768 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.888310119 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.885265549 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.880701632 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.908796804 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.321352095 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.882469821 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.879130217 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.877850283 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.877334461 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.881355153 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.877967099 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.883580153 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.890442661 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891192663 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.317217277 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.899820618 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.880726698 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.877804483 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.889093698 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.87762118 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.880964365 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.893752607 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.898046718 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894696896 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.172702768 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.907678572 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.879786821 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.895193706 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.886075711 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.354436871 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.879201313 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.881367478 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.322150392 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.890320581 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.356441017 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.892276475 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.880216093 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.893732594 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.911445565 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.184190062 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.899077264 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.878376189 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.887529102 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.880304004 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.888917991 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.892538651 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.884069085 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.880172261 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.893697487 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.91652753 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.890325325 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.880583428 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.888691024 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.90046353 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.888310139 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.892262275 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.883000228 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.875036133 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.888537728 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.883938071 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.882356139 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.883481053 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.883819538 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.890451088 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.321421226 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902653272 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.878433027 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.875889248 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.879901263 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.894347316 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.319776197 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.887688261 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.901879493 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.927548007 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.882498782 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.175330663 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.909554499 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.897087174 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.88944832 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.884188208 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.875317591 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.175506275 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.346036917 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.903050372 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.883279429 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.88004298 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.897441539 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.882495757 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.877685387 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.188143642 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.908342542 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.895744968 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.003258386 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.892621884 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.914800846 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.881558382 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.885801446 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.916620462 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899692741 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.914367336 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.885211294 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.899772474 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.900329946 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.881072804 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.895467777 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.895221456 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.885747561 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.889244072 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.875659945 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.915402217 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.895002069 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895029886 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.902821471 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.003986145 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.879861523 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.177412339 seconds)
done (took 295.421841162 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.952973817 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.87315037 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.978878349 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.878339292 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.962567179 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.963110526 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.875263632 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.876741536 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.875529462 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.257182149 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.876396942 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.876159356 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.878903187 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.875447272 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.960383541 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.878667754 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.875464814 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.21770613 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.879457576 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.948457643 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.875388606 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.876612495 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.879367069 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.259459127 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.875917625 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.871150271 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.948903726 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.878583471 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.223649059 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.880322766 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.870962174 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.222507479 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.969132502 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.897316365 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.888812545 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.886565354 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.963838103 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.883064863 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.959698115 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.95848646 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.979078274 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.919463381 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.871703736 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.872219381 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.882868596 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.8801743 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.877687858 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.907818403 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.875025826 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.878003927 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.221579861 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.891662312 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.887795135 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.877669362 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.877551659 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.902482423 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.878596023 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.882215956 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.972071258 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.882947086 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.942879469 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.261080167 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.259230996 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.880720369 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.8790755 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.8781058 seconds)
  done (took 184.962014689 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.947168138 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.954492523 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.949011303 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.883946128 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.930821712 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.954408548 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.884286566 seconds)
  done (took 15.316016437 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.887437611 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.881540634 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.930654381 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.931156504 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.882425126 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.031519516 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.882240317 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.322451945 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.879204583 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.93436265 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.882322012 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.881951754 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.888940358 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.87754195 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.930029572 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.892828037 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.996686344 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.882579753 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.882871816 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.033200905 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.880950155 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.889673983 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.936672516 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.894489251 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.883300482 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.887733261 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.465972527 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.88299987 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.880375318 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.882312245 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.879776938 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.92731325 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.882443388 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.879486628 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.880565432 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.999649743 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.883360938 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.879363143 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.883212463 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.882645019 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.883434796 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.883091317 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.882680096 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.881429297 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.88355655 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.90568401 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.88390901 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.883308873 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.882734172 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.884115096 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.9335959 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.88464445 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.88132418 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.881069275 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.939881721 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.891154381 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.884587196 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.881802181 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.884095195 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.881458075 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.035365709 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.932857722 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.88418429 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.931630209 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.88475944 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.884922152 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.884641123 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.884613185 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.94013151 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.885011895 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.933158235 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.883238067 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.044053565 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.909056438 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.885876616 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.887897405 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.887750328 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.885807821 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.881195219 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.891526533 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.882839801 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.887916362 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.891588712 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.884118098 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.883859982 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.998381935 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.994718273 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.882764518 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.89912272 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.89260372 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.882808684 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.939302928 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.886484698 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.883185787 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.939000972 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.001285331 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.941839428 seconds)
  done (took 207.597350812 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.890733683 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.893943605 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.886827081 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.901288841 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.885824931 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.885211109 seconds)
  done (took 13.161034125 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.888565829 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.888413121 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.886955314 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.887250138 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.887001742 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.888300441 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.887603149 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.888471721 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.891356401 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.886522882 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.887682106 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.887601172 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.88799513 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.886850235 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.887901096 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.88680552 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.888450031 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.884982696 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.887990698 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888993696 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.03177366 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.888404209 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.888687348 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.890238177 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.891893134 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.888198137 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.895826562 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.887399425 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.887583766 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.89661704 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.890819399 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.888597879 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.888753 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.89320277 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.894035572 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.889170799 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.891310082 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.889357566 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.88502854 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.888130592 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.888876325 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.889042204 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.888260054 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.888746487 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.890924031 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.893040962 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.892963708 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.896772222 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.889629751 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.890111511 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.89013147 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.888720124 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.88976274 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.88992751 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.891469345 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893966788 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.894581753 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.889864039 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.889451272 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.890606266 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.891298583 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.890653096 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.891870481 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.895323345 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.89873821 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.891740689 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.890625104 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.893790977 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.889822471 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.88991215 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.890712111 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.887827076 seconds)
  done (took 139.039962347 seconds)
done (took 561.900670932 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.16141683 seconds)
  done (took 8.982524141 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.895538195 seconds)
  done (took 8.811720284 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.418306036 seconds)
  done (took 10.240132659 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.904968607 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.894645938 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.894547482 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.888174092 seconds)
  done (took 29.413556482 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.270087787 seconds)
  done (took 9.092908901 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.898074752 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.884281517 seconds)
  done (took 15.668120883 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.968336572 seconds)
  done (took 8.790616948 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.931108535 seconds)
  done (took 8.757634621 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.90087409 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.899894006 seconds)
  done (took 15.635700582 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.870817366 seconds)
  done (took 8.692607572 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.513925833 seconds)
  done (took 11.345302226 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.892659845 seconds)
  done (took 8.728079699 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.963266039 seconds)
  done (took 8.78579275 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.967828344 seconds)
  done (took 9.789504322 seconds)
done (took 164.554554204 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.888128963 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.886025132 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.884092501 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.885323036 seconds)
  done (took 29.366034037 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.930314242 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.942143201 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.926284171 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.936107559 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.927362652 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.925714206 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.917755518 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.917185329 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.935918055 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.928388756 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.927536294 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.926933585 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.924191519 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.91660227 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.927837432 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.92631512 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.935946247 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.926220554 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.917911646 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.92837352 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.892321824 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.935714813 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.927804788 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.892863404 seconds)
  done (took 48.018177447 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.090635461 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.964422426 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.045991475 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.943446413 seconds)
  done (took 9.867055719 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.944286743 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.946448726 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.956039997 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.996230728 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.021832611 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.955806595 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.918867009 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.914346955 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.901367589 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.946419417 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.021333514 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.962937308 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.033588354 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.892197634 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.087204734 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.891946629 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.893184151 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.944247923 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.997017114 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.011029829 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.893729533 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.944915824 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.948937071 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.962142499 seconds)
  done (took 48.809757774 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.892092364 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.900843671 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.899184519 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.892789059 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.892383382 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.894286689 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.899260707 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.895205604 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.913598609 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.894626998 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.892531821 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.893082413 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.891705825 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.893200699 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.89304611 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.905904635 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.907020583 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.894265325 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.896152452 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.899424951 seconds)
  done (took 39.766256953 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.886339531 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.742137932 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.2393355 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.143309517 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.88760595 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.891345924 seconds)
  done (took 31.616031871 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.907692636 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.899085629 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.894766324 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.951611946 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.032447218 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.902450762 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.894966242 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.905050388 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.939849997 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.960858252 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.913258809 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.923338697 seconds)
  done (took 24.950325384 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.891363873 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.893650279 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.892496299 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.909200869 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.906745043 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.903726044 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.903699691 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.889894183 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.91012629 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.915270931 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.904643185 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.906809121 seconds)
  done (took 44.659699396 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978351809 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.93533939 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.92959172 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.577781357 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269150572 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102244917 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.54029258 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.237529083 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.894990166 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163973999 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.950519846 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998058188 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.14684893 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.414542793 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.923721261 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.34307324 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185111998 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098271497 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919027921 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.569974348 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954353878 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.102540729 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.627774686 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.947644732 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.103642752 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.02490061 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.152934283 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.891595897 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021841555 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926969295 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902555206 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.892470643 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16575239 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262572978 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995473573 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902796065 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.507445285 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.608588459 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.878001085 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.642765935 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.603571617 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.015967112 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904164575 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893726147 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828238238 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.073634414 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267876193 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.898510167 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.604483758 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.894144163 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904196279 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988018316 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.896829471 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.709809412 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84022033 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.895948465 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.891350111 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900423154 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.464006819 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001150227 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.105698712 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.86803434 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.98446893 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.625738147 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280713104 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.040283688 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.897489721 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.898418733 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829180224 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.563177177 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948733018 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224397985 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.918341526 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.545354823 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191149487 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.998199557 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.838285411 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163866423 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.454612377 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.868378862 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122733958 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.894587265 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830477478 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.841294487 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.829734137 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154983225 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930779129 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.63680424 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933538432 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.224077861 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.906573254 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914133857 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919244613 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.118585873 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.780401002 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896369447 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.692985791 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041545616 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916772672 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.224914573 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831448565 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.900028473 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153407306 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.108100109 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.990894222 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.38742617 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050414511 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.484580124 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.949285824 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.071564166 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944859948 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.163619163 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950651661 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.999938605 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948242783 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.897779508 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188913209 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.511084417 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.034209164 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.977442734 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.022714128 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.209879981 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923107421 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980012796 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.899776345 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.896520801 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.674306194 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.448609358 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.897851366 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.900447215 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.99349972 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.945039867 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.898956185 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84884633 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.522126059 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.945796012 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.912724261 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122379028 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.491899608 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210694017 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833466721 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227364182 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.991498305 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.121404052 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.535043539 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.970548598 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159214498 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992758738 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.034607285 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94693705 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918490761 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997228598 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920181332 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.073627739 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.191441386 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.90328113 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.902694847 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.660504585 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.936466673 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908040663 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.904478683 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.658139771 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169956121 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923256549 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.908028229 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.790351268 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.913726509 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964415822 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.905468766 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.910459916 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.439512853 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617600025 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.907043962 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.486424242 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.123886159 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911044961 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.616246068 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016297793 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.982329994 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.170673899 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95890369 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.835014517 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.610946601 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.594881549 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901331055 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.836368425 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.90229129 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910495898 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912656058 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.097534414 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171089399 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943448887 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.57615853 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.944196371 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911844376 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.907043578 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902273956 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.412585071 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.011701749 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.114610968 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.948385415 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045342657 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.915964064 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.836432169 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.904849229 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.906432539 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901563437 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.902281071 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934778001 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.579000282 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276748097 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163085437 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.51309527 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91618104 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.637729914 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.958308297 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.902161377 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.709363812 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.102610264 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.9444065 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923376946 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.913778775 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.651022898 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.608198779 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.469961923 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203269518 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205954879 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323311075 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.141735593 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.933704626 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238049948 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837668159 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.465770019 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962428954 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246018893 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848742156 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987538811 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.541303015 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247113157 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917845927 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132137628 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.279247585 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.638924021 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046496402 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115699696 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939696601 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.093128617 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867203751 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.204997433 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045060464 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.59490489 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108265333 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236655955 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.58673964 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.02762961 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.903722385 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.578749035 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987104421 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.618822518 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.077251192 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.115245743 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.875261511 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373750511 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.913235071 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.131391342 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249909592 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.085622277 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.027254163 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841619529 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.91670076 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.916990976 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.908012386 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.90499294 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.789658475 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.160267675 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916233987 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840728222 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.04749012 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193167131 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.808694213 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.912213352 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906994456 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19714754 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.468322994 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070960175 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.034530661 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.429234945 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914629519 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.842203668 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841752383 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.600608264 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.914809437 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.882479129 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.119957365 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.006994804 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.818514754 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.013982959 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98877778 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.164146708 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.921737417 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175437465 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179759755 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.603699063 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932673784 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.008346571 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.577421069 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.016746508 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.90857081 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.144706703 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.663597729 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.135326464 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.943646589 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.863429478 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.908146934 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122615826 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.908831887 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.861542011 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136380704 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.631109482 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.912798143 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209977163 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979861706 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.807726253 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.953378185 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.000425585 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919771858 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989426973 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919821805 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.920546464 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.920878523 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956790817 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.830323662 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.033088223 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.923355956 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005122033 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.025260199 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.43483627 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.915849671 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182228526 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2587412 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.228450294 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.965625693 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.910349789 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910810948 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845164541 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060127777 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.1366359 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184979379 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.039547878 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.026818142 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935624792 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.576752537 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.14844415 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152422765 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185954491 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.806162938 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.440619518 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.951417375 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.911766645 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922548284 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.123642494 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122959491 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215618908 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.059240589 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.017680051 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.27005052 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185808107 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.912316704 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.912517267 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.500666123 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.916051681 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.597180594 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.951282675 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.830465723 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185998625 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922731924 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291776214 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.933432607 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.07316855 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.686315005 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.589124367 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203238719 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.891287634 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.970242338 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.182977234 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.295780011 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222787556 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981193375 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.924297059 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.025883889 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060949141 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.805413829 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.914317153 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914046219 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.963498422 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.62400484 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.92336579 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184142727 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219622437 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.911068303 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.811402072 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937142719 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.925082061 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.137972875 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173844193 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164753104 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923603384 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.921122542 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.730933952 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184350406 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969141934 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848718623 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.918371915 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011322133 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.161272003 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934466587 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.367617884 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.626536574 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184024309 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.913782706 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937005376 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.102437188 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.286684842 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232919167 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.448515115 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12218769 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.501047574 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.519176541 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217289871 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.920953219 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.098480556 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218991776 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.919338908 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.026611786 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954188468 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.180998154 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223380285 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.929695813 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.588486297 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.882208054 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.258012989 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.47786254 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854765354 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.926550836 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.978677113 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.916750124 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.048358835 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929467371 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.805841343 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.105223425 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.677089067 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.188720599 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.92175882 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.907605759 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.635114526 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.224903285 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950489441 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058713061 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924960265 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.590631986 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.267367563 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174341191 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.024396087 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.925471919 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.921030069 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917660252 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903555661 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.113759563 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.113705594 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192270366 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.045904171 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.954982717 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921745791 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.13495462 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130327226 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.850826722 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052740511 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.029252351 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.960686291 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.786895364 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421183993 seconds)
  done (took 1691.23529085 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.94566964 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.945763168 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.019716385 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.947500385 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945205136 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.039124214 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.979514239 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.997077178 seconds)
  done (took 57.675858418 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.933695079 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.114389246 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.927392218 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.920950331 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.929473231 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.919826235 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.084052234 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.929288558 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.928741212 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.930082231 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.919002205 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.919585515 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.228218219 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.942492898 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.920134089 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.905296904 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.928869099 seconds)
  done (took 75.260218035 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.962004605 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.998404642 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.955337506 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.931712055 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.884130253 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.932050267 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.752360617 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.95047434 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.921807427 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.151516235 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.553106716 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.936429796 seconds)
  done (took 90.786853543 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.930184537 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.927848294 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.927769918 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.928910467 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.927556989 seconds)
  done (took 11.502366841 seconds)
done (took 2205.360751183 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.173741932 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.134681931 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.154330069 seconds)
  done (took 6.146379401 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.071348178 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.118933923 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.239727215 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.244899134 seconds)
  done (took 10.536965236 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.206988364 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.297351978 seconds)
  done (took 6.363571379 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.325051254 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.926644235 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.304515869 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.923695373 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.925604119 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.925969971 seconds)
  done (took 22.639035002 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.927528274 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.929932831 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.928312948 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.930188158 seconds)
  done (took 9.575324152 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.908774712 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.613635511 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.908930517 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.924101771 seconds)
  done (took 21.215263277 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.674303505 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.684664799 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.67106781 seconds)
  done (took 9.889436128 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.384032763 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.806970264 seconds)
  done (took 9.050817184 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.187415545 seconds)
  done (took 4.047092412 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.059900166 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.240212635 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.436060153 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.431910601 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.537367803 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.61657285 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.245934991 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.173231563 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.334072331 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.360848958 seconds)
  done (took 25.29665862 seconds)
done (took 140.347748894 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.306924672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.92700256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.130096622 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.26277665 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.155342568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.130296222 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.119714441 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.24690917 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.773465596 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.769166306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.262795468 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.152254604 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.269593715 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.17414746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.271546988 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.172670993 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.149315614 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.324217534 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.964797704 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.196770102 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.115550599 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.903183449 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.103372085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.919466837 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.153947432 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.083871251 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.484086208 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.171929427 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.118857507 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.496307781 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.084795864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.350576195 seconds)
  done (took 173.607901795 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.701790718 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.926167981 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.926892679 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.9293888 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.521456953 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.928155372 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.927417196 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.927091377 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.191797334 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.156931078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.928106062 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.519003351 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.931321539 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.92601062 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.935874959 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.926717637 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.324957703 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.790491402 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.944115319 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.946495849 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.947947486 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.488624045 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.945742037 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.512721109 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.321634829 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.945771419 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.92777396 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.946786026 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.928587584 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.93280899 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.936732514 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.927718508 seconds)
  done (took 210.937113057 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.927766257 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.929379589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.926248142 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.929687926 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.930020975 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.951348991 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.929382728 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.928084974 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.508923204 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.501543888 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.938369753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.934621492 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.936252963 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.929363952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.937532337 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.928712356 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.93848347 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.939726348 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.931644787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.934873235 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.940474153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.743589525 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.938791907 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.747702092 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.936415911 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.937138225 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.92966623 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.936561059 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.93794906 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.938981399 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.9372102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.930979193 seconds)
  done (took 222.544263075 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.132306623 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.936535378 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.937738778 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.887173083 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.938027964 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.936966652 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.929970836 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.134287732 seconds)
  done (took 19.716309865 seconds)
done (took 628.679126246 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.34422297 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.194960469 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.108118614 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.959590924 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.177982485 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.991531086 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.956076022 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.016194268 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.678173796 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.020992473 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.635012614 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.973052714 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.730138013 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.978647107 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.084812135 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.011647772 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.488693732 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.579923485 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.134313062 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.008381624 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.12146784 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.88308629 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.029967279 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.698185181 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.74597687 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.931925887 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.127433143 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.492143427 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.96716036 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.120331994 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.676915089 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.337267952 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.96758 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.954289455 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.008001563 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.99010387 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.295504219 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.96576334 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.07860101 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.690884688 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.004688891 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.57316946 seconds)
  done (took 105.601668637 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.927827645 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.927388295 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.926364824 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.926999644 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.929158782 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.926745113 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.92604472 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.926686657 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.927424342 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.926395784 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.926730569 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.928466911 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.926777175 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.9303349 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.927012222 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.926439915 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.92819329 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.929463031 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.926908612 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.926597749 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.927923841 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.926976898 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.92793305 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.927269676 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.927365723 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.928329914 seconds)
  done (took 51.991675428 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.941250354 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.079539785 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.157380504 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.957115503 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.940016324 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.944231806 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.958284471 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.945318733 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.942963957 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.943528444 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.036427585 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.947618358 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.958944915 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.161717359 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.955711605 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.942297171 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.941845143 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.940887488 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.087251195 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.955831905 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.960970651 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.946222069 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.959779523 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.954829024 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.942918602 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.941222564 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.944663359 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.379235229 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.950736838 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.036534455 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.983055359 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.963212691 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.33360784 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.169257173 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.993446777 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.948229908 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.942430436 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.041849181 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.947386469 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.94266554 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.959414315 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.94848334 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.16242683 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.439520524 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.954081004 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.943560948 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.389016357 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.048861095 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.98374093 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.954360623 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.166542034 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.956876269 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.944412894 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.943802703 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.979671089 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.953307082 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.943120072 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.252805865 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.953486131 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.96057319 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.949302302 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.944468667 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.096750219 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.951129013 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.086362803 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.952137343 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.951646927 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.944682942 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.163272017 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.958400885 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.438525622 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.955715885 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.944552234 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.039902147 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.087826141 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.41462488 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.955113522 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.099639814 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.349519879 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.966188558 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.950320942 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.36960882 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.970454499 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.951311771 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.94735507 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.946220662 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.944523278 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.988817357 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.960541716 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.379520331 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.445159144 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.264983834 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.970754789 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.960378751 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.945196458 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.253948134 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.962163416 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.945111582 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.159626964 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.455767479 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.957343453 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.952838898 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.432339123 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.958748673 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.963752329 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.953708807 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.167382692 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.958804739 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.989756425 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.947287998 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.952503231 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.949535291 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.964974896 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.953148445 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.946693744 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.419801011 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.057714942 seconds)
  done (took 240.281095765 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.942534976 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.941964206 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.940500566 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.941148291 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.939389379 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.945781886 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.940886018 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.939757128 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.946467911 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.940520692 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.941036866 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.94270104 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.94198948 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.94650856 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.978610364 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.948407404 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.551469909 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.943370504 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.941874583 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.941947198 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.588346181 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.947920274 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.942300112 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.95088974 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.941199101 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.943886882 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.94258193 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.972615281 seconds)
  done (took 169.605958595 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.948548205 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.060340064 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.962932766 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.97642758 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.956269869 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.94699246 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.972292511 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.962384292 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.952076557 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.946354874 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.947001642 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.008279052 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.959013446 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.046310677 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.978124154 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.977638671 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.050934734 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.955480777 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.947333788 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.948589831 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.97693896 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.943591344 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.008321188 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.074998032 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.964712276 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.066778621 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.95310998 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.951210068 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.951533909 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.064210773 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.960370539 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.007470173 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.975238528 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.965808039 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.066972545 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.060865519 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.053708783 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.977632686 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.951842995 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.947179801 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.947530138 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.938374184 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.062481489 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.965850346 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.950578997 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.054427373 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.96484084 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.951816874 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.958793785 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.948348039 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.962525312 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.965779465 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.014058531 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.076774626 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.978579529 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.975274388 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.97527754 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.241223861 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.959029932 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.049723421 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.942307885 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.064737983 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.967186573 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.939364506 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.9504923 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.954973217 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.977930383 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.979625929 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.053935686 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.957065159 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.050396482 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.982856333 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.956549804 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.950822746 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.952671675 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.066829565 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.064320687 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.983317074 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.985672845 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.979876674 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.94588627 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.950989427 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.940243287 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.968776785 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.955040002 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.064492415 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.065101383 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.958359251 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.953115796 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.953638254 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.953828688 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.976899547 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.07460276 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.981917581 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.047955505 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.016917926 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.021601954 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.96331755 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.963734445 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.95446063 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.01368993 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.964812022 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.963522375 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.290396861 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.022899799 seconds)
  done (took 210.976873834 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.426051014 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.005763961 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.005675936 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.222181298 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.364665627 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.818362434 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.99640421 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.001495788 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.025004713 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.15723934 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.056781049 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.012530291 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.987235874 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.974451965 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.999803825 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.020732939 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.003078542 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.298688721 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.117814116 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.104742209 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.98053429 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.30080053 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.317194906 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.375277617 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.032450901 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.324225921 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.678058326 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.239039999 seconds)
  done (took 63.735540267 seconds)
done (took 844.059446794 seconds)
SAVING RESULT...
DONE!
