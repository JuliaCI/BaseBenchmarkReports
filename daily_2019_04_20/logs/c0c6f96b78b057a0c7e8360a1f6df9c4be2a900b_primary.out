cset: moving following pidspec: 2168
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.288029977 seconds)
loading group "string"... done (took 0.581030594 seconds)
loading group "linalg"... done (took 7.095397183 seconds)
loading group "parallel"... done (took 0.164448938 seconds)
loading group "find"... done (took 1.116677246 seconds)
loading group "tuple"... done (took 1.973559952 seconds)
loading group "dates"... done (took 1.262545165 seconds)
loading group "micro"... done (took 0.234715256 seconds)
loading group "io"... done (took 0.963287349 seconds)
loading group "scalar"... done (took 38.42498946 seconds)
loading group "sparse"... done (took 12.257265292 seconds)
loading group "broadcast"... done (took 0.969152107 seconds)
loading group "union"... done (took 13.021261511 seconds)
loading group "simd"... done (took 4.419034693 seconds)
loading group "random"... done (took 8.919705146 seconds)
loading group "problem"... done (took 1.945333393 seconds)
loading group "array"... done (took 21.06356284 seconds)
loading group "misc"... done (took 1.914265615 seconds)
loading group "sort"... done (took 3.19365118 seconds)
loading group "collection"... done (took 17.842579502 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533303348 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142595689 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118131231 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.139879625 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184857288 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131639636 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145363662 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086018732 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.023508675 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16293164 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13975297 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.476346792 seconds)
done (took 5.042224794 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.202196053 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087482413 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097013969 seconds)
  done (took 0.883798155 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067003136 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127218945 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081333095 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069209359 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067631265 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082484888 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068067555 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067159162 seconds)
  done (took 1.269992247 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075635508 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069640983 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085538037 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069043677 seconds)
  done (took 1.007959386 seconds)
done (took 4.148592236 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.896862651 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.233822426 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189857968 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.454286668 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148362414 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188878715 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671599112 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343770455 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.21063951 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101424883 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104970638 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.37943032 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107698804 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666777109 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078822569 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106264679 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.15878187 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.430763365 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082183162 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083689876 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104990019 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142790978 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103621077 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07776767 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.169640022 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070638476 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147842825 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096126075 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069291883 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.244368251 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190960234 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693528288 seconds)
  done (took 10.493805779 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101088397 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118001696 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070103414 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140731769 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10198629 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087065187 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072178046 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084126925 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09291302 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.159210845 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115317278 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107136843 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082642761 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071018721 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101378174 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212178021 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110582226 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086829459 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.08755422 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076781729 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122125193 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083662942 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095050875 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079139439 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152029125 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195372969 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112269715 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111946493 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070233253 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081961596 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132145463 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142310978 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067149725 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082657189 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.140656617 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111153861 seconds)
  done (took 4.579322057 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.035957935 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.160956771 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093471132 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153034412 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086474775 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111461661 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084314368 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100483027 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.247622088 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.073877313 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.457727342 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128783672 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102622341 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069112357 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084747426 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069386596 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.511686836 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144682741 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103887414 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103103346 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07529918 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087481884 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.378117738 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068964791 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067228969 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085924954 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060829827 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.10263788 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146998327 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07028101 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.191517668 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.110368345 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069426154 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121863042 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179911164 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112771805 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123559971 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067966363 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066819499 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169865104 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091668234 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067196344 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106505016 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104511788 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119978194 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084998624 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069164238 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181502317 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067397066 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099982727 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.910486127 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165175709 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07827832 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070970143 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286444705 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08469523 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085770436 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065225003 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.281343061 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.153888261 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068530878 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084342588 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067361225 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068240107 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381695009 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068889186 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.880557929 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06996557 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077841155 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085844267 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067976388 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089761203 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073377791 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102406881 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068289162 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069334654 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083601914 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06689662 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084857845 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06679903 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.100304478 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205293822 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068277349 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067997692 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.109216781 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065319608 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103916109 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097514686 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085612871 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066076694 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117799793 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069401322 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084572685 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103322773 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084906801 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.085487089 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086634927 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130003549 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068946074 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.162529367 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069297691 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069524189 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.113579419 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.087701815 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1008399 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093911376 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068433823 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153119522 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065782838 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083324556 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067644905 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082081816 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069577332 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068611821 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099176437 seconds)
  done (took 21.169099461 seconds)
done (took 37.985303009 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.291400265 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092223526 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092433363 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076172932 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.091946044 seconds)
  done (took 1.429104062 seconds)
done (took 2.18730289 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120529571 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116988258 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064309787 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113228407 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064248565 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116832608 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114600154 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082409988 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118221632 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065744226 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112592491 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065231473 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064113334 seconds)
  done (took 2.003913342 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08409557 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085388553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085845818 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08287337 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079226058 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08304884 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081273014 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105310875 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080671507 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089037689 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065450557 seconds)
  done (took 1.676404096 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083760713 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084932927 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085816666 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082451982 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07986021 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082817592 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080676105 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103454434 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081786923 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090658868 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065299165 seconds)
  done (took 1.678127722 seconds)
done (took 6.107232502 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07929435 seconds)
  done (took 0.830182427 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.692389019 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.532019005 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084341825 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134396193 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222843283 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153343735 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.436450971 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.11008791 seconds)
  done (took 10.289412761 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104574723 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088826485 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072156167 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089056837 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070693783 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.086591298 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07216422 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071005081 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084944414 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070664852 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088095807 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06993648 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087739532 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069896877 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07240527 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084981552 seconds)
  done (took 2.103699914 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094395552 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093542867 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092519429 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076308093 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090323157 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074575107 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092631789 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076057177 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087657454 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.0739667 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092185647 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075600391 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088898345 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067183008 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091538335 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07845709 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088052734 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076469123 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.0913531 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076958284 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091584473 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066101703 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088352612 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07643088 seconds)
  done (took 2.862048084 seconds)
done (took 16.842394613 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131102093 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077436958 seconds)
  done (took 0.967258104 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082029375 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098288135 seconds)
  done (took 0.946633794 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083244356 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081739903 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091081657 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093806874 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067741614 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082307405 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103671557 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067777744 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082151633 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069084772 seconds)
  done (took 1.588582423 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069672457 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093820577 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071678296 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097608704 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075591212 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081247404 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074024728 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084895235 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079462846 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080390812 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072835222 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100105855 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073256521 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100828181 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073962954 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08534448 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087736906 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069404842 seconds)
  done (took 2.240288246 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067922759 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068939837 seconds)
  done (took 0.905614059 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068069138 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065416907 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083338406 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06852641 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079830066 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.0648282 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080187325 seconds)
  done (took 1.278679023 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399525608 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110180267 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.242553982 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089350611 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105048862 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262066677 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084238253 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072139622 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088631728 seconds)
  done (took 2.259750271 seconds)
done (took 10.953435081 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080042876 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087618403 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110915262 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416283637 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106625747 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067290448 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132401361 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.217505802 seconds)
done (took 1.988657006 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125609768 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613372184 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.398400256 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212716114 seconds)
  done (took 1.997797333 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.377290031 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092613391 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074325896 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068295395 seconds)
  done (took 1.387383511 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067417906 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07056787 seconds)
  done (took 0.912808865 seconds)
done (took 5.200054104 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067846435 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067528143 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.103168881 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065301158 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084420568 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064982483 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065050824 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084446774 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067574883 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068085055 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.083306147 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.07051447 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083266408 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064504262 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065263519 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080785434 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067037889 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06553457 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080454271 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065781393 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067416539 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080439339 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066377261 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064754512 seconds)
  done (took 2.552297398 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086358691 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084393482 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073037048 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088877399 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071304882 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089830947 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072839852 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068102861 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087870274 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069915356 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086794534 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071707748 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08524556 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071681914 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085149327 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071443032 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088794138 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068060927 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070288252 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089738469 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07298269 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083514871 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07167442 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088067217 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07188328 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087102294 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070065263 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083480233 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073182717 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087620014 seconds)
  done (took 3.149203841 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072244414 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065208005 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081349902 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072380518 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065317382 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082298359 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065843741 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081532706 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066274044 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065557253 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082939396 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064897201 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065244263 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08181163 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065769171 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084149018 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08107815 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065998024 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081927294 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066179466 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068581953 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081540148 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066196417 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081214683 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065056904 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065196997 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081005973 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06507985 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066012357 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081658386 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06842259 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068177101 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081047103 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072742979 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08499318 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065603932 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069339822 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081172261 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065944485 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064828546 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080954286 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065328871 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065661166 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087566437 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065800841 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083505448 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065537922 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066941386 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081516617 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068131109 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.0806064 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065392056 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066536497 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081875871 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069683994 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064625967 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081562469 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065622975 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081803934 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06487567 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064831758 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080401166 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067145416 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066022817 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096217673 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072329059 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082487732 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066234566 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067112627 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082897827 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067316319 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079263987 seconds)
  done (took 6.026830037 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.117353456 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091920161 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083559524 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06684854 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079938117 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065537714 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069136689 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0812856 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067194598 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086560236 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06568234 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066626011 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08264096 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078388833 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081694915 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067799085 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087273608 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06392195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066225808 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08514782 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065906728 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085226887 seconds)
  done (took 2.494177779 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186087423 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089299897 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110556251 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091377833 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085788774 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074143563 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072123774 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087523451 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071248347 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086567668 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070132645 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087008041 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06943189 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085781414 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070328101 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08568782 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07204794 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086354981 seconds)
  done (took 2.368482277 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078700558 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067455956 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106442345 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067458968 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084540338 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070531377 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089402421 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076587763 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086384934 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068154855 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091498926 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070099371 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085789177 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06762737 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070634606 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083334414 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070527999 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083329768 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076719678 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089250238 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072909153 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091838615 seconds)
  done (took 2.53797468 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082062382 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069558309 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101542584 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086491647 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064314085 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066701051 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090665035 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068628789 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089916805 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069948981 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067745483 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082168376 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072437589 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083631819 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072693634 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084340178 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069648195 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068058227 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085538841 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064156192 seconds)
  done (took 2.329848124 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088104397 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085256505 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068898288 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093353983 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069672879 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08572287 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07749978 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08483084 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069515733 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109009551 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069343243 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08444335 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07688613 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089780222 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068787959 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09218149 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076291275 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092446029 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069008917 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085487645 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109471764 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178403063 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092511234 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069138543 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084454332 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069151593 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06938492 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089630901 seconds)
  done (took 3.192977623 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067216888 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068075166 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081899785 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065115611 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065413667 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081253669 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065623293 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065381642 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084115472 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065545783 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067245432 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083635297 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067910675 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083945683 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068008655 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067760028 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084036478 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065419953 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065442306 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081453881 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067900825 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06745835 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083880688 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065884152 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080681317 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068061922 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065517755 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081783029 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068065419 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06567685 seconds)
  done (took 2.95299956 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077931622 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091806987 seconds)
  done (took 0.966899749 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066277753 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082547462 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082251971 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072858602 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08843734 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069277387 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092198322 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072373701 seconds)
  done (took 1.419126889 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08327587 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079209898 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085990745 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079721264 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095165579 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084333728 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154839072 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086322669 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075333942 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083556502 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082256758 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067296062 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091473284 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068374661 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089624702 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07433334 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066157647 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089565862 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071533743 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083102256 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069626426 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092667586 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069953347 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065599593 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085909566 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076542016 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095217573 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069711533 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087492566 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075020194 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073076844 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07926262 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068570171 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084766114 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066381368 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094382804 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083226048 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087164406 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076434407 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069690153 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094561012 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063985716 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088207844 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074241989 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093824347 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069768811 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068808337 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080562626 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065778307 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086226511 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063831459 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068721769 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079696615 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075305664 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087841366 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078333185 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069188398 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085586985 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071237985 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088006902 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074841762 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085958352 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07090273 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068434124 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093786939 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072740642 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093654916 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064781799 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062951937 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083041995 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078294594 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106533407 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074026626 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085711134 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069934303 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082386791 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071333073 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069545874 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090250319 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074561212 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084912511 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074239625 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09150146 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067784502 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071075117 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092227715 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066896979 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086339872 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065753507 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100848647 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067148373 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082269845 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065529148 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078434138 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087090036 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068145784 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08224462 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074613405 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063170515 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084910608 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069228652 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084811034 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078081776 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089779494 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073974484 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09254889 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076293409 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068132791 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087676927 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065537928 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085822087 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066944191 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075570137 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078776318 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071556575 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084858198 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068926922 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076101975 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082668673 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069105324 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09159523 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074728684 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083441675 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065799365 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071322622 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084737145 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071415405 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091910502 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067062052 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063420819 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079867972 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071195074 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084890267 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071705921 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08966632 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070247445 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063174542 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082977911 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073189655 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093116438 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068456869 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068120927 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.09026187 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069997117 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083966765 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074061309 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086737597 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067003103 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074385203 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084888797 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063679782 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087991385 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0714042 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067069097 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08765841 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071862066 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086890504 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069256698 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066398711 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090629237 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06898521 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083795609 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068161711 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08364984 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077860845 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069600651 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079586849 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06600116 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091466113 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066137915 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067574649 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083713018 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070373318 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085444565 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066734317 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067634759 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086019823 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078809346 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08893989 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06953968 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089690719 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07922249 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084855154 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070111926 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067744754 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086639996 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069664898 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092757631 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073009593 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089524447 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071072436 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065054356 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089746827 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07505546 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083630576 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066120666 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066540997 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087632046 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073845092 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088854871 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069820725 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083422765 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06865285 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072252864 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087136937 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068392096 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083729111 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07324873 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067223762 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091667325 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069038316 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094666974 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071388887 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080434532 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072191078 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083721876 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073951855 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063585525 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082720052 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067294063 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068357648 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084024677 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071106241 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07898008 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075314256 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091788144 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068555856 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06800737 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084868629 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074893449 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085902085 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071810523 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071672834 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091103164 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07858255 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084433433 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071158441 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094602948 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068169604 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062857871 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089917122 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067265337 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083801345 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066833159 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06719212 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087547173 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076184446 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091288737 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062608072 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086879068 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066754131 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067352851 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08114968 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072011055 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070598378 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086080661 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075029658 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086123094 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069095628 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088037735 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068369541 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069787606 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087019866 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072056997 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085547238 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070833516 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066658126 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087499148 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067153335 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083274157 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070052598 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067845775 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085224562 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073154175 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084305641 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068128413 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070389632 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085793619 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068795577 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085313268 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06871984 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070715603 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086397866 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06824343 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087160196 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064125497 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074242873 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084431654 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075836383 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08467816 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065836236 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089893551 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07049204 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07289807 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086285484 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069576571 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086299065 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068048444 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070631212 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091885368 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06673004 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094886328 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075594769 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085306553 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071715728 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068393272 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086278323 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067576487 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085283044 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069777545 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067863851 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085304688 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072684804 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087330824 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068757115 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069785283 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086846543 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068637355 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085872372 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062931259 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067048658 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084404273 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068342077 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094898439 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069550215 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084437551 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066850316 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069688486 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084173255 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065465845 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092428989 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076916561 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086190105 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075549399 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066311968 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086366707 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0781405 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07944804 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06645867 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065664982 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082592693 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075395222 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086029756 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07785918 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08501737 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067361371 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065624934 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086386384 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067514045 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062696299 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083866636 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072125008 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.0846832 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067760611 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068937666 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088312079 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069478489 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094154707 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068509893 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085549354 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068781912 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065515068 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084310976 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067365789 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070366475 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08652884 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066174987 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083280188 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068379654 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068377339 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086462076 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068465637 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086257661 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075424987 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067919629 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088068679 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071642407 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082987479 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071148504 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068070587 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084703109 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066971147 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.08930688 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071249616 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086381606 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076878736 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067896861 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085378871 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068912681 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083739048 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068634282 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067968993 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085487725 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067167482 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086112365 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075876982 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065682964 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088068584 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068264303 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086146907 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075141163 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08606229 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070518882 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075082113 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086133758 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069941515 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092846242 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072205936 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088636799 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069643741 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069581033 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090235095 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067546995 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09138174 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068320081 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068049055 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086240791 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066159733 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084834193 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06867105 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067203563 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09148559 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069134706 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084570928 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06813059 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066157621 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086258623 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071560027 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092627109 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070801708 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087958097 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063771823 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065785124 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086525359 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066612762 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069545578 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088927506 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074026881 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088253882 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068651764 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084334868 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076969092 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0732696 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088953391 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066748202 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088566036 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069957191 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070286799 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087277333 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068354619 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08714251 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072345921 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069193173 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084766222 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074948559 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088298711 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069323322 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086754005 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06915848 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067940821 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081862006 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069141739 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087317584 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073462309 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070578446 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086038738 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078449662 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083530603 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068406436 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07152778 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085549495 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072740033 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080999005 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07014955 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086168878 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069403091 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063804275 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085057224 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066493569 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069604534 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084397221 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064234404 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095687716 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077417372 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088527467 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067465099 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066710745 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0810319 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064658388 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084610652 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069265106 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070455208 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095220305 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067889306 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08424508 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064109699 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068765617 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08858953 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07177765 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083015901 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064518096 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067478998 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088187627 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073875085 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084088823 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068840506 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071508833 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087363927 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066585896 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088498276 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065710504 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071641446 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097697813 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068577613 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086040029 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074893514 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09270995 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06923842 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063761077 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086664473 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070704737 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08574309 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069739889 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086707048 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082569806 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088978499 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067412981 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067403925 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088066183 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068420925 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093259601 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069779542 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069127738 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089983166 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070096383 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093647944 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071408452 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093092931 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07166565 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070207657 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084750351 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068809465 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08452803 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067415014 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069906647 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087114275 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073271598 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093212184 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067714545 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096219933 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07728023 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088008683 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065701769 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067674881 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085105572 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064595686 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069141043 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085309727 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066829458 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084407093 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06873864 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068382531 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091532631 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069295448 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087023227 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069270316 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062969224 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088094414 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070697503 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086467181 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065372102 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068077759 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087021782 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072666977 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090513369 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066465853 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069708668 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087622131 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06953814 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081055841 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074717283 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067162625 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088246133 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067805302 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08573379 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070446004 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071335435 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091552157 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069486469 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088401584 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076943738 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088493547 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066022469 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06512787 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091224355 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066945548 seconds)
  done (took 46.858454512 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108491817 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082868753 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063674255 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081347608 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075790116 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082825929 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063686824 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064765297 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082292193 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068007071 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081385762 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063992332 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090165639 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087381593 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094006064 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068667787 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081815001 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064865643 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081057367 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065064102 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089911395 seconds)
  done (took 2.482700026 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076135243 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090250397 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075137375 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096378512 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069643354 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09017207 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075206798 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090343011 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096291673 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069603592 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094917157 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073039568 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086360726 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069081694 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08641977 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073242771 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095207515 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069565408 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089819846 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074774073 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090438327 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074903053 seconds)
  done (took 2.643872002 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068912508 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068072731 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086546812 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064273928 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067519798 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081125556 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071863348 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083662146 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071979125 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.074130485 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084486859 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066592282 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087494546 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063710928 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067570619 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083194859 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131664115 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071543473 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066681543 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087471188 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063832489 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088197836 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063999544 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063314003 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084761184 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071790349 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087016959 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066024928 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067120313 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084122899 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067986719 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082689832 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068995116 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067594224 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084122861 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066744646 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067915902 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085554313 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064206877 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084644054 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067783387 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063909966 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086317423 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069672422 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065404065 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083627183 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069379504 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085473052 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063574189 seconds)
  done (took 4.526721074 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085728983 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131029858 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088176682 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090714986 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.102865048 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093706334 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071539562 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111417045 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066048229 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085973104 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083623126 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.10500198 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08652943 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072555803 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092471156 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068587011 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068460413 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085656537 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071433771 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086012921 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071118655 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093760563 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10071462 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082000736 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0898504 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067622558 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08513629 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072686851 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09844935 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073327445 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090235012 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073833366 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101354513 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072204207 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085940571 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070239649 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102095907 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085850225 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069830873 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065363528 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088345409 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071665971 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092476947 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08431948 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086415871 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073198762 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08592537 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06500266 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098278404 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069699993 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095078055 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10000304 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072178346 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085629819 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07317197 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100191659 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067699799 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084397985 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070949496 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098658895 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066237835 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088760128 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082545128 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087330909 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075340185 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101326819 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072332448 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089441026 seconds)
  done (took 6.691142457 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076529599 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092624233 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083148367 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102282224 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093210412 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075760098 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092643482 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07531931 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092337272 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079215046 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093571008 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114361039 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070537743 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096061558 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075454946 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092550758 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07457995 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093051418 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074967691 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093010853 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092471546 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083502208 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093254135 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100859929 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10405944 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087907009 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07459045 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091941914 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083079528 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093140439 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104476214 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073868501 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092881273 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101275984 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086823569 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092147333 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068082797 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091851622 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075328954 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092268514 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07039372 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100625643 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073541778 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08788688 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07417501 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092330334 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10057458 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085978291 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095335251 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098051877 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074819305 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100683744 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073240866 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092655218 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099969736 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107075621 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100698368 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099401364 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074555563 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101038458 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100347021 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107536083 seconds)
  done (took 6.385173298 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089145105 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095145179 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097689219 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063804262 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066224622 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090458296 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06694529 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084086139 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077065055 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094263193 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078690737 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08925512 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075485593 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097834306 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090295862 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075549061 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090060922 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07185398 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095403544 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072847131 seconds)
  done (took 2.513203311 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077097339 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103272043 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069356284 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07335872 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090339573 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074114472 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088765528 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071008408 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087091683 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070967262 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096332998 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078430897 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087357231 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074111297 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095666388 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073883565 seconds)
  done (took 2.165936597 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080199554 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096376712 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082664817 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087206269 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066562285 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08309706 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067998817 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064684587 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083569387 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082217406 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087002126 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070818287 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.086118304 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066446966 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064587461 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08941381 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064182765 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084435036 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068240077 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100863801 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079217075 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085609225 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069106663 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069281015 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088276526 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07260155 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087203328 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06586694 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084876514 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068574388 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08638862 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075655488 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083258955 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066949922 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066229628 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084478609 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067682753 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086128406 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071346289 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068322423 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085397898 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067727521 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086395454 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06934516 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082290674 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068857882 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064690699 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092770159 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066009929 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086043404 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068046544 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089030407 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069295889 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.095731607 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071834479 seconds)
  done (took 5.125409683 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081600853 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070858074 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082597922 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066567444 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089451385 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070702836 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070352271 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089217744 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069725284 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084537853 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070736036 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088970107 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070555137 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071029723 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088646749 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072018971 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082705046 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070878687 seconds)
  done (took 2.251351603 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074426477 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067726322 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094454168 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06846288 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086737008 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070941373 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064329966 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086094664 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067360973 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086728157 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068992478 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070438356 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085012789 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070862288 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08647439 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067995174 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069636025 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08492623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069043147 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082462688 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070660945 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066902705 seconds)
  done (took 2.521815055 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073685251 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094827101 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16258365 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108043223 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083438902 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.099707553 seconds)
  done (took 1.483863608 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092221628 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099082571 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068813528 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107578786 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076134142 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088665514 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070369649 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08791861 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078265646 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101472385 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069459649 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097469983 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09673939 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078965291 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094768953 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075379298 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08868896 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069887285 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087222165 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10618481 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070291543 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096517047 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070042385 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088518069 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069988179 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095591175 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078301523 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102079474 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087775469 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07814392 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093660085 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070274611 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097014787 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102011789 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072121033 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096690701 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070186323 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106642349 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075645941 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096505054 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070408618 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095758069 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096577038 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075817178 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096450481 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069720078 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09315804 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069526422 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088753133 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11241803 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075536747 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096972116 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094262393 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079415683 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096424691 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113617027 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083655522 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09716945 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094368166 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083041562 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096998642 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074513035 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097416589 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101886213 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076358445 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096465964 seconds)
  done (took 6.643942808 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08554585 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106483306 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071010864 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101894959 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097980063 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070432815 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088302835 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070492122 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088644465 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070071739 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129436023 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070689957 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096421085 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096970378 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070362121 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089102507 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070249601 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096313127 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069539545 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113042022 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087988278 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077607106 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096893962 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096366224 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083115236 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093739935 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070154022 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089135678 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069769142 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089164649 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074953645 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089076533 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096780655 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069491137 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096192324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070308367 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088378488 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075490003 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088873362 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076150298 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097040133 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106446549 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070583805 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089331955 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083574283 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088820659 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070383746 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088971139 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07035752 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088181913 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082751601 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10268617 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101550015 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097346755 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071245369 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088897204 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0707783 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088909771 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071423612 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094731762 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07863399 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08937512 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113477017 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071120486 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089116698 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078660565 seconds)
  done (took 6.543892826 seconds)
done (took 129.60370141 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.235452749 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.201843078 seconds)
  done (took 1.300764825 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070447854 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096785745 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098748499 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129501845 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087431093 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101323275 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119065827 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080402858 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068178855 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087380957 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068746426 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088483727 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132965208 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067653759 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087774479 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070947077 seconds)
  done (took 2.326829219 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104721553 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196801723 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109985136 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067232802 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099619515 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079500184 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086423919 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077808539 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095741524 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067461804 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079313115 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09641168 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066203692 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09623653 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076121913 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098706384 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06746593 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098534246 seconds)
  done (took 2.538921202 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105035194 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142180308 seconds)
  done (took 1.118870334 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.201091125 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124253702 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201762792 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.415930096 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205927109 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.276590446 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172647795 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.17222321 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.155895476 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169707189 seconds)
  done (took 2.963780948 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100653857 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171485687 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311632248 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138076552 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086639115 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116576245 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.13836366 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090421381 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101330715 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100906111 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082073469 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098165557 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098962036 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096383278 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076555612 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098276642 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121484501 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076095277 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077971005 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097380295 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118620704 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069124246 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075802139 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094774901 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078466842 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098754609 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067742809 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086826929 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07677752 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095039179 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079604774 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114998867 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097723893 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.13083033 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.08308657 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131872213 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098794484 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074430971 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096127896 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07468731 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09828871 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07904905 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104327746 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.0784351 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087639687 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078969349 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086379226 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068107028 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.09943346 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077782001 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099613983 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079908739 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129957146 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097483268 seconds)
  done (took 6.25950137 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.746511767 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110809767 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094854809 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.806250041 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091336676 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106323259 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.713690702 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118264716 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209804068 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766271224 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090743573 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100283634 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179923268 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.214337256 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.902291222 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.283725107 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.631888397 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104793463 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110776702 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132999613 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140055788 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.177635778 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.150586659 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43609854 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076140348 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093512808 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138156561 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075613881 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.139685679 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106722179 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093757996 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155748855 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.226259263 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.155623776 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097845706 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071511665 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092945567 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148779888 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.221790988 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190065454 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158012304 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069859141 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091243831 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139771591 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131108795 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069847846 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.14005606 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.153939399 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170106311 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075517302 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076381702 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.163059361 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140086163 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.144176359 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101304164 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.269512786 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.282358606 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07087565 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120884784 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104122849 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215233516 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104696735 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.198976104 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140391617 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.168786683 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091599451 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.731323567 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.14742446 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092082338 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076428477 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11943515 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074439121 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.159771818 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.124142549 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.370583925 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.161898152 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07489538 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070683694 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226471543 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084763084 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091775297 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141594027 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076721813 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122159987 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143394309 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162961409 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146961794 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207678218 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143020204 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13854336 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095864069 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123280979 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077054235 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190980434 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192993023 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.141106388 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.185921058 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.139468664 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163013609 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.14798761 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077780265 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.150476337 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119552421 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101103116 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139969611 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189615008 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.102852969 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105332482 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07436986 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.160275429 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126311217 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087135683 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139124789 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.148590129 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.477694166 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.148060441 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069009617 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108360252 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140013751 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140982276 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0965766 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217537131 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123634105 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.147415793 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120959264 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089715358 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099389028 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162280894 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080228649 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123480055 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137169222 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098387818 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.211759927 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.168517652 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098935581 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193566672 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.16212967 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095975375 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149973011 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120312878 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146749085 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078996706 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135945769 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097313038 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.749866648 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1639838 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121975484 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075100565 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177845389 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07129913 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104713613 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083271735 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089801563 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.729078573 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106582534 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080322059 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105128533 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07443966 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121779924 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156622655 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075166885 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139117301 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201954319 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075621805 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119031521 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103729606 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.140134267 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075953311 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105905006 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104161275 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084830825 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123501204 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094418957 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084964674 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14667947 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140605994 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.192143115 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.540757644 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092873357 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083939798 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201067013 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092501899 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.24167119 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136740467 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.198406989 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142798404 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101046445 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.263863724 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142872584 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.176952801 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.107436788 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152631847 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068755213 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.157541866 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.143755181 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071930016 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096599019 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.141235972 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14447324 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142813471 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.943781469 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071235877 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203131453 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090805287 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.151261264 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075799477 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098876752 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259976317 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07198318 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.146012577 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143116951 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095736857 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083564145 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.695691772 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08405258 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.159194615 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077082019 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193928205 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.14189112 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136456476 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137794528 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096553962 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.140302668 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.188586942 seconds)
  done (took 40.441633032 seconds)
done (took 57.822379892 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257261906 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177454543 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240960823 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145045643 seconds)
  done (took 1.788955253 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144598164 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105249617 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117841968 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.086819294 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103538734 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086705861 seconds)
  done (took 1.539042364 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.402532302 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264731218 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229031233 seconds)
  done (took 1.791787492 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259943555 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212913549 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.446070018 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.296506166 seconds)
  done (took 2.239205468 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.176556883 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114286014 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06859306 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106544902 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158832419 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.251292618 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128765414 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.193008037 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080884916 seconds)
  done (took 2.222091216 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197055688 seconds)
done (took 10.677140457 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.187866046 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.31449429 seconds)
    (3/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.223199908 seconds)
    (4/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.123901956 seconds)
    (5/309) benchmarking ("sort", Float64, false)...
    done (took 0.126901289 seconds)
    (6/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.125678223 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.102106415 seconds)
    (8/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.200241148 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.180335509 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069370803 seconds)
    (11/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.216422802 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.217451055 seconds)
    (13/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.215675415 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.096592135 seconds)
    (15/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.170694325 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.20779129 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.093629744 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.148284272 seconds)
    (19/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078463017 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079077386 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099747958 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.189086574 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.135070961 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073606018 seconds)
    (25/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195109326 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075637616 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117242496 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177925129 seconds)
    (29/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.205429103 seconds)
    (30/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.099255144 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.074589318 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.117595202 seconds)
    (33/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.187084805 seconds)
    (34/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079791583 seconds)
    (35/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.10526781 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176904757 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096258362 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053472976 seconds)
    (39/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134003514 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072776409 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.177570598 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118726581 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.216777248 seconds)
    (44/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073614588 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069002768 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.114807854 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.117801554 seconds)
    (48/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.190600602 seconds)
    (49/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.142587195 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159050321 seconds)
    (51/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.105761606 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.096177922 seconds)
    (53/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073837476 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.121458346 seconds)
    (55/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.111422824 seconds)
    (56/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093977871 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074606957 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119013065 seconds)
    (59/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094513397 seconds)
    (60/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.114397507 seconds)
    (61/309) benchmarking ("sort", Int8, false)...
    done (took 0.165111182 seconds)
    (62/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.09696392 seconds)
    (63/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079768702 seconds)
    (64/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.173914158 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069757681 seconds)
    (66/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068653191 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.148519849 seconds)
    (68/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094924146 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123111112 seconds)
    (70/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.095559222 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076788292 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126576532 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068730654 seconds)
    (74/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.063938009 seconds)
    (75/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11408949 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.157702168 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055424382 seconds)
    (78/309) benchmarking ("sort", Float32, false)...
    done (took 0.128215871 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111475531 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.189540761 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077278897 seconds)
    (82/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.199726598 seconds)
    (83/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.143594186 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160197088 seconds)
    (85/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.111986417 seconds)
    (86/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.071501425 seconds)
    (87/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073541951 seconds)
    (88/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.099345564 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073785579 seconds)
    (90/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.132872608 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069279383 seconds)
    (92/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143014962 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145230058 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 0.089332205 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093917295 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.158381982 seconds)
    (97/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.138782708 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.122940032 seconds)
    (99/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100152363 seconds)
    (100/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097120355 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.171385605 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.075831512 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06802345 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054759111 seconds)
    (105/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.160674878 seconds)
    (106/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157834468 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074164428 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.119173187 seconds)
    (109/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.101381623 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106524558 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093652502 seconds)
    (112/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.129631723 seconds)
    (113/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110293247 seconds)
    (114/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053288454 seconds)
    (115/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.173493489 seconds)
    (116/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082328006 seconds)
    (117/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.160428526 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075616766 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099741876 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07510178 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170292011 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084794018 seconds)
    (123/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.159735336 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066595007 seconds)
    (125/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.076311464 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.053665869 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169793594 seconds)
    (128/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.156745292 seconds)
    (129/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07703041 seconds)
    (130/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053896303 seconds)
    (131/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112434429 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067657126 seconds)
    (133/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.136929079 seconds)
    (134/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.181690638 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.159039824 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097713254 seconds)
    (137/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054650852 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.168572497 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075509733 seconds)
    (140/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.181073614 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074067374 seconds)
    (142/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.089830417 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075062693 seconds)
    (144/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055376162 seconds)
    (145/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103110091 seconds)
    (146/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083656657 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.052881718 seconds)
    (148/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.098919882 seconds)
    (149/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072417363 seconds)
    (150/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198209814 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067818077 seconds)
    (152/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.075198817 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.0759351 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.100707925 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053539082 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074268823 seconds)
    (157/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.1583198 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068005386 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103253888 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.19248859 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067993656 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079581908 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096743208 seconds)
    (164/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075238938 seconds)
    (165/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05298301 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.183281744 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.16507944 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095776091 seconds)
    (169/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.076343411 seconds)
    (170/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.147764758 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098202737 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053143477 seconds)
    (173/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053706279 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101261665 seconds)
    (175/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071262463 seconds)
    (176/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078354789 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096702407 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.072439186 seconds)
    (179/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075012381 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090328048 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053851472 seconds)
    (182/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053717227 seconds)
    (183/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096453818 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084750548 seconds)
    (185/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053071603 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089324191 seconds)
    (187/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054141376 seconds)
    (188/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054298683 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089039631 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070264065 seconds)
    (191/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.088523386 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075140021 seconds)
    (193/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073467384 seconds)
    (194/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.123640537 seconds)
    (195/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102560642 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07601202 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077632895 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.194584378 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.179908084 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.09060366 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075849258 seconds)
    (202/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090823634 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.28673797 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067718489 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.075045316 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068637466 seconds)
    (207/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073402377 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.088234243 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093243175 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.202293134 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076963503 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097643384 seconds)
    (213/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062578355 seconds)
    (214/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07090292 seconds)
    (215/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.09322953 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053284032 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.123388127 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067224877 seconds)
    (219/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054912606 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.113116992 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078092645 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077811424 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054640223 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097512881 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097379452 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06680057 seconds)
    (227/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052596851 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095109825 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192125762 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052853883 seconds)
    (231/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075644445 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095046843 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066520202 seconds)
    (234/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07477985 seconds)
    (235/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.097992264 seconds)
    (236/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053414513 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.17077231 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063384976 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.163839251 seconds)
    (240/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054711338 seconds)
    (241/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092070032 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099521971 seconds)
    (243/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070302508 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094532296 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054292369 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068554042 seconds)
    (247/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091006192 seconds)
    (248/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067313207 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.137487753 seconds)
    (250/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063451397 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053390656 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054739854 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089787366 seconds)
    (254/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053182109 seconds)
    (255/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208918402 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052665532 seconds)
    (257/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076442526 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067292457 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068405643 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113626181 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070564398 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.157032784 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110035093 seconds)
    (264/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069740815 seconds)
    (265/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068814262 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096615575 seconds)
    (267/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05419332 seconds)
    (268/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067918142 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097183122 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089568019 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.074910339 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125615703 seconds)
    (273/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053387869 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075774524 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069000947 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067822331 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.109706962 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075764889 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.089454871 seconds)
    (280/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052945153 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.160906119 seconds)
    (282/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.054816904 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066393754 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089002285 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066747975 seconds)
    (286/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06809311 seconds)
    (287/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.095950866 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075947276 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.115827013 seconds)
    (290/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054599873 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093614918 seconds)
    (292/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098665098 seconds)
    (293/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064083417 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072250551 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.11199077 seconds)
    (296/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064067303 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.088323704 seconds)
    (298/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.054695057 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.138380652 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067279521 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069912232 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094373214 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093294818 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.13433802 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092022184 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.110874085 seconds)
    (307/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05354882 seconds)
    (308/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054211249 seconds)
    (309/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.075107976 seconds)
  done (took 33.429608585 seconds)
done (took 34.337755337 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082647088 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11660255 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076771582 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118047275 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081708467 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103311513 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.074480534 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.102440295 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081685217 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.105081032 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08066945 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056293773 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098230072 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076879064 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099171578 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093051665 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102286223 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074583724 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097212639 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066513291 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075947239 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08922417 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069220452 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058575922 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101528487 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074685188 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096165951 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077242227 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066610876 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089032858 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070872204 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074029874 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089005076 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080520977 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094992083 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074844477 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098490966 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078224775 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069647173 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088655676 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075309024 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067441622 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095384857 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075563413 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.094786562 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073042719 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074662363 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102954956 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092600771 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091268717 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075039589 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.099707015 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078443766 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073536763 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093619688 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076245495 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093782794 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093183967 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097922741 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069223583 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074670058 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.097387348 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073486761 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097125314 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075419362 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076902209 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099749528 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073346039 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098405258 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07357159 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067571693 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097531068 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071731558 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088757884 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077802939 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07855039 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088487723 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073013575 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073966316 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.095842842 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067452272 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090648812 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069671266 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074253293 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091488594 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056663009 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071303147 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094533248 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067092911 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075640116 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095415206 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073869418 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090455842 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079685098 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067076425 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094552154 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068038649 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067016304 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091387424 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072413423 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.088419135 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069284949 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076631687 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090945142 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073964157 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081438761 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089633948 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073809166 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088651529 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068148959 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082748759 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098841508 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067918321 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09139177 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067375369 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074569684 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.088903533 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067341979 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067447252 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089167834 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073544949 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067694181 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091313647 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074793502 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.103174347 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067546999 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071089866 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091206984 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067914449 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072825287 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089401279 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067889393 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091207333 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064640878 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069845395 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089664103 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074906214 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06965195 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097588237 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069482982 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097949811 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072461707 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073537929 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095107592 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067309704 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.06089203 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091220387 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069200259 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069704181 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089283652 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069793188 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066894971 seconds)
done (took 13.357026846 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06797911 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169357636 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126278527 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097954552 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111623826 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068067604 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10084436 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104245328 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092000735 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.12807517 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08861525 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109045204 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115337313 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089419947 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067966 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071962768 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091872587 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.089360396 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126078294 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110699893 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118488876 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08909467 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121686942 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091668138 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112198295 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104416668 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090485851 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072216122 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070306735 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116316003 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109587324 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071504055 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068140043 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123954576 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118830022 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086974881 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089318877 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085958139 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089831879 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06770528 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115149561 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101153015 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105286864 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082991868 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096432367 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071304379 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091304241 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.0874065 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114887852 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08216816 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11252851 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134308503 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071447127 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.106340798 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066953855 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.111430274 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105589129 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070318356 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068399461 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092029772 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068352517 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070759168 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112878619 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11620186 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071504534 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10658907 seconds)
  done (took 7.317707612 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086266353 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117248902 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084998854 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108505629 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067715064 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068597645 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090574449 seconds)
  done (took 1.59223063 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068470037 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091040286 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113360435 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090773672 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110293026 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088793845 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.100935466 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068906638 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108198602 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06944826 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089621706 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128176898 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069852382 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098383716 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092248559 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09146817 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091501994 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090798312 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072346304 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114167944 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072548995 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.111517922 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070871179 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069259082 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105256452 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068985745 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.139337915 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074220202 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091864884 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072235918 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068233289 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.139233329 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105369549 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079225639 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069020003 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105966044 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083226707 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089289135 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085355609 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096731045 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082881463 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069620243 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093273236 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067669409 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073452029 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102074639 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071223766 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092885845 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071760487 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088384681 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092262996 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083291296 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091355435 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073159914 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070593094 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097489189 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07889672 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092831996 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088722031 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070563504 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108569515 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084731821 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10610739 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084446478 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094538545 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083491106 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105609215 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072338944 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071346692 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095891979 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085368239 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089785249 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070851875 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08008416 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093517575 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092025118 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114307243 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071084706 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102996607 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068998365 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06921085 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092289034 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091942429 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096366394 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069292753 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072984083 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095026934 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067639918 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067765719 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095701144 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067913232 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070154124 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095892921 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069890733 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094280408 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085323759 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069575221 seconds)
  done (took 9.418565106 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070105193 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069562315 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093360473 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069683795 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070111886 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093303427 seconds)
  done (took 1.450111977 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09975146 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094670186 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083942286 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097987401 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107660847 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.106269028 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084363552 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107046128 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08755756 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.104782835 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084671585 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107544877 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089430627 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097680509 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084231823 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.0970287 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084668035 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100716116 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081334652 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099104396 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089845935 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098877863 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076025601 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08462977 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.096180859 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074654523 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101685497 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081872227 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104224772 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084603391 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098370922 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073449001 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096954894 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085079904 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107147345 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073882505 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097699292 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074402141 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101823682 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073249817 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108231197 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075158218 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080512702 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097361445 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.10728472 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073881946 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073347611 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101631036 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08327924 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096506944 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073579601 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097127504 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072539283 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097771463 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074065528 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107244613 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073156477 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107618183 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075126416 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073299579 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095305866 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072905396 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106403501 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073038913 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104891471 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073849002 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096350412 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076157456 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098441741 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075156601 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073624384 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094948358 seconds)
  done (took 7.447219194 seconds)
done (took 28.192924907 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.649352037 seconds)
  done (took 1.626478373 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.773098328 seconds)
  done (took 1.749248448 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.754915973 seconds)
  done (took 15.739829836 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.612745071 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.754860939 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.805238061 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135176693 seconds)
  done (took 3.286305446 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.883493547 seconds)
  done (took 1.888433874 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235562143 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22301819 seconds)
  done (took 1.448191512 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.733217103 seconds)
  done (took 1.728814693 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.291295958 seconds)
  done (took 2.275600683 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.319638903 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181560363 seconds)
  done (took 1.499266356 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.52201423 seconds)
  done (took 1.517451163 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.55993141 seconds)
  done (took 7.559234986 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229289401 seconds)
  done (took 1.236467376 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268361729 seconds)
  done (took 1.267644302 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.110445873 seconds)
  done (took 4.110501526 seconds)
done (took 47.920736717 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079173151 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083461689 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105021412 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079991485 seconds)
  done (took 1.344777144 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079438296 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075379857 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.1013244 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075111203 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102224565 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075240327 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100348154 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078906078 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074875715 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.09911023 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075549827 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097861593 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077547717 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.099729157 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072379623 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078586718 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100710457 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076216493 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100617074 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075152482 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073440932 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099368662 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07813691 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.097213827 seconds)
  done (took 3.069483731 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079392179 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074808242 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098881589 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073872984 seconds)
  done (took 1.332262941 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079253657 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.116828133 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090336634 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079082422 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.11726892 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112421691 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072814707 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072616089 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096856509 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080101848 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093353637 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100223334 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112674793 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079961042 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103767287 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068647581 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.0709856 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111290276 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079602943 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102412779 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073014527 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081173322 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093019993 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091302195 seconds)
  done (took 3.18930264 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078961283 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105035523 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103945213 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.09055376 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117303921 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067685862 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101168857 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09353388 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149593315 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067537605 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095821142 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068136381 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098249929 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066783709 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079284547 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133186566 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113528433 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093909097 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098804096 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091111172 seconds)
  done (took 2.929370552 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076112184 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072045338 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089959384 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069770283 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078180237 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09756547 seconds)
  done (took 1.4918122 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.06970985 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068978193 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092156504 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067960367 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073731053 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091934554 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06824029 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069259318 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092296909 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069137332 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068912278 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090453642 seconds)
  done (took 1.932920943 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.382216637 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093011584 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070520401 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089014812 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072758489 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091861072 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082276086 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069440614 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116409935 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068501149 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092240557 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070346805 seconds)
  done (took 2.313773078 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260458287 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079710959 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.323099987 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169412321 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141422556 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156093586 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105955753 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141419695 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198524446 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139407539 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20080854 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224790835 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135128659 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167883109 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116761303 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108574368 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211771259 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222652501 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106686996 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225583922 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20751231 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157664839 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181103168 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12911826 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136052179 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151794805 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073696253 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106438759 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231791003 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160759106 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201009006 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138673395 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099202598 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23066377 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225319034 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195663178 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16248287 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086300575 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.158046621 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165781453 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255069334 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115076313 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194070226 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135291063 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106874892 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172861577 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146202291 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146734768 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136791181 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116370618 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174829399 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23941353 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.16567988 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113833913 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138179269 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142353326 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144914451 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104124635 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264954294 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193010486 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158363346 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097612549 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098556582 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210693015 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161285774 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142047474 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152841799 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120824317 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16806844 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211088592 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146242654 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174267083 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181858693 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091000581 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147053618 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195518062 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156758391 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202874501 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179664531 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074898948 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15373625 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131869788 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084060881 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.171180923 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10198029 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209737058 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126147152 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140589661 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139878845 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137066047 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112011246 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220317761 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201387456 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106367905 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.091980012 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1315128 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151026677 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177289317 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115570601 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136179708 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147850478 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081289549 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192481875 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07715345 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153183077 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105325745 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152409621 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161737016 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077924133 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156955054 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129092199 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.128557375 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164457071 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220424305 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093585712 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109783071 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201702556 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18041032 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133673023 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175686901 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188990665 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.127866173 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130207064 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205677632 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240696075 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091599919 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224145734 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135510574 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086557017 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114484713 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155460539 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140737386 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.149893763 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085564993 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178102632 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200801292 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101291256 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098527109 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191527282 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084367361 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108775505 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141665804 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128136482 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.098220633 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.1275929 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133570499 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170342935 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153921207 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134626246 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153715593 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125774944 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225120704 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115445671 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.132539055 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10678119 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097075637 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165704045 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217364949 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082120268 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226474718 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157876911 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132442996 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148554363 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08562062 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170262069 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105469944 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073941965 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199051321 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13971164 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112737124 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.208762556 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131358335 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155600597 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.152154695 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162823966 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160695911 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186748308 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108242583 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114916768 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141294273 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154958723 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.10058038 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096909035 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109466649 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131667576 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12400292 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086293021 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17167243 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180218542 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100929954 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141016157 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124782168 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179416363 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104146214 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159487002 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148036062 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121846816 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187033084 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212529218 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166610348 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127263961 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175985405 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097185729 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076511662 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118626295 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156432348 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111263535 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085993494 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145501107 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20473775 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15814616 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168643347 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138552047 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151236031 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187488362 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098828474 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119582565 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204682499 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154959788 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155913163 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092804855 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126460215 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175148889 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136116501 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245402791 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144462281 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1520774 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207870274 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.131628299 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082674243 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133796376 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167239955 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134078896 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.207132193 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128217738 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091781131 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137919864 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.108926468 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132620823 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157336322 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149671449 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165076821 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.144599196 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186923183 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079768917 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147111542 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152489213 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151497595 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091368282 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148436317 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222019922 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097721566 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147232081 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211349044 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082728429 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152645086 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236439631 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200047474 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087622456 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138269557 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155702662 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159019646 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147918483 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195423326 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139479201 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165046879 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138821218 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087334256 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115582302 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100992213 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134190984 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123771861 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.1397708 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14631633 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.121666342 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162028002 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14069472 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139523757 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147544081 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100859335 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.119255149 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124779105 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210394138 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150031404 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232368017 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129034685 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207526976 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228545678 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077473875 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081637277 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108210348 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171595694 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112774346 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164697208 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.123798263 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107686646 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156363016 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198181507 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12390092 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070957502 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138680317 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165285621 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140508824 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126115423 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134645807 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195435753 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132063989 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081754428 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154885426 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13311617 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131542928 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236468843 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063884848 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125164196 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080691282 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10882408 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15900174 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215726242 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085967532 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153331198 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147670402 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150944138 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159218867 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130291311 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125757736 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11585898 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206594856 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158723197 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.118278218 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141660952 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1600827 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213899671 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109055034 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123417272 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231448111 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186298098 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221156263 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117209144 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144224637 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145055404 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138193584 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171544687 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111666969 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200055329 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110460118 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168233084 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133428545 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121112808 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159365019 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.124187286 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133780968 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180892563 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149230751 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110482104 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08267261 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146826691 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15133752 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135383503 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102263972 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169836061 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100790621 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166896604 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229777891 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084249352 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135849301 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124956116 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084721678 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137069613 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1323358 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114537394 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.12170348 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228466723 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.119594725 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18251252 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196587873 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143752781 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168225451 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128006781 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665149166 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106812886 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187050912 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148894394 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237905955 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126115689 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148470227 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138697283 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153635984 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175228957 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134220517 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206508341 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161666933 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.14895685 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107234623 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131934301 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140450533 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094314002 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13482646 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14436005 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14496444 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129469093 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150795303 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157299663 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.110051963 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123638805 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190111574 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147662341 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200600901 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171748484 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086875285 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147684672 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196387821 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082436455 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178226574 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18830597 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137211631 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127223441 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109465857 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109500873 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231231242 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.100210307 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194023274 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153301396 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139164653 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143839525 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.174185955 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163957111 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136793231 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155753099 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123642518 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14152143 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145598999 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08698403 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.106370221 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135559432 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142065739 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102357296 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131642608 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.145220097 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184488884 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.099269596 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09853848 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13065633 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202425257 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239303313 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091580411 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111815404 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149569667 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141830911 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14534864 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154723954 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08440278 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111003731 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110582866 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.11416599 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136175882 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143944836 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131662485 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140322336 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201014489 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.11353226 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253757195 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097781859 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135663199 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071576048 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107310289 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126007919 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10074727 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13647924 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126257732 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233058899 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099672913 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118922769 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121063317 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075512858 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11130524 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159756091 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139976658 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15178974 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126288168 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065261457 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138016136 seconds)
  done (took 71.689020114 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133772027 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104394919 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.117687921 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.172451353 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145143542 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239015832 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181044168 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223794997 seconds)
  done (took 2.407580141 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070615545 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.11720553 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103863335 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116806741 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090543963 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069836369 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.294144597 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110827126 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067941092 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114419711 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119910829 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092421481 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.468339992 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066657258 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095643619 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.085844053 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068690968 seconds)
  done (took 3.23329106 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.427639393 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.634567534 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.451363551 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074726512 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.859411755 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.109065556 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.383065525 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163948811 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092575407 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.43126263 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.733408062 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.148966362 seconds)
  done (took 17.602690205 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076379753 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070893216 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110712303 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084837051 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100208981 seconds)
  done (took 1.535982749 seconds)
done (took 115.071830974 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081474942 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.343211875 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054903649 seconds)
  done (took 1.5242908 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084081487 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08649021 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.111297941 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084670405 seconds)
  done (took 1.465938762 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075803273 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078525318 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111392068 seconds)
  done (took 1.360425622 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.279492083 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166970141 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090343018 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084969435 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080051371 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106010547 seconds)
  done (took 1.371405125 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073910963 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076789881 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100407304 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077838486 seconds)
  done (took 1.420221931 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077972004 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0541184 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056675341 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082603231 seconds)
  done (took 1.371235185 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091529679 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107406797 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082840737 seconds)
  done (took 1.379098731 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109191779 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113477427 seconds)
  done (took 1.321847116 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083133091 seconds)
  done (took 1.177045153 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093025477 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141371494 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157030128 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137853833 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165107763 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.13700695 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08900056 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115475311 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104779613 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090626862 seconds)
  done (took 2.331203458 seconds)
done (took 16.430807677 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079281795 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.388581404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360836014 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118863862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669771196 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357670128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.045687076 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120593855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121599605 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09557658 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085026092 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677101317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972068847 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345523382 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961668974 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320538231 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677195441 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070054607 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068759934 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094667809 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.003842942 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094793361 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06902385 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069481034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.67607999 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372192565 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094949046 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.314254789 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06968014 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097049767 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356293212 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095735265 seconds)
  done (took 16.033533709 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071172873 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146217309 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0745662 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085670875 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098508267 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07061479 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099983668 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070545525 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152852115 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069504323 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112209953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06899235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098599005 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070022527 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088229366 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09550477 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069737443 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069863731 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094942482 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069692334 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113889098 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069165744 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069512779 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095586492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070184417 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107645821 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070143018 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069658934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095268756 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071762778 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098601246 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06990161 seconds)
  done (took 3.880042028 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116296836 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153582811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075579888 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13076753 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115032824 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098018363 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.171622396 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094412592 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156576333 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069880442 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111832615 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069713132 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12907261 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06996646 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11549938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070279982 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07045437 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096051333 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070401479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096497559 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088735228 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069808824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095705841 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070390641 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096412739 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082402148 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095068083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06962126 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070081511 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097388482 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073536482 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069991348 seconds)
  done (took 4.170642004 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074338366 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076452324 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.1097559 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085036524 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097670736 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073897996 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074572221 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098049427 seconds)
  done (took 1.801297863 seconds)
done (took 26.986657835 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079823512 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071825073 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.100528941 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082885333 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.100873963 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080680369 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069428458 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101988453 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078246203 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074601164 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103188626 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069565439 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.09876781 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069505508 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077098225 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095748579 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080930395 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100349474 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080408336 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080886338 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.097889471 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079095979 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101970457 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081219073 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107251134 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08103743 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084738464 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101758721 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071319608 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098318106 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078431689 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.113066855 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070142659 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081146992 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095858694 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070386256 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096054935 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069645269 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080770191 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.101643352 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07215969 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102984792 seconds)
  done (took 4.733173768 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089873579 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092884902 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113371125 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066912372 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098485575 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066623033 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116463488 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064801896 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.0607307 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116490685 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057372655 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061351504 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.090816942 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05594805 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060951918 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058162115 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089550633 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057993502 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061369819 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.08734777 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059400389 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05570361 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088306215 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064387713 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058140881 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06382117 seconds)
  done (took 3.067263962 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076761918 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085096742 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115964553 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130994286 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.134336269 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078891125 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106048809 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08968206 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114525216 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068865207 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073003465 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125130848 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088944003 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102182976 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.0690709 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115816325 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083417375 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071660349 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101556236 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091515376 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112733867 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080135584 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120001078 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083413432 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069171731 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098324642 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073553847 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109549369 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073965572 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079246626 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.10006262 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072673263 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.097505539 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080584 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.109481612 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071298948 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091729394 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105298515 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079565372 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.096165298 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073019409 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069954697 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116275343 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113857194 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095740997 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076217964 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10331771 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079041123 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069425231 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114399749 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078414849 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095577927 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072244119 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069137156 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095915869 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082515089 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071099894 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.098228722 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07822344 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.098532852 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.081749885 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07372251 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111393495 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068864178 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10366202 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068021689 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069970557 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094645725 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092936327 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097358026 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109718443 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097253137 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070987549 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077666533 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.10329752 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075150399 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.096208164 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084827107 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078811443 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098990098 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078213849 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099523466 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072340967 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089691122 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098952964 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071101426 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070701596 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102393504 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071950571 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09724904 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083224553 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069240382 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098310944 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086672342 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095728125 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070658414 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075474359 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101071443 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069012352 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107790197 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074275561 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.097077505 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078278571 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069349411 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099480789 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078329943 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.099725211 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068128154 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074987815 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102549278 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069580623 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070445662 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.098374102 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071356596 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105353615 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075340451 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073656166 seconds)
  done (took 11.470409642 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.192788727 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.186711967 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07137373 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.181186332 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077679686 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108611475 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.181815319 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097169039 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097760872 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069531098 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070091933 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131765376 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125717864 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.107070424 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107294328 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069502886 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115291616 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104852117 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.183047107 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.177850051 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11752225 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07709959 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071191746 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.098517408 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071572713 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078722862 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114226992 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078175249 seconds)
  done (took 4.289974558 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08328004 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130613353 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075524547 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091195933 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120460864 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070153478 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103118327 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071284854 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109547732 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080982606 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097600699 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07549324 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076058277 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107216696 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070221805 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107042048 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079285017 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071464214 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100679082 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074911697 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106272976 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081934625 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.100334747 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068855495 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075395387 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096184562 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065420815 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113821725 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06935173 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119226257 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067425265 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075343983 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.10975388 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070266695 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09633171 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07227784 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072386141 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100453383 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070245689 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067993175 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.096123831 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059208893 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068619518 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109519158 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076036224 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089048405 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075293592 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.074051278 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101819699 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067772088 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099594443 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072223173 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072173405 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106454432 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074080918 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.0748081 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101472983 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06751608 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105245969 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073172134 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065767877 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096156563 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074625481 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068759305 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105621085 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073869939 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095796909 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07288335 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074908339 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.104341204 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073084394 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072414267 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095582798 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071806765 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102090897 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07402803 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073890062 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096943388 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070091566 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069611166 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.08489946 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069561376 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055816469 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101428216 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068030977 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067986194 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100120369 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075458073 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.109907311 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071127048 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103616759 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070118747 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06916862 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100551076 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065399276 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072191282 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.113949635 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113553021 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069718242 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067759224 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.112860868 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074737839 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068967477 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.086263923 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075934698 seconds)
  done (took 9.99453865 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096588033 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095017222 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099223336 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083983163 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.125849709 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.09456833 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105254037 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075778645 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07131315 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114722842 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06933706 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10659493 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069537442 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078801199 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124798921 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07739622 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099771903 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078457005 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07361385 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136734888 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084117155 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.110914676 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081715069 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.0983459 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074747144 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08085376 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.125157371 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080954199 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107990431 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086001721 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082008169 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.125330963 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087528818 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101184756 seconds)
  done (took 4.348090841 seconds)
done (took 39.008219375 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.194774324 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.394344988 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.183206752 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.060470457 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.187564915 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.224387476 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.195466934 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.185460883 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.236682011 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.184499117 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.4033124 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.820611066 seconds)
done (took 58.401749114 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.25251169 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.32758739 seconds)
    (2/2) benchmarking "String"...
    done (took 1.456191166 seconds)
  done (took 3.912563693 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.543981023 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.192894632 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.474584864 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.184930609 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.187381421 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.64954662 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.786890012 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.003243956 seconds)
  done (took 27.610203965 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.194289191 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.543334054 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.501727249 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.502185449 seconds)
  done (took 17.873934066 seconds)
done (took 59.322935029 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.178279683 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.246171319 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.187935456 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.171928386 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.291200683 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.213361248 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.516729395 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.426332711 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.196095854 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.192212275 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.187729253 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.189354051 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.203337107 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.519279491 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.186996411 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.196623353 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.230869989 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.679364536 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.571032046 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.202715371 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.191049284 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.189363829 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.201624055 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.203324808 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.22907032 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.187394921 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.18891659 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.206792967 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.37080732 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.191442187 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.273918625 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.686428648 seconds)
  done (took 191.039350223 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.185061327 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.319271543 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.382831012 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.210712411 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.654443512 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.382948152 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.316601308 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.71314481 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.199811076 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.186420266 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.499477818 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.183090065 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.560048971 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.148939964 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.192292532 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.28499451 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.368227673 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.542049238 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.196775228 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.413417257 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.207289056 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.50849378 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.45163044 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.440621977 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.216740077 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.187152237 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.20301829 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.21174895 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.370648538 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.30563086 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.190085878 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.219330562 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.722243633 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.042790837 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.199172506 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.216921438 seconds)
  done (took 149.762883364 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.444750967 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.183393879 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.182972789 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.185424717 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.212264573 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.184223838 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.690543899 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.691536173 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.682697174 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.467505435 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.243027813 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.393960928 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.183845236 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.272813481 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.194707453 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.184249204 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.199638379 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.207952639 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.185862995 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.184907619 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.689553376 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.196145836 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.22307403 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190598596 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.183332584 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.212391773 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.576557364 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.181877425 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.183757995 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.212093685 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.494145896 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.226287546 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.183787538 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.455896209 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.15628503 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289907714 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.184623638 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.210700633 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.183256791 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.449578803 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.184143587 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.183850166 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.186226656 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.726946774 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.18478391 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.677673198 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.183306795 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.06196315 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.178841377 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.182758729 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.597331023 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.588332954 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.179244055 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.177699424 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.183976617 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.178358656 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.176872268 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.202634865 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.657847816 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.269414483 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.174096297 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.184043244 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.206823767 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.177241953 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.186993825 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.175608961 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.863276377 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.23069634 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.287255035 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.670542735 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.183811204 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.264599448 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.289582353 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.181011191 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.181207046 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.174121997 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.174612022 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.280597851 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.182461509 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.173018564 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.536801704 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.182836172 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.178527438 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.238594474 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.178324825 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.268116345 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.177116627 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.429512419 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.178795554 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.179202314 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.873510243 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.266434392 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.179714466 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.180815437 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.17288032 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.538689368 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.650417984 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.315510468 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.181984501 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.594028258 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.182189196 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.180894978 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.54909556 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.642697166 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.721286327 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.183603965 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283785646 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.184613514 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.182587131 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.180805585 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209592585 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.181490952 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.238833057 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.180601541 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.573792015 seconds)
  done (took 341.932899952 seconds)
done (took 685.311651731 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.839847677 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.818795886 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.926997021 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.816141645 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.79879212 seconds)
  done (took 10.329068579 seconds)
done (took 11.45532514 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.348534867 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.348426911 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.23454618 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.351169469 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.207184003 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.364939078 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.328431343 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.203241712 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.275400685 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.249127043 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.273165367 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225600194 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206314517 seconds)
  done (took 17.742664 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.476808631 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.458876548 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.244659096 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.462130834 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.222007906 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.468969045 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.364126294 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.376253187 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.36141065 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.198077868 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.19536942 seconds)
  done (took 15.957728485 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.481726496 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.458552824 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250354013 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.471245298 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224093925 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.468160225 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.366144814 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.371464373 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.37867774 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.197004296 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.195556509 seconds)
  done (took 15.991215326 seconds)
done (took 50.818670641 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.192840774 seconds)
  done (took 2.318649955 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.223603629 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.381563254 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.205897133 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.196264487 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.194716546 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.194211496 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.194690038 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.193316507 seconds)
  done (took 10.91422021 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.192265399 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.191251394 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.190874007 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.191888824 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.188368048 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.187387882 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.191862978 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.188558641 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.188993437 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.188617926 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.192800568 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.187580149 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.191401287 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.18830969 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.191813332 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.188479133 seconds)
  done (took 20.169780248 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.189474404 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.188275154 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.188444421 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.189643253 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.188976202 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.190404031 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.18961607 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.188880598 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.188878165 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.188200324 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.189471885 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.188450927 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.189822856 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.188297502 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.189266917 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.189570732 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.188499174 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.189186845 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.193904036 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.188866105 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.190874239 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.188763834 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.188755379 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.189231994 seconds)
  done (took 29.674921373 seconds)
done (took 64.2060054 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.019360003 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.627914603 seconds)
  done (took 8.776228226 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.191328925 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.191481179 seconds)
  done (took 3.513648167 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.19111216 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.193872489 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.19172993 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.191823391 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.191121058 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.190617541 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.191156866 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.190539632 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.19075923 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.193152083 seconds)
  done (took 13.045282644 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.191258784 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.190807484 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.189722342 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.191452157 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.190686833 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.189113657 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.191962931 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.19144467 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.190949791 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.188952131 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.191169022 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.188781514 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.190940218 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.188545881 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.191029837 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.188872457 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.186959961 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.186991122 seconds)
  done (took 22.547435688 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.185376795 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.190345425 seconds)
  done (took 3.503563567 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.186087607 seconds)
    (2/7) benchmarking "second"...
    done (took 1.188260322 seconds)
    (3/7) benchmarking "month"...
    done (took 1.187713184 seconds)
    (4/7) benchmarking "year"...
    done (took 1.188723841 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.187446357 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.189154396 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.188409786 seconds)
  done (took 9.439801846 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.19211948 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.363611982 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.440420108 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.774535679 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.191852761 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.193885789 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.023556468 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.194278219 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.194722346 seconds)
  done (took 13.696646411 seconds)
done (took 75.651583625 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.140342561 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.182325514 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.950488126 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.19892022 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.199533146 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.52543997 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.193362913 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.315090713 seconds)
done (took 36.835353024 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.203358077 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.876843335 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.879927916 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.18503583 seconds)
  done (took 11.071374989 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.174232344 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.992021385 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.173434545 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.119258871 seconds)
  done (took 17.587238786 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.726889958 seconds)
    (2/2) benchmarking "read"...
    done (took 1.512775171 seconds)
  done (took 4.367477965 seconds)
done (took 40.357894774 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190498115 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.190124058 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.190488269 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.187667149 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.190589853 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.189465081 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.189360442 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.191559545 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.191129637 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.190628889 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.190777354 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.191012241 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190703348 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.187142155 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188735616 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.188243377 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191551781 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.188141121 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188681901 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.188340781 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.191501166 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.187924321 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.190298467 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.189666484 seconds)
  done (took 29.683146396 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.191925979 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.191477723 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.19172122 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.191356671 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.190378928 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.190949039 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.191480108 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.189336897 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.191312519 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.192824228 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.188880325 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.190390459 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.191704808 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.188717325 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.192888223 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.189594769 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.192040904 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.188864648 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192705198 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.189704261 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.192273827 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190232496 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.190675684 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.192350321 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.189709236 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.190045535 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.192015952 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.189274948 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.193015469 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.191278921 seconds)
  done (took 36.85924288 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.196912805 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.197307878 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.193144605 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.194040412 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.194224232 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.193651711 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.193925609 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.194914688 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.193293009 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.193057792 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.193160506 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.193620722 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.194217286 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.194427808 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.194055959 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.193535864 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.194197988 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.193605215 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.195324211 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.192345112 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.195052847 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.19503573 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.194420699 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.194903123 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.192971029 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.193419871 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.193591432 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.194233513 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.195228223 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.194689371 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.194158173 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.19401938 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.194596871 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.194273069 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.195754587 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.195489186 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.199671208 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.201408234 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.195451573 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.194640088 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.195524936 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.196550846 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.194146688 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.194330145 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.19566952 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.195731098 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.194980596 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.196372207 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.196300678 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.196712139 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.195690409 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.195176044 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.196860876 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.196551352 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.196551301 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.196929811 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.194772009 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.195799907 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.195761564 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.196990289 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.196439344 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.196795557 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.196880748 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.19675712 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.197542146 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.196414598 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.197702295 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.197939437 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.19646661 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.196930993 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.196239253 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.196133875 seconds)
  done (took 87.198889453 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.195934781 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.193960315 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.192625766 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.193397377 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.192810294 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.196181932 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.19466508 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.196038597 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194335863 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.196264055 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195753887 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.195467535 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195098647 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.195784051 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.196945021 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.195030053 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.197620377 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.193636493 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.196808807 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.197896195 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.196987269 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.193846473 seconds)
  done (took 27.43276844 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.199181428 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.198516552 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.193230097 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.197818216 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.195389023 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.197079237 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.198199479 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.197454483 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19810365 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.196366792 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195812932 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198900925 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.194630692 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196422684 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195611626 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.195617444 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.199009271 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.194031931 seconds)
  done (took 22.677254922 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.195321104 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.195830501 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.197410456 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.195047165 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.195910008 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.198919561 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195278105 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.197458602 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.198716561 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.195775341 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.19857848 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19823806 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.198754077 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196201154 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199110153 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.195068066 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.198758942 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194677166 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.19986684 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196880318 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.195703378 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198788054 seconds)
  done (took 27.472863205 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.199774753 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.199309681 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.196382927 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.196981237 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.195778563 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.198706605 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.198136189 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.195494524 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.199209418 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.199437108 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197752485 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.199140482 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.196565356 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.197498256 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.197373768 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.198125848 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.199526047 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.197886625 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.199681018 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.195843092 seconds)
  done (took 25.095711159 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.201289632 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201679258 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.202185729 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201406342 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.201671674 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.201679011 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.201697418 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.201651067 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.201971078 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.203027156 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.202178856 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.201593477 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20267031 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.202244879 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.202357907 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203087602 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.202680377 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.202067521 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.200679452 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20152812 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.202532758 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.202947276 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.202738369 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202789977 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.203291601 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.203361773 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203685595 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.202750103 seconds)
  done (took 34.801861496 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203273195 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.200127291 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.199044474 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.199512061 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.198921555 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.199888352 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.199537838 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.199243179 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.201851912 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.198896444 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.202536068 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.201316157 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.201854324 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.2006707 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.202599981 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.201262395 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.202049507 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.19950114 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.200316125 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200126192 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.202920558 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202225442 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.20283265 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.201457346 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199697699 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.203325452 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20095294 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.200161181 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20279872 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.199863116 seconds)
  done (took 37.169751913 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.221337689 seconds)
    (2/2) benchmarking "in"...
    done (took 1.22197239 seconds)
  done (took 3.584049409 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.200188403 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203208434 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.202924402 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.200606288 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.200445922 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.202925014 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.203043162 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.200347567 seconds)
  done (took 10.75609119 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.201852811 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.203455333 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.203891818 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.201953582 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.204259716 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.20430163 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214146938 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.217359672 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.206702354 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.203727752 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.209179263 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.209426715 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.208305776 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.205159833 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.20455491 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.206430184 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.203732503 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.204026945 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.204590673 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.204653651 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.205484121 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.208352096 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.207294225 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.203138386 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.206246686 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.217156012 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.211061943 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.20527976 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.20600713 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.211167948 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.206005891 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.202974801 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.206335634 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.206242449 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.205622989 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.205213844 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.216780828 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.220532561 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.214673663 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.207880305 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.206172591 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.202865671 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.208619971 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.208341283 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.208586294 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.206483141 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.205500266 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.202209204 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.205720694 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.208806539 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.208824468 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.206080201 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.20337991 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215006977 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.208250719 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.215668989 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.22049451 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.20955845 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.213096812 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.219227218 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.219855432 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.213168689 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.209555998 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.207274198 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.215729881 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.228424177 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.216348539 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.218519481 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.203731628 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.206610405 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.217093706 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.221235909 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.216374399 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.207790523 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.20836941 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.206767576 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.208811037 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.207699759 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218417278 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.225531957 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.207664707 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.208796819 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.216661881 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.226634237 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.206466089 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.207222506 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.208843513 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.208527686 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.209342095 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.220333912 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.222952322 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.207827023 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.208275881 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.207702983 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.210392001 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.208267628 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.207733411 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21068746 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.205580691 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.208694105 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.209685834 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.211588477 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.216496532 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.209323925 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.210314705 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.220268184 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.209775192 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.207856913 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.220054623 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.209301236 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.209478502 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.211339925 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.215855793 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.207734409 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.212049448 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.216078211 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.20911076 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.211166315 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.20959821 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.209295499 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.218454807 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.234178439 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.210197013 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.209382534 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.213954176 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.21869239 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.210826171 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.215462775 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.210194611 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.206813033 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.208082934 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.21398779 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.20978677 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.2133585 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.210822303 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.213507349 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.208391834 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.211600356 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.210115743 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.213290306 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.212035133 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.210642238 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.21262025 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.215002041 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.211771436 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.212887121 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.220469337 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.213092556 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.214605533 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.213018176 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.208774553 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.211715292 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.214920256 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.213024879 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.214216047 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.213390616 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.212185593 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.212963668 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.211537659 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.211836945 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.211783711 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.212518857 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.215519667 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.21251418 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.217589819 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.211660329 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.209285257 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.212654928 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.211954409 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.213153996 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.212249873 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.211062733 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.214488541 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.218979896 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.212860379 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.212555623 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.217459841 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.213305013 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214300993 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213260152 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.215195372 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.21998205 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.214256492 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.222288618 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.214253228 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.214061915 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.213890918 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.215180411 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.212862318 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214100678 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.215717191 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.218275443 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.228044931 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.221622642 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.21577947 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.217004969 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.214669046 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.216390436 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.220953371 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.215956086 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.214082269 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.215183097 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.213588817 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.215026607 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.217886383 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.214872292 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.215827931 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.214748616 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.214751255 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.214186696 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.214365566 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.216195853 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.216830868 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.212612367 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.21554024 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.215318479 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.213550253 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.21226131 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.215150011 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.215854943 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.214882053 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.217042311 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.226330201 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.212492363 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.217297046 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215540651 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.217002327 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.213635423 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.21559892 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.219251011 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.216991185 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224938365 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.231569915 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.217490924 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.224564621 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.22970727 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.214768402 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.219933708 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.216224326 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.213909129 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.217901062 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.220289392 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.217680453 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.216190898 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.215811524 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.216100343 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.216576485 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.224963644 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.213790566 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.21604853 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.21629236 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.220465822 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.214335922 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.219164037 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.218309458 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.217634285 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2193989 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.21706694 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.217234349 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.221776093 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.217696984 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.217431027 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.216453543 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.218710191 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.223008148 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.224616325 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.21831919 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.222266355 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.219468413 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.220225801 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.219246045 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.21855279 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.217093659 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23121272 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.225605314 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.226446428 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.221068956 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.218387007 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.226588016 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.219658061 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.222742185 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.218447227 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.219648901 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.218943476 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.217634297 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.2165856 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.220862907 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.218924225 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.22174255 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.219502036 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.221221858 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.219071004 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.217806361 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.219858285 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.221279319 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.21904846 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.218825265 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.218274606 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.223291715 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.221300597 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.218305503 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.219295573 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.22765774 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235642851 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.221341178 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.218916535 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.220632925 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.219344653 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.221815176 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.220433358 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.222195615 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.225252801 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.22234677 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.228546208 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.221121055 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230572499 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.220493189 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.222892132 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.226681782 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.216546306 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.219162328 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.221817021 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.22062319 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.229805658 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.235684355 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.221172839 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.224415696 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221095539 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.221812819 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.220620386 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.221736276 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22129571 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.220913764 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231411042 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.236239864 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.223705315 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.224200326 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.219676719 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.222354612 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.22167583 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.221418337 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.229822615 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.222638593 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.223805465 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.222020377 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.223164743 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.221621839 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.223340026 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.223412187 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.219048508 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.22293774 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231306634 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.238052069 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.225539965 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.222831014 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.236040331 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.223245536 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.232407609 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.237518886 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.223643192 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.222693319 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.223144825 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.224719147 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.223419612 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.225083846 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.223687393 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.223181372 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.226009593 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.225902486 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.227829824 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.223333951 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.224822865 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.224630068 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.231135531 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.244958605 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.225584959 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.22767132 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.220877621 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.225245555 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.226914854 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.224341146 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.223527726 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.226673488 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.232402427 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230332919 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.225729721 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.227237899 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224488856 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.224859397 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.2241726 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.224362643 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.225637687 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.224788029 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.227817011 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.225374543 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.23161079 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.226283317 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.225100957 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.227546023 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.225588618 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.236484315 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.225834863 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.227164387 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.226388685 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.224187254 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.226183017 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.225775849 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.22564861 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228687571 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226372182 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.227472441 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.231020928 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.231564744 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.228614001 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.225267661 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.226187646 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.227117491 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.228579771 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.226819219 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.226615318 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.226788655 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.227651561 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.225310502 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.229329779 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.224862891 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.22694311 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.228375488 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22698706 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.22856527 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.233089917 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.228954473 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.223952206 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.227844415 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.228193175 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.226170507 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.228912769 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.239859862 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.227748014 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.234427155 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.235125583 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.232295718 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.227741599 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23015395 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.23325152 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.227752829 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.231402023 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.228389301 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.230014711 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.228874026 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.231459119 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.229922269 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.238894007 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.229611692 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.229836452 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.239219408 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.244808441 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230023376 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.229263555 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.231131077 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.228820945 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.224488957 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.228490688 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.22847092 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238716893 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.246291031 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230161226 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.230862153 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.227028881 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.229419395 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.231294469 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.228755426 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.230168583 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.22578941 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.230523251 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.228874803 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.229609203 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.225982653 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.230659873 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.2300709 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.232207332 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.234793939 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.226045841 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.232406573 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.230658012 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.231491873 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23076439 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.230076295 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.227002488 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.228488462 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.230193255 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229436956 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.231159402 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.234508984 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.230112439 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.230775454 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.230234658 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.229735226 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232672781 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.237990412 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.234465487 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.228374831 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.229461943 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.231720896 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.235551881 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230818555 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.230158101 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232544991 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.233715519 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.229986385 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230978525 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.229968131 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.233450165 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248999853 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.24495829 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231556622 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.231892199 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238740627 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.231475498 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.229740174 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.232588652 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.235608955 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.233702603 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.238219283 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.232065998 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240173643 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24623143 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.231481574 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.234305094 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.233988482 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.238941566 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.235838924 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233109133 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.232944149 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.237264171 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.249393802 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.231716834 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243405824 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263141894 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.246782122 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.234305403 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.232387115 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.232266852 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.234178739 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.238390165 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.233820244 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.233948648 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233940601 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.233364396 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.233964839 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.237584399 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.234958467 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.230519924 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.232554367 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.234581766 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.235375948 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.230473823 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.229644844 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.228883655 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.228123836 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.230541375 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.229973785 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.230362558 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243848696 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.237554554 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.221477688 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.222118926 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.217886783 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.226986999 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.222985689 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.229516374 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.22806428 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.218265588 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.211769339 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.214238377 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.212156394 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.20845245 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.213830606 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.212784117 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.212165475 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.20786797 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.220074619 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.212357119 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.212548052 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.207652281 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.20499201 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.20589261 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.20737868 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.206005007 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.204226172 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.205866237 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.203316973 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.205819879 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.203275119 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.203813451 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.206380412 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.208336309 seconds)
  done (took 728.702230861 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.198841809 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197330647 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.197958225 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.197745205 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197447874 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.198320887 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.19810026 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.198500376 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.197022599 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.196869364 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.196415023 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.196679237 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.197624202 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.19763339 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196262368 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.196516422 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.196396155 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.196585657 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.195344366 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.196262195 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.196137763 seconds)
  done (took 26.281898918 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.198313751 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.194843246 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.195986363 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.198218473 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195366086 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.198051497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.195480317 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19807985 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.198153062 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194844119 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.198700312 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199173103 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.195950699 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.19635318 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19558579 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198190478 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.198566523 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.195906867 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.199031133 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.196884687 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.198469357 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.19672587 seconds)
  done (took 27.474510209 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.1994351 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.198960257 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.198255556 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.19537452 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.199464775 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.196622955 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.200598156 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.198867882 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.19985442 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.200861922 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.198011401 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.200099849 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.205505129 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.202848583 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.201905764 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.199654274 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.343935655 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.201046873 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.199996723 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.199466112 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.196289277 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.206809957 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.20161642 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.202432962 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.203490346 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.202690269 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.204122292 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.20385921 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.203297677 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.205668129 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.206431114 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.203771334 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.203918648 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.205837839 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.204860681 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.206769995 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.206791445 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.204916403 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.201845585 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.204182848 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.213706098 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.222845373 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.204881947 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.213006604 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.20647037 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.205331059 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.207924526 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.209139546 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.202747389 seconds)
  done (took 60.244980841 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.205015042 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.206671337 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.203018068 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.204966489 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.205740317 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.205442973 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.202873575 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.206042691 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.202184285 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.202745608 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.203899211 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.204138868 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.203214728 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.205625303 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.206030014 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.204171375 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.203985242 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.202283048 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.203299883 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.205271496 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.203545294 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.2064829 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.206775571 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.203232567 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.206774453 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.202337584 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.203882738 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.205428753 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.202841586 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.203909123 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.206104392 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.206481579 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.206881902 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.204249295 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.204305252 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.207109309 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.207795864 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.203940192 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.207203618 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.205414315 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.206953033 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.204105473 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.204925596 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.205803679 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.204976981 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.204687095 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.202904615 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.203046828 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.204599635 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.204998947 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.205579646 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.204088192 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.206550688 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.202521277 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.204013486 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.204159605 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.20075483 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.200304046 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.2025075 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.200357849 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.200301782 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.20280353 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.2002782 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.200909419 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.200589611 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.198872655 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.19904022 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.201334171 seconds)
  done (took 83.019665729 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2007631 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.202492681 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201502958 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.200988754 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.201572843 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.198930869 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.199553272 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.200212203 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.199320127 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.199544953 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.199407366 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.198450462 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.198873941 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.198586113 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.199066885 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.198460279 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.198214979 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.198715697 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.198802106 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.198303168 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.197964383 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.199118571 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.199329875 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.199171121 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.200204649 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.199733664 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.200295066 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.196691739 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.197109289 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.196525238 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.198152042 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.196452284 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.197239242 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.197258288 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.197048063 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.197473493 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.195962804 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.196485212 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.196162708 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.195749701 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.196409718 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.196580618 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.196405373 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.197675271 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.196409437 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.197028274 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.196690969 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.196771951 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.197212739 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.197273123 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.197290414 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.197220705 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.197389659 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.197263312 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.196660303 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.19731361 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.197257196 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.197175386 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.19706118 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.197286627 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.197915322 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.197157953 seconds)
  done (took 75.422567083 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.197524422 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.198015392 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.194926634 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.194887687 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.198022414 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.195389374 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.19800972 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.19832115 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.198130849 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.198521156 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19832278 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195813144 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195833044 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198619729 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.195852799 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196007876 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.196029041 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.195202318 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.19813152 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.196295066 seconds)
  done (took 25.073509017 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.197563424 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.200445918 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.195641243 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.197507125 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.199736816 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.197237025 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.19993593 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198906343 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.196720549 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199915211 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.199904377 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.19982851 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19700243 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.19782423 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.199869299 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.198062437 seconds)
  done (took 20.313811011 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.19765245 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.200420581 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.199634987 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.199471842 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.196741877 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.197566013 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.200573851 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.197950966 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.198028317 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.200362612 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.2009712 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.199610378 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.199738201 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.200334321 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.197784673 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.199811747 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.197065051 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.197240321 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.200740562 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.200586383 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.198167506 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.197997535 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.200502407 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.201114752 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.197648959 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.198771184 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.197445867 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.198884645 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.198227335 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.201111185 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.198070331 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.197980372 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.199108723 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.198284915 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.200437958 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.197954833 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.201763922 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.201769005 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.201799411 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.20191194 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.202270051 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.199807709 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.201404357 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.201613381 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.199957652 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.201768385 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.199829682 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.199507752 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.199723117 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.19924933 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.202430991 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.201604029 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.201522996 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.201843564 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.201347433 seconds)
  done (took 67.123589255 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.201829557 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201431096 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.200049312 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.201821599 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.202666303 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.199863346 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.202562583 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.199617064 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199074821 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.202009568 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.200924273 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.202404271 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20048435 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.202796596 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.201288303 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203814527 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.199753635 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.200430681 seconds)
  done (took 22.763141257 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.20131916 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.200675952 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.203635129 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.200648299 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.200145146 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.203087259 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.200419754 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.203389004 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203159578 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.200475387 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201149147 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.204408571 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203152331 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.204903892 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201527941 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200377189 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.204148885 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203577509 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.201534512 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200531208 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.20430594 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204042774 seconds)
  done (took 27.591706972 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.204782909 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.202993507 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.218598525 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.242955047 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.229401109 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.202767984 seconds)
  done (took 8.442808152 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202405215 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204332516 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.201630365 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.204976657 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204446121 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.201907273 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201413207 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201692292 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204954722 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203129113 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203034655 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20441501 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20466342 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202600774 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205736923 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.204915613 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202463578 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202699536 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203465779 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205847581 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20237924 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205174347 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203702973 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202891255 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202676083 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203276182 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205478439 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202663034 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203555678 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206141489 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20599583 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20283193 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206014469 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203882457 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207051721 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206283872 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203323514 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206093038 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205925876 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204105198 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.206188626 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206380596 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206001536 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204592409 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207065269 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204007404 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204424537 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204211872 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20370765 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20710391 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207647482 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203946713 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206558498 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206856043 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207078547 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207064132 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205510674 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205685048 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20735287 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2052435 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20438825 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207206816 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205074477 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206269635 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207458248 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204863462 seconds)
  done (took 80.655500167 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205720533 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.204868204 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205553122 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.207140365 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205782017 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206012131 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205353518 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205666279 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205132379 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205564921 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207745556 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205617586 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205346649 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20536211 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207225557 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205904908 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205589145 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205935986 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205721951 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208396136 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206249187 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206716931 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20574684 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206861734 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206689853 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209090718 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206598283 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207509239 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20665237 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205813055 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206920421 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206437927 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206229624 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.206344756 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20669041 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206518213 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206411001 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206741141 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206627693 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209355291 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206969386 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209751153 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208353325 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207359369 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207777002 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207405132 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206108419 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207866669 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.207198175 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208071331 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208036994 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208066492 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208661716 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20726354 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20849439 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208008484 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208181124 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208058756 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208134939 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210896436 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208297584 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208611471 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21074725 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208534916 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208189754 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208281716 seconds)
  done (took 80.817224764 seconds)
done (took 1677.788953301 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.195155249 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.237868645 seconds)
  done (took 13.581291132 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.372342967 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.324432386 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.209211117 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.216333055 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.21100238 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.234720929 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.211759243 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.21151392 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.20953056 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.210248882 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.21249868 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.396236922 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.256639406 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.206549132 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.206635822 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.300342539 seconds)
  done (took 41.148219804 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.224995543 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.221168798 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.308018539 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.231246228 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.235291299 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.378442489 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.265772983 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.214450556 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.364187638 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.250987487 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.553262156 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.232071345 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.21369466 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.168032686 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.230247873 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.373877182 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.426963163 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.559865638 seconds)
  done (took 27.596253759 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.590626642 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.217972738 seconds)
  done (took 8.958892175 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.246458739 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.261528362 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.228221311 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.227465072 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.246978692 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.269135879 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.227159594 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.222589265 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.256818876 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.279939254 seconds)
  done (took 63.625514636 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.228219507 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.211362613 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.212683261 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.214995527 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.205925937 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.204182565 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.208850762 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.20510301 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.272823506 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.319782172 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.230109526 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.222448354 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.212389074 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.218751034 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.21222738 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.247757711 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.340205656 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.216995794 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.208639581 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.217331434 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.215069642 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.335794991 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.247703654 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.211322298 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.323157657 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.281845412 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.216482257 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.219259872 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.330908091 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.214047897 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.216949286 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.214066155 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.214062821 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.751751561 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.686108075 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.227975663 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.235564894 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.22613041 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.21119582 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.384891024 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.21271231 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.225407504 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.20910837 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.653900855 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.373067046 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.311867474 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.324260014 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.215404105 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.213652041 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.272603666 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.215617389 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.213707838 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.239519936 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.92382494 seconds)
  done (took 103.330200147 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.224955055 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.702840185 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.373365671 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.227983576 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.956387785 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.860092467 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.208517108 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.450263953 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.274169466 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.210322287 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.53078563 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.664121161 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.212181939 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.208859028 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.270531161 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.294375115 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.211501661 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.937493494 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.209205481 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.214410144 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611050748 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.222594169 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.224052906 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.255896936 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.245338173 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.63810503 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.47610669 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.625864272 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.211377421 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.209746485 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.628523312 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.216594594 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.286916898 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.217283481 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.463518236 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.519632996 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.501041004 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.209728572 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.215450917 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.210046313 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.238219745 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.628143166 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.518919498 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.208645055 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.209912359 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.640426479 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.214711858 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.217621156 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.217811455 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.402830225 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.195296701 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.21271494 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.494871829 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.212195714 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.554683623 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.248969918 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.25773423 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.662603451 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.212001105 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.269057582 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.21514321 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.210006433 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.210144616 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.209568806 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.210437559 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.520044391 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.598922794 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.21268605 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.525220732 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.624381543 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.210988521 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.683892035 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.006845558 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.217223198 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.258972028 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.208958848 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.754821946 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.664946699 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.218170888 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.20963128 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.509017097 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.212517336 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.512987663 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.223555423 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.212700346 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.621358966 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.235847249 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.255559254 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.214748522 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.230808534 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.848376052 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.215274419 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.476937719 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.231245415 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.211421218 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.211795437 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.253622008 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.211880811 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.213925733 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.211013545 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.692680996 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.218762738 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.501359163 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.227242036 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.215958506 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.212186341 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.217240713 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.215356411 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.422463216 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.644720727 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.217938427 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.211297839 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.222119986 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.222802917 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.515549795 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.21908603 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.481181855 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.213847283 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.2143691 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.229257631 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.909853381 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.228575873 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.212150295 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.224502431 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.048670071 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.427108135 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.231253874 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.22625884 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.213914032 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.225588502 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.428844909 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.222010468 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.237913863 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.217337107 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.867316221 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.241288877 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.245273472 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.857217673 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.216362389 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.064072919 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.226804864 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.211533241 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.508155015 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.472802971 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.529934703 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.215255236 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.213918392 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.856633575 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.24511344 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.346477837 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.230694226 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.232449551 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.4115643 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.483339297 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.218456248 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.776740767 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.216299295 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.420232598 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.218705037 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.522089751 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.660318698 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.215368824 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.218123497 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87172792 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.876485267 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.837787497 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.218162624 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.527545848 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.210249959 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.670858312 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.214972998 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.222216756 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.640876653 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.215417423 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.220358767 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.216160437 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.21600086 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.285851676 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.388050763 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.748751249 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.223137676 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.638393282 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.229789 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.215832334 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.224150613 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.216510996 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.567580226 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.2761631 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.220648371 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.220132974 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.216313508 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.217726685 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.654742005 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.058303492 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.218508808 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.368741403 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.802005163 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.219506103 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.219375819 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.846026432 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.49600899 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.684869249 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.283381775 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.488535164 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.227150777 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.253411875 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.900658546 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.226837225 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.65026667 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.217863537 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.220667519 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.763265561 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.215955628 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.292316885 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.216722859 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.217855418 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.703433898 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.226128215 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.22192881 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.423719052 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.220124519 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460187267 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.225513502 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.248188402 seconds)
  done (took 1081.725616623 seconds)
done (took 1341.115027963 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.221635944 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.221801392 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.208530675 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.227234216 seconds)
  done (took 26.03768817 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.231264016 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.228026915 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.224216565 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.230947212 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.229985093 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.227827162 seconds)
  done (took 8.538273177 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.270790852 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.219017665 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.226980687 seconds)
  done (took 18.882222417 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.417334346 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.371400688 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.550478332 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.126499566 seconds)
  done (took 9.627176958 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.232116838 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.229353865 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.227690146 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.231382626 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.228977968 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.235910485 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.230865556 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.233611585 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.231933415 seconds)
  done (took 12.250532672 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.701868637 seconds)
done (took 81.199105452 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.324928653 seconds)
    (2/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.632189948 seconds)
    (3/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.212554797 seconds)
    (4/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.259688771 seconds)
    (5/309) benchmarking ("sort", Float64, false)...
    done (took 5.475685725 seconds)
    (6/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.268664396 seconds)
    (7/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.334746078 seconds)
    (8/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.2135597 seconds)
    (9/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.263059662 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.224291913 seconds)
    (11/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.6761871 seconds)
    (12/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.421866357 seconds)
    (13/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.799216087 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.245151303 seconds)
    (15/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.5912657 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.734220503 seconds)
    (17/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.461698583 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.052535136 seconds)
    (19/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.26584214 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.260767627 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.255639562 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.227491679 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.270226855 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.995643393 seconds)
    (25/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.225298109 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.25291994 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.620364815 seconds)
    (28/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.233718346 seconds)
    (29/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.514218865 seconds)
    (30/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.308114026 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.506394807 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.072457831 seconds)
    (33/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.320611323 seconds)
    (34/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.226286291 seconds)
    (35/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.371878579 seconds)
    (36/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.225014222 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.324385969 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.680808754 seconds)
    (39/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.239275074 seconds)
    (40/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.45848171 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.246098636 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.010187585 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.653769698 seconds)
    (44/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.454170346 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.35814993 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.349301278 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.618744934 seconds)
    (48/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.382766772 seconds)
    (49/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.570332406 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.38443892 seconds)
    (51/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.556999467 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.342491531 seconds)
    (53/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.339145028 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.266644109 seconds)
    (55/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.379837122 seconds)
    (56/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.251686563 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.49140333 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.727508511 seconds)
    (59/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.255405408 seconds)
    (60/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.701298184 seconds)
    (61/309) benchmarking ("sort", Int8, false)...
    done (took 4.271520003 seconds)
    (62/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.258517538 seconds)
    (63/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.299356245 seconds)
    (64/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.787101971 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.290751337 seconds)
    (66/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.228341416 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.229330291 seconds)
    (68/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.29786262 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.256367836 seconds)
    (70/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.409807961 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.228884051 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.318755129 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.244382477 seconds)
    (74/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.793321935 seconds)
    (75/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.232027949 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.363098306 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.216909201 seconds)
    (78/309) benchmarking ("sort", Float32, false)...
    done (took 5.223169617 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.556607455 seconds)
    (80/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.259390112 seconds)
    (81/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.229359147 seconds)
    (82/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.253474434 seconds)
    (83/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.998699701 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.932800576 seconds)
    (85/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.243024647 seconds)
    (86/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.207926685 seconds)
    (87/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.25088999 seconds)
    (88/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.316536138 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.904413281 seconds)
    (90/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.907387167 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.251590212 seconds)
    (92/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.234863444 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.382161584 seconds)
    (94/309) benchmarking ("sort", Int64, false)...
    done (took 5.360950754 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.459859444 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.236702071 seconds)
    (97/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.392326243 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.286246922 seconds)
    (99/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.772877069 seconds)
    (100/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.260296012 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.626538019 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.244524265 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.426035812 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.232409718 seconds)
    (105/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.757835684 seconds)
    (106/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.728527758 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.663778281 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.774276886 seconds)
    (109/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.416161551 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.389688792 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.924911449 seconds)
    (112/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.584087506 seconds)
    (113/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.533722873 seconds)
    (114/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.589665693 seconds)
    (115/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.359409157 seconds)
    (116/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.921404046 seconds)
    (117/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.911050584 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.262282077 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.241003303 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.447146836 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.233649226 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.476812238 seconds)
    (123/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.505539944 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.930918386 seconds)
    (125/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.222145454 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.639287233 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.233974694 seconds)
    (128/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.68174651 seconds)
    (129/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.057402672 seconds)
    (130/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.768960131 seconds)
    (131/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.266026047 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.075931077 seconds)
    (133/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.881598886 seconds)
    (134/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.63042875 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 1.752641364 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.258356846 seconds)
    (137/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.777438641 seconds)
    (138/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.435316531 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.521665904 seconds)
    (140/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.53400503 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.922064379 seconds)
    (142/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.279401229 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.492766762 seconds)
    (144/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.813861744 seconds)
    (145/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.233074865 seconds)
    (146/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.400153146 seconds)
    (147/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.955251808 seconds)
    (148/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.2849424 seconds)
    (149/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.29925011 seconds)
    (150/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.235091437 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.84060048 seconds)
    (152/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.457362932 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.33962526 seconds)
    (154/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.23566146 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.022520575 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.003794622 seconds)
    (157/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.226370089 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.623192999 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.928113504 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.224765086 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.92406665 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.323173688 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.263513863 seconds)
    (164/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.262843089 seconds)
    (165/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.733734892 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.455449888 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.237389639 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.059047319 seconds)
    (169/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.444958728 seconds)
    (170/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.522784201 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.260088869 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.393297503 seconds)
    (173/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.371308412 seconds)
    (174/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.23270494 seconds)
    (175/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.299996363 seconds)
    (176/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.296256277 seconds)
    (177/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.278751103 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.752546415 seconds)
    (179/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.276186116 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.737856 seconds)
    (181/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.995795594 seconds)
    (182/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.455827455 seconds)
    (183/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.366075384 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.322559364 seconds)
    (185/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.819624751 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.829880207 seconds)
    (187/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.224245901 seconds)
    (188/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.418700109 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.936532558 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.34795807 seconds)
    (191/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.238684412 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.265197732 seconds)
    (193/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.319566951 seconds)
    (194/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.572415148 seconds)
    (195/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.775196153 seconds)
    (196/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.032082191 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.281127715 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.237409505 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.221132652 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.592801556 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.334173808 seconds)
    (202/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.765970383 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.233998638 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.296720456 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.443555905 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.645799616 seconds)
    (207/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.336006817 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.670897112 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.358106306 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.229520114 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.773918479 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.454308038 seconds)
    (213/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.56607702 seconds)
    (214/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.240573848 seconds)
    (215/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.358244362 seconds)
    (216/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.998616698 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.223653227 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.925630851 seconds)
    (219/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.982094928 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.949345382 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.240096461 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.242314871 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.237816599 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.289751108 seconds)
    (225/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.247206429 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.340219363 seconds)
    (227/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.547855657 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.262787739 seconds)
    (229/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.28921869 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.020049509 seconds)
    (231/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.26855532 seconds)
    (232/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.266951184 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.280976934 seconds)
    (234/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.265702781 seconds)
    (235/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.240444513 seconds)
    (236/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.518049137 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.243132851 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.52770062 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.253683918 seconds)
    (240/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.537250343 seconds)
    (241/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.32524211 seconds)
    (242/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.324874952 seconds)
    (243/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.348062633 seconds)
    (244/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.266579263 seconds)
    (245/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.237146004 seconds)
    (246/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.254058737 seconds)
    (247/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.346002107 seconds)
    (248/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.344562553 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.313044603 seconds)
    (250/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.385539003 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.834472923 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.267052049 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.019467822 seconds)
    (254/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.751279329 seconds)
    (255/309) benchmarking ("sort", BigInt, false)...
    done (took 6.242991052 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.526656148 seconds)
    (257/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.739233325 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.433815883 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.25444822 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.288313085 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.30744405 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.348910915 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.558385537 seconds)
    (264/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.381162946 seconds)
    (265/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.25998286 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.269699747 seconds)
    (267/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.578563716 seconds)
    (268/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.484653221 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.626888683 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.481011877 seconds)
    (271/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.228884924 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.328696285 seconds)
    (273/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.392044766 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.451564481 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.341729913 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.250910506 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.46512667 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.33702293 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.085284386 seconds)
    (280/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.441308321 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.343327572 seconds)
    (282/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.664487101 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.327818821 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.082085129 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.3599276 seconds)
    (286/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.239802511 seconds)
    (287/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.370319637 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.379448101 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.899592053 seconds)
    (290/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.232488658 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.288863022 seconds)
    (292/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.252028536 seconds)
    (293/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.94387575 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.285603047 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.203679229 seconds)
    (296/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.378837161 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.576196611 seconds)
    (298/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.752888883 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.354097793 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.645325444 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.338383956 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.261294945 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.610021812 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.261589163 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.375300176 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.492338095 seconds)
    (307/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.220897207 seconds)
    (308/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.710400737 seconds)
    (309/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.507664625 seconds)
  done (took 878.724814923 seconds)
done (took 879.889636008 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.272321519 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.265922434 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.249698578 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.268330992 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.361322932 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.279831252 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.261946437 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.253308067 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.29963394 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.300865751 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.249327728 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.277953509 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.252576864 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.250026275 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.250964384 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.264850717 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.163302937 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.252471868 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.269661831 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.260113608 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.268230726 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.250547357 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.300127717 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.279466214 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.255870041 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.254800397 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.255092178 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.270941588 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.363265043 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.253896815 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.255131947 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.262138256 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.163242367 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.251156257 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.247554355 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.271033844 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.263078959 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.262126935 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.256466751 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.282640608 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.513824549 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.253484581 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.254134215 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.249145086 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.249549774 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.255344335 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.253821338 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.257534962 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.265346405 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.266118992 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.530599068 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.268411645 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.255816117 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.253138851 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.263573344 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.250106048 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.25343163 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.268402956 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.272030956 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.266546925 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.162125077 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.255189555 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.25551021 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.27124712 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.260861466 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.573410935 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.250770276 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.258888365 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.531837599 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.259987469 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.579757669 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.262435064 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.25076865 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.267967653 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.285137554 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.170328685 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.249247042 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.253854849 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.262033173 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.252685231 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.263663274 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.263004488 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.259953237 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.254022577 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.268682969 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.278924007 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.264714237 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.256036712 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.263665078 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.273004318 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.260464816 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.266300739 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.258218709 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.2495255 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.264351509 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.25446552 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.257128295 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.253697912 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.259074002 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.263631449 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.52707145 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.273429718 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.253555326 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.251180926 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.254067639 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.269692653 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.530079091 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.254270158 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.277115457 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.298340863 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.257372499 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.16794888 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.259834083 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.271726958 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.260983471 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.259179122 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.251287589 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.154704777 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.544162642 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.271741017 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.256966098 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.249906663 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.272454823 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.257901972 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.251007964 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.163107045 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.257314287 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.270279606 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.376360515 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.260140671 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.287827284 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.25476342 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.260487684 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.290928048 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.270332693 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.287904915 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.259635376 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.272744583 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.273423558 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.252751072 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.26970393 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.26437802 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.259594866 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.259548786 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.251485034 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.286753476 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.270036015 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.268749411 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.278849316 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.378399061 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.253644042 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.152914953 seconds)
done (took 211.015853647 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.316164949 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.250341735 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.359008026 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.254853931 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.348892635 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.354521599 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.251461593 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.251575243 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.248965082 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.632164933 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.249505196 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.25232797 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.248391669 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.251189526 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.336691703 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.255167122 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.251909909 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.635925966 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.255247093 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.326324419 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.249451707 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.253924563 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.255414556 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.641238118 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.251339551 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.250119826 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.325141887 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.252564168 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.605474401 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.253091601 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.249098573 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.601169084 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.345957297 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.266687359 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.265719242 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.262163951 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.350935524 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.270826775 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.332843593 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.333772333 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.360913149 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.291856156 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.256996086 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.248381662 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.257273077 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.257352107 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.254862905 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.280403244 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.258359991 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.253800765 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.59907885 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.265595544 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.26434035 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.256009302 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.254358839 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.276743673 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.248642293 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.257661105 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.345361532 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.257692252 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.318783126 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.644170141 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.636405682 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.256482536 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.247016097 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.253000655 seconds)
  done (took 143.241153793 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.324318817 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.326096475 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.36372475 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.258366473 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.30106325 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.362597833 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.256224419 seconds)
  done (took 10.380120396 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.263477681 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.250863057 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.305695482 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.3059862 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.25781384 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.405900725 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.25537497 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.266811362 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.253093073 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.307889614 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.25980153 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.259446995 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.263986559 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.248518657 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.306762151 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.270114265 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.36956127 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.260224073 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.255214325 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.406860831 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.255492472 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.26597303 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.307316672 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.270533275 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.261157091 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.259006702 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.823905837 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.255917361 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.256612257 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.260029728 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.253694316 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.295175623 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.25945825 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.258784541 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.256498375 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37608171 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.258741905 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.255154511 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.257830355 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.257975172 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.257150982 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.261016645 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.253949236 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.25813581 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.259363739 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.282501222 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.260604485 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.257658446 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.26189151 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.260379683 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.309484193 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.260986149 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.2585513 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.256585114 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.316588358 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.263847817 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.259506634 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.259099703 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.260041138 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.259339831 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.415877339 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.308944205 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.261256379 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.309103434 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.261257028 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.262422064 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.261021627 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.261697682 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.315471132 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.260557079 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.312535779 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.25762158 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.416747182 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.285545629 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.262462634 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.263917967 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.263639806 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.261967794 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.254851905 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.267817546 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.258712908 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.262897681 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.268867392 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.259905922 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.259593505 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364548271 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370349949 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.259284661 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.274623041 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.269658307 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.260491053 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.315374418 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.262586685 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.261528733 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.312802285 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.377825348 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.317581637 seconds)
  done (took 145.952238886 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.267431471 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.271183779 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.264624986 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.279589616 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.263613255 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.262909711 seconds)
  done (took 8.807766318 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.262804079 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.26405486 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.264016894 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.263360626 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.262986399 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.26341012 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.26343545 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.265846613 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.26612135 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.264917196 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.264688286 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.266223357 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.266600053 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.265032787 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.263383661 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.263712803 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.264691776 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.263250819 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.265340757 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.264848951 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.35919894 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.261655825 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.261774515 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.265368762 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.270359237 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.262177479 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.272389546 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.260282447 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.264613486 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.272032375 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.266769135 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.266848806 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.265423725 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.271161078 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.268687139 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.26656018 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.265530272 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.267897789 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.261715536 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.266505843 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.265660103 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.265655346 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.264429833 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.264167851 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.266409494 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.269685862 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.26991987 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.273236165 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.262201948 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.267448728 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.263983756 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.26670322 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.267093578 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.267674904 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.270935421 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.270086313 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.267494166 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.266101851 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.267258342 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.268599864 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.264476512 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.267201818 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.26688002 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.266393138 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.270500402 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.266577127 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.26263136 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.269942827 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.268083685 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.264508246 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.268454573 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.26530219 seconds)
  done (took 93.454009709 seconds)
done (took 403.021920343 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.402592163 seconds)
  done (took 7.606305121 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.498094832 seconds)
  done (took 7.695845975 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.09878015 seconds)
  done (took 19.313983264 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.278534173 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.353057045 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.276782121 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.263577831 seconds)
  done (took 26.378013568 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.416040542 seconds)
  done (took 7.621396947 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.270404679 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.26663609 seconds)
  done (took 13.743308491 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.632906227 seconds)
  done (took 7.839547871 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.452127498 seconds)
  done (took 7.666930735 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.277295724 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.276236719 seconds)
  done (took 14.018448068 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.256879118 seconds)
  done (took 7.465118832 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.886387669 seconds)
  done (took 8.095383666 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.269243014 seconds)
  done (took 7.477571673 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.334082929 seconds)
  done (took 7.542917001 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.406873667 seconds)
  done (took 8.614068901 seconds)
done (took 152.278828968 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.264919825 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.268273994 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.267049315 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.268355391 seconds)
  done (took 26.273909753 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.304884906 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.306304532 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.307925934 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.316753162 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.309345061 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.305061154 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.298539052 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.298372555 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.317518917 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.308363136 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.309522009 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.308178617 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.306239989 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.299431536 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.308941916 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.309292497 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.317699558 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.307978765 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.298932153 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.310284688 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.274163068 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.317284542 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.310420173 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.273916423 seconds)
  done (took 32.534496206 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.472472041 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.345000403 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.427363715 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.325469329 seconds)
  done (took 6.781044203 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.326032044 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.327155514 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.339595828 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.376593792 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.412174747 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.337388609 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.30105733 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.296146277 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.28220049 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.327192677 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.403129241 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.34398914 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.410594632 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.275851019 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.462056848 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.274293267 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.275176621 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.32630595 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.377597606 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.391169637 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.27450618 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.326713962 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.329875997 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.343724861 seconds)
  done (took 33.351605488 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.273408341 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.283810837 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.279748244 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.274663469 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.274438111 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.274971661 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.279737476 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.276008854 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.295887248 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.276990638 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.273090138 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.274446966 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.273851238 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.275282507 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.275731833 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.288248473 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.288267686 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.274882639 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.280012585 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.279764512 seconds)
  done (took 26.784906138 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.269504654 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.12691535 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.619647268 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.524780366 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.269659514 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.269045436 seconds)
  done (took 27.291572882 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.337556305 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.454469564 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.277055946 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.593915537 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.67179657 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.277622547 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.277347005 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.486786173 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.755713133 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.75821822 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.328342383 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.339386105 seconds)
  done (took 18.771215287 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.277376816 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.271068514 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.282301753 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.286075413 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.32601626 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.281571071 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.283262511 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.270519627 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.328222023 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.331775805 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.28017029 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.326900377 seconds)
  done (took 36.76012105 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358897875 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314325689 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.158889079 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986001095 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.649722584 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.482833633 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.010461334 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.68455219 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.278626286 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545313945 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.900682496 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376262625 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.526160572 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279346472 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.274247007 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.191388434 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499500503 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.731047042 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274936759 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92603331 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300055293 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.278863235 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.012137568 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.300565789 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.483860925 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.398005367 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.533018381 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.273069017 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524250243 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284823148 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28407583 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274189039 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547305358 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903146217 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366822655 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.283470208 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.948861085 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.985708516 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.267582718 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.933835512 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.686609008 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.277457373 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284377895 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274077653 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.208192129 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27447161 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694617554 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.281491332 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.985843672 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.27470322 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284549424 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368254033 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.278165388 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.090276546 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277978747 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275600969 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.272735388 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281397223 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848429669 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.386959677 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287955996 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.210152382 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.63211452 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.935422611 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849679489 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.378686256 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.279009978 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.27923869 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208187788 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.935694753 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293957571 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421149382 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.296342931 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923972528 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913186237 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.914596296 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.219158276 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801533298 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.280412732 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.210996752 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.502977072 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276584158 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20929273 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.232754261 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.209231912 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938215249 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286344505 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.635263632 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.2864466 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.687624365 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.288756484 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293139636 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297404734 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.499904937 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.160645543 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275813684 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.686411695 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432323283 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297719635 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.688815985 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213297626 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.280647926 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.529507696 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.488438849 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.277241014 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.214961505 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.464206414 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290044334 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.293935497 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.280082244 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.289130538 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.802579453 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290326875 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.40378186 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295744313 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.279009616 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977669631 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285980915 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.379618862 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.933001556 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.519936933 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.020565609 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281629389 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361799179 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279931108 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.278523393 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.045397403 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.792926129 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.279212002 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.280621874 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282597801 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.290115835 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.278670507 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222717492 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.278205883 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.951668409 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.283529885 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.50303581 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.286532097 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556318773 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213028512 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427201814 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.371378311 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.501226153 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.397270152 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.28043741 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536432682 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282482971 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.285863005 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.29256143 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298953203 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378144092 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302219255 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.284186484 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.536777749 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.282559118 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.284139216 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.496729528 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.28411404 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28230608 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.286294005 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.103589352 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806590249 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258880514 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.291347047 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16925701 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.295185938 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345882399 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.285823469 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.292319017 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.953010751 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.069782364 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.286220749 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.278985746 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505392921 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292045858 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.961773588 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363757985 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.464363429 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.812214447 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296687157 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.215658017 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.990553919 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.974017661 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28325913 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.215532866 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.282882053 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291172749 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.292173253 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.769309995 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.812549089 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285338937 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.964365684 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.289779771 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.292873898 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.288159668 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282538642 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.926926797 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.425105529 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292287159 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.294760957 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425633468 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.295556063 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.216910797 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.285985769 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.288254768 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.281646497 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.282366422 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315052416 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.962241509 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744267854 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542725658 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.951420926 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.296234392 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.057865949 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.313990754 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.282419767 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.728668121 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300185443 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.288556525 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294595047 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.294630398 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.971100484 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.942874377 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854399921 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94806739 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765473244 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.169269518 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.287182103 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.287329966 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.703262187 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219441113 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.841746139 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.456244666 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.703102798 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231450771 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.468313519 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.397865277 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.983960116 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.294931818 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.511833246 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165258838 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.740531375 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.310534117 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.496219297 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319973832 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.293811751 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.213550016 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.570304392 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50382573 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.74418241 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366789639 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702416961 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.744675227 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30116528 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.284357371 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.579716252 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443108415 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.000450826 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.456625111 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.288512481 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.006089063 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75897019 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.286673088 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.510472562 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870329599 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296054371 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.472792394 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22215706 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.296454522 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.296190926 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.287922961 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.417968104 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.290098759 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.539950723 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296774537 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.219753304 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.293774518 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770700373 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.142766152 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.292297099 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286388858 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987663267 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297393538 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541455 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.28908359 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.898656105 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295410333 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.219928609 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2204043 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.981176708 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.291664109 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262163407 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750890819 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.622663452 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.277604829 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313331633 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133059378 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.540658058 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.30247332 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.817996128 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512108193 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.059295685 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.308876163 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.387224333 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.785949952 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.28882016 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.28739953 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.52314881 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.110951878 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.51247636 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.193940507 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.203431898 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.286326241 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.500535075 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.287921857 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.014692173 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526352109 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.000799803 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.30064996 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942898036 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315614389 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.999958346 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.218231587 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.649085922 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.296548448 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367711148 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.299148311 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.298740791 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.298877537 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448182702 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.010239716 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305049832 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.301770055 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382349201 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.452022059 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.907189739 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.294192899 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824841956 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965087741 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.826274526 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.302754328 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.289664458 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290853807 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.221945761 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43748114 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.515097611 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.563125135 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421104821 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.708731788 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313749319 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.793059637 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305865255 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.514969371 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.56425313 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.184487785 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289917299 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.316286998 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.290715392 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.300688311 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.501293086 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756506922 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818457336 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409315762 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.29037403 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.708994219 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565003894 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290526006 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292047765 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.880623086 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.293295909 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.59738896 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.298259576 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.021840362 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44044966 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.296522452 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924973713 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.301181559 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.450227417 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.062086482 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.992230694 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.545528572 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.712449581 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.303395414 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827708897 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.934688847 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55671659 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356621028 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.302413967 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.409059171 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435872093 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.293321696 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.294289234 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292840013 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135606188 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.002962702 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.302089643 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830048077 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.554159132 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.290071285 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.301156647 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314781811 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.301327069 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.515583288 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966657257 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.518420984 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.30328415 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.296334116 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.107172492 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.828945712 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304387815 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226431813 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.296284846 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513147352 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.530752861 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314945141 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.745556018 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.001612351 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824550762 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.26647972 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314629452 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302010338 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.936234234 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833009863 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.914101867 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.760553801 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.853751824 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295786667 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565927399 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.29578562 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.293488903 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571324457 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.297582855 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.298423556 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.30567296 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.826317498 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995210144 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.296337357 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.010251226 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.224451368 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634185063 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908462268 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231959816 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298044767 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.467045258 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.297994113 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421468748 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.305353164 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.292121316 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302076392 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.029655232 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569453812 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.299466098 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.300895218 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.844838828 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.307230443 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305362301 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517660058 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303958987 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.964197157 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.64721511 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.551139146 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.295404431 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.285289217 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.29925954 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296579603 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.283177579 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.494268784 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.788168084 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826539118 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.304666783 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.309300707 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.300300116 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.512653703 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.508030991 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.053596537 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.323223814 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297524654 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313295765 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.20241225 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.799731748 seconds)
  done (took 1552.743873523 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.318514781 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.343274824 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.324779656 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.319131466 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.311320648 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.344900365 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.351651117 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.33983904 seconds)
  done (took 51.891239249 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.297936148 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.510854598 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.324509181 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.3014426 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.308369685 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.29982018 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.704945144 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.297294548 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.302378388 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.304297526 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.29484552 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.30129216 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.878995266 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.309060299 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.305187091 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.291730367 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.307716995 seconds)
  done (took 64.584239297 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.306055419 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.5184331 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.371035857 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.310825785 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.003208376 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.296313869 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.53714252 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.364125335 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.308602778 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.334983275 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.950946584 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.334953876 seconds)
  done (took 82.87536499 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.304681858 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.305948154 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.302940942 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.305001609 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.305826187 seconds)
  done (took 7.756516407 seconds)
done (took 1969.608811469 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.578000637 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.926694782 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.883341211 seconds)
  done (took 5.048185875 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.441254473 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.489985796 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.612923385 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.615302972 seconds)
  done (took 7.39461667 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.572002085 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.667008577 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.479415632 seconds)
  done (took 5.95023149 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.583271886 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.306199053 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.414979166 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.295264195 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.296114959 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.295796022 seconds)
  done (took 20.11939962 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.299603935 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.300222714 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.301788694 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.2995214 seconds)
  done (took 6.436190478 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.282758298 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.036882134 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.286153325 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.300783206 seconds)
  done (took 18.145179977 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.050351989 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.057319722 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.044247891 seconds)
  done (took 7.386281666 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.302118361 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.137946776 seconds)
  done (took 9.675562944 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.591986466 seconds)
  done (took 2.826833239 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.432277177 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.569875876 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.232150714 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.19778096 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.267454899 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.751037188 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.763745444 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.393752372 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.189273694 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.240732873 seconds)
  done (took 26.276110648 seconds)
done (took 122.374646725 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.823788231 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.543464469 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.498924718 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.791972114 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.530222613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.496484062 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.723224971 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.754743127 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.344734385 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.2921724 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.795280822 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.530238856 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.458448042 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.541841864 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.459103901 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.542067138 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.526444772 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.864374921 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.515705933 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.682183868 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.723999325 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.431789354 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.625210793 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.443593043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.527192359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.452257812 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.024269049 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.541313401 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.684687019 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.085670371 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.450484444 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.852287102 seconds)
  done (took 188.792968782 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.305669532 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.307679079 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.300561852 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.302590125 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.301909389 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.298317664 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.310693191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.310271514 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.300849273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.302360905 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.298283517 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.30837661 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.301286358 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.305720512 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.297686873 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.324809524 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.297559071 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.302854476 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.298508862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.309523206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.304435021 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.29844197 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.30103473 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.311638403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.300424204 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.300917166 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.303097722 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.313169421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.303253921 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.298995387 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.31227433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.301188633 seconds)
  done (took 202.978779832 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.311234711 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.29999841 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.301113832 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.306102919 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.300127012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.313864509 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.301841631 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.30095844 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.298396327 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.310591696 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.299703744 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.298389291 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.302579719 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.301730853 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.305333135 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.313033521 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.300411299 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.304988645 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.30334915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.314769607 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.299600398 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.306157576 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.299782125 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.303893258 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.300479106 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.316777037 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.302787742 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.299829689 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.303040698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.312749293 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.301496343 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.323846356 seconds)
  done (took 203.000805623 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.501620548 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.309681586 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.312021159 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.261209338 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.309694105 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.312768876 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.303039548 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.508115319 seconds)
  done (took 14.058859993 seconds)
done (took 610.06424037 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.500862235 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.255685659 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.500703883 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.329934131 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.013089691 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.330703291 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.330826948 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.486042348 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.204617735 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.490627503 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.530281884 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.326425165 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.683256945 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.329187973 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.564484519 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.423165227 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.15348075 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.254865472 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.626771467 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.774731075 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.571139445 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.735965977 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.490373066 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.200863858 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.686667904 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.742629302 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.963924077 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.152956997 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.332092062 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.634361135 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.946611537 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.21363408 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.380474582 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.363860924 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.420239231 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.40162331 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.184026366 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.364333954 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.500292112 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.492647717 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.776197577 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.012554248 seconds)
  done (took 88.916980978 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.304300115 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.298757517 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.303417335 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.298301031 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.299172564 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.29953819 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.301223151 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.297317698 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.298580325 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.300364887 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.304164896 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.304978457 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.297347058 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.302163182 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.297318636 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.29814199 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.29823352 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.303672914 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.297060547 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.302982574 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.304837147 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.298685117 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.298478623 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.297223125 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.299576968 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.299183292 seconds)
  done (took 35.053859429 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.312009941 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.532016796 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.700681212 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.318548077 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.310711493 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.314273191 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.380862458 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.315684597 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.316045892 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.313216766 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.456994028 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.315542256 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.345599302 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.712661099 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.314989866 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.31239066 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.313152035 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.316087404 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.540188829 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.322176663 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.38511643 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.313497525 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.381633564 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.325805021 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.314082671 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.314321794 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.317147438 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.832388454 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.317468256 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.459702484 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.005841138 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.384154273 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.799999379 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.71537623 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.016884455 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.318146736 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.315911172 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.461994939 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.315833035 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.317061528 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.3824034 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.318310891 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.717631084 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.927862413 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.334415844 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.317012423 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.858556292 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.462016337 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.539768701 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.324799336 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.732437191 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.317530501 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.316534018 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.315250598 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.539849645 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.325116526 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.317957183 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.873015691 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.320472685 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.388850123 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.315929117 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.316585502 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.551831341 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.319562647 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.537472548 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.31963429 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.327830986 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.314852993 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.717166779 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.317857966 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.94537427 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.334893958 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.317947951 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.462098455 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.54125814 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.888637398 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.318444704 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.55332544 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.810572213 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.384841255 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.320566967 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.83126275 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.39539696 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.32514163 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.317334119 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.31974523 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.316073353 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.363721896 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.388071406 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.87547181 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.938450042 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.892749386 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.39188556 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.33410781 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.321019439 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.882753848 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.32237653 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.319957914 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.711806276 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.950115149 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.334022176 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.325119983 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.93480144 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.334752082 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.387450945 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.325199323 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.72268823 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.325812016 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.361552108 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.320600684 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.329475116 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.325094359 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.394707816 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.324995096 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.320890489 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.925955653 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.48616187 seconds)
  done (took 172.8468134 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.325135589 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.311843986 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.313253584 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.322856723 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.311635472 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.320029421 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.314811908 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.313672539 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.31654574 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.312117519 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.313366417 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.311983599 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.313811043 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.322435477 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.322035362 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.319799423 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.932808004 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.313808808 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.328522244 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.31463557 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.094999327 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.319359439 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.33315386 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.313473125 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.314288071 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.314807825 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.317656872 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.320209886 seconds)
  done (took 151.536685055 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.324478635 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.835565942 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.321818409 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.436863156 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.338247137 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.321059171 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.439151005 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.371809223 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.325319356 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.319285047 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.318250023 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.598096998 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.326779302 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.789544192 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.491108662 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.437449861 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.78222956 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.320464728 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.31972952 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.320228405 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.439764304 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.330990256 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.593778151 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.831005116 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.32143481 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.830339281 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.315177327 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.326496621 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.32401637 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.841495548 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.322038721 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.596435624 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.390823955 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.374797055 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.846180586 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.795145139 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.794894676 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.452104436 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.324641196 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.319234403 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.319976028 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.311144792 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.839616324 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.326390413 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.320908343 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.833142535 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.338685354 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.327819169 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.331402592 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.322292759 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.375697902 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.377589696 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.602481455 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.845065853 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.392018252 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.340596612 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.439687368 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.68262847 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.324258693 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.791888187 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.311519976 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.841067881 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.325284289 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.313602269 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.325350356 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.330849094 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.460214976 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.441118156 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.795482182 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.330373208 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.793702597 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.458399854 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.323053305 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.321844978 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.329805872 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.843454446 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.796572634 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.458569987 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.44646905 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.495658086 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.31446079 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.322848228 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.313184249 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.392022381 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.321724744 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.847397951 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.794100448 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.329572035 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.328564039 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.325042522 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.328819218 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.480604702 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.847806702 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.395313619 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.789671981 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.616364655 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.60389083 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.328715402 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.377130495 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.324453179 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.606824708 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.326864418 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.378078171 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.745452734 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.608503449 seconds)
  done (took 156.596725356 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.547199765 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.500762571 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.407926897 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.429636259 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.830419598 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.869111769 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.471614169 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.442555892 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.426466446 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.555451962 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.415379185 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.418601899 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.493166897 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.411743056 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.005599512 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.389842842 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.412684853 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.443798122 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.426580962 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.355361181 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.920777297 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.59133854 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.490214862 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.383389102 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.414780958 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.072258212 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.843646353 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.814502725 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.483910514 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.592869203 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.814336399 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.439967233 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.223130453 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.951995656 seconds)
  done (took 63.548087296 seconds)
done (took 669.741011705 seconds)
SAVING RESULT...
DONE!
