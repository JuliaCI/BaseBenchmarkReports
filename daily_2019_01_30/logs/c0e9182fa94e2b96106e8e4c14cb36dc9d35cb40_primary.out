cset: moving following pidspec: 13096
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.367768087 seconds)
loading group "string"... done (took 0.569620273 seconds)
loading group "linalg"... done (took 7.343228331 seconds)
loading group "parallel"... done (took 0.168433608 seconds)
loading group "find"... done (took 1.141455033 seconds)
loading group "tuple"... done (took 2.035630369 seconds)
loading group "dates"... done (took 1.305918284 seconds)
loading group "micro"... done (took 0.243182017 seconds)
loading group "io"... done (took 0.9669524 seconds)
loading group "scalar"... done (took 39.940441848 seconds)
loading group "sparse"... done (took 12.845751602 seconds)
loading group "broadcast"... done (took 1.00597947 seconds)
loading group "union"... done (took 13.918453361 seconds)
loading group "simd"... done (took 4.696077345 seconds)
loading group "random"... done (took 9.529548861 seconds)
loading group "problem"... done (took 1.99361321 seconds)
loading group "array"... done (took 22.391573232 seconds)
loading group "misc"... done (took 2.012880894 seconds)
loading group "sort"... done (took 3.417300061 seconds)
loading group "collection"... done (took 19.594079234 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.572488922 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157215114 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148673417 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148021466 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.195628994 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.14399084 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158132588 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097637149 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.953510003 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.172407286 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152185241 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523842009 seconds)
done (took 5.161071356 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218396391 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095342573 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104203818 seconds)
  done (took 0.877398235 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077723483 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146173212 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096367965 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078038878 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094421567 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077410411 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094114011 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.092464947 seconds)
  done (took 1.365766674 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086404204 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096520013 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081402974 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096461168 seconds)
  done (took 1.044007981 seconds)
done (took 4.275801126 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.723533011 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.270455543 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202854333 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461784925 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197878936 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217063234 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684549466 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.35506571 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255509524 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099336586 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.135401645 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390778984 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137089997 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686228671 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091558799 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124210012 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.186411337 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450064712 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084638014 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109999595 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115630113 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14171094 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128994396 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090953779 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186679428 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083651112 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191953706 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108093953 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079364284 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.273993252 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199427517 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.697916267 seconds)
  done (took 10.885734928 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109983258 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132197676 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096310577 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137383248 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134170149 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098594705 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08384111 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095379001 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120486978 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174256814 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113153775 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135799297 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094503025 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081768116 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114591288 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243220812 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120258702 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.097627186 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100272788 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086606916 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136636825 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111833336 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092582283 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107686749 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166003521 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221972032 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113658505 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12585555 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097072935 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111357855 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142244535 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144194079 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09598266 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080427641 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170976338 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122825729 seconds)
  done (took 5.110170267 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.096089387 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.111105338 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191675941 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10338544 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.186147297 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081110664 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143156519 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09342614 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112642713 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254870829 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.09703608 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.107138866 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.489921054 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143953565 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115714504 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096798824 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082742206 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095582459 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.455585705 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.157213278 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133684133 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096485625 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103653685 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102893238 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.726976119 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080080703 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094386402 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084995168 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080828794 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.077680117 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160347406 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097892965 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.182464364 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121652215 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100202551 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13176603 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196378133 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127707485 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116851561 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096078943 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077905472 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.189832569 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088113494 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095826557 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102223814 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134693069 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135350075 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097282185 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081599462 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.210103464 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081643689 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113141455 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.91345008 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180544047 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.109181962 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096698112 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.304178274 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097956059 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096958635 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076702228 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.275588284 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.194750328 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097544632 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095943559 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079615565 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097917407 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.741858835 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080361083 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.765174241 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082768199 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105999764 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082336481 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096462466 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102974931 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086983229 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11421776 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079188696 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097991929 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078696277 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096089497 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080687188 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107135787 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092920251 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215715048 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080285044 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097134963 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.076814429 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116399 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126012037 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083719136 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094303959 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128605502 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097302161 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.0821442 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132882058 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080427526 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107372183 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098424608 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141322613 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081541379 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.136300912 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094251927 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122808479 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09851577 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113223413 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10997704 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097646947 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167858895 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07753643 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095379656 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079399444 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096178015 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079757475 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099032721 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10779227 seconds)
  done (took 23.321324004 seconds)
done (took 41.097440046 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.322368565 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102538874 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10206275 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104187282 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101254798 seconds)
  done (took 1.491142263 seconds)
done (took 2.222743835 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.163488416 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114997513 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094189876 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.127342814 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076923922 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.132268558 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.130811322 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093306421 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.13334399 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.091998714 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.125806146 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077612807 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092141538 seconds)
  done (took 2.212888299 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095007673 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112918172 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082173094 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109929068 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076106307 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109537729 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092507294 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116556839 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10778123 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085266488 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091944339 seconds)
  done (took 1.809251928 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093407723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111347534 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082063555 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109184233 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076158199 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109420382 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092410635 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114706609 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108812576 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085239662 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092033543 seconds)
  done (took 1.804958593 seconds)
done (took 6.549263457 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090280611 seconds)
  done (took 0.812867927 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.91904977 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.512683269 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112261145 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148506469 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.315874953 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171083457 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.466804613 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125111555 seconds)
  done (took 10.701878025 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.114226422 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098559257 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.112056787 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.081450417 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098651455 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08398347 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101284268 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099510122 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085187412 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100296284 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084356889 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098818824 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099989875 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081312274 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.098402704 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083243332 seconds)
  done (took 2.314308734 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11718311 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116752737 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104420084 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107340065 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086635125 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103597509 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104721488 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087775808 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100860265 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102572519 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089873904 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104978745 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102062054 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07934843 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104611565 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105491129 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084412287 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104316742 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105917203 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089389317 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104272393 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09382566 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08596712 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104046141 seconds)
  done (took 3.228206721 seconds)
done (took 17.784930135 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157523449 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107519228 seconds)
  done (took 0.998262385 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09480431 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111330679 seconds)
  done (took 0.943515345 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096858154 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094128571 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120865762 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107866585 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079844583 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.0947141 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118643004 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079669377 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094906417 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095799382 seconds)
  done (took 1.724199631 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081606108 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108552853 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099910679 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094028119 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104724215 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094263648 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087558957 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097970802 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108555785 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077222111 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100617412 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113602875 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084894599 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114073482 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103421498 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098244943 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085350082 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097070967 seconds)
  done (took 2.491802131 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078970429 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096199527 seconds)
  done (took 0.916961786 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081075889 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093054467 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080722711 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095799482 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093771558 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076471875 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09251387 seconds)
  done (took 1.354406651 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.434735945 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135002553 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.256938207 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099496966 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101629859 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.293721768 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096513852 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084629877 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101413616 seconds)
  done (took 2.402228051 seconds)
done (took 11.568659156 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09318371 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.114238085 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111648069 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.4518879 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106099378 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096804324 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146025835 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.244946143 seconds)
done (took 2.115957357 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.14280524 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.563486665 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421235506 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.228854345 seconds)
  done (took 1.965710877 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.400357637 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097914321 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082050322 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080692679 seconds)
  done (took 1.415909172 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079577384 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098937865 seconds)
  done (took 0.930624217 seconds)
done (took 5.208666072 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.113254397 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099578406 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079546186 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097828393 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077792095 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097793604 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077555845 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093472104 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080070515 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095765771 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095256708 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.079858805 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095989271 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07699706 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0939395 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076890503 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096160779 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077703593 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.093742219 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077892573 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09327124 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079132036 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092820348 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.076911182 seconds)
  done (took 2.905729875 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099272537 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096899683 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102850977 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084814723 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101692561 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085176966 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100986944 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096462059 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085770447 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098291692 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101774614 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084408873 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098770186 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08470581 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099272092 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100484272 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085412491 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096804414 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08204767 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100630525 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101847604 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080687555 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100864124 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101987474 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084033635 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101040051 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082977426 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096659531 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102187251 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08396607 seconds)
  done (took 3.578187839 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084343229 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093077107 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078515964 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.099836927 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076952709 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096021218 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076758627 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094241183 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078525888 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093240096 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079273781 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094146931 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07772235 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095501303 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077842187 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097552351 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11055208 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078294128 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094386818 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077928264 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097720275 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078002548 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094545458 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077197087 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093685818 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076852937 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09499037 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078136949 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094641745 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077569066 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097267736 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08067971 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094629775 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100694529 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08135875 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094630743 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081737119 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09382196 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078851752 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093567696 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0771102 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093823823 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07753461 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10086431 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077588594 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096308583 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077706974 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096024723 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078931204 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098369976 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07838834 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094678266 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097264609 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078892767 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098503508 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077271159 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095231772 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077011605 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095559611 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077585646 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094039734 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077208527 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096551894 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078401875 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109290054 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084895661 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094979652 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.096359688 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.078780541 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097774296 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.079667281 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10859479 seconds)
  done (took 7.116082598 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.129950902 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12455343 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079607924 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097253057 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076769743 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094508349 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082138489 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095437093 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096460249 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084620306 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095219088 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080193592 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096739656 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093476178 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095666709 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0799781 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100952634 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093294948 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077853121 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098084399 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078950926 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098296115 seconds)
  done (took 2.811788732 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.204735544 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102532857 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140977374 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10565169 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082867871 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105538449 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100854612 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084838566 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102024139 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08336735 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098866891 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102597701 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082844872 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099357601 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100522556 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082733446 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101406013 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083485903 seconds)
  done (took 2.629003647 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092856325 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098301052 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097876653 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097472181 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098496044 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.191957087 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10270614 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106637734 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083521993 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097583429 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090430824 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100233732 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082425595 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097419041 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099802011 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080401968 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100419096 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081133886 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106723378 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103436959 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086555923 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105591356 seconds)
  done (took 2.969343979 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095158214 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099074806 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116707265 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083443047 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094668916 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078603366 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10513768 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080476563 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.103970013 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099120395 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082311373 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096493958 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086488616 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097715298 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103183392 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081401352 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099792304 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081292462 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099406882 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076732844 seconds)
  done (took 2.627804932 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101566648 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099972549 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098414934 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091966748 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099257815 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082171638 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108820768 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098974882 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082159714 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123743987 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098737542 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082318687 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107614942 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10474848 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098954528 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091842002 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107341013 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107148511 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082391491 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098951036 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123723321 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08285436 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107589104 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09853506 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082352238 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099355023 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099537702 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087344937 seconds)
  done (took 3.519762336 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080381801 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09766921 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077811856 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095410677 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078239368 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094993865 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077509427 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095665628 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080868066 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095344272 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.07998161 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098136812 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080209326 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097485883 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080271732 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097805924 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080330881 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095097645 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078116531 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095085396 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080334245 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098319782 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080622486 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095718041 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077878225 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097696038 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078432626 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095291436 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080603441 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095333887 seconds)
  done (took 3.410397876 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09052366 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105486844 seconds)
  done (took 0.967999359 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07844986 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113711301 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078262167 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.101689015 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086380408 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099777161 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107489747 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086476328 seconds)
  done (took 1.524918792 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096046834 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.1094129 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082632995 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111134595 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108738826 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097981357 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169553607 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099325762 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105641686 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079359789 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111776114 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08087343 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105718644 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081890613 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104305539 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087945318 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09661972 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104866682 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084564477 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097236436 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08327304 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108142773 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100825972 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080225304 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100162798 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090728574 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111446713 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10014186 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084682256 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105902751 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087377205 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093082238 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081441463 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099574697 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07924108 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107297666 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115485569 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084725067 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108391324 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100603788 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092126088 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094384003 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086787267 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104854403 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108486841 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.081823426 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.1001619 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077008856 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099732741 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083951081 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093984212 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081068709 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093390408 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106046498 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085485668 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11040887 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080026135 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100202026 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084165399 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102328265 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105895822 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083830887 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101164064 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081590485 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109305912 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08603535 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10882813 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093811855 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.076298476 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097166018 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092294394 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121840238 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105482098 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082924448 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100131393 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079270189 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103084575 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099901982 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08801159 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10520434 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082326211 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105391755 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10701573 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081552073 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.10165078 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089231934 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096933147 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101324537 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.079656567 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116636819 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081242342 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097347804 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079035643 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110260907 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102246132 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081129655 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.096519468 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088667631 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092955765 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082635437 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100774168 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099557017 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093176769 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105271662 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105276098 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090764203 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106796931 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082385576 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102421131 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078723052 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10110738 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098247929 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089139024 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094077663 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08447515 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099866271 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082757833 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108108979 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.096986939 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082501878 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107894625 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087723496 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097672323 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078622548 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102791104 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081410553 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102804783 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107788035 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081109361 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094159133 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076689742 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10280543 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082236133 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103239255 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104464183 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085860139 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093793835 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079933571 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104792069 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108999717 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082226003 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.100460973 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.08827136 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100608894 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080533758 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106076122 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102782653 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081685086 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105114882 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082496609 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094584409 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085404143 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102494546 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099067559 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085516022 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102948196 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084197565 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100218671 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080847275 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104808424 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101065412 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081222475 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100113469 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08074067 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110347383 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101736554 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076948297 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097108883 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090344619 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.09770767 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081887364 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098553592 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084597674 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100697175 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097535767 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080739929 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101293178 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094033665 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105385908 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101148237 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087066489 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111128784 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082078288 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101944866 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081791026 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100186862 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100758626 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091298207 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.104739435 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08720593 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102061127 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095824137 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088198342 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107368908 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080772964 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098027364 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081537061 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102802374 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105649388 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085596189 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101230523 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080672662 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100306388 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085474802 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102442425 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09969882 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081010996 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105059849 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081187256 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106355934 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100782522 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092872444 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103126208 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.07792097 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104135374 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097958615 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088010758 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095816737 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079866836 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098885316 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083452313 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098675083 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085829314 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094037038 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089635607 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108228228 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100567894 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081929806 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099938829 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089532298 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101637482 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086152244 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10356307 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106848442 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093697634 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099315307 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085522517 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111084529 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10049965 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076992014 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10551487 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080623089 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098997181 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08152596 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098189473 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085458222 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10938815 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107497754 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076811593 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102764605 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.080631515 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098630178 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07746908 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105022473 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103310958 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082747002 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10724307 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084442169 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100513583 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103996464 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081656947 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101292827 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083465368 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102958729 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083736718 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102372277 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082002153 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103563671 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099191215 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080587022 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101154979 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082424525 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100658564 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088795697 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099628768 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083635382 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103817375 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101673129 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083442327 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100491051 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082131727 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103728265 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083856649 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100892718 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103232903 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077774346 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108663697 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082715259 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108720738 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082754296 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097765726 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088425283 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103642574 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107336811 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083924574 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101375167 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083530433 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100891087 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.103593319 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089642089 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098009135 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093428648 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108956042 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100668239 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084895918 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100791858 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084136564 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099459371 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083278995 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101051546 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082796015 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100210322 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104829219 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084995942 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100961757 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084819165 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101924884 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083003641 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101887883 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076771443 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100057572 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082407387 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10116588 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11145913 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083958328 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.100161748 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082087085 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103446769 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099902326 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079256762 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109666448 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09274983 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101702271 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108000787 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081792943 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102115563 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094141303 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094699248 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080876015 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099087701 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.098650907 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090616846 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101265035 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09238939 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100672285 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082127298 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097368144 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083470991 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100017935 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094985926 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080640368 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112553284 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082022168 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099094142 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083342197 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104679425 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083963101 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11127288 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099827369 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083140245 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102168546 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080711775 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100527199 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082115022 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.10376515 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101609838 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080216239 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098045173 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08321545 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100870799 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084834086 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10039472 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084555698 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111152815 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082042248 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104240101 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104932582 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077437261 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103212368 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082543919 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10061651 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081580573 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105273585 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104362706 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084143195 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.11059382 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082630709 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102167929 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08268085 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098501259 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101643171 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08303544 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101694151 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082523206 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102143635 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090500419 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099506102 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103889647 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082639717 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101223035 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089977038 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102754664 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086107533 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108733595 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.1010077 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084216568 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109300096 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087433367 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10437249 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102228131 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085025227 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10699507 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082426047 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108015446 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08360808 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101931479 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103073419 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081170223 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099939876 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082417663 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099948378 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089480816 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102257761 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081606757 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100096394 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099708828 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083575835 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104178463 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09182119 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103440458 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086546829 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096990712 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080306816 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103225842 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098486255 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084857578 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105277039 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089107609 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103062307 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083889124 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100669268 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111185701 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088986004 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105154005 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081525513 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105505087 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08428529 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104328898 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102414489 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083559102 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102783703 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.087009326 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103420204 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082368033 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109899176 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104612699 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084751999 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103116965 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084024446 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10170569 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079161798 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102772585 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085868645 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107436271 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103859726 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08376506 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113341643 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081375191 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.101416058 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105288974 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083030939 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106248719 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078721355 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102633207 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08503219 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103048593 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078247313 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100933789 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080159002 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104430943 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101298963 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078458991 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112279986 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092130112 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105367622 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100893339 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081465648 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096406623 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079391561 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101185202 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08481165 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103130053 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112458291 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082741144 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101026856 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078627264 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101646512 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086229053 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105107211 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08028768 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097336066 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082186698 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105110718 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107219346 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081936235 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100645483 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087058027 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104869146 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08176215 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105508158 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080107764 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106389714 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115345864 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083931317 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102458252 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108335182 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091692998 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103048766 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078806532 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102033142 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086151151 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101801094 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084075237 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103230253 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117600646 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086396249 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10139622 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081553192 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104938481 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100668294 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091191652 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103262686 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084171458 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106009219 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085431627 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111446427 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103909758 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091880406 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105064245 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104713151 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082269461 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101469252 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081408361 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100402459 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085395405 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102439479 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10775853 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091846449 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101565977 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09509738 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.11202095 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103458702 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081073997 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101411149 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082937045 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09737294 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085112685 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100182348 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082543032 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100626492 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082568574 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103008168 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108147991 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084546911 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102819411 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083860741 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09554157 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085812947 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104497043 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083788547 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099365307 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083412822 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103688161 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.106446632 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087499377 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.099767742 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084859598 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103601787 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085034072 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098627147 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109093714 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08294584 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104512449 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083564645 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102336288 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.084473269 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106414163 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108279339 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085360475 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104556919 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092954506 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105371261 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081024858 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099840621 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108301419 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082309439 seconds)
  done (took 57.414193236 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145046669 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079776856 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098143002 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078508877 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111100989 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099088095 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079182745 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098106112 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080436958 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101579996 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079172267 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097340536 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106842969 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123108551 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093159033 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102516737 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097596805 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080192016 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097246695 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080371987 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107493112 seconds)
  done (took 2.862184202 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103205793 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119072458 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11454156 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.116758423 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090479621 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11443446 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113961895 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114223264 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098378021 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110576155 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116954003 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11436746 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091166304 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109459671 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109487692 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092659212 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118358133 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108037936 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114437686 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094553659 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111990877 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113319514 seconds)
  done (took 3.214315516 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084174088 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101114335 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084999377 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097296612 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083656771 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096293331 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087377643 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.09993021 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086441685 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102003984 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.100426055 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.082509813 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104021618 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079019029 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101435473 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081111165 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151301125 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106150672 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083082967 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104339621 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.09803985 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085400714 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097278498 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079788551 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101357777 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088204743 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102767976 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081023194 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10195575 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081846252 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103055416 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.099847469 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084257249 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102246061 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082490518 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10078067 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.082811186 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102029899 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079580819 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100608677 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084641816 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098417487 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083549042 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104176482 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.099829234 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.081125168 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.103860803 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082788014 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097135302 seconds)
  done (took 5.434159541 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102530963 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159623548 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085322601 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141345404 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118692301 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.111647612 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086883583 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140926429 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100493057 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084171671 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122215375 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119011663 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102320631 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088554531 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110497022 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102288621 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084399773 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101267133 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087434924 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10278726 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107391893 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090400745 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120172268 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117795578 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10668885 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083331889 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102270363 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107208681 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097111042 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109204804 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108955783 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090110923 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119218655 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108709263 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083110758 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106135694 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12132039 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103454943 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08709939 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101045495 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086540139 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107886996 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109863998 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101888789 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103369187 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108711584 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08463459 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100345877 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116374423 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086814426 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112514922 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119846265 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087919009 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10526152 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108209506 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119977708 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084682361 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100912884 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087416022 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116979184 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100419343 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087957722 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11899537 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105771352 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091266549 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120232684 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109092992 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107293067 seconds)
  done (took 8.083950909 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093170682 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109730461 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119894993 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120057548 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091371914 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109387718 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110717657 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090777074 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111072916 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115606189 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111253029 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132361861 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085999636 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113645418 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110175959 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089777688 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110602608 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11017162 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090643812 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110019194 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109057052 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119181843 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090554263 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119979668 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140775186 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105882993 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091036453 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111099408 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119916708 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110228306 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12302885 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091365008 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110686738 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.119500279 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12286744 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090373561 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10248206 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109547891 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091070804 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110609328 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105093721 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119674133 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091014839 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105104557 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110989137 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090852011 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120097032 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123335498 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114067026 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11585224 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.09083012 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119972278 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110076804 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090855213 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120198024 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146697193 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120267744 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119741039 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110189017 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118813187 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100252159 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127865407 seconds)
  done (took 7.634681541 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10690157 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113866783 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11666423 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099998516 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082138896 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107610486 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083127808 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101435122 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09435734 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.11374663 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115911258 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107715505 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092891051 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116076738 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10917141 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111616519 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089242076 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107612557 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113011052 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088841989 seconds)
  done (took 2.914119704 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093850925 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122457856 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085817632 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111198478 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107782304 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090802194 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105705057 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107283089 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086401115 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106917773 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096234131 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116057307 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104585929 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091295104 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115646654 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109811888 seconds)
  done (took 2.49648951 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097309287 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116795566 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119873291 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085429619 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10316519 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.100867635 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.083769161 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100286179 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080582891 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120110678 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085167382 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.10914435 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104316527 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082799869 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101169709 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087574896 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100360754 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08187187 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103884447 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.11965216 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096062808 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103656382 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105540281 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086615922 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104691904 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090326702 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105872884 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102522133 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083550585 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105157188 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085567725 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112266064 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10167878 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083478841 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101887851 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083065477 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103611675 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104717565 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088274178 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104431649 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083562009 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103773305 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085012767 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106226265 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101318183 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.085945982 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100478185 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091651242 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102732578 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104610888 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084551921 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107137175 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086505145 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115061873 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.107870552 seconds)
  done (took 6.247028813 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098766692 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107616316 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07967376 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102645661 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087700727 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107206234 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107784673 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087951832 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105404937 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082527071 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106794895 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087483563 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106329102 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107559122 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087390173 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107760754 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080716364 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106041285 seconds)
  done (took 2.602757364 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090178382 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104775317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092464404 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104965162 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0844375 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107202972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080642067 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103776385 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103296304 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084362006 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104259587 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088248079 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102571562 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088090844 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104261339 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085213862 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107389038 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102935462 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084958074 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100791165 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087649235 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102814276 seconds)
  done (took 2.963982388 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.111267759 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.11931627 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.089940251 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.224033517 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.099859992 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.127740396 seconds)
  done (took 1.621123185 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109699633 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119581347 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105807149 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106460882 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113093293 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106398638 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087280355 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106991047 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116464429 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101131746 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10909118 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117188801 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11647381 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09608226 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114063599 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11398115 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106854042 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08717623 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104742179 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127185188 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087238755 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116708667 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107088429 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08739287 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108050564 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116656854 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116551911 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121901796 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086455674 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11640367 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113313915 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086548293 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116772386 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122407938 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108828449 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097366957 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107285953 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126786525 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113531059 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095870286 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10818356 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114102688 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097324206 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112758863 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117027233 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107393645 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092413009 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107733222 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106759209 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13261819 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093794742 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116920622 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114875033 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116871013 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116295349 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134365054 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101812941 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11673408 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113943142 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122162649 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116874142 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093972017 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116460266 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121576916 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113590895 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119442773 seconds)
  done (took 8.095837674 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102487546 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125363151 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107649331 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122091134 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096423549 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106582998 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106726748 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086789963 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106676402 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106571193 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151677753 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087654397 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117411565 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117424504 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108064777 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086981708 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107880473 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117060496 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087255891 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135313962 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108364896 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116847823 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117041807 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096778933 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122199854 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113006008 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107002843 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088392861 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107409868 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107785672 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093500323 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107998834 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117499712 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08651969 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117075476 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106954638 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107682634 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093367536 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107984181 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113967357 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095694852 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127333295 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107611015 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107177229 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121876375 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087532642 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107215265 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086727949 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107465699 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107287921 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122502213 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10261157 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122571155 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117503747 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107077057 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087779147 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107992588 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107153057 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087368118 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113906517 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117093261 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107087646 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134320098 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087953901 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107647358 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117497518 seconds)
  done (took 7.9809068 seconds)
done (took 154.375863382 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213184308 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.197590637 seconds)
  done (took 1.262403869 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.086235204 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136047221 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095675986 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167923606 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086056412 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139696861 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138588305 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097179289 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105450307 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086149131 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105483797 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087274265 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169716489 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085395592 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106323333 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.106904156 seconds)
  done (took 2.658770753 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113064853 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254263325 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.12197062 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104871158 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088761695 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109150296 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083161891 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110956174 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089582503 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.103637151 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088077941 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106688439 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083530402 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106054444 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.08890885 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108785202 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104725785 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087765721 seconds)
  done (took 2.811682053 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113498957 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145190352 seconds)
  done (took 1.124584157 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.240547041 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160593531 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.225259611 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.477087194 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.277654223 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.354372083 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.196450925 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.209659945 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.161897876 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208658087 seconds)
  done (took 3.37152137 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117885347 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181190405 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315857962 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155109936 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105801117 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126380099 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155824991 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129812965 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122867734 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100905788 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121547333 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116992456 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137148764 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094559617 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114274166 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117400269 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119307891 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113634139 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114692506 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09497048 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137558902 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105303149 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094522554 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113203395 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.117074023 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097635973 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105094692 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085493686 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114894911 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113871808 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092593258 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124118831 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118109761 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.152256759 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122319155 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.153366235 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117687456 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.090531985 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113763778 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090128317 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118527839 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117653597 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124430734 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096361112 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10523587 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096731906 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105231942 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085093058 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.113759603 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117671426 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093005788 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112740135 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.152091919 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118949948 seconds)
  done (took 7.337049811 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.783421207 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155136329 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090125473 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.875156104 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112955684 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126189803 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.770520976 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110470468 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253837879 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.750161594 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13200586 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09702747 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229941622 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260697775 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.977544127 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.29674183 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.639838741 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126212078 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151664548 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153992235 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118368763 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115240429 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131292818 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430791745 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115415286 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090523085 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118718946 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118421744 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16025642 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124532095 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093185713 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199101037 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251986565 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203116327 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093729076 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11158931 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089914463 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191445517 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.243411471 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215134484 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180359764 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108762752 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09017545 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121969984 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131947337 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086763711 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183589762 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173510788 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169617646 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115261403 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119037118 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098473936 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120648957 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164333258 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121098446 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.322863866 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311899459 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089548804 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120258147 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126760363 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240526188 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124192494 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224267121 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139011305 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19144432 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111842031 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788295058 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168941095 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089049895 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117526106 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120179701 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09386686 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121467534 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167937925 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389898724 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124615202 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114399232 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089212055 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.244054278 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103023491 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111357137 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161318131 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11618918 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100092818 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125121056 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1221466 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167401028 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.234193851 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123645212 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120047617 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092774627 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124179929 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115606931 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213445705 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220218763 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16243031 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208821851 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121980698 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162838329 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190884184 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097108471 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193429213 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097075655 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124363921 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122688037 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216852379 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145517926 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101473618 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116588791 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118066521 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148824338 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104135026 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119855704 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170732515 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.481496833 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168722315 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108764439 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105169464 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120350093 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161259273 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117402452 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259975846 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100678856 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192324894 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097460206 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108911108 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120039874 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162760768 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120532626 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099148984 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121879353 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119617946 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237050577 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215069202 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099493475 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241401965 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182917625 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116993481 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171673619 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121218299 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167595831 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119128271 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.101397167 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116036896 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789689443 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101878419 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121079856 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11558753 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187571413 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089687677 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124579337 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123672943 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087485879 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797122258 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127056409 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10033249 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.123821094 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117658985 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098481849 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118799955 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115468725 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1625884 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228914254 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119118523 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097515764 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124171795 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162119717 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116134862 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125251007 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102550366 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125108358 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121433965 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093313731 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123963811 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168104232 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.183097839 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.196886476 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.590923016 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111629816 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10290292 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227942336 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11166976 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290860229 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097978768 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224192483 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162514905 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120872858 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30878287 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164320054 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190116828 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.1280646 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172969655 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109173726 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096380338 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185525507 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090259512 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117113825 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163134262 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124618238 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121896742 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.973584072 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11198843 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224095238 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109538868 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171143478 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11584493 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09844864 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29610782 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111618351 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128481302 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164711954 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092130324 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126299507 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.788661699 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102911862 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122268763 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118261981 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220861882 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165616746 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119355659 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097636537 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119836476 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16179946 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230446968 seconds)
  done (took 44.010494505 seconds)
done (took 63.433911577 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27783412 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216372356 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.266944078 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169612288 seconds)
  done (took 1.895914349 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170624439 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148810246 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121784152 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106301446 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150329174 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08541751 seconds)
  done (took 1.672307981 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361516796 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274184201 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242472938 seconds)
  done (took 1.770940941 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289464607 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246238834 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.469544552 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323480439 seconds)
  done (took 2.343813981 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.207935964 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132575055 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110430648 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103686764 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.19559162 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246041683 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141814919 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.199549897 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098121478 seconds)
  done (took 2.372772867 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195789463 seconds)
done (took 11.14355028 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.255670511 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.285294124 seconds)
    (3/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.155961937 seconds)
    (4/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.219545652 seconds)
    (5/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.158769648 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.211490135 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.248582415 seconds)
    (8/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.234163634 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091281063 seconds)
    (10/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.178256252 seconds)
    (11/309) benchmarking ("sort", Float64, false)...
    done (took 0.171024152 seconds)
    (12/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.211068285 seconds)
    (13/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09151486 seconds)
    (14/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.265377336 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.124366392 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.154839388 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098216173 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.138480217 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09298818 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.218757185 seconds)
    (21/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116514206 seconds)
    (22/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.211516278 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.171181061 seconds)
    (24/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.183222229 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.180829117 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.168450716 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.111873482 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.164182181 seconds)
    (29/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.230260885 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.19586879 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097093792 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.160569447 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.136567184 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.10254926 seconds)
    (35/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.110901146 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.21586527 seconds)
    (37/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.097277895 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115091239 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.115400936 seconds)
    (40/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.121394158 seconds)
    (41/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.24640683 seconds)
    (42/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.172970448 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112510645 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115784928 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.135600036 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.114067335 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.142354993 seconds)
    (48/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.191835903 seconds)
    (49/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117379604 seconds)
    (50/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.129778962 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.117583983 seconds)
    (52/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.173934595 seconds)
    (53/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095697947 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108105352 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09306309 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.214579646 seconds)
    (57/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.188426925 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090933976 seconds)
    (59/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.118468911 seconds)
    (60/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120518371 seconds)
    (61/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.154488162 seconds)
    (62/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.10977297 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087691817 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.115513214 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.131593894 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115188292 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.107867438 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085384338 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.168326993 seconds)
    (70/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.205358562 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213651859 seconds)
    (72/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.087679341 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.108490278 seconds)
    (74/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090656551 seconds)
    (75/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.101679454 seconds)
    (76/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096934307 seconds)
    (77/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124584985 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112118195 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.147171506 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.181329997 seconds)
    (81/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.18634067 seconds)
    (82/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.198674162 seconds)
    (83/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087276896 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.178897209 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066454279 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.121347422 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.086435098 seconds)
    (88/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123443224 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.111688026 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130019013 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.092283303 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.136815795 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088750317 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.204869372 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.189326521 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153217926 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.133071953 seconds)
    (98/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.129599744 seconds)
    (99/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.114974583 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.136590476 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.192865588 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.191903587 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085936315 seconds)
    (104/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128173275 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06645275 seconds)
    (106/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.149124644 seconds)
    (107/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220590189 seconds)
    (108/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102424058 seconds)
    (109/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.105319923 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066238232 seconds)
    (111/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.099579694 seconds)
    (112/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.101516657 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.118386472 seconds)
    (114/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.076968604 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.132125251 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094049693 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.106779825 seconds)
    (118/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.191440671 seconds)
    (119/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067220475 seconds)
    (120/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097012994 seconds)
    (121/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.089970063 seconds)
    (122/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.114790467 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109872557 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.192795245 seconds)
    (125/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.113539666 seconds)
    (126/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.089817331 seconds)
    (127/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.1575091 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.33659074 seconds)
    (129/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.117057601 seconds)
    (130/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092186179 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.211782992 seconds)
    (132/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121778952 seconds)
    (133/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084599071 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.153219898 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.18130883 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095369322 seconds)
    (137/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.111143129 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09327132 seconds)
    (139/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.138356513 seconds)
    (140/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067620717 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.131076997 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114084641 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091025958 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116575767 seconds)
    (145/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.125737734 seconds)
    (146/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174878564 seconds)
    (147/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.076212878 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.105516406 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093777394 seconds)
    (150/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11559608 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085215189 seconds)
    (152/309) benchmarking ("sort", Float32, false)...
    done (took 0.173300497 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113729973 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155341541 seconds)
    (155/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159299175 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117149101 seconds)
    (157/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087065996 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.117849615 seconds)
    (159/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.154512834 seconds)
    (160/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099489731 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108874404 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094247824 seconds)
    (163/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.089420667 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065937409 seconds)
    (165/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.086334104 seconds)
    (166/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.099316069 seconds)
    (167/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.215749184 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114691712 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119047205 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086326897 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.183679995 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.130688131 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085707948 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13326932 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.223174943 seconds)
    (176/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115557787 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067560627 seconds)
    (178/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066088979 seconds)
    (179/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090941385 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.085409487 seconds)
    (181/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171284559 seconds)
    (182/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136945403 seconds)
    (183/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086095761 seconds)
    (184/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075278456 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117212429 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085019385 seconds)
    (187/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115805237 seconds)
    (188/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117097524 seconds)
    (189/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096922968 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.136166176 seconds)
    (191/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067392687 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.159053417 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139476795 seconds)
    (194/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.089936225 seconds)
    (195/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.109311647 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.173209665 seconds)
    (197/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136677651 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117059193 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066503132 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195557637 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06781177 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.18086647 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.11895745 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066572089 seconds)
    (205/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116475763 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06617601 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068357848 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.187656202 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.115014983 seconds)
    (210/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.086962598 seconds)
    (211/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.154821209 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084552465 seconds)
    (213/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.089909048 seconds)
    (214/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066434555 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086627941 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110980476 seconds)
    (217/309) benchmarking ("sort", Int8, false)...
    done (took 0.187981216 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067533758 seconds)
    (219/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13300177 seconds)
    (220/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.120983646 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11299866 seconds)
    (222/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.107642586 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.118927485 seconds)
    (224/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.101090757 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093986762 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119038242 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.141588485 seconds)
    (228/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.144197036 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067192042 seconds)
    (230/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.092271572 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087061168 seconds)
    (232/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113642339 seconds)
    (233/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067874231 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.131782882 seconds)
    (235/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.179613298 seconds)
    (236/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097029152 seconds)
    (237/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.138602503 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092589042 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.133720417 seconds)
    (240/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08618919 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109315044 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094215285 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.100855932 seconds)
    (244/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066581061 seconds)
    (245/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116506318 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164891992 seconds)
    (247/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120493048 seconds)
    (248/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067148477 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110157804 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13461191 seconds)
    (251/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086827488 seconds)
    (252/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076148565 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108838993 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067358638 seconds)
    (255/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.090145665 seconds)
    (256/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066924666 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.136268236 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066965703 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.183211862 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087156302 seconds)
    (261/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116510108 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.21284284 seconds)
    (263/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111988932 seconds)
    (264/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117912946 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093266921 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.090700118 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067596556 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.191394587 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.216635511 seconds)
    (270/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.068541236 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.140047017 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095015187 seconds)
    (273/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118595482 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.180412278 seconds)
    (275/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068109453 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.112517363 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086583698 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110058088 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086246901 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.1104358 seconds)
    (281/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066672002 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068484675 seconds)
    (283/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091911314 seconds)
    (284/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094107928 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118578958 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086755443 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109207375 seconds)
    (288/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089080706 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.10840329 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067460187 seconds)
    (291/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.090607672 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093650904 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110563387 seconds)
    (294/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092856834 seconds)
    (295/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123750166 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069026689 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115828379 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.107597014 seconds)
    (299/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.111983041 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067133952 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090674902 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066954517 seconds)
    (303/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111280942 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087777671 seconds)
    (305/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.077718628 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117083199 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069232689 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.10980907 seconds)
    (309/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.076918896 seconds)
  done (took 39.7563364 seconds)
done (took 40.653032485 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099247931 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.135318488 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095949848 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135341927 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123804289 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091192043 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11795219 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097956927 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123908638 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125510757 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097364469 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093632643 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095900012 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119842399 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096334269 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.135687919 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124452764 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093220153 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119050842 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085685848 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118365878 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085971471 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112410786 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070495581 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121588415 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094070803 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11690695 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120666818 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086253557 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110983742 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.08981678 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117753492 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086099578 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124921497 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093511262 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119378819 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097601476 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121243386 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111613399 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086519975 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118971447 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087301499 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117503468 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094612581 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116541871 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092189862 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11950612 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098955826 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13511465 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11261002 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095381576 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120717411 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096015868 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117521047 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091426002 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121082121 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118155288 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111763157 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.122044541 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08931219 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119306715 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094201262 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116923217 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.119300509 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.095075896 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.122161378 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098545096 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116147068 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097739778 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116794815 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085834615 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118996291 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114072314 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086931914 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120028137 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.097536428 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.10921394 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092666232 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117318166 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092161367 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110352635 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088413653 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11275344 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092681144 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112948647 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070339678 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114176666 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092308651 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110344813 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09545726 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11712831 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09317463 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11297585 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097809837 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110257419 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115578131 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087065678 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110430543 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089256912 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115817389 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086745939 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112805464 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.09625071 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112202177 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093158734 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123513781 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087097438 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116660435 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086112014 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109880713 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124994047 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097745764 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.110387418 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089493613 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110134647 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.095247788 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110466229 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.087177647 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111023922 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086738883 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117140048 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086998935 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113431119 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094390808 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125525951 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086700356 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114361603 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089321504 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11037097 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092722628 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110912059 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086925905 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113152037 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078252237 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113420175 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087144744 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117544509 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089332213 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119727384 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111913389 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096195847 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.11577569 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092521821 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116715556 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085487914 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098443915 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088895707 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112906037 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088936077 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110885141 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088355593 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.11043252 seconds)
done (took 16.918627954 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086942027 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184578926 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15265149 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142681599 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107429745 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111960709 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121426175 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118477393 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113420536 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142766841 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110615265 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132196336 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148533249 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086636278 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111476744 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091741316 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113559024 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102445399 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146606787 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132928317 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164785781 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087327805 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146631993 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13496248 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121622531 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114516562 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112253278 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091779392 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115339507 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103536039 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132027593 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115263465 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088143462 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13374711 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105805518 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120442344 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11103636 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09409616 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.111341639 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087378479 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141344821 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133998386 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092791593 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117313077 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091012146 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113900706 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089117741 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120644054 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.122249812 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.092405412 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126297736 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156036476 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091349008 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122026248 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.1106336 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098674883 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121246626 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090457117 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.114754119 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090237962 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.11146343 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090345723 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127036533 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141560581 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091885094 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121605746 seconds)
  done (took 8.622138434 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104186852 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139557293 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130021223 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105686553 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11185448 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087788969 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112856463 seconds)
  done (took 1.75604406 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08840128 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133868718 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111147056 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135572958 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132355457 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.125086715 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123171812 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08789539 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13102598 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089842673 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133893576 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151219138 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089749767 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119387029 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137116468 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08836378 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136516622 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088024908 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115826219 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136827538 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090815453 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134089746 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090702386 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113758269 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103129084 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113428277 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162426081 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093360054 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114263375 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092198428 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111239748 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.164962344 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10334285 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125327809 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113568297 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102436747 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.12834057 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087080412 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129491976 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093756021 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.12719356 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113438995 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09011202 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111317666 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.092575647 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.12338025 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.08971876 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114736402 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091414611 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133888737 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089199217 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127286399 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.112938108 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.092217864 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114866705 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094291423 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123189696 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.08932375 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133163347 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090408803 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130685374 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.129523067 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10268333 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130840502 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09168572 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.130324299 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.127572817 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.092265957 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115700173 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092179115 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129813284 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087533586 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115368306 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099124959 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115591097 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.136760102 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112049854 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115897479 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099465779 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114277756 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089953805 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11431782 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137236764 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092791441 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113831027 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093139576 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117050772 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086209568 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112376226 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.091994193 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112054033 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090087089 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117406192 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089183401 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117508664 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10648703 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115693303 seconds)
  done (took 11.81019409 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089616117 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114567271 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091761422 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114425413 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089808499 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115487464 seconds)
  done (took 1.593828897 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115138927 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118794814 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104066368 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120976947 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157089338 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129286684 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.104481189 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123830955 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108106884 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127536791 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129009477 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104366137 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136249316 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121874644 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104261332 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120941822 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129336168 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100004017 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127706827 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096988505 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136772048 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121587031 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096112668 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.13214213 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118061292 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095272337 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127195576 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102074702 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127533689 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123541158 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095881495 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118391584 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121886689 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097799265 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129970789 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096218109 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120346561 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119689465 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100031212 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118687872 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.13032006 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097341335 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128281591 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094485628 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123468497 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120829276 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094178002 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126333814 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129183394 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093952747 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11931018 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09626082 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119115872 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118640409 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096149276 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123445748 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094443675 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13086925 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121638908 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.09563377 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118395747 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092846748 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123399622 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118534489 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104907046 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119151676 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121058003 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095788295 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122491973 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09566353 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119362588 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118026923 seconds)
  done (took 9.259499486 seconds)
done (took 33.996630338 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685513886 seconds)
  done (took 1.657106887 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.71533617 seconds)
  done (took 1.688884735 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.824294897 seconds)
  done (took 17.799352654 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.499958059 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.579973021 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.814143473 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179514916 seconds)
  done (took 3.046684552 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.93015022 seconds)
  done (took 1.924141955 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.244431828 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.231324623 seconds)
  done (took 1.454583197 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.767031581 seconds)
  done (took 1.753181185 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.344569621 seconds)
  done (took 2.326799913 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331399926 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185493475 seconds)
  done (took 1.505795912 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.552565262 seconds)
  done (took 1.543362814 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.818513938 seconds)
  done (took 7.811017421 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258480617 seconds)
  done (took 1.260366713 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.298430593 seconds)
  done (took 1.289708661 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.50446704 seconds)
  done (took 4.497930642 seconds)
done (took 50.53705873 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097650488 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126959789 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102067353 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124566482 seconds)
  done (took 1.436866583 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100092719 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121160518 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100455952 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12062601 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125553863 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095498233 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123264482 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100848521 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120270611 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097193508 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120764832 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119827862 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098182317 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122576734 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092851914 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124400634 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099224242 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120843716 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123726517 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095710384 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118957506 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097212897 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124449598 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093612104 seconds)
  done (took 3.652448317 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099914488 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118708426 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096405432 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118352267 seconds)
  done (took 1.433678363 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099457208 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142152531 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139466855 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100551289 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142581519 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135933174 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091711425 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117593606 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093440134 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125536813 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.0900917 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149615539 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137737549 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099643877 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127396914 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087847121 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117891223 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136408774 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099593463 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125971767 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.09313379 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12534083 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090103301 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139216026 seconds)
  done (took 3.803171993 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.156928047 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.151225399 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139226748 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095467326 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.15597984 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141496963 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091161171 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141581672 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088033965 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.1303538 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118828805 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134235189 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128056893 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087526972 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11388489 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.114157757 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.102136769 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128832588 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091330001 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145274685 seconds)
  done (took 3.457736611 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097021229 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117304288 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087527168 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116897752 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099128356 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120881056 seconds)
  done (took 1.639606879 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090092493 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114836203 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089951549 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114646768 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094904542 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114912054 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088381954 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114845372 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089718774 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114986897 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089212939 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113310251 seconds)
  done (took 2.232240943 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.461732077 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09278678 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120894698 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111449879 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096631201 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114859473 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103382088 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118517774 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140798278 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088886201 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115545981 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091559324 seconds)
  done (took 2.657837841 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235960668 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125700833 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290794144 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190399417 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158843295 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172023149 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152556548 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165223881 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197955776 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157138984 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232331464 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196439659 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151781285 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19051051 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137065251 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145607644 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197312281 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244095925 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154922119 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204175213 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228004428 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165177524 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1778934 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151437998 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137220592 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169091033 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095046034 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129819947 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234052912 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177644315 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188945003 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161905935 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146832772 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239597267 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250189296 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196305273 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212013134 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108688966 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.169924424 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165986725 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264136003 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111251263 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232865018 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158604399 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130843964 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192414599 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167159266 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173359538 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.148688237 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138956594 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222450599 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212955779 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.1927084 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137220572 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159853093 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160367693 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166466572 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152586169 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251602437 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198453339 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204894035 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.0936851 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146386968 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190612465 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180914249 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.191028364 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180569411 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146218046 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191331681 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186747322 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16384971 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217660793 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18200473 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138315431 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168307615 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173914976 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169709669 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255710281 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177850958 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121922909 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166505062 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150137749 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130267548 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167126328 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124855045 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213106875 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149856689 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134188091 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163172018 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160235943 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16009747 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197576088 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218447528 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120168202 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110076305 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155885242 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155258922 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187577599 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139044614 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158421195 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160945956 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103171856 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203597023 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097075733 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175684986 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118311122 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17621527 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182702241 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125957206 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158728933 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151494855 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.123958623 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202714474 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198734788 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140641628 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107117708 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232908154 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177209341 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150298035 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178731947 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199145129 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.141919198 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14970212 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225749756 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217553719 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140416951 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204213153 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154791712 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13601369 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133431404 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17949857 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154810847 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160248793 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105395801 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.206720267 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210657401 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.124817123 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111106659 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214692638 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106219594 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13124878 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159727222 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14838389 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138895568 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145912638 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.123504989 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207738692 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179683321 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152695636 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16605525 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151128206 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251300241 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14016275 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.122897206 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147960477 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12064663 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193913671 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196906173 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130956346 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229696792 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17171818 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155223318 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168935822 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108258455 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176158071 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130580891 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119713212 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193595777 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166679188 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162838057 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194661971 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156716345 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181636309 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.208456253 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172836997 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174823507 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164579643 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158968483 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13813394 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158652975 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162786151 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096050841 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142853954 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13411511 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156196748 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143505502 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10653269 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226031309 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17066174 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14851773 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131589223 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14943292 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179915195 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127447264 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178319278 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.201702003 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11944786 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224641541 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192528646 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186508894 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144609859 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233039073 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094157409 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125749674 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142105127 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17107735 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106908278 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134930189 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165226393 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17893356 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210031332 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176281825 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16279074 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176301131 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189583428 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122094053 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140810111 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21058765 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174871571 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161356934 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137267016 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151677242 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176030674 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156094668 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256206559 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165617191 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177007368 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235741262 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149026123 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105123115 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1519779 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18499269 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153781764 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202210471 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119550782 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14317946 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160650199 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133112208 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160107824 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182943063 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16289519 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216014743 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148797782 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186533514 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099763248 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191093323 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158285656 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164845904 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081873745 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174197802 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229645843 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146151552 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169201058 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191885237 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130229023 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.178206428 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212650267 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2196383 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111566113 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157404541 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15832689 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163043219 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171163906 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178222152 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159419658 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21492728 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129474946 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136409122 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139818015 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150046674 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150818484 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.105601364 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14822275 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1732595 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140283745 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186650675 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159455949 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157632939 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170762107 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150225997 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144530013 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150482104 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215263456 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174185282 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240772294 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148636992 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179734713 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203607631 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126454312 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130459586 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106314254 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176640267 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135986789 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188035071 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.147137548 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157299881 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180167654 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218215166 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112275251 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120243491 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156064947 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173299021 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163664089 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151374164 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158409692 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205811218 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140941468 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106201343 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170991095 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15641367 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147366957 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195720924 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.107602667 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148683242 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10084056 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132646766 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163814903 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204830707 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135291402 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182210603 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171068716 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168769596 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164245933 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149926527 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149288759 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138062359 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228959801 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182955641 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131964765 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157310755 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176617567 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193414756 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159408136 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139846583 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230206989 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19133067 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196336172 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142062365 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168427875 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167467738 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155556762 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183757986 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134951172 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231219269 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106498942 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226540366 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15391483 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141766465 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173672666 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.147431535 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11304809 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213709128 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172842236 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134541021 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10480939 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166368474 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202074398 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154604653 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10035367 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178675162 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125454054 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189011448 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257978816 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133634296 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153261849 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118730885 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134816489 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158018482 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158408189 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1392938 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140053239 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227967053 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134596985 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190599712 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229389281 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168479351 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174273131 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143081859 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693310063 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.129859826 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191987411 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153121078 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204116997 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150445611 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171765657 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16089665 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168235802 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221681027 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157395104 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202482454 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219931114 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17846075 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131420865 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158811792 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162027286 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143780591 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151722328 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166793114 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158868772 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.125358205 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.202536289 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168776008 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106134793 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140528881 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197953969 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153520567 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212343019 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178393434 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111185427 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170726634 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212222687 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133249643 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178948923 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233854676 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113861313 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150523474 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13308937 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155844883 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257995815 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09736819 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22500179 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175453702 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156528414 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165615392 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147130783 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190316414 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158527531 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176595494 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146328054 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158683357 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154502388 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137435159 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101699179 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154272565 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164652582 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148582912 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157933387 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162742931 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191131799 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095818435 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144455879 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156356361 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188885901 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243952693 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136863538 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10824178 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162919817 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151689279 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173875495 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20444483 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108300635 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135607175 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136333751 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131660905 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137055902 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153610586 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127840376 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163404907 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233646402 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136114722 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27801648 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112553126 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154168707 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088584665 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.131562054 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150515009 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145867853 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157611576 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150399973 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232717086 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.145818952 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132201184 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148932562 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098156332 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135799235 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16454283 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165383672 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175952191 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144612099 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080183689 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158480329 seconds)
  done (took 80.488714314 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.16139017 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131358379 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145962487 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201763669 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175108179 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270186235 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211212106 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252892545 seconds)
  done (took 2.630295311 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09235865 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145367007 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.152997457 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133937909 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091296913 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120266362 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.330130381 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132296958 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090379267 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139116547 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.146761825 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117313582 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.506535095 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.117730013 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117074926 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083139034 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.114785465 seconds)
  done (took 3.706552543 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.460513325 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708756705 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.477566512 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124548514 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.035511703 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.133863542 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.654870422 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.208911186 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094499978 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.478731893 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.768552108 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.182443613 seconds)
  done (took 18.412915966 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098683318 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121163499 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107560373 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135173874 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096023643 seconds)
  done (took 1.646050842 seconds)
done (took 128.183784448 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104115844 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402084852 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072257518 seconds)
  done (took 1.59860206 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108268197 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138358762 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108575509 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135741618 seconds)
  done (took 1.587171478 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097903258 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127597998 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108564389 seconds)
  done (took 1.424939135 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325148979 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190646307 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142028074 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105806153 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129540133 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.1022939 seconds)
  done (took 1.429137934 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097211392 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127920003 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098071072 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130567436 seconds)
  done (took 1.549135482 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09419413 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070600635 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101826737 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07535393 seconds)
  done (took 1.432703188 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113288248 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131482276 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104734063 seconds)
  done (took 1.446349902 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129272363 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139330371 seconds)
  done (took 1.365552768 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105139949 seconds)
  done (took 1.195681637 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117657353 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169599835 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190350429 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165037581 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.227063061 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165831199 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14096112 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114168979 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.13141958 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144309946 seconds)
  done (took 2.661605367 seconds)
done (took 17.547371123 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102661146 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422770787 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413727546 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117050789 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72334164 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380803485 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.046619099 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146454946 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166255629 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093261538 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140281364 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.701433782 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.010217774 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.377728788 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.999482823 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.471399707 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.70541859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092543272 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120124066 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093698747 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.033014001 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091699522 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122065566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092915822 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701566127 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425348704 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094354503 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.46533184 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092683598 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127235265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410045735 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094667335 seconds)
  done (took 17.161023603 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095363169 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174550709 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098756455 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137321041 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123366615 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094020133 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124535455 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093061452 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179539793 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123448087 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110978171 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120548284 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125975214 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094882129 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14178516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092536465 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125154518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120798828 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093229511 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123000005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111446787 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121311038 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094909231 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122406343 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094195375 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135508818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123309434 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092788259 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121102615 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098624323 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128375873 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095123053 seconds)
  done (took 4.832945204 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140277563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182883292 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128361758 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128165258 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169397102 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124395527 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200340857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147168903 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154974802 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123989226 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140584382 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093504467 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157612606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123826192 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115874441 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121662268 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097255735 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122807418 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093865816 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123741954 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141180769 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092444464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122500164 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093502412 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123446664 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135872511 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095729519 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121694664 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092628669 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128056876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099722937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124177417 seconds)
  done (took 5.166100752 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096885475 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128859362 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108770502 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138040098 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095762514 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125974454 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096765725 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125017735 seconds)
  done (took 2.020559325 seconds)
done (took 30.271812454 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.103222689 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.122860122 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098386347 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134523519 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.097501068 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132234449 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092187024 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.128832119 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.100006197 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.125947255 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129135756 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09266391 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125062279 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092305434 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.128234407 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093113454 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132374773 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096981795 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133440482 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133148416 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094739382 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.128914518 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098907828 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132459784 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103784954 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133139281 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133448768 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09884697 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122934118 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095307425 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124738621 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103819336 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122719842 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10344048 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121942382 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093143182 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121199778 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092682811 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132317758 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099580116 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124750411 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128755942 seconds)
  done (took 5.89992351 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107177346 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14001044 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104890354 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081830222 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116825865 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081254433 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.13839155 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079453179 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110806257 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108109422 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077239945 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106359463 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079073598 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101929366 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077511384 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075240509 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109286067 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076075348 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076858618 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106556256 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079588575 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073178557 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107923437 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079030738 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104827943 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081179012 seconds)
  done (took 3.587061341 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.09958874 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135349874 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11234385 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184355735 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161519066 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099867992 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13193638 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13965048 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.107670759 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120672383 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095985732 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149439621 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110819717 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128865336 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092757324 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137608822 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135930043 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093577685 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128256847 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113555302 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139052886 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102834562 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143469588 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133350158 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092408072 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12325048 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096666789 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135725877 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098077287 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130977276 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126594648 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096337544 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122834092 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104952596 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126704464 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094501326 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141745584 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131039035 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101533075 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122460327 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096131423 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121838182 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113080761 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167068625 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121185642 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.099674131 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.128820446 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102077522 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121319946 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110544173 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13179937 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091968345 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125503094 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091994346 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121869668 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135515975 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.093876706 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.123988745 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102041355 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124842057 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104743899 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125596237 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10900266 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121548514 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129013411 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09195108 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122415405 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092686531 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143598293 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094542757 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163997431 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.122745353 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094591432 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.132156036 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100860208 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128358499 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093027053 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138049839 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102963254 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125872376 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131207085 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.096268741 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124919319 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111607044 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125230589 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094847397 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123421305 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099651803 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124736275 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093313207 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136836006 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.121809961 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.095398853 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.13917305 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.091782968 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123015093 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.098613565 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127299203 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091777705 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135171563 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.127114356 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093716851 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131865339 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.092551128 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12486526 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102210779 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127175611 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091615455 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127762139 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128096001 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093724386 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122453384 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.094948835 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.123051434 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102609744 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127797309 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098076475 seconds)
  done (took 14.821646971 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226076727 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217984636 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.12505017 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.208713692 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.105165437 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.133558255 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211729723 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155170509 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.093209162 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.123271236 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.094632647 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.163304459 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.156470552 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.169637783 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.104185687 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122621937 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.111898417 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165238077 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21419923 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.206430799 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143648347 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131550749 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.095337103 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124902215 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.095932894 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132035613 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109860647 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132819329 seconds)
  done (took 5.202369559 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107246273 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156000284 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098928746 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144432407 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148264001 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092617011 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127027745 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094759974 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135594544 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135395106 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092433091 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129057816 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099955968 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132634054 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123656722 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10219124 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133060348 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094856591 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125647332 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097270815 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130276888 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.131793108 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.09643693 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121774656 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.100108723 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121040785 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086557221 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140890066 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12226779 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115783774 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120927131 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099840972 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133636084 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093416667 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.1239091 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09480903 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12485277 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095262557 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125206493 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092025329 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120880588 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07819548 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122060369 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136882443 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099861653 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109741821 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.099849822 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128647908 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098877536 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120508694 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09585203 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125331398 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096415427 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130177739 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097989575 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128511943 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095790322 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116761866 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099700119 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125803104 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085222605 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122095167 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098163233 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117932984 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101032506 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128000846 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09170313 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.124294575 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09739742 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12816349 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.124589432 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.096071319 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.120830605 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.095842751 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.127834933 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098434509 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126303679 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091580361 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122184252 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093180855 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.105886059 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09319292 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.104199654 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.09729262 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.12103567 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.092133514 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.124971323 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.099867108 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13729003 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095246335 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.12907376 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.123574101 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092671661 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126619316 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08408385 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.126108126 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108253367 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141197441 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093750344 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121977372 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.13676932 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099699046 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12232854 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077459815 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130328655 seconds)
  done (took 12.977769015 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.116433816 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.149395484 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095371725 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.138066439 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15066413 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.1170181 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131486819 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.100247863 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125888141 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111419516 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123943112 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.102016436 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128254016 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.131864348 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.117052399 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132473502 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.096123124 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.132671717 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.102183946 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16058538 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136972868 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108375778 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.135128148 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094054595 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128619744 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106531802 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.151157655 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134075808 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103379345 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.137916375 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10469072 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.150203936 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.109332189 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129442503 seconds)
  done (took 5.325527352 seconds)
done (took 48.919861873 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.214669825 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.422250556 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.200327884 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.080833081 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.210907054 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.231000751 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.21105001 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.200908849 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.68797639 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.201074813 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.463001949 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.860307848 seconds)
done (took 60.116707949 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.2259691 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.337177356 seconds)
    (2/2) benchmarking "String"...
    done (took 1.46755951 seconds)
  done (took 3.937114864 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.553563503 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.20354873 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.489178842 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.201828803 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.217563451 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.647001087 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.842159194 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.555594179 seconds)
  done (took 28.287767019 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.213580794 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.605406862 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.881227629 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.902647723 seconds)
  done (took 18.734758547 seconds)
done (took 60.870068507 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.191911106 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.268741559 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.215171321 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.191487156 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.314740311 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.224359342 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.52681746 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.431356824 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.205143723 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.185277648 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.223231021 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.204473792 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.208013421 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.520771056 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.205451569 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.201971248 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.212166965 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.697225155 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.611359943 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.210513201 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.23728871 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.241676135 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.222506271 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.206253428 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.24532158 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.20800383 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.217859255 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.218240972 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.751137327 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.202467417 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.209115804 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.691658197 seconds)
  done (took 191.836735213 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.202868746 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.313316016 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.395397903 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.243814243 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.697337842 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.40067454 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.341223171 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.781621479 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.219834855 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.21221221 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.428548861 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.209356327 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.494623086 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.189757694 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.213203633 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.307572278 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.400376758 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.498557157 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.224976016 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.479730068 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.206517661 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.455633126 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.460650362 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.390442022 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.260798194 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.26205802 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.230329786 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.251489838 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.396156298 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.352100831 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.219908031 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.256049261 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.824620182 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.058505976 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.215493391 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.223730737 seconds)
  done (took 150.453954092 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.475814231 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.199769147 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.201140424 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.199385641 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201054193 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.232334157 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.199213026 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.756905092 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.755407297 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.698268709 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.426959005 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.202717186 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.258445547 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.469464013 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.202219159 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.292180249 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.211069494 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.199638897 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.213653028 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.242834129 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201390784 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.2021314 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.754979468 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.214359608 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.252935109 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208203433 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.19795712 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.231448553 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.588747982 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.198746568 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.199789986 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230461848 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519014402 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.247456625 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197914782 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.537529308 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.552980822 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311010183 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.20156628 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230104669 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.199888233 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.469542477 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199617101 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.200045296 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.203138372 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.825301415 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.202713982 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.752340903 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200950986 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.145644829 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.20369316 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200302727 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.399639028 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.711200018 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.219917283 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200291617 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.203739142 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.200760921 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20019474 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.23197308 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.389498281 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.300143961 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.216072498 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.203659011 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232648151 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.200327998 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.245440754 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200532388 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.464194488 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.27268496 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.307326803 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.749619955 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202531249 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29139748 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317417927 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.199777003 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.19758139 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198910781 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199485731 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.306132518 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.198832019 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.599951469 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.199380745 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205634183 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.200904838 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.260241165 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.293531933 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199831531 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.50414421 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.202915917 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.200229353 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947713458 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295868205 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.199487214 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198927896 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.19936947 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.601221424 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.73833463 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.394710114 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.203343578 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.38679755 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.203356733 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.616186752 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.725890139 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.813373479 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205217287 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306574276 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203505034 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.200949125 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200451128 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.229417912 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.216523688 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.258717538 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.200975173 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.597048605 seconds)
  done (took 344.656486946 seconds)
done (took 689.553263642 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.877494682 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.828737501 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.961975417 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.845096153 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.827968516 seconds)
  done (took 10.471243214 seconds)
done (took 11.598704844 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.378938638 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.379852744 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257487076 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.380441074 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229548517 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.396891069 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.358590434 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220204385 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298567864 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.277485349 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.296029734 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251297605 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22620872 seconds)
  done (took 18.081159229 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.507760561 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.536021876 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26253209 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.549954891 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240081097 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519524417 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.399918747 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.40680088 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.406625152 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.230219665 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214030995 seconds)
  done (took 16.404766217 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.50909811 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.506418943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268390054 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.551366115 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240153901 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.507424988 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.39792946 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.413296717 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.410269058 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23301898 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.213979826 seconds)
  done (took 16.382385161 seconds)
done (took 51.998340599 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.208118394 seconds)
  done (took 2.337952361 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.24168974 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.402975702 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.223347015 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.213870018 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.20865009 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.209225064 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.212641242 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.208522601 seconds)
  done (took 11.05295259 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.205284873 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20474619 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.208549152 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.204449899 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.204809564 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.206958227 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.207805083 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.208438953 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.207081689 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.207683854 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.20667683 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.20532984 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.208463336 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.204886617 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.205171698 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.205966455 seconds)
  done (took 20.431790334 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.207802056 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.205559742 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.206296663 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.207239973 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.206910571 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.206040377 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.207028497 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.205315835 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.205277365 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.205661383 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.207750522 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.207278427 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.207033013 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.206625549 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.205947045 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.206514463 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.205510024 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.20596969 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.211093333 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.206327663 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.207286229 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.207039461 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.207153608 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.208190752 seconds)
  done (took 30.095380967 seconds)
done (took 65.046130441 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.210834933 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.780794635 seconds)
  done (took 9.123551299 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.208090297 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.209393153 seconds)
  done (took 3.550958022 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.209442037 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.209085325 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.208680337 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.208488885 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.20966292 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.208792534 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.210050543 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.210722081 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.211051153 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.209541303 seconds)
  done (took 13.226907962 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.210054346 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210382351 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.207989051 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.211092015 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.210188419 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.207263278 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.209415115 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.210443983 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.210386179 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.206764174 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.210635933 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.207543901 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.210303844 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.207789651 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.210065374 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.208401155 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.208168243 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.208140532 seconds)
  done (took 22.897406405 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.210608205 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.211701945 seconds)
  done (took 3.554633982 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.208577778 seconds)
    (2/7) benchmarking "second"...
    done (took 1.208574872 seconds)
    (3/7) benchmarking "month"...
    done (took 1.208298051 seconds)
    (4/7) benchmarking "year"...
    done (took 1.209099671 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.209344138 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.20926492 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.209270633 seconds)
  done (took 9.595085625 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.212067861 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384328862 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.462584511 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.849683601 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.212560673 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.214378755 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.112351946 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.214311641 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.2158905 seconds)
  done (took 14.011597719 seconds)
done (took 77.089038334 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.204025564 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.219653765 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.338458371 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.210407013 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.238575568 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.50276273 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.234427503 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.325860166 seconds)
done (took 37.406587262 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.208592815 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.935628603 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.932623148 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.205984439 seconds)
  done (took 11.206447485 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.186727732 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.088484437 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.189110047 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.167053883 seconds)
  done (took 17.764951979 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.192692685 seconds)
    (2/2) benchmarking "read"...
    done (took 1.538510094 seconds)
  done (took 4.86333794 seconds)
done (took 41.173389515 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.211344189 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210647194 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.211129989 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.210860318 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.208335033 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.211885099 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.208520649 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.209015744 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.210896108 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.212038147 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.211173398 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.212104198 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21166918 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.208615774 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210276202 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209533352 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211823734 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.210457497 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.210706352 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209245492 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208999624 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.211786006 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.209414718 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.209243327 seconds)
  done (took 30.183565623 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.212670491 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.210852448 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.212955214 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.211904284 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.209706001 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.21248522 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.213403122 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.21014984 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.213167545 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.213676214 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211009562 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211176045 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.213576288 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.211091125 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212262229 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.210431721 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.213151307 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211099009 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213028911 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.210718133 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.213919956 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211096511 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.211614272 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213440943 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.210659739 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211437742 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.214099173 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.211659164 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214080628 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21073973 seconds)
  done (took 37.496173431 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.219348317 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.220369303 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.21450473 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.214149205 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.214899609 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.213934378 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.215201446 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.215175722 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.214711591 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214645036 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.213571743 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.215044333 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.214310733 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.214642109 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214864974 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.214954846 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.214950597 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.215285858 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.214961095 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214785069 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.215387106 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.215701209 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.216068934 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.21584253 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.216406811 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.21546826 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.215460029 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.215563391 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.217366217 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.216386895 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.216045844 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.215557351 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.216309929 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.216517781 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.216574174 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.216038459 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.221755697 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.221935237 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.21666889 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.216414004 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.216607745 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.216569631 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.216272128 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.216623798 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.216761161 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.216971775 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.217218258 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.217921454 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.21776382 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.217266923 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.217568395 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.216636908 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.217426059 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.217406372 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.216933599 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.219303675 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.217803784 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.218555328 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.217986621 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.217701932 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.218368013 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.217605911 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.217729609 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.218543818 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.218056896 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.218422874 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.218678654 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.218303955 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.217662746 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.217374045 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.218442964 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218296569 seconds)
  done (took 88.741997927 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.218757439 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.21701584 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217093754 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.216238559 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217085505 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.218482839 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.216095156 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2197088 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216031064 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.218632827 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219405225 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.218731533 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215512292 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220369092 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.219688693 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.216022262 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.22090629 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216390808 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.219694275 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221570647 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220252618 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.217364624 seconds)
  done (took 27.941618102 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220220792 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.219661704 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.217144123 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220332738 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218100369 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222683414 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220962453 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220739728 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21986044 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218162836 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217415322 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220360265 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218484067 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217698966 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217463858 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.218320349 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220820489 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.218143353 seconds)
  done (took 23.087552688 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.21959481 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.219184958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.22100093 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21847788 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.217995971 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.221303956 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219239669 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22262503 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.221139238 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.219625242 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.222661672 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222596176 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.22245529 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219683923 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222884269 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.21973657 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.221861648 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21890266 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222634869 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220369286 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.219580085 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222021697 seconds)
  done (took 27.997469382 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223078795 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.222776377 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.219839871 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.220890517 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.220882928 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.222448147 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.222260705 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.221067216 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.222599672 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.223737628 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220079324 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.223895668 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.221491363 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221495066 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.220758441 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219742901 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223826697 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.221699878 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223027106 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220740758 seconds)
  done (took 25.581309235 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224100006 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225781469 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.224181989 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224311076 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225307638 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.225487233 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225285868 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.224991351 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224753126 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.225415231 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.224993868 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.225832586 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225478918 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.226208999 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225938612 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225278042 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226242985 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224843102 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.225416849 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226509669 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226741 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22732433 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.224937159 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.226107526 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.227398057 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225707671 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22591125 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2266939 seconds)
  done (took 35.463465913 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226160432 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22610027 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.223010118 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.225018342 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.224584598 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.224183782 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.224508945 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.223615418 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226272019 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225022974 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.228356249 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.227327847 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22610502 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.226801584 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226304789 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.227750773 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227508946 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.226370695 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224747955 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225528143 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.227750491 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227506855 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.227127421 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.225836182 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224981358 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.22826113 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225440019 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226607836 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228274897 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22587669 seconds)
  done (took 37.930857132 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.247442282 seconds)
    (2/2) benchmarking "in"...
    done (took 1.248034648 seconds)
  done (took 3.64448529 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.224807569 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228364608 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.227745745 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225079936 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22532032 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227945669 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227617882 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224597919 seconds)
  done (took 10.960801681 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.228924043 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.229289156 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.228555946 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.228622092 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.228127546 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.229728653 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235446063 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.245640213 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.229547081 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.228900275 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.23571795 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.237069053 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.232092179 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228817397 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.229087413 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.230012139 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.229279177 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.229050247 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.229787256 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.229840517 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230272935 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232706767 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233061039 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.227074371 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.231860982 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.240348536 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.251465414 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.230008256 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230497042 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.233984856 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.231591951 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.228453902 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.230736709 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.230099627 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.229992334 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.230502524 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238169861 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247465023 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.237785596 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249743331 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232245307 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.228909475 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.231828936 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.232117092 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.233549733 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.231346438 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.231708373 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.229654362 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.230695408 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.234473031 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.236671126 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230922515 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.230756742 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235629313 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.233185422 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238467275 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.248989067 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.234940294 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.241110125 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.243446697 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.263121698 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.255747412 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234078254 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.232941425 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242958452 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.256482671 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240630834 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.247694484 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.230634648 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.233532817 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.240020848 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263408061 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.256855003 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.233757294 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234350527 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.233903448 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.233778808 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233845679 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242063588 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.254101394 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.233412613 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235294853 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243976102 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255203511 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.233181338 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.234035775 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.233522443 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.234079899 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.236330628 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244063448 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.252203506 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.234803921 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.233605913 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.234963713 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.235818144 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.235588083 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.234096593 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235386923 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.233072151 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.235580085 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235551874 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239321243 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.243370496 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235577291 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235824176 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.24237456 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.253508843 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235784891 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.24290456 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.236452367 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235311791 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.238027472 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.242561611 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.233604365 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239051352 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.244075258 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.236782808 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.236438244 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.236807973 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.237068949 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245563708 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.262312529 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.236052337 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.237380638 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.243163721 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.247023624 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236517991 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.239905531 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.236985153 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.235065579 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.234823863 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.238742067 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.23777687 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.237858057 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237843347 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238114516 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.235914488 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.238855655 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.238716128 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.239113408 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.23946086 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.238861438 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.238931973 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.23962651 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.237923484 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.240081273 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.244990103 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.256783317 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.240411151 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.240023478 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.236329432 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240168935 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.239291556 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.239006312 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.238175109 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239186178 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.238664681 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.239599587 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239214181 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.240241387 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238892763 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.239959263 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244270022 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.239840454 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.243539709 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.238450578 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.237782048 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.239197298 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.24075078 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.238336652 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.240416387 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.237670451 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.242947775 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.245577122 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.24019546 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.241008667 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.243134221 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239613724 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.239380899 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240881844 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.243175678 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.248522025 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.239989543 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.246938221 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.25819579 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.240513436 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.240453938 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.241278502 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.240096073 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242226313 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.244117526 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.248306516 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253417561 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263747757 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.242870769 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.24434899 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.243084042 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.245557676 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.245466357 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.241795518 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.242050923 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24214749 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241164316 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243117633 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.242925877 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.241276992 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.241895817 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.242401721 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.242304509 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.243652518 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242693414 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.243209106 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243121627 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.240691489 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243518693 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242054708 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.242750248 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.241162468 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.242788276 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.243260389 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.243135785 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.242306528 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.249670143 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.241635779 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245208115 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24381177 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.243188545 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.241956769 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.24469244 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24631891 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.242332227 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250291083 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.262324931 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.244587777 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251344131 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.260973089 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.243556933 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.247110423 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.244173868 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.241499118 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.247438094 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.252097232 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.244750911 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.244750293 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.245046914 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243642472 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245039634 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.251023765 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.260717237 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.244373626 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.245683992 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245931424 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242072994 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.246739695 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.24554976 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.245536195 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247377357 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244186178 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.245296903 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.247225146 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.246283622 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.245585799 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.245079019 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248513381 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.252474759 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.251192246 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.246238411 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.24858797 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.246946173 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.249410107 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.245374305 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.246317397 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.245831887 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259823365 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.270401301 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252885645 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.264931824 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.248150132 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252577063 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.265456138 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.249769894 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247412838 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246818049 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.247899055 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.24678168 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.245563737 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248423311 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.249624368 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248531194 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.247920324 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.25133803 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.24770304 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247271501 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.247825761 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.247198469 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.246668336 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.247128365 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.247444279 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.250770172 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249946568 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.246410381 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.247634828 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254686314 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265704182 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249658742 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.247458194 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.24926416 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.249121148 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.250207931 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.247481346 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.252815447 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.256581503 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.251451582 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.258268933 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.251196809 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259606334 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.24878575 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.253288895 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.257560135 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.246612929 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248975474 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.247632196 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.249336167 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257479735 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.266917576 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.251049993 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.253548619 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249814067 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.250386111 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.249254574 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.250077574 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251039121 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.251353418 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257731178 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.269942586 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.253248762 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252832027 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.248089966 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.251632631 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.250850155 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.25009271 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253586884 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250899171 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.251158569 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.251537906 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.251210073 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.251121047 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.251273384 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.250519065 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.248714463 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.251863246 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258988999 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.270026556 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.255611999 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.252073816 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.259316545 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270540784 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259180558 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.269381231 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.253416588 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.252581289 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.253200471 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.254022198 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.251905788 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.252242637 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.252679631 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.254287595 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.255691503 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.253071694 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.254405603 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.253630383 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.252721946 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.25266414 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262079671 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275763421 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.25489388 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257277304 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.250243005 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.255690981 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.257457777 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.253268029 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.252164907 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257905742 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263793292 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260548154 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.253340728 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.25432849 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253244878 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25436471 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.253872834 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.254650488 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.25471461 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.254245589 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.25507998 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.254745404 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25825481 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.253779955 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.254914608 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256251241 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.255782034 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.264158527 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.273101238 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.255676391 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255415739 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.255609441 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.255918627 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.255990348 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.255098525 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25479292 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256066684 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.257444273 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262405487 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.262789373 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.25858856 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.255362493 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.256371313 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.256897243 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.257117104 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255348237 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.255829197 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256891686 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.257962973 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.256346928 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.25673069 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.255636658 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.256831558 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.25716256 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257065338 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259152396 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.263260821 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25743729 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.254701938 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.256711117 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25666915 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.256139731 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.25641508 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.265279066 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27855911 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.26780328 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.265405838 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.261972055 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.257642069 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260009706 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.264528488 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.256497617 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.257462289 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.257689871 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.259610355 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.258579913 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.260575938 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259136829 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.264832574 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.277777688 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.257813027 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266222304 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.275773206 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.257518218 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.259799656 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.261625348 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.25925228 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.256873358 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.259871572 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.25783547 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265748279 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.277615831 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259402831 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260523291 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257439742 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.260445233 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262882363 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260401552 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.260674018 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.256951357 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.260944121 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259479822 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261020006 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.257840075 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.259245553 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.25986258 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.263224413 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.265720629 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.258216889 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262931962 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.259918328 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.262573352 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.2617992 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260034689 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.257560309 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.259046231 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.260238459 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260757399 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.260201965 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.262697683 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.259650045 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.261575104 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.261838123 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261446243 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.263562367 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.270232207 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.268417456 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.259787887 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.26059388 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.261694719 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.264355741 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260846725 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.261908386 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261561053 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.26289981 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.26206281 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262289878 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.261817689 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.265121031 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276851729 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.279306514 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262948475 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.262605076 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265658296 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.262025115 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.259643963 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.262772042 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.264983847 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.266323397 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.269346626 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.263401445 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269156069 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279984195 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.263534463 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.265914481 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.265697078 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.270105472 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.265375337 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263009192 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.26348236 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.267845955 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.278353777 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26416592 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273705258 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293524072 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.282905377 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.265151069 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.26613897 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262940479 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.264503414 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.267478837 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.264974146 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.263794762 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265960822 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.265747941 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.26530781 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268806597 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.266342783 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.264845748 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.265028285 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.264843815 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.266196199 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.263808649 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.26550183 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.265424819 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.265755382 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.266558483 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.265677125 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.266040288 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278234962 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.290747996 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.266309907 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.266490056 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.264051259 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.268431215 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.268891038 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276129733 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.273021361 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.266603474 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.265585727 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.267308342 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265617073 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.263441183 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.266746077 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.26738243 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265653556 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.263842232 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.278262559 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.291954038 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.271038441 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.267152729 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266147175 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.266641776 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268019865 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268033781 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267668762 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.267785274 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.267840671 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270603665 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.266504157 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.267667037 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.27047278 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.274578369 seconds)
  done (took 746.777613539 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265692349 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265094401 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265455288 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264867816 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264935722 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265078073 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265351201 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265840116 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265005117 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.264935648 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266533876 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.26483464 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265294405 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266328996 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266440075 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264731826 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265464805 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.265701757 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.26638721 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265634574 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.266971807 seconds)
  done (took 27.761870403 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269276258 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.266046181 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.265775636 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270053188 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267661392 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268484328 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.268754073 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268861318 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269072817 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267891368 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.26954185 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269221747 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.266732908 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.26807015 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267308542 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269216873 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.269888875 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268265305 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.269954753 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.267272497 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269112626 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.26759525 seconds)
  done (took 29.09211777 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.269456839 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.269598242 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.268652113 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.267294074 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.269055689 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.267799806 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.269528145 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.26904858 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.270710848 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.269488179 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.268577303 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.271102045 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.277716411 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.27433617 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.271756072 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.270285035 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.415183406 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.271425902 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.270159381 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.271266468 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.268337195 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.276635747 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.287048184 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.268078771 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.269431725 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.270744997 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.271012444 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.270919007 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.271906218 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.272752623 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.273902582 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.27102721 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.27104937 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.273559781 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.271891654 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.273095026 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.274263471 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.273592127 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.269483919 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.272133422 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.281884701 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.291850173 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.272317622 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.277672288 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.291944153 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.271865261 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.27616949 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.278954995 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.270033298 seconds)
  done (took 63.704006794 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.273204653 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.272765774 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.26959983 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272977861 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.274329961 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.273485341 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.273125217 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.27496674 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.270565629 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.270872428 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.273535563 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.270895048 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.270542387 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.273434827 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.273200876 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271641767 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270308522 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270563195 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.270609177 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.271398786 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.270658339 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.274125051 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.275024401 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.270373043 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273759112 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271610231 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271650085 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.275286935 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.271499335 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.271869144 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.274654691 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.274554733 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.274509452 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.272783263 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271408355 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.274430643 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.275285906 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.273017308 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.274213549 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.270653328 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.274793699 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.276205693 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.274849823 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.275262908 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.272997941 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.273665023 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.272627323 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.272077905 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.271408868 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.275867541 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.275775654 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.273674993 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.27560602 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.272392856 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275621263 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.27453197 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.273690024 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.273447028 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.277172621 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.273968881 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.273984515 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275614696 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.273360694 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.274919467 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.276071837 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.274674622 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.27530876 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.27601085 seconds)
  done (took 87.780965516 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.276847785 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.277516124 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276105702 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275247664 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274745396 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.275795992 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276473406 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.27561006 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277226697 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275675526 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276354662 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.276313394 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.276335069 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276945276 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276637845 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276933803 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277479734 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.277000749 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276320671 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276296915 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.27653281 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276011082 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.277442633 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277597599 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279502928 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27833268 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277379156 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277021283 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278101503 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277032663 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279650175 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.277255043 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275677856 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278276174 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.278677742 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.277326986 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276680249 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276958505 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.278391714 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.278956709 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278189269 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278158856 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278335612 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.277517991 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278414201 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.278935096 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277348491 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.278461764 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278189958 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278535867 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.278665202 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278351472 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278132424 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278883431 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278997487 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.279164098 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279415596 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279016062 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279405862 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278339276 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277548049 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.280130563 seconds)
  done (took 80.404670535 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281618817 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.278829575 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.277013977 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.277019101 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279858172 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277276173 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.280323187 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.279826302 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.280748785 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.280813743 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280553442 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27799688 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278888237 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28064509 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.277843246 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27839113 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278629177 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.278257203 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280497902 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.278790393 seconds)
  done (took 26.780612274 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.278781666 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281196165 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.278192626 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278326559 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.28214809 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28002181 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.282134048 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281501697 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279713421 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281801152 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.281489097 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281993263 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279071506 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279779572 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.28237079 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279447583 seconds)
  done (took 21.685330002 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.278961192 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.283398483 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.281724487 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.281677649 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.281170406 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.280052146 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.282130448 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.280954327 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.281022913 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.282695515 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.282194394 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.282708502 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.283004774 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.28279112 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.280369682 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.283117535 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.281452361 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.280707844 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.283792179 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.282533246 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.281781141 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.282811137 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.283940132 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.284694947 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.281816019 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.281879631 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.281183823 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.280277205 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.281978492 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.284071516 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.281648347 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.282992571 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.281740706 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.281567217 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.285068766 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.281898046 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.282940581 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.285148848 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.284757121 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.284699683 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.284361798 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.281673211 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.283840965 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.285442772 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.281388881 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.285274673 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.281855505 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.282957269 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.282757524 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.281755239 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.285524174 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.28556661 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.285126479 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.285635129 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.286208332 seconds)
  done (took 71.753460389 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.285908912 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285794675 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.283121596 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.28662669 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.286286892 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.283801921 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.285800824 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.283855974 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282492479 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285956295 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28441295 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.286177969 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.284568751 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286086087 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285574346 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287817391 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.283725602 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.284941135 seconds)
  done (took 24.334393025 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.285640713 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285845767 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.286928508 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.28444938 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.285270435 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.287710052 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284068803 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.286855906 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287250466 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.286486996 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2849487 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.289832386 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287970894 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.287800193 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.284850059 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285388025 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.288999845 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2879915 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.285206205 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285358908 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.290113366 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288956517 seconds)
  done (took 29.511638916 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.28795551 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.287015631 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.285930937 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.303275632 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.304707522 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.310298607 seconds)
  done (took 8.982979016 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29485871 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287735736 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284744777 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289752593 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289776109 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286422757 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285794391 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286154308 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288933991 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287005771 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286011917 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288593212 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290171525 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2868131 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28917906 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28919793 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287679188 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286590218 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288622972 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291051821 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287469071 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290769336 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286359862 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286657373 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287652406 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288586888 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29031211 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287580007 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288923765 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28977506 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289862311 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287188223 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289560399 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287209127 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29166662 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290665386 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288329219 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291090486 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290545771 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287546575 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29064566 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291434263 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291466805 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288318524 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29169164 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289007169 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290072319 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289408945 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289207035 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291590144 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291872712 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28926714 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290558321 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291656605 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291529224 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292906234 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289771672 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290089607 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291512867 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289500455 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289609315 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292686657 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289518342 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289875163 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292511742 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289697759 seconds)
  done (took 86.327252633 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289126337 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288964939 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289547877 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291249286 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291602545 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290837777 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290800323 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290005521 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289874014 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29086751 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294029332 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291198779 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290776291 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290267548 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2906233 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291132064 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290654503 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291496145 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291198453 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293438221 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291906935 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291477286 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292423121 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291867014 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291507417 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29389634 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291593839 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2917093 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291977607 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292527239 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292140936 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292414612 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293942097 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292321962 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292775318 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292618311 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292020102 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291958797 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293117675 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295119797 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293039998 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29532886 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293006785 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29322362 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29269452 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292541491 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293144229 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293916384 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293566817 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292234899 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294174996 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293504006 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293394203 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293424101 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2928771 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292901815 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293649674 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294128867 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292492278 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296439485 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294334396 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295312013 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296831447 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294438503 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294182749 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295596436 seconds)
  done (took 86.518144414 seconds)
done (took 1741.574776803 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.29530997 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.375869354 seconds)
  done (took 13.883005254 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.458758199 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.41098629 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.295041502 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.325499728 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.29597827 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.316301564 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.314452327 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.295910929 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.294749544 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.29583241 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.294856057 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.482884564 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.289355258 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.296198355 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.296619385 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.386629687 seconds)
  done (took 42.57333946 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.322891868 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304056471 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.407929253 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.320445949 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.323320681 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.480082275 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.357486591 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.300892667 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.464166039 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.339686834 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.796008748 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.32414312 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.302061376 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.365369532 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.316964949 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.477858758 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.540375489 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.800647034 seconds)
  done (took 29.758285241 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.732777397 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.308354985 seconds)
  done (took 9.256214975 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.330722292 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.312007966 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.310147132 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.307831518 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.304924582 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.316388434 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.308067 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.312153192 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.293234515 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.3265946 seconds)
  done (took 64.345664994 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.319831039 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.302816951 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.303016042 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.300217883 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.29363049 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.292842671 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.300189125 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.297671142 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.834019565 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.422292681 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.32115936 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.31115042 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.31833721 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.303863589 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.299936867 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.339096901 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.445902303 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.318971633 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.299278055 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.308093061 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.301405817 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.395513803 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.344253147 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.30062171 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.424094103 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.855171634 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.305504568 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.309258674 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.427776789 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.319307107 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.304014357 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302404571 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.304275652 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.869470194 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.790567733 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.3120871 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.325891517 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.311628186 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.300193638 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.425553024 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.322371423 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.31396694 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.298565405 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.763743224 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.457168143 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.413040759 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.47825414 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.30520013 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.304164062 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.364444387 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.304537976 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.3056619 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.334380538 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.067243361 seconds)
  done (took 109.41235783 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.333757789 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.784996805 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467093521 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.317956957 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.167046499 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.06396971 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.314090558 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.575042737 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.372156424 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297826879 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.586662191 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.80248317 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.324673779 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.372247442 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.860657364 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.317258909 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299181999 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.129424579 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.313815552 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.2989116 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.712461458 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316240631 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.299818447 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.491167102 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.337913446 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.751691844 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.687739458 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.828416257 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.31749786 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.299522805 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.765520174 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.314205148 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.348775149 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.302208977 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.568112075 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.646669275 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.637344862 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.318986197 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.349013531 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.302517074 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.324095581 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.749587019 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.64977881 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.317092038 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.316461479 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.771787609 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.316833538 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.309479757 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.303144926 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509107061 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.056379606 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.301568108 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.676830468 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.301943934 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.56063939 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.340953792 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.320894923 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.78727976 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317918658 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.480033237 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.348819151 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.302570565 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.303873866 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.304286077 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.301770972 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.63762162 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.76843063 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.303226406 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.641269939 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.77837532 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.324944559 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.820724447 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.239145746 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.329848786 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.344129063 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.300555915 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.982232202 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.796219921 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.362067714 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302128259 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.625955591 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.319380616 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.577962977 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.31745364 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303307675 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.725134214 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.325491247 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.322693929 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.303382166 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.303920537 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.084369546 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.3050822 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.582058883 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.328338411 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.303668499 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.303918615 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.303383008 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303288447 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.30456453 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.309449075 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.821204381 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.325514839 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.428991463 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.321866814 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.303350462 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319012648 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.303583575 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.305893633 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.528478607 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.758494272 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.307636999 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.305642563 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.303997256 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.311029266 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.487539821 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.307624766 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.601328854 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.322772473 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304698464 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.310800182 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.11513618 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.359030205 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311716849 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.305509233 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.148251324 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.527996917 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.322219064 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.30670364 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.306220256 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.321515297 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.608414097 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.306091061 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.387321102 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.305446315 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004125015 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.332666378 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.343880848 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.71553172 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.31453454 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.266951735 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.327171978 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.306623138 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609647665 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.576640344 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.626025522 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.311391803 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.30720744 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.984606142 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.322188709 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454870223 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324745341 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.291544833 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.505244698 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.652269511 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.307793547 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.853209211 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.308567595 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52356213 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.307400187 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622390385 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.800550869 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.328954738 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.311251316 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.015416087 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.968559799 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.009023144 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.307634475 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.581626409 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.306321816 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.762161472 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.308238147 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.308443542 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.903695727 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.309473298 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317473038 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.30714859 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.308288644 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.367334404 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484487675 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.041707555 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.313014639 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.75865175 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.352051902 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31037172 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.311433215 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.313540744 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.660215051 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.38794921 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.310562074 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.334879289 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.309947168 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.310925962 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.77135481 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.274031437 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.310786512 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.463383822 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.934811157 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.326105169 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.310353589 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.935670811 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.695478272 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846246647 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.33222733 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.610614698 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.327641226 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.350023389 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.110116717 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.387779903 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.772671307 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.331861816 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.328188602 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902719308 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.326315281 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.417294862 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.312359782 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.311649724 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.846331638 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.328021053 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.315705 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.62068867 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312800282 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.563696034 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.312213602 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.32515782 seconds)
  done (took 1106.428231568 seconds)
done (took 1376.866879152 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.312721367 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.31306921 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.297897036 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.316407595 seconds)
  done (took 26.472675748 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.321232831 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.317245307 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.31731873 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.314588242 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.31932603 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.315215565 seconds)
  done (took 9.136113322 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.361882217 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.309528751 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.316116533 seconds)
  done (took 19.218521954 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.529324557 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.575944218 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.67681291 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.48837653 seconds)
  done (took 10.502067469 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.318113918 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.318039704 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.317068738 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.319581967 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.320112682 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.321718834 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.319429072 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.320535327 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.321587214 seconds)
  done (took 13.106676404 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.16406458 seconds)
done (took 84.82934271 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.311031238 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.762583219 seconds)
    (3/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.346358637 seconds)
    (4/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.669176293 seconds)
    (5/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.313417384 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.352388623 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.936027836 seconds)
    (8/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.88462887 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.561763422 seconds)
    (10/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.945701725 seconds)
    (11/309) benchmarking ("sort", Float64, false)...
    done (took 5.616111953 seconds)
    (12/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.042183062 seconds)
    (13/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.377861652 seconds)
    (14/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.091055026 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.57033408 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.395027002 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.352749984 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.935650991 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.337260223 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.628885532 seconds)
    (21/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.362851039 seconds)
    (22/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.301599556 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.62371438 seconds)
    (24/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.655604337 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.958602882 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.29832385 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.493477872 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.69457418 seconds)
    (29/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.29388321 seconds)
    (30/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.866245418 seconds)
    (31/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.40407925 seconds)
    (32/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.317790064 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.354425152 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.667815015 seconds)
    (35/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.494424432 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.726689103 seconds)
    (37/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.419147918 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.443514806 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.785226969 seconds)
    (40/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.420188939 seconds)
    (41/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.650985339 seconds)
    (42/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.308378744 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.364846859 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.125924409 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.712842888 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.73046172 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.332166297 seconds)
    (48/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.881235528 seconds)
    (49/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.345967399 seconds)
    (50/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.319923494 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.444889452 seconds)
    (52/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.494616809 seconds)
    (53/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.357851876 seconds)
    (54/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.983560142 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.580503181 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.313544445 seconds)
    (57/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.678995038 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.793807111 seconds)
    (59/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.417181571 seconds)
    (60/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.319989328 seconds)
    (61/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.590155882 seconds)
    (62/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.399703971 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.371491076 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.145774866 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.330815274 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.628543113 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.059455249 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.671323179 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.433112934 seconds)
    (70/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.709583749 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.429180007 seconds)
    (72/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.523847211 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.97484248 seconds)
    (74/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.333352366 seconds)
    (75/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.295974154 seconds)
    (76/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.446107922 seconds)
    (77/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.462409091 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.252055086 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.248069819 seconds)
    (80/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.921538406 seconds)
    (81/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.616011043 seconds)
    (82/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.854703166 seconds)
    (83/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.366546192 seconds)
    (84/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.688269584 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.650230299 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.316350667 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.541973569 seconds)
    (88/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.43159877 seconds)
    (89/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.316419738 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.4633475 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.625390395 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.179186475 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.402865936 seconds)
    (94/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.538245731 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.414652644 seconds)
    (96/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.880658702 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.421166555 seconds)
    (98/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.308011096 seconds)
    (99/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.924236996 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.17013965 seconds)
    (101/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.336930407 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.870834038 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.129258088 seconds)
    (104/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.682508876 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.882607273 seconds)
    (106/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.109329057 seconds)
    (107/309) benchmarking ("sort", BigInt, false)...
    done (took 6.319472282 seconds)
    (108/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.047162937 seconds)
    (109/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.617783795 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.962160674 seconds)
    (111/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.60524411 seconds)
    (112/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.046036834 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.395069328 seconds)
    (114/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.059914663 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.794054077 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.537724201 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.299494672 seconds)
    (118/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.921116061 seconds)
    (119/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.177609234 seconds)
    (120/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.410639788 seconds)
    (121/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.923018647 seconds)
    (122/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.146260053 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.180277467 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.319159592 seconds)
    (125/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.500666161 seconds)
    (126/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.476176237 seconds)
    (127/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.203152718 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.407913577 seconds)
    (129/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.328253651 seconds)
    (130/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.065584138 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.302904087 seconds)
    (132/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.336847812 seconds)
    (133/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.367448012 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.389730107 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 1.834951391 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.35924304 seconds)
    (137/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.444118345 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.596856657 seconds)
    (139/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.92252923 seconds)
    (140/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.31519349 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.718205802 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.090868688 seconds)
    (143/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.408438353 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.58332049 seconds)
    (145/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.768097356 seconds)
    (146/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.823174885 seconds)
    (147/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.465769217 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.32495938 seconds)
    (149/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.3647702 seconds)
    (150/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.701961634 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.075486463 seconds)
    (152/309) benchmarking ("sort", Float32, false)...
    done (took 5.337477191 seconds)
    (153/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.401610333 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.320590695 seconds)
    (155/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.197229376 seconds)
    (156/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.431117014 seconds)
    (157/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.324466403 seconds)
    (158/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.351901442 seconds)
    (159/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.303924868 seconds)
    (160/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.557287773 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.08976741 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.354358234 seconds)
    (163/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.170171886 seconds)
    (164/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.149870852 seconds)
    (165/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.322668892 seconds)
    (166/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.676917296 seconds)
    (167/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.32163415 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.37267668 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.34666188 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.327294861 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.304460967 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.835426116 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.234779344 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.339483945 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.335926894 seconds)
    (176/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.407049833 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.106160705 seconds)
    (178/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.757531249 seconds)
    (179/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.883137029 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.672684879 seconds)
    (181/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.385558391 seconds)
    (182/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.371208092 seconds)
    (183/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.321911605 seconds)
    (184/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.688078748 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.349249091 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.426021781 seconds)
    (187/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.349632961 seconds)
    (188/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.428333416 seconds)
    (189/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.333345878 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.814476927 seconds)
    (191/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.899264869 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.417093945 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.323542932 seconds)
    (194/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.417932125 seconds)
    (195/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.705071868 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.100784259 seconds)
    (197/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.347538525 seconds)
    (198/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.357091918 seconds)
    (199/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.670681397 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.323743271 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.64455366 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.427847599 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.365809478 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.801386776 seconds)
    (205/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.34043427 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.580829515 seconds)
    (207/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.340512833 seconds)
    (208/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.520841269 seconds)
    (209/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.36916823 seconds)
    (210/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.358825991 seconds)
    (211/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.753833648 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.397111233 seconds)
    (213/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.308255438 seconds)
    (214/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.724704291 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.259104806 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.452751476 seconds)
    (217/309) benchmarking ("sort", Int8, false)...
    done (took 4.381860595 seconds)
    (218/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.767724464 seconds)
    (219/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.355903883 seconds)
    (220/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.350243361 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.370858806 seconds)
    (222/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.90007098 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.393916401 seconds)
    (224/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.588833296 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.540820949 seconds)
    (226/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.951137465 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.321249904 seconds)
    (228/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.547166038 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.307556955 seconds)
    (230/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.253208588 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.325818445 seconds)
    (232/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.394266862 seconds)
    (233/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.370879412 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.701144126 seconds)
    (235/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.633551804 seconds)
    (236/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.398152692 seconds)
    (237/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.535264489 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.367762283 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.347335009 seconds)
    (240/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.540232005 seconds)
    (241/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.383034071 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.354105286 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.104339828 seconds)
    (244/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.645598622 seconds)
    (245/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.353153345 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.328902131 seconds)
    (247/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.332846976 seconds)
    (248/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.094409094 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.90636874 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.926644557 seconds)
    (251/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.328618196 seconds)
    (252/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.759584189 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.7945264 seconds)
    (254/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.472931141 seconds)
    (255/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.685486335 seconds)
    (256/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.553210725 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.169737641 seconds)
    (258/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.619965649 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.34469637 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.536564494 seconds)
    (261/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.470090771 seconds)
    (262/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.327038203 seconds)
    (263/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.426223543 seconds)
    (264/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.353969026 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.353473118 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.181501474 seconds)
    (267/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.324070908 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.334589057 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.329387317 seconds)
    (270/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.904795785 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.321156498 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.723133859 seconds)
    (273/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.337422159 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.334283428 seconds)
    (275/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.843721811 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.434615005 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.238869524 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.738723038 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.758776231 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.346848757 seconds)
    (281/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.635694059 seconds)
    (282/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.353366783 seconds)
    (283/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.345846121 seconds)
    (284/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.359268654 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.413395746 seconds)
    (286/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.329629098 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.413621836 seconds)
    (288/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.394982582 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.440548046 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.64064329 seconds)
    (291/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.701446162 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.161271463 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.911587637 seconds)
    (294/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.355851696 seconds)
    (295/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.592462337 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.317204959 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.372732542 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.876632847 seconds)
    (299/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.434136576 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.223787609 seconds)
    (301/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.812477361 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.137565752 seconds)
    (303/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.469604608 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.36412702 seconds)
    (305/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.604166997 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.353992881 seconds)
    (307/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.34266903 seconds)
    (308/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.415956414 seconds)
    (309/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.706643776 seconds)
  done (took 918.531895589 seconds)
done (took 919.762234505 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.365336408 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358480261 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.341431685 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.363512199 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.454447112 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.368028795 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.351725906 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.343974049 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.390131426 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.391366441 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.340772691 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.366875507 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.343483197 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.342655169 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.340807697 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.357600119 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.375371898 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.345229229 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.359935654 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.351346591 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.35961071 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.341536977 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.39197466 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.368533259 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.347333372 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.347384059 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.347376103 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.364069007 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.456754424 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.349335297 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.347549109 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.356744059 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.37620734 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.342665013 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.339504801 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.363440804 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.356217146 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.3538073 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.34791817 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.376868346 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.782377385 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.360529329 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.345949287 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.344223688 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.344168936 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.349271502 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.346207413 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.350840507 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.359351829 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360230581 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.767274974 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.376936969 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.349216438 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.346158183 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.356714884 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.347185866 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.348681861 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36308207 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.364684891 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361490942 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.361092118 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.351716477 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.347681836 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.362324283 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.354284083 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.802450499 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.35759893 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.351214859 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.77813491 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.367179678 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.801567197 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.371995237 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.347450813 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.360295096 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.379975331 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.373188191 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.342539124 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.34727811 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.355933077 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.345947521 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.357046432 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359650077 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.352060866 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.348829293 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361694802 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.373097093 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.357740803 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.349425203 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.356031636 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.368624437 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.355257172 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.359281295 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.35028219 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.344598499 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.35749668 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.351680811 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.351550287 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.35039306 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.353363463 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.358260251 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.776503951 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382282003 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.344712042 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.346120996 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.348811632 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.363321794 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.777033173 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.366526186 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.370754904 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.39639377 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.351180044 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.363455712 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.354162771 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36488068 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.357794819 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.352446312 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.343605179 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.365238147 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.76788603 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.381442276 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.351605966 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.348847015 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366824451 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.352890367 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.346362866 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.38226225 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.352055265 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.364902743 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.472808384 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.361331484 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.382184048 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.348992632 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.354153659 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.379420339 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366687546 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.381870751 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.352289765 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367239056 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.36649706 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.345251254 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.363631222 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.360920249 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.351712666 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.357609234 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.344640456 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.376372516 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364487863 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36514221 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.37204388 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.472036896 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.349215266 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.367996516 seconds)
done (took 227.509224905 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.410724602 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.342255549 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.442201636 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.348213819 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.449435302 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.450410696 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.346061878 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.345866531 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.344993578 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.725979104 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.345770565 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.346334278 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.349046229 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.347927385 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.432341192 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.347309124 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.347091748 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.689672505 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.350002021 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.41992857 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.346472904 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.346444541 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.349070126 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.73235241 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.348929645 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.344216604 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.420012204 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.349584628 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.697208383 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.351915655 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.348378571 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.696993689 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.440665678 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.367350767 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.359182159 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.357530641 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.451089973 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.369224031 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.431010388 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.432334501 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.443300928 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.389072862 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.344360428 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.345151258 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.351638179 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.351816341 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.3486353 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.379193455 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.344920685 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.349320243 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.690523619 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.359804609 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.358699095 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.348705888 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.349286009 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.371171203 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.34869261 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.351897543 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.441711873 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.351935428 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.412539518 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.734245508 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.729469203 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.350786076 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.34852328 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.349759756 seconds)
  done (took 149.528840112 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.417904096 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.423577146 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.462999729 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.370315848 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.401232169 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.468193407 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.369989037 seconds)
  done (took 11.177966528 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.35851567 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.352750713 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.402118941 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.402035609 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.352788252 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.501017006 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353824152 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.364440938 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.350390654 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.408672749 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.353873466 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.353892175 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.360335356 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.353772255 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.401069378 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.365119399 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.467080961 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.35423307 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.354795932 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.504452323 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352318558 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.361742959 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.406013022 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.366428998 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.35558604 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.360201903 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.928684995 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.355006613 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.352604961 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.354421158 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351387718 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.392054411 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.35514876 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.349440261 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35265004 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.470569641 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.354988705 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351875764 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.355322667 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.352686612 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.356446969 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.355308048 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.356139208 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.353024149 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.356634856 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.378565154 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.356428592 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.356121146 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.355436124 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.356660145 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.414650645 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.356480067 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.352740163 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.353244749 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.41073718 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362112015 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.356632977 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.35230017 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.356910123 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.353935013 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.507317683 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.402791105 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.356269512 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.402773344 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.356226129 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.356961551 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.356099051 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.356920742 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.410836381 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.356390267 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.404655533 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.353920391 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.512223701 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.379990884 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.358003303 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.359933172 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.35884686 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358307068 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.351715431 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.363313768 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.354893188 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.358157694 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.363296341 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354665825 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354734312 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.459923778 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.465501395 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.355378862 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.370577742 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.364489092 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.35625342 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.410719138 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.357339483 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.356441811 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.40877162 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472951397 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.411283407 seconds)
  done (took 155.352099135 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.364403981 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.367223077 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.359708788 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.373883857 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.360391532 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.359523252 seconds)
  done (took 9.455715662 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.361380434 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.360323897 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.358976863 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.358835888 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.359674977 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.359233771 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.35914147 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361075938 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.363061944 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.359167094 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.360611832 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.360560923 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.360538195 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.360452922 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.359172945 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.358980061 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.359210948 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.357374536 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.361244786 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361611659 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.457446784 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.360995397 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361549556 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.361611515 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.363835175 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.360887143 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.368356918 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.36123719 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.360839679 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36819203 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.381826312 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.362013529 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.36218229 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.368121456 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.366639087 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.362374315 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365632985 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.36272136 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.358502788 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.362936033 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.363648351 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361478583 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.362767756 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.363634678 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.36427037 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.366127725 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.366195416 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369658947 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.362266825 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.363408285 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.363678595 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.362671255 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.363866876 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.364107497 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.365469632 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3845953 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.368341703 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.362999768 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.362887671 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.364106799 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.364052634 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.363976172 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.36592592 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.368171511 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.369764641 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.364248249 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.364666891 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368042409 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364462879 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.362653981 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.365353723 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.363084028 seconds)
  done (took 100.541718692 seconds)
done (took 427.313074788 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.789196072 seconds)
  done (took 8.064039445 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.452967644 seconds)
  done (took 7.72952108 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.972660434 seconds)
  done (took 22.253655806 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.42948487 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.416084694 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.365165201 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.363269366 seconds)
  done (took 26.849456667 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.719068321 seconds)
  done (took 7.995038155 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.360935211 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.357683871 seconds)
  done (took 13.996735473 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.389763412 seconds)
  done (took 7.66515636 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.985843288 seconds)
  done (took 8.268808175 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.358991242 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.393383294 seconds)
  done (took 14.297051753 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.338786341 seconds)
  done (took 7.613976507 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.301139439 seconds)
  done (took 8.577262583 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.371222283 seconds)
  done (took 7.649026016 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.414743864 seconds)
  done (took 7.689802125 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.421822536 seconds)
  done (took 9.697647269 seconds)
done (took 159.620404701 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.357638175 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.359802018 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.358093837 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.358088775 seconds)
  done (took 26.709462398 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.839977794 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.39999365 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.400320261 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.409493306 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.403449227 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.399404617 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.391398047 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.393213013 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.410260834 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.402425153 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.400138236 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.402158981 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.400372806 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.391840719 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.403075164 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.40117927 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.410908527 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.401445262 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.39209093 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.402982893 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.366803256 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.4114687 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.403517258 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.368556519 seconds)
  done (took 35.283527038 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.887293785 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.43826406 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.518926527 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.418321457 seconds)
  done (took 7.539956479 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.419200028 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.421274597 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.431757185 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.470398221 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.494964334 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.430673738 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.391432859 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.389702594 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.375678248 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.421969946 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.496844552 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.437436512 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.505018534 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.367113225 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.563245131 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.369488987 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.368809398 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.418948948 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.47161646 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.485462266 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.3690752 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.420244565 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.423792769 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.438882703 seconds)
  done (took 35.662170862 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.381953185 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.375741949 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.367315429 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.367628114 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.389415093 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.367290761 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.369421819 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.370865305 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.369336025 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.37481624 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.367568286 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.381771608 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.36855406 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.367854702 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.375462802 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.369937734 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.375424243 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.370724272 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.369043276 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.371898073 seconds)
  done (took 28.732740828 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.362503966 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.218310471 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.71397105 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.618970548 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.3651806 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.362910673 seconds)
  done (took 27.921603 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.441242833 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.598438016 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.37014443 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.735767265 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.839387216 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.394272266 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.370513675 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.613090004 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.93692968 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.931966145 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.434404539 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.438717295 seconds)
  done (took 20.384973399 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.374990267 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.366887547 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.380431889 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.382683426 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.426183972 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.390511705 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.377850405 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.363657936 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.432563507 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.447732985 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.392006004 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.427762043 seconds)
  done (took 38.045355001 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452638741 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413344235 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.366346284 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.122047819 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.084717118 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579125432 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.144488284 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.79556424 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.371174057 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640569249 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367296859 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455716748 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.621346945 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366806876 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392534509 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.363035754 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610189382 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865280554 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368782603 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.344135458 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400028542 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378079692 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.454831493 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.40611164 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.579466105 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.344167222 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.629963922 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.142572906 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.657805176 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38681008 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378689796 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368875931 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64164432 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050362945 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484583835 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379043865 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.082959437 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.916126936 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.354853875 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.357015221 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344050733 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371040185 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37973059 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370186589 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.302961638 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378185734 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808611869 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.375611885 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.080147059 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369592719 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380256254 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463639068 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.372691229 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.938399712 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393375241 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.374675978 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.367288571 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376927982 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938792545 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.863973441 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388349433 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.312082688 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.766313592 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.350679674 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016447546 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.489707681 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.37453202 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37472905 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304430634 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.424612579 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394149492 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516846396 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.39671193 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021148807 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071532298 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.400194709 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.301553728 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935393121 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38417614 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.310921984 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599499141 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14741153 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.306190572 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.316928014 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305657861 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111148605 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380208359 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.778038785 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379813341 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.801841408 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.383627802 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391558658 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395815602 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595667528 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.251113824 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372212988 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.384643855 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501117301 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394437732 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.801607594 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307086898 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.376420883 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628838934 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.585037391 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376489017 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.398960645 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595140883 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381087408 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.401276 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.376598988 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.39004832 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.95824678 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40362014 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.82921199 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390621132 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.148842629 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136681605 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389071711 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.481062028 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.375151034 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623952647 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.156126928 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.257259415 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443878402 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380523363 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376409347 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.469600951 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.231341714 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.257011323 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.371538393 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381796909 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.392183711 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.375185088 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318188562 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.382187655 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392204795 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.152454953 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.5985188 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373785841 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658188968 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309680521 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52259702 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383852601 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.599099126 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.581335979 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.391089117 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635115296 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387073175 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.393157477 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395604592 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394071431 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472896491 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398001112 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.375178131 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658877575 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.380263805 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.380938585 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.488863001 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.155645768 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38311588 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.38234032 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.219002484 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96643663 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3730817 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380733947 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.266988191 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.391543594 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444395045 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382457732 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.387650404 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.22745903 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.23668124 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.388326469 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.386438292 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600992923 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387788959 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.407393786 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455643011 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.577006312 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.967492186 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408814195 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.311539733 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.090799093 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.070732285 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377164292 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.579353597 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378138688 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387057502 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390713339 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.907048692 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.968006681 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398512956 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.405412275 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.384248185 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389287997 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.38611837 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37835352 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.210609199 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.882977461 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385706511 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.398061841 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521611509 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.394597705 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.313668791 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.895347957 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384640945 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380110126 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.157555313 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414782664 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.401969982 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858218661 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639705706 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.080726196 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393072914 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.594684129 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.412348687 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.377748284 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391807552 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392151982 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.410156294 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389541018 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.391041578 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.417405529 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.818213976 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947049372 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10418804 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943843495 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.347030046 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.382392289 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.297964802 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.817264104 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316040452 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.038492001 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572124817 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.832702016 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325758463 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581830835 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.587964407 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174279229 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.392612898 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609881909 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32664525 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.396480022 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394282792 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59394487 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416472982 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.381910156 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.336505813 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.66305516 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617058614 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384419716 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461001738 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821077938 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.385742749 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.159979736 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.38212924 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.771452347 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.576452931 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.928108907 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.770190996 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394616168 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404198377 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858817576 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386044202 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.909571708 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009627337 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.411179374 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.592256138 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320586672 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.395667146 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.395527041 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.380191454 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.708160973 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.384952202 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.638950714 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39545966 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319299031 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394191998 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927220653 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.294194972 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.391086634 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384664679 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16863521 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395601872 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.681888615 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.403269131 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.205720149 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404303834 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320524698 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320035284 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.078116205 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386116741 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.361011842 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900215085 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.762334736 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.394062629 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406845639 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255951365 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642308354 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.399715383 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.977178192 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628136318 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.201892275 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408671772 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.487112212 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38901731 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.369132804 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.268393292 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.621852696 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.229598648 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.610002189 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.431134427 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.286606474 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.385034227 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597378303 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.268596436 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394575542 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635216906 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.123342615 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.398190612 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135943302 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430969476 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401963481 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398675454 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.782884922 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394699749 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458580443 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397125885 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.398790492 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.39853028 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560958085 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401857257 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388415647 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.401512842 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481239439 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.88817113 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.208160087 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.161299824 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984305038 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134546166 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.998595922 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417541101 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388774449 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388988936 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322422096 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536425209 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.91436435 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66150578 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519435885 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.854934446 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411826457 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388789944 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395152599 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609856811 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665939476 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.26039789 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392698094 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.055910434 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.549191556 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401262209 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.601431703 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908025887 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971957147 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515124294 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402085798 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.822230012 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66432167 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.481130091 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389993808 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987241122 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.412464271 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.804969248 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.416410863 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392163597 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540153525 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399748682 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064786786 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.420844513 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.550869115 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.165531661 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.542222437 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.646488801 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.864901349 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.403434706 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987498205 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.124970243 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662241844 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460865034 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403627915 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.49564997 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537977476 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.393606583 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.286706209 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391728346 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235080495 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.10304343 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.402711059 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988860964 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673297833 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.389868128 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.397130732 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415635889 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.402220616 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.615616999 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12919323 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617995308 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403674419 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394434994 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.383177341 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989721648 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424225498 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328858528 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.397685777 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641339727 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654933215 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419192763 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.847468528 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.104083249 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963038803 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.366668485 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415956799 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402741704 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119106332 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996384201 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.241184239 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922848289 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.052782612 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396903431 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677228265 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.400051846 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403248436 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679622791 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.39798394 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.404503846 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412766429 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.990900003 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197527978 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.416631314 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.502042757 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.332026555 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.621115313 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.048260128 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331916856 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396356389 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.576945715 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396367001 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527748808 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408107265 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.403085988 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397233366 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.135010591 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668907832 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.402327751 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.388025595 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.384745281 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403238061 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409673714 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633543475 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401341799 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.070922527 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.747451863 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.652629669 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.411312962 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.384826804 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.400896656 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397880275 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.114245785 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.366536616 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.932558003 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987047582 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.398238315 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.432638084 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401201785 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.614102975 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60957566 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402842832 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409889242 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40831181 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421355702 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.298383123 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.165617124 seconds)
  done (took 1610.967822806 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.441794989 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.433629019 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.436787728 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.476507553 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.422669275 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.501228291 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.411978539 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.523965442 seconds)
  done (took 52.960578174 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.412800789 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.549381077 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.430256402 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.410061548 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.407523128 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.400680343 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.874031939 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.43169231 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.407446287 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.407909423 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.40313091 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.4001204 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.079830104 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.409153424 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.403151765 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.396164278 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.407679705 seconds)
  done (took 66.549608607 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.409698159 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.464705428 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.508771953 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.40961423 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.432393108 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.434293348 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.391214296 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.428089724 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.417675854 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.762108343 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.069910608 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.416397764 seconds)
  done (took 85.459769163 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.408089058 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.408648782 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.409299128 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.407766082 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.408849083 seconds)
  done (took 8.357818893 seconds)
done (took 2045.849907439 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.661463399 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.117943828 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.059726885 seconds)
  done (took 5.49305435 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.549190285 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.597651838 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.71866303 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.723509884 seconds)
  done (took 7.904485671 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.689037775 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.787257141 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.597843547 seconds)
  done (took 6.389466783 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.850132616 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.412759993 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.53299962 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.401925594 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.409014302 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.410239251 seconds)
  done (took 20.538224542 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.40757501 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.408650045 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.406342317 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.410282912 seconds)
  done (took 6.948745668 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.382846117 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.102617572 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.387637781 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.398412983 seconds)
  done (took 18.588304714 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.165951255 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.175927862 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.149945018 seconds)
  done (took 7.808559882 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.409435984 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.254970161 seconds)
  done (took 9.981014848 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.712528597 seconds)
  done (took 3.030106622 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.538908886 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.734059155 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.460860214 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.40188593 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.496216063 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.333138632 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.074922557 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.654468356 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.373876317 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.626421373 seconds)
  done (took 29.013605129 seconds)
done (took 129.465864236 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.281575039 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.648392188 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.607743345 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.295643195 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.653762328 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.60850757 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.621099825 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.264011439 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.761006934 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.749937594 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.255142828 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.645179025 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.568639751 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.646887242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.569179679 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.774754621 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.635708468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.331724853 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.936450441 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.140930799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.625288765 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.890357875 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.088422656 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.912613939 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.635940281 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.558338853 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.475396973 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.775677354 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.111504316 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.492649596 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.557804886 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.312883374 seconds)
  done (took 195.75273713 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.405168299 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.40490926 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.421162652 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.4055892 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.405658471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.406071171 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.407326984 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.422556307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.405128796 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.426270695 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.406071782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.414710496 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.407469798 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.417736791 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.408163395 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.410767431 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.406663292 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.405810297 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.413082806 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.407524668 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.40845882 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.423893322 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.414788702 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.415085123 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.407786499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.407529397 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.407694889 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.407064667 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.40756635 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.437996961 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.40768799 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.406709731 seconds)
  done (took 206.481162075 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.408100986 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.407154226 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.426005736 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.426205115 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.409039003 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.420503539 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.408494014 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.423303617 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.408340955 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.434933628 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.420101496 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.40741968 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.411439307 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.407739865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.424248687 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.408186182 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411785449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.408006481 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.407211439 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.425689438 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.408500698 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.411215021 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.418383603 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.409145724 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.430376625 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.42446463 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.410492144 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.408089061 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.426896655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.424358584 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.409975538 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.428798797 seconds)
  done (took 206.63837647 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.605464166 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.417346891 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.416788046 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.354065325 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.417999943 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.417378869 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.411221776 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.613684366 seconds)
  done (took 14.977548627 seconds)
done (took 625.165321059 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.718166634 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.435344348 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.62128928 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.439615498 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.197798905 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.457568636 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.44044717 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.608875621 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.338967009 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.613962508 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.677446058 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.452634465 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.821297643 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.439296257 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.68900597 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.53740056 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.343122921 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.46223181 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.755692929 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.991457533 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.702175342 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.893927997 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.623443358 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.331268825 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.839381801 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.891221272 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.154964587 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.320056558 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.456155977 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.753903136 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.097851515 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.413265258 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.498994324 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.49644581 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.550625681 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.535254694 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.385179733 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.493750242 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.637217436 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.65536986 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.97202068 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.155775011 seconds)
  done (took 95.225574575 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.402005413 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.403179807 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.401867764 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.403027997 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.404450294 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.401166271 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.400366203 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.403170121 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.403279605 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.403575872 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.402537256 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.404655292 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.403543361 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.404514861 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.40275287 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.404711874 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.404339457 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.404385287 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.404230149 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.405774767 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.40515534 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.403849274 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.405408226 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.403712708 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.403692307 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.405236509 seconds)
  done (took 37.82260084 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.422130367 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.680113606 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.844288122 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.436767762 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.42310022 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.427993451 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.502584738 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.42430101 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.426012003 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.425818475 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.598001561 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.425793531 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.459511722 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.873882826 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.434705874 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.425369626 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.425417038 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.423753659 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.688265308 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436470586 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.526995015 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.425981139 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.502776637 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.433437534 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.447314089 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.424192492 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.42775747 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.940565415 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.4444266 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.599922972 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.241532719 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.509387219 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.894420318 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.871775944 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.247669876 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.434313815 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.425454026 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.603570645 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.427434326 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.426002273 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.503699648 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.426004952 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.852742773 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.058342069 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.44361944 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.424517598 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.96220391 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.622927314 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.676277906 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.433418292 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.881368986 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.435908028 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.428068475 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.428570108 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.675869835 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.432415078 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.42534048 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.963101944 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.44845248 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.505328133 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.427840281 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.427525015 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.694700522 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.42750497 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.691947505 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.429338618 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.435644349 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.447004189 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.854930132 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.437897264 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.06658837 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.446684225 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.428143598 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.602992384 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.692081626 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.995311822 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.451305868 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.699170914 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.912439558 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.524496753 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.434332191 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.933828546 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.528609822 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.432868667 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.43141514 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.430819759 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.427616827 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.475954519 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.506568481 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.001329334 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.085901666 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.989715311 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.536735247 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.443001714 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.429070184 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.96888549 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.45125234 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.429920037 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.853496114 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.079392526 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.454579242 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.438055642 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.071306284 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.45328365 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.509324019 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.440208181 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.863701331 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.437452481 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.475733304 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.429318855 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.436522618 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.45217045 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.510526555 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.435645781 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.430952962 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.038334221 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.629846918 seconds)
  done (took 187.292329935 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.43840105 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.424861898 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.432003072 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.423922998 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.422366845 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.42862188 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.42436788 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.424832966 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.429916528 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.424710705 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.424377139 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.424707815 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.424702473 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.426044389 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.433495515 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.431709932 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.035550469 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.424440451 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.424248067 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.424647159 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.228416023 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.426723569 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.424651921 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.441088003 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.42527074 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.427111444 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.431678489 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.427892199 seconds)
  done (took 154.717853627 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.433824726 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.003972487 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.45150533 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.566787156 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.45321029 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.429956635 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.564475464 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.492491205 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.450916229 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.431870789 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.431276536 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.739171107 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.433481736 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.955777684 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.629387336 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.591511367 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.955919459 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.454520405 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.432774257 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.433559514 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.568938483 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.437281397 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.739890037 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.005526586 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.452915986 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.005177319 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.418871068 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.434270408 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.433110864 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.007759504 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.450010906 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.741672903 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.512517148 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.495158978 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.026931507 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.973680033 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.974136726 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.586406416 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.432905388 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.432970803 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.432740345 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.41784722 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.010447179 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.453605609 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.436023353 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.001055197 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.453948931 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.436393787 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.443649217 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.434464101 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.495621436 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.512711304 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.772415588 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.041435264 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.540266785 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.455370602 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.56961646 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.80518006 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.437193581 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.957633024 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.418205885 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.03389773 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.463037604 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.41934131 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.435638078 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.440756586 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.587844086 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.570016052 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.960301534 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.454144004 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.958697641 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.606587557 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.435875901 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.434718598 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.437738246 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.03409864 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.986674819 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.606746139 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.573209967 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.636462532 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.42099544 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.435882853 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.420285301 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.515287541 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.436214122 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.035228442 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.986569981 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.455174622 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.438893508 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.438600756 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.438556914 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.617864161 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.052831035 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.542180597 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.949364714 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.776079942 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.766674 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.443178035 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.498578733 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.453378827 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.761091796 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.447991931 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.498194924 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.870037194 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.762244265 seconds)
  done (took 170.873094532 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.684517646 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.703407942 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.52945834 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.57112899 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.04368715 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.018162438 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.692692478 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.594539864 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.549469701 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.702353654 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.612240632 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.528599415 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.619422175 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.513993695 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.211152844 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.524100493 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.547384166 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.594675629 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.553261037 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.4757482 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.101111202 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.729573549 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.610710519 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.401950345 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.532757829 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.246926626 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.002132396 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.971423275 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.618954029 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.791771926 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.971789219 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.588518527 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.432798597 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.144828456 seconds)
  done (took 68.761166413 seconds)
done (took 716.013764628 seconds)
SAVING RESULT...
DONE!
