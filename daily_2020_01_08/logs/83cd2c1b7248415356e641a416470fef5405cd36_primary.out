cset: moving following pidspec: 27119
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.417346922 seconds)
loading group "string"... done (took 0.594720412 seconds)
loading group "linalg"... done (took 7.365682169 seconds)
loading group "parallel"... done (took 0.161044446 seconds)
loading group "find"... done (took 1.173540412 seconds)
loading group "tuple"... done (took 1.848999943 seconds)
loading group "dates"... done (took 1.340607317 seconds)
loading group "micro"... done (took 0.223333129 seconds)
loading group "io"... done (took 0.97255362 seconds)
loading group "scalar"... done (took 39.282540991 seconds)
loading group "sparse"... done (took 12.465479121 seconds)
loading group "broadcast"... done (took 1.005351481 seconds)
loading group "union"... done (took 13.049154987 seconds)
loading group "simd"... done (took 4.854923061 seconds)
loading group "random"... done (took 9.770804348 seconds)
loading group "problem"... done (took 1.871802517 seconds)
loading group "array"... done (took 21.096482867 seconds)
loading group "misc"... done (took 1.683202443 seconds)
loading group "sort"... done (took 3.340667733 seconds)
loading group "collection"... done (took 17.402126311 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.52764925 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124738409 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.1190797 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11977076 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14752321 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112821262 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125522068 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086788367 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.798468425 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148937464 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118609114 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.430816961 seconds)
done (took 5.184611864 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177818837 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08339704 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083280109 seconds)
  done (took 1.320413735 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066910698 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122984509 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066719012 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067919036 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069340631 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068645451 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068392643 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068424487 seconds)
  done (took 1.687771784 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072952551 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069499997 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066210496 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068467425 seconds)
  done (took 1.431313711 seconds)
done (took 5.84704489 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.795906734 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.207611109 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187313625 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.410969138 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137708282 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.16277975 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636652608 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.337907043 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187555083 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082134262 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112462326 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.336376965 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114520812 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639023267 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074171156 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090735617 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13829959 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.414097213 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067529133 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081802595 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088614279 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128243999 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08515 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074374036 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145669266 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067750911 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136585985 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080989939 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066630217 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212868135 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173329424 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663444415 seconds)
  done (took 10.32891647 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096911267 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09768229 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069892044 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125275562 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099992389 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072067833 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072924462 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06926516 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08970177 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130314181 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090020124 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101132348 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065754209 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068931634 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088179973 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207882926 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082864427 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08451696 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073062767 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077605565 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108593504 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081088683 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080003029 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079041579 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132349009 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183648938 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100671665 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099903286 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069172567 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081801446 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117380616 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128421428 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067767062 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068434536 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127204412 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096379216 seconds)
  done (took 4.673514325 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.011082938 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1433951 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090013069 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134756097 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064675795 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109861383 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065506789 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08059278 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210018709 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.477687479 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.115384701 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.599228744 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111370409 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104275296 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067796156 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068654643 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066875933 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.505329813 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.095746989 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106824239 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08136807 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070005622 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069738552 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354858058 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067615185 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063950628 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068571891 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057397825 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125081168 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068093695 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.952039809 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.131250145 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069702388 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104047713 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165688248 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091414006 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.279874651 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071273883 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066413121 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157913726 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072868556 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068744069 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086960949 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107187333 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116545227 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068022903 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070395587 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169668169 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064673678 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080916414 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.646081447 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15499299 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079387875 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066604633 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.259401538 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091504625 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072486669 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066393084 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.182615017 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065148733 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129786706 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06889511 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067530042 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068265144 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069777283 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.376651816 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065810342 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.889444849 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070819317 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079603962 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071861952 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071576036 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066235852 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075792902 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075194836 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090298545 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068823188 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078255339 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068516911 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068425609 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06990158 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087276696 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.382988333 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066925899 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068069543 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065504604 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089258456 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097112296 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069915853 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067958584 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102533088 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068634286 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066180268 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108362359 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068853263 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087228085 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070900236 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112842259 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069131945 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.20362544 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068437218 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066376709 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099583268 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073358807 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101562423 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084447302 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070799986 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.428262021 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064738489 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065029534 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068847093 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066023222 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067540502 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066948928 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079025628 seconds)
  done (took 21.374539548 seconds)
done (took 38.539226899 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242280015 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083409554 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081385347 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078718665 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079343133 seconds)
  done (took 1.806827659 seconds)
done (took 3.028945628 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126103465 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104247901 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066555964 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10028757 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066447065 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10509606 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104386895 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08450872 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104663478 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066574754 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100726019 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066259459 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066258583 seconds)
  done (took 2.40396472 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084196154 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086885064 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072389489 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085730742 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065796342 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085506148 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083760132 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092264271 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083849955 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075543673 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066208839 seconds)
  done (took 2.098549239 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083056901 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086540968 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072226048 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084948394 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066210967 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084699672 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084380316 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088729076 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083991542 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076384576 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065521242 seconds)
  done (took 2.090555281 seconds)
done (took 7.804112044 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078480145 seconds)
  done (took 1.283359822 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.606608009 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.074701615 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081997731 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111690988 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193712536 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121754645 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274464873 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088539825 seconds)
  done (took 8.941647249 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090618073 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070777135 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085408098 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071389116 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071087325 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071862897 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073895046 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071969812 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070295796 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071194986 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074924184 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074865093 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073371052 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074028428 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073432314 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073033553 seconds)
  done (took 2.468629428 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092716689 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092882824 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075622638 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077190213 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07451564 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073956055 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076331679 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075533937 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072895668 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074371046 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076943074 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076660429 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073999434 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066779116 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076145302 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077513151 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072918974 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076029616 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076702911 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077535157 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076902984 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065962436 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073271043 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075997501 seconds)
  done (took 3.143626868 seconds)
done (took 17.049772789 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114949138 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0734825 seconds)
  done (took 1.400351266 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080696999 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084304487 seconds)
  done (took 1.383815329 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082042251 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065728311 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092871333 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078060049 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065986136 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068451408 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090907535 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068456782 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067969257 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06818998 seconds)
  done (took 1.970891691 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068799269 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077372985 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072553454 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083530862 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075856655 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066092739 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074442007 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070278114 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080035385 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064527587 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073245625 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084650685 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073406975 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086675244 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075231905 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070682713 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073096651 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068998621 seconds)
  done (took 2.561674659 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065899285 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067734914 seconds)
  done (took 1.358504303 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067208785 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063430058 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066908209 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068058057 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063447879 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06400983 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065377805 seconds)
  done (took 1.679108858 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.394362529 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116069279 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.320419077 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07311304 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08449806 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257511199 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065649714 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070446359 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070596025 seconds)
  done (took 2.723183388 seconds)
done (took 14.305723436 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080598741 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087243057 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096857297 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.377758544 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092532336 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067574797 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115753887 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189296 seconds)
done (took 2.341408046 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213079673 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.63978695 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.406494444 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20482597 seconds)
  done (took 2.479049845 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347603548 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091068337 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.0604546 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069587996 seconds)
  done (took 1.801225328 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06677941 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069719924 seconds)
  done (took 1.367606353 seconds)
done (took 7.093382371 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067100313 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06720162 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.088316986 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065319862 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067578326 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065757576 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065943299 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068761921 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068175944 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065426263 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.071252902 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068632872 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06838562 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068365367 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065794756 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065676018 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068230038 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06550836 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065737281 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06592851 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06582542 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068739303 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065607433 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065605503 seconds)
  done (took 2.895854591 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084531324 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066996702 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071956083 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072080705 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069851093 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071083015 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071001608 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065896148 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071827735 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068112903 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069136387 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069210189 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068512489 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069613238 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068864834 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07086092 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073486481 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068272438 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070955909 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071776105 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073640677 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068693744 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071506644 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073247688 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071200307 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073637134 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070617224 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067788205 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073354234 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071221577 seconds)
  done (took 3.371716323 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070483551 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06454198 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065349548 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073214273 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065547808 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066473466 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065835252 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066480396 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067197077 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065179523 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067058677 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065489801 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065295004 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067182622 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066267549 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069334558 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08205633 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066209863 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065791545 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066502475 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069229541 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065841914 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065521348 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065195183 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065461439 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065337617 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06651123 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065416318 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066877227 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065701723 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069684095 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069385354 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065805655 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072930773 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069818268 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065582859 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070079929 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065228218 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066416501 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066014214 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06543376 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065564991 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065623208 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072858512 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065945941 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067382512 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065652187 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067298318 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.180480462 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067133655 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065025822 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065369267 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067588744 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066904514 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070076837 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064966988 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066334792 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064825025 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065758495 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065116207 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064610408 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065572522 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068009212 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06591019 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.08043038 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07256175 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064931089 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066893464 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066545419 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068091343 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066736667 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079400896 seconds)
  done (took 6.210607756 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088911975 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086680275 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066304818 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067456449 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063674519 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065714597 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072658602 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066102852 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06736285 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083945343 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066377391 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067425028 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0669976 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069939026 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066490754 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066743187 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074659771 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063848944 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065611263 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069443648 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066128304 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071586488 seconds)
  done (took 2.796001432 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15624075 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071111199 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108052111 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077213883 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071878946 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077377582 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071838382 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072184178 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072520864 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069425361 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069721876 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072008696 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072208539 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069558363 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069746982 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069619014 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071618073 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069329438 seconds)
  done (took 2.65476782 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076826801 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065493285 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086404589 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06585383 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06570844 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069103072 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070675095 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074113572 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068527933 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065770355 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074409901 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068668733 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068234993 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065554991 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068159278 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066137241 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068246607 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066065211 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074956004 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071163867 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071806087 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075746353 seconds)
  done (took 2.791938303 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07978131 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067899678 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080733757 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069128415 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061867202 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06399255 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.0716941 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067426863 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071779221 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070116609 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06759698 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066058744 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070627424 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067598039 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070174265 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067227527 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069140014 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067169647 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069516767 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06354423 seconds)
  done (took 2.63039287 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086444137 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068050336 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068206815 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076167391 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067882482 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069252062 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077763798 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069900277 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069813353 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090296454 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069286646 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06945711 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077409033 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074691041 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069402731 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077377724 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077240076 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076325132 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07005299 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069513558 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09076746 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069498076 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076403466 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069811683 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069594257 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069607192 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069728845 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074401145 seconds)
  done (took 3.312265823 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066943925 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066444164 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063948646 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063952767 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064921319 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064484052 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063866611 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063626835 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068236714 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065037725 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067947827 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068126114 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06829737 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068213719 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067816148 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068013636 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067929502 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065601863 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065918797 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065761165 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068064766 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068178764 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068041692 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065133705 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065727005 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068012191 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065147663 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065070146 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068675036 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065595678 seconds)
  done (took 3.244502127 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075351403 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073170146 seconds)
  done (took 1.399812597 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063111375 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080653613 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064927695 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071751796 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071597096 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068755438 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075347187 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071854733 seconds)
  done (took 1.816805789 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082214942 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078432059 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069691386 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08240116 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079623481 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086452282 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138596842 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069045213 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075754408 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066643118 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08279876 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068325154 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075020666 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068723866 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074634124 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075043702 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065944381 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074286664 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07045938 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066750042 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070047226 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077591828 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070699313 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06294601 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06962311 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091258188 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080189405 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067693489 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070430504 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076073639 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074083148 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061863461 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068176489 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068646496 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065657267 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078087352 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083848536 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070950291 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077093753 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069233402 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077977694 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062707044 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07271717 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074710004 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078197345 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068378703 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068465735 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063038462 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066145024 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070650512 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06343788 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071088161 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062933797 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075096052 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072213319 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079052156 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067354586 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069763978 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071665958 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072006893 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075483964 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070424105 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071046034 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068014859 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078390952 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073071987 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078004869 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063400964 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062106801 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066178816 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078654561 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091677712 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075041536 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068902808 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069412193 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066093041 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071671791 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069371797 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074614799 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074097653 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068453676 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073634731 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075878199 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069086833 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070594633 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076120198 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066739018 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071267057 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066662864 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085442505 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06732587 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066305036 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066470625 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078855811 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071359324 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068035917 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065721968 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07583833 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061921778 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06817742 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069154678 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069066521 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079030225 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072917535 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072644619 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076643114 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074135377 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066720587 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069880254 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063659251 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06835016 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066227976 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07480158 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061000574 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07007704 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068017838 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067725179 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076330222 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065193682 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066978873 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075476403 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073053692 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.193166091 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066229508 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072473719 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.069609847 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072438054 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077589264 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067311343 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064284618 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063835065 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072694041 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069129944 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072803114 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073875636 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072429997 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06313601 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066361499 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074154578 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077787984 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068862219 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069752078 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.0762947 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070765812 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069249657 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075761265 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071782631 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068704469 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074735515 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069357133 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063532417 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071571332 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072226739 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067474992 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073402653 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071750142 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07142562 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069706782 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067209323 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076674831 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069147929 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068407647 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069247498 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068201724 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080068266 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071013168 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063408621 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065557505 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077438019 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066499777 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068222415 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068425721 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070649632 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068791179 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065728016 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068780353 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07122784 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078770333 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073467322 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069414684 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074448842 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080442147 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068937931 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071461184 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068608336 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06932081 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069072078 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078531945 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074035257 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073600708 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071090797 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064812663 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073787313 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076663512 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067820649 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065756219 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067287413 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07208612 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074169272 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07260404 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068361656 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066941948 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068721852 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071211198 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071135618 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068104716 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067056051 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07420954 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065832895 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074992469 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068507304 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078764939 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071350681 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062782374 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071301802 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066576383 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074576858 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063324237 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066447313 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067555837 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069089224 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067791723 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071333483 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062546514 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07608104 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076252874 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069050694 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068147616 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068528082 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075519449 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070093965 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072385419 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071976768 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073444618 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07754547 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06678239 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070655602 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078112807 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066782947 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061343031 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072931476 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06583218 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066022243 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066612041 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065342357 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070688218 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075093605 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074675737 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.191805289 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073484482 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067464591 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068537629 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06415191 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073933431 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072534027 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070000021 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076185837 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069933139 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068736307 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072727442 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069305277 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069436924 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070556916 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072647847 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069735094 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071456663 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067881759 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071881651 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068525298 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066326228 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071529766 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069009445 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068710198 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074226514 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068343483 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069025145 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071144725 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069840296 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070026155 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069575487 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068255347 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071917703 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069828067 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06886023 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071549039 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063409296 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076792049 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068243107 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076088302 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069178378 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065179801 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075567765 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071393122 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074191047 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.0696652 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06922779 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070420512 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068925095 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072589961 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075213399 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066831039 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079482242 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076575521 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069486318 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07166262 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068823497 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070433782 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067593732 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069423036 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069363298 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069473802 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068348433 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073896615 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070830497 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06887691 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070515345 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069450444 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068885055 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069747053 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063043821 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067064818 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067891685 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067997818 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078674866 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068151997 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067843806 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067024835 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068928856 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067499126 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064585947 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076176446 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07701123 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069815609 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075240263 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067874581 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070456695 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0793548 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062321468 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066711829 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066052056 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066635597 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075658123 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069009991 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078077009 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068367787 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067365572 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06536669 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069136345 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066814925 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062633534 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065606576 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072137389 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067528689 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067558573 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068347905 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070971327 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069691917 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078002359 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06788435 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069286495 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068433476 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064669813 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066532955 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06628792 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069986762 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068000609 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065180055 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064217017 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067613791 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068146794 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068589095 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06985996 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068778692 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073767441 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066814201 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070220564 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06959661 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061669867 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.205036995 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069482926 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069413759 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068316342 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073808596 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072885338 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070040136 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078304387 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068185323 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069594074 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06883404 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066298294 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068620641 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069105835 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068180542 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068010841 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070590326 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078275977 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066275826 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071999764 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068725335 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068830562 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076166616 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070248146 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071891798 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075797715 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069088506 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070978283 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077757481 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073405169 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072198637 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069434593 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070362063 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074856324 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068016108 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075342765 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069686207 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069544961 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070793685 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066661346 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068908072 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068080937 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068101792 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075537307 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069954141 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068169705 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068235905 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067069971 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069721204 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072306152 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077234311 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071301769 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071718498 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063336256 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065670099 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069545901 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067091242 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070268275 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071305043 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074141068 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070744349 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068811342 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067652713 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078534628 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074657045 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071854194 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066827398 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072232023 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069144574 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07077097 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069676275 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068986601 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069979268 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071601956 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069827161 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067985907 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074795198 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071462303 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069593836 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069587642 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069928785 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068320705 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062768215 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068392777 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070365142 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073104423 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070049286 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068077616 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079413799 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065915831 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068650441 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071062029 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067214972 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072767604 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06306517 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069631076 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069043127 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068832544 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.0629382 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067600451 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066020528 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070796262 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067337833 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06299535 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079456109 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078035623 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.0724934 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067446349 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067021692 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06312724 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063920053 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068663182 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069891355 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070066058 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07873532 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067201408 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067656434 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062848932 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067785752 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070697729 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070706135 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064700385 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062730381 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06663502 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070542953 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073113795 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066139542 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066985474 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071184623 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069393464 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.1984286 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072928521 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066445437 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073437227 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082587391 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069372282 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070199818 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075533302 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076128462 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068778413 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063450637 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068808225 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072080405 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069882762 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069884666 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070490879 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083714667 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072223446 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067976842 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067388494 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072379551 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067811546 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077739874 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06907408 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068186182 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07216605 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068772161 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075559721 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069566151 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07436651 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069877012 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070100878 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065956897 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067523094 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064817696 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06626066 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067893543 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066794191 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071532654 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073427395 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066283971 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077521741 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075894109 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068265175 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063444396 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066170235 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06591243 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062832428 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067545332 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065251967 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064686156 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065039519 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066251961 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068325158 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072724742 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068292363 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06697934 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066483272 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061407219 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068995453 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068706472 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068804039 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064649236 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068935584 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06966001 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07286492 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072232434 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066488266 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070635717 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070199834 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069872884 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063136025 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075739518 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067809357 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070218814 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067418826 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068622424 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06859555 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071880036 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072972171 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069331327 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070779821 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071793634 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070062197 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065306984 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065291128 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073575034 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066242761 seconds)
  done (took 43.761624119 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100549463 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063455369 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060937679 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06235009 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073170559 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064401588 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063582697 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065004172 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064483713 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066693944 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063931889 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063507491 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072053977 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079861148 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075235683 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068125902 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063426133 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064510104 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063304461 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064945416 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072309272 seconds)
  done (took 2.781266289 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073532763 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076926277 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074626094 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082031177 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072381937 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072264084 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077664531 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072270042 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.08013835 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074547665 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081164648 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072211528 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074606723 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074531456 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0745054 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072147547 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080645737 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072446279 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072245781 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077181694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0722851 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07724384 seconds)
  done (took 2.985132024 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06681757 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066775188 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067814734 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063271962 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067871806 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062874879 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07088261 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06633245 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071305989 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066990491 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067070436 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067156631 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069862739 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062870159 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067862242 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06593231 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110773037 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071219159 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067395379 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068501308 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062753824 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069885302 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062678767 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063352742 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066667207 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070942107 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067879038 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065645453 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067595634 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066730046 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067335575 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065129139 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069134319 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067978573 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066710061 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066353267 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067159602 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067733115 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062739131 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065544755 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068246008 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063026072 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067798211 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068839526 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065619599 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065982726 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069124397 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067700613 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062379995 seconds)
  done (took 4.650310104 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078755918 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109186905 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067079594 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090685241 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081267758 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07413304 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071186284 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089431469 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063973262 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066092491 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084401813 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080618713 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067561428 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072071062 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071313998 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06614402 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068035733 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066253563 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071010694 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066675115 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070893723 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073796571 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081400024 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079624954 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070908134 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066169941 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066247412 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071434665 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078869473 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070970514 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071280749 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072437517 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081746318 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072271872 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066450759 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069132149 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083221793 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067308596 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069688902 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065104857 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.0690333 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071679635 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073841029 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083478814 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067163118 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072226613 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067010533 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06429435 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079597798 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06972133 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075036635 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081122319 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070825709 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067170759 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071519401 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082197277 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067223762 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065324977 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070187575 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078979183 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064982359 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070566074 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080444219 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068993033 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07389121 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080682708 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072056576 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070790564 seconds)
  done (took 6.457246789 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075718734 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09535246 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082964534 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08293889 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075115009 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077635383 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077923358 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077693287 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076902411 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081868696 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077801204 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117805089 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073010621 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080533569 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077981693 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077388415 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077475041 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077104757 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077246614 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077292543 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077539043 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085139791 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.077676979 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084589263 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082040001 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072873818 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076737531 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077640479 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084983287 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077558412 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090552061 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077262421 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077715751 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084739302 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081393788 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0771674 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066867833 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07745273 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077350768 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.077444037 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072317138 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084581431 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076652062 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072822409 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077104112 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077312073 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084544909 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081513401 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079686162 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081960126 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077343928 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08478363 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076879005 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077545043 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085392669 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087764658 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084942402 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085091655 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0780987 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084517415 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084619102 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087252542 seconds)
  done (took 6.338213306 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083106414 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074077765 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081212091 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062993065 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065983949 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074198642 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06628769 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06622368 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076440354 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076285328 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078461267 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073819746 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076774322 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07832797 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07377009 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076776828 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07404871 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073870242 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075910441 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073422478 seconds)
  done (took 2.83534209 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073952122 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082309594 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066665005 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071440854 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071512841 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073288945 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070669837 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07153277 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069105645 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071351912 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078253099 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078234578 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068652262 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073312844 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077360771 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073162686 seconds)
  done (took 2.517154251 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083146433 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073227799 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081003146 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068433126 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068500389 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064243008 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068390738 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063255524 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064326369 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080434306 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068389453 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078500538 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068040807 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067075688 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064952514 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073789597 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063606562 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064708463 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067432285 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080401885 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072219133 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065859603 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070978941 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067430644 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069497472 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072017815 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066823242 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067786701 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064384639 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067261485 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070507431 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070928387 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064291585 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06521899 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066675854 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06496228 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066908158 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067900883 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073427335 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067545656 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065364725 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069294799 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067042788 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.0681302 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063442537 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067594506 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063633247 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069567334 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065142069 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070103479 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067188572 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070745903 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069084085 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074192587 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070258256 seconds)
  done (took 5.142369213 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079309479 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069159516 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062560838 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066394786 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071517218 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069318685 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071413696 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069421698 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069655328 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066157907 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069402312 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070862081 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069310759 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07148603 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069006561 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071019233 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063234586 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068875406 seconds)
  done (took 2.606782082 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072044882 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065328692 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072715545 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067759193 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06771571 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070397667 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063621413 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066527319 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066461621 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067499953 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068312961 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070408113 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066488887 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070158475 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067808021 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067608409 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069795953 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066486547 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067568707 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063792904 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070017229 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06639956 seconds)
  done (took 2.847912229 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093924814 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083355078 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14031867 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080921245 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086976793 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07415576 seconds)
  done (took 1.914852504 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090382602 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100877726 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066822644 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071163482 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07736475 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071975719 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071262077 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071759929 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080578157 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078052662 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072262683 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079718012 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08039497 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079401731 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077401785 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077138886 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071723279 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072460098 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06779895 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085264778 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071320849 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080265916 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071422694 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072148706 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071387435 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079003 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079753313 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07764038 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071411681 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079814307 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076992126 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071626642 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080671112 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077291044 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07097715 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080186963 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071689244 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085299765 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077352256 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079555389 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070848692 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078070464 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080335085 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076234492 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080586228 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071558593 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07611651 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071832856 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072337041 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087918203 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077837341 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079535118 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080405614 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080721326 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080420251 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087789044 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078181927 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079557073 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078012366 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078339174 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07998798 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077167623 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079254525 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078085899 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077723348 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079191332 seconds)
  done (took 6.464295429 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102996356 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066701354 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072322275 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078171245 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079599521 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071813791 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072428184 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072099414 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071955166 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069551923 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111127462 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072440035 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079788648 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079383691 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072510312 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072038395 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072459434 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079949623 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069046999 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087715654 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072197344 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079957342 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079669143 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079333755 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078483029 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078135988 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072290279 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072453414 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071697953 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072253255 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076808715 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072049813 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079237621 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068922879 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079481213 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072336429 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071898581 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076189597 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071645923 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07760798 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079918896 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08535125 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071856403 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071814737 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077789247 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071775585 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071697716 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068840728 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071866868 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068628667 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077840767 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07854869 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07753525 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079124236 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071759676 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071671409 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07201391 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072113326 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07236554 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07718225 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079129291 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071817132 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087628316 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0723732 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07195236 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079779526 seconds)
  done (took 6.380207945 seconds)
done (took 132.036672076 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.193212781 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166440803 seconds)
  done (took 1.709422753 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068923858 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098586202 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076577632 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129157957 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066360721 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100182066 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09921288 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077491512 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066002627 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06665772 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065807127 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068711094 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131415026 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066393245 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065758192 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068666997 seconds)
  done (took 2.677996894 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099147371 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161251966 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102517113 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066504257 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101695091 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075744685 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06683847 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077903738 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073828842 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067648442 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075669606 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073206629 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067445315 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073009364 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073423702 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075545525 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067032081 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075270089 seconds)
  done (took 2.83856751 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099937448 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091627471 seconds)
  done (took 1.557548809 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156240695 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105489406 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145786909 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.35394999 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169232426 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.152874068 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147335352 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146194447 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116599295 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138496328 seconds)
  done (took 2.996347755 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098626408 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155424501 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268923135 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121659478 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075259526 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096895271 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122748396 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081280885 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083023207 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082702237 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082817732 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079508474 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102957936 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076045021 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076681782 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079094392 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106876652 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075833309 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076910574 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078524049 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.103607974 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068516504 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076014751 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075570584 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079939864 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080124776 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068474313 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067658834 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078700569 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076555403 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079366233 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095436389 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079639567 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106672348 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072464016 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107380414 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077028057 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073012223 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074561547 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073878309 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080024762 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080609599 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075772161 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.0795141 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068273287 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07969474 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067867356 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067327583 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080057249 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06967933 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08025892 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079477913 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108958668 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06958997 seconds)
  done (took 6.11217894 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102801694 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106399414 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071925027 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112725736 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104177055 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072001692 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.104880363 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097927656 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107686262 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072931141 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07121718 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073055551 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084925815 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.087041472 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115252612 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106554894 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074266015 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071154112 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106359633 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107708732 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071675037 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100060137 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093831527 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10756791 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070372736 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073358344 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070539473 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073381751 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07931557 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081157945 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072065498 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083565622 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.092289237 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081242174 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069553504 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070773702 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070981972 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08240727 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08256294 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081732865 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080461208 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070369784 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071313729 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072229531 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072389047 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0701031 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081254774 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083024522 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081321181 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072436774 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072848669 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070524941 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071869174 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082620867 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080004721 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083738176 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083160033 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070912224 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070557146 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074566014 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08314044 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081010457 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082415864 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071846471 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081486074 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070548133 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083526701 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088154515 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070550987 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072295595 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070469632 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071878617 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071733772 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08039759 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080576266 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072425971 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072205531 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071081979 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083312165 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080411995 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070388997 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079555294 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069635473 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071291646 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072534863 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071674489 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080041735 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082841992 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072213821 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071278882 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071500078 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071276222 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069979943 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079924675 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082977853 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082063573 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080426217 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071174649 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080236865 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080155073 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070983547 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079778683 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069050566 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071228179 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070856515 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078850657 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077903308 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079613052 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.202309942 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070940924 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080495777 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081186021 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069787886 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078344831 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083160444 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081615946 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071870345 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084212338 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069571921 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079920671 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070229162 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081088767 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069392594 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080909431 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069595383 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068896588 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070494667 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083745208 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076254419 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071397957 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073042624 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073254094 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082665121 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08283857 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071855762 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080478447 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080022919 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070722395 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079831309 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072153575 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082922665 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073456104 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072920132 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070228727 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08585513 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071729252 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071885303 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07182807 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083732674 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069731117 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080118031 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07840901 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069293327 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084412445 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082138444 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080722022 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084096594 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073549976 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071489864 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070964943 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07184746 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081066553 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083383793 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0733066 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070982518 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080788669 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083399174 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070070119 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080599009 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080856728 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.082273479 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071455852 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072234745 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084033902 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081576744 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078447112 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080497961 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081286959 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0712221 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08000033 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081053366 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070808818 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088116967 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07060174 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085597669 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081714505 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078862664 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081536735 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.0824936 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082536658 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080753494 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086050606 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070935149 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069918267 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081618704 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07036818 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071431698 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.08035533 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071624336 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071893099 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086067989 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06849991 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079841664 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068085701 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078672917 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069080026 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072221848 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085157856 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069877809 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070802682 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080016773 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070713467 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077782533 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082265218 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079085795 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068405461 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070765005 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212962569 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082305892 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069420999 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068779537 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07088124 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078737431 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077415272 seconds)
  done (took 19.167587451 seconds)
done (took 38.431891998 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210340684 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154010135 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188787986 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123361823 seconds)
  done (took 2.148993105 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117440097 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102017743 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093183011 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065953884 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099638763 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066895515 seconds)
  done (took 1.948146755 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314019807 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.221897752 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.191354461 seconds)
  done (took 2.130537206 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203755695 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193610489 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.435201444 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.272168002 seconds)
  done (took 2.617435935 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145325826 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089026461 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067450697 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084213243 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137437374 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.166480206 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104402793 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128072167 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079590952 seconds)
  done (took 2.461636294 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149217856 seconds)
done (took 12.867023567 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.162649228 seconds)
    (2/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098151502 seconds)
    (3/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.239481224 seconds)
    (4/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.181717529 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07965361 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.086969116 seconds)
    (7/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.249744652 seconds)
    (8/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.207133367 seconds)
    (9/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079229738 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116245803 seconds)
    (11/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.166062246 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.098022216 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081715519 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.113416028 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086012775 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076929164 seconds)
    (17/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.191082587 seconds)
    (18/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174640919 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.11352304 seconds)
    (20/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076275287 seconds)
    (21/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.187482479 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.054356667 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076877943 seconds)
    (24/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081515155 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.14814671 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.163800051 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.09352666 seconds)
    (28/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18523775 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052827628 seconds)
    (30/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080744023 seconds)
    (31/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.092720265 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.159394417 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.111610038 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074728371 seconds)
    (35/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074842737 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.233936232 seconds)
    (37/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075659851 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085950465 seconds)
    (39/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082369406 seconds)
    (40/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066175296 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074192584 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067092731 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095390516 seconds)
    (44/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.064730969 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084056973 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.178918859 seconds)
    (47/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.120604216 seconds)
    (48/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053052785 seconds)
    (49/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.178497201 seconds)
    (50/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07211999 seconds)
    (51/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.202932521 seconds)
    (52/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.143064298 seconds)
    (53/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.140632882 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.205026723 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075724035 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.095898207 seconds)
    (57/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.203598137 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085921285 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090830868 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123144709 seconds)
    (61/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075190919 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089044388 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.167319524 seconds)
    (64/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07307794 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072797397 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09096795 seconds)
    (67/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.209883898 seconds)
    (68/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074404976 seconds)
    (69/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.103510326 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099339502 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069836678 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.092859788 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055118484 seconds)
    (74/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.093760975 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119404042 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064884618 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050586837 seconds)
    (78/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.153845274 seconds)
    (79/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105198575 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093880591 seconds)
    (81/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061538523 seconds)
    (82/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099602875 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123707519 seconds)
    (84/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.19936054 seconds)
    (85/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.051588276 seconds)
    (86/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053392291 seconds)
    (87/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.0692422 seconds)
    (88/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074443747 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.065489021 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.240531535 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051998337 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067765623 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093737648 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090711898 seconds)
    (95/309) benchmarking ("sort", Int8, false)...
    done (took 0.142439371 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084803212 seconds)
    (97/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073729754 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094101874 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077286608 seconds)
    (100/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070883378 seconds)
    (101/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052298959 seconds)
    (102/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076757796 seconds)
    (103/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.103020385 seconds)
    (104/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061204295 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079305185 seconds)
    (106/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062080167 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073054527 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092182693 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.191399525 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.066208779 seconds)
    (111/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109464626 seconds)
    (112/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.152736297 seconds)
    (113/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077269821 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172943228 seconds)
    (115/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072956914 seconds)
    (116/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067538011 seconds)
    (117/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.110841472 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15620079 seconds)
    (119/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196577163 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086186284 seconds)
    (121/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055489325 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065776269 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.139981738 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.13998229 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076171544 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134337789 seconds)
    (127/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067443125 seconds)
    (128/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051621149 seconds)
    (129/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.195987649 seconds)
    (130/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061602953 seconds)
    (131/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05190476 seconds)
    (132/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.0767677 seconds)
    (133/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067890052 seconds)
    (134/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.163121471 seconds)
    (135/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051356472 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.137431895 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074259515 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088471347 seconds)
    (139/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071696901 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.138836447 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07316839 seconds)
    (142/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052554309 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072307063 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072280964 seconds)
    (145/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05198267 seconds)
    (146/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195503814 seconds)
    (147/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105434604 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065932401 seconds)
    (149/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069195443 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072187826 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050643349 seconds)
    (152/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050806374 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184192115 seconds)
    (154/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067993884 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088496247 seconds)
    (156/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051154196 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065027842 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072753358 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.207764024 seconds)
    (160/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068832728 seconds)
    (161/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051038588 seconds)
    (162/309) benchmarking ("sort", BigInt, false)...
    done (took 0.186430525 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074083748 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143865307 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050809153 seconds)
    (166/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076163311 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.110698507 seconds)
    (168/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.276508386 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093925596 seconds)
    (170/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073702029 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064207096 seconds)
    (172/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.052925673 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.178261395 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073387635 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174664552 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06843978 seconds)
    (177/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052258268 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090755187 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05220273 seconds)
    (180/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.101304281 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089024915 seconds)
    (182/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066236733 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075088492 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097575439 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073350761 seconds)
    (186/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064082547 seconds)
    (187/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072943285 seconds)
    (188/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071424621 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074222233 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065157895 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09049046 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101180471 seconds)
    (193/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072102323 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051671771 seconds)
    (195/309) benchmarking ("sort", Float64, false)...
    done (took 0.129085199 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181498987 seconds)
    (197/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075051376 seconds)
    (198/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066750637 seconds)
    (199/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060870758 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065027456 seconds)
    (201/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061732195 seconds)
    (202/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072185403 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063529877 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145399791 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.203286719 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.114658578 seconds)
    (207/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.197102828 seconds)
    (208/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.0530764 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081157022 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.155220049 seconds)
    (211/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.10081276 seconds)
    (212/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092224916 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067543715 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069342895 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077860844 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076371131 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068457052 seconds)
    (218/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053670153 seconds)
    (219/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082642366 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.146174761 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068879498 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.054966883 seconds)
    (223/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082154611 seconds)
    (224/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05275544 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071519499 seconds)
    (226/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065286985 seconds)
    (227/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07981868 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051569958 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067026392 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065127819 seconds)
    (231/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07250955 seconds)
    (232/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051158979 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051683878 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051919607 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.112183373 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072881769 seconds)
    (237/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065881932 seconds)
    (238/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.163554495 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139713197 seconds)
    (240/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156521842 seconds)
    (241/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070682032 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052360651 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080791779 seconds)
    (244/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067436581 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.078457056 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067395802 seconds)
    (247/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053199024 seconds)
    (248/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05352801 seconds)
    (249/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.070216313 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.076330372 seconds)
    (251/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053281732 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150669298 seconds)
    (253/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080178553 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069199668 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067835362 seconds)
    (256/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052933632 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067797394 seconds)
    (258/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164542394 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090686171 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127071317 seconds)
    (261/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088949506 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067078518 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051338652 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137394868 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072343189 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05233099 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074126817 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065634651 seconds)
    (269/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050638565 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064870359 seconds)
    (271/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064102468 seconds)
    (272/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061973175 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088803167 seconds)
    (274/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110484161 seconds)
    (275/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072053973 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067310177 seconds)
    (277/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06859219 seconds)
    (278/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050701864 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065256843 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063556796 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08617214 seconds)
    (282/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05057418 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067794377 seconds)
    (284/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066629342 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170178747 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073486042 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088499337 seconds)
    (288/309) benchmarking ("sort", Float32, false)...
    done (took 0.131291331 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063897479 seconds)
    (290/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051211851 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064324282 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050730459 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073301314 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065600421 seconds)
    (295/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073439771 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07156666 seconds)
    (297/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063516211 seconds)
    (298/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061784713 seconds)
    (299/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068135409 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065559225 seconds)
    (301/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062414816 seconds)
    (302/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070896207 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052866774 seconds)
    (304/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075977609 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074196693 seconds)
    (306/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123142527 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073861801 seconds)
    (308/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.054253657 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183951631 seconds)
  done (took 31.255048175 seconds)
done (took 32.668301932 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085001744 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092430954 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07542736 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093648173 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080361175 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076133083 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072506711 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078196395 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079604561 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081153198 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077968257 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054441653 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073823635 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073868361 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074206279 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09115344 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078437077 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073136379 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072977154 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064406781 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07269221 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06502916 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067101857 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054005207 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078620952 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07160777 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072517399 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074035698 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065518954 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065705032 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069070087 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073420247 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065238584 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07827602 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072626217 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072939443 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074732829 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076806264 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067797516 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065751773 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074406636 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065512215 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073825605 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074611033 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07257776 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071612413 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073261935 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07777044 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091554989 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067729664 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074601855 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076301863 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075549198 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073013228 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069708715 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073169804 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070937305 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091508748 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073839408 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06777056 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07450966 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074371565 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071336117 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073626454 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073046693 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075366327 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075646634 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071822882 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07490037 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.0713494 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065058115 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073103314 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069706963 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067733193 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078366051 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078987146 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065607556 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070858045 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073053687 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070816633 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064297675 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067188835 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067086445 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071732534 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067118332 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053754927 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069451373 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072329228 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064119222 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073247743 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071827302 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072177162 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067482224 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076683787 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065252965 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071815863 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06667886 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065601845 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066693283 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069183935 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065111398 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067237894 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074486513 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06673169 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071306664 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078396074 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064985462 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072021154 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06441741 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064815051 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079477947 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074268454 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065089303 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06706496 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063722058 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072324339 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064304572 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064867745 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064931804 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064850763 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071038951 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064926529 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067188148 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072438855 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077562294 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064906855 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067940198 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065984579 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064100619 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070208401 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064587363 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064313162 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.0657214 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.0605531 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066058011 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064915663 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073311914 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066100025 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.206797364 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066961661 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073756939 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071183326 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071804652 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071412031 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064695468 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059534703 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068077667 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067163673 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067504582 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066462774 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067457124 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066030558 seconds)
done (took 12.461707547 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066735336 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139214611 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097491572 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095338952 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085800295 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06635865 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076030139 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100790822 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067558437 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101913511 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087604989 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086016685 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113762808 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064698588 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06613324 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069785698 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067168949 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081258627 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101074303 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086779776 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114787318 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064931145 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092638085 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089499958 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088053301 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094214588 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069032936 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069758069 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069700902 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101927197 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088623041 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069797073 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066624818 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098137278 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093242623 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083827816 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066522031 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082916862 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066424627 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065841312 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067133923 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099023035 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080642373 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080834752 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069701013 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069606203 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067023895 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084303302 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090073893 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079053046 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086275326 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101119101 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069055436 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065863983 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06411974 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086108817 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065336413 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069348621 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066155915 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068400688 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066093481 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069101489 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081102583 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080341595 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070131746 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079500149 seconds)
  done (took 6.813332044 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083556768 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091842915 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083375903 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083700117 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065711943 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066173514 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065941974 seconds)
  done (took 2.048394272 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06748154 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088553638 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08925467 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088933286 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081973195 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088446705 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075774864 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066469245 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088985998 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067438017 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08749008 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100582632 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069568205 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073961513 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090401843 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065887259 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090937249 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067008984 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069656275 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090451034 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068818778 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095402446 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069413911 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066404238 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081127527 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066653193 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113340156 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07163885 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068206362 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069070415 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063827355 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106421939 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079647744 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074228704 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066310921 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081272985 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081377307 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064465236 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082954028 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074818282 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080111428 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066678172 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067131707 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064359462 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070269631 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077011788 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06716528 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066986334 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068509419 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086365941 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067180063 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079431492 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069097273 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071553165 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068003842 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072637509 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077003334 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067051591 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086128108 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068043 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083489344 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082018233 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080251668 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082475491 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068361204 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.07968606 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080508242 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06951812 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068552441 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069792338 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083510422 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065244899 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068410882 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076910803 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068210802 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089591497 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089555256 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068692798 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080028936 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066805416 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066352828 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066418834 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089413695 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07214459 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066115592 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070629991 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069752141 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06450549 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065541516 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069894283 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064429556 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067816275 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069056115 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069312383 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068912566 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083003334 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068504 seconds)
  done (took 8.807372837 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067817541 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067832783 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069191977 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067882498 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068458292 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068198808 seconds)
  done (took 1.938723554 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094103433 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068944363 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080118054 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071994771 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105008185 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087224953 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086819586 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077670982 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083950146 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078453917 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086612086 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087840526 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09219611 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072168245 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086157507 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070969054 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086682468 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074616665 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078721172 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072357086 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086358412 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072565913 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072559428 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081311543 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075839785 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07180899 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067012361 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078182764 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078003143 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077884491 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072101019 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075585773 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070529043 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077564807 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087800104 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072351543 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072095635 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077563688 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072766927 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076396625 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088657937 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072470278 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07366712 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077114334 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078271529 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070445902 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076697478 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074863204 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086081237 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077175653 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078710069 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072056033 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076650888 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077685779 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070309353 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078101953 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07764072 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08671645 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071824161 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070900444 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068456987 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.0754823 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077779938 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076997967 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080135073 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07831575 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07099417 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073501291 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0738392 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071348005 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077287633 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068191814 seconds)
  done (took 7.095815974 seconds)
done (took 28.202797606 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535315443 seconds)
  done (took 2.033958461 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.615979008 seconds)
  done (took 2.137640609 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.845901022 seconds)
  done (took 8.364240927 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399095494 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.523427302 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.722840923 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130986012 seconds)
  done (took 3.338689561 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.700782718 seconds)
  done (took 2.230455946 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214063065 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201824113 seconds)
  done (took 1.957423369 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375860143 seconds)
  done (took 1.898294931 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.133736936 seconds)
  done (took 2.656639994 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256029541 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174318984 seconds)
  done (took 1.954668293 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.473436253 seconds)
  done (took 1.997391998 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.845688702 seconds)
  done (took 6.372086185 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.210243524 seconds)
  done (took 1.779076861 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235330324 seconds)
  done (took 1.762532451 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.713834247 seconds)
  done (took 3.240911606 seconds)
done (took 43.247818477 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080813484 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081256126 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081206232 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079128157 seconds)
  done (took 1.839417441 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077908806 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072762257 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076580064 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072938633 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076355868 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072934881 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074617061 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076056005 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072892855 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073445409 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073249069 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072937979 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075640864 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074531115 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071696423 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075286606 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076526243 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07350413 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075690017 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072575905 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070891243 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075000661 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075086369 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071526558 seconds)
  done (took 3.311891195 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07832873 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07369024 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075574632 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072684763 seconds)
  done (took 1.841328216 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078754387 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094852979 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09029664 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077943499 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092395573 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08707647 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069462711 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071832107 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073213155 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08009888 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070978777 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099847426 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.091887172 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079417633 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081476809 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068451313 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071590762 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089445704 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078219827 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079258204 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070476261 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078318088 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067924389 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088693561 seconds)
  done (took 3.470432271 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086685592 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105303511 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082876213 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089442876 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09149324 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06576327 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08776912 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091763188 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126930998 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065569299 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071902798 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065929041 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073097 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065659362 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081629466 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107783103 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111805248 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068973757 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097446244 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065586329 seconds)
  done (took 3.249517372 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072632322 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.06971269 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066261394 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069662212 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078456591 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076025115 seconds)
  done (took 1.984075697 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068535149 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068570528 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068176204 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067034514 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072748274 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070097903 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068898532 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.07081616 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070543354 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06997931 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069278249 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068501446 seconds)
  done (took 2.378664379 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.201945378 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06854685 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069540955 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06683359 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07103206 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067293008 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084936438 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071157941 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.09594067 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069189082 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069273004 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071609325 seconds)
  done (took 2.556902483 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207570046 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076462108 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23961834 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150773176 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111033606 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116031211 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11224337 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114223266 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141220161 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101004808 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168165204 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16679966 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107796386 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137026118 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089044341 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100774673 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154192191 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162856244 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105593341 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167861117 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14550441 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126257134 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153799186 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101841655 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106167322 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121859297 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071335884 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080110289 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170166044 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132660601 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143452802 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111117657 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091954134 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176635849 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171665242 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140509443 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146640025 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084412607 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.104823731 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134608875 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201742882 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092062901 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165124486 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111865458 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222573162 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137828506 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122328889 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.125915731 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110029689 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094114708 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150108594 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188831638 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140550198 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09204314 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12650168 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114615129 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115186836 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114646815 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182335394 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162263099 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130101974 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075053995 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112092517 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159380979 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137030992 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111655612 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128673707 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094997605 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138929711 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156887256 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120436965 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145758801 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117071226 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09003764 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123750166 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144299865 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129478653 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161157916 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125047505 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073363024 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124325227 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102035109 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080877457 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14655074 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07571101 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179630954 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100943977 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109382394 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12577672 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113922146 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113112055 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16324541 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148846417 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106620788 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067863016 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251536816 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12620182 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149523183 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087824813 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110994064 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120671385 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078118663 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138237066 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075733943 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124936628 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078090278 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128008743 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129291788 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077819064 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122998003 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104315793 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102288147 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133372286 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161269452 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088058646 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081688927 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172601061 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122562795 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105107754 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145422921 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158651555 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103336054 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101848977 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154337244 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184258995 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091906997 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164186157 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106839531 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084191338 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087927 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123935063 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112554142 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124213405 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081861239 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118179769 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169353479 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075399364 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096094757 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134156067 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078905584 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081200491 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106177452 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105390545 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097631384 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10362677 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106431714 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140127994 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127662265 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109425356 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125483367 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09874935 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315148426 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08899981 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102799516 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105401813 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070959673 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136744073 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158701688 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080539474 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166200924 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124692251 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116899745 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120575562 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085001839 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14076716 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079936048 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.0707128 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145910267 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112499776 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111230786 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152689049 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11633669 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125317512 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11959974 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134063572 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131702548 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.132351941 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106079599 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089223393 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112932244 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126570886 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073339182 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09102691 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080322092 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105013705 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095775582 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083083471 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141246656 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124056308 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110006919 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112666471 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096692162 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148229576 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076113888 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128325215 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119788145 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095610361 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153503089 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153260821 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131223173 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098979551 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138093098 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072139649 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074595685 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088540723 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123102439 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082993071 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083072611 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260099873 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152225867 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133464973 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141172533 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126596172 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122315724 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157314117 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071541927 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119736073 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151568692 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126028533 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10757202 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091214576 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099419732 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144070893 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108810013 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184184017 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119559531 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12848452 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157409496 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102713067 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079849257 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104467983 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13728661 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10440493 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144405394 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100615746 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088849134 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110214451 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074757455 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098819786 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130094071 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121234513 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135233002 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116916416 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132716065 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078259613 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115977792 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121837205 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121944473 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06411338 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121021771 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162300081 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095158017 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118691803 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152924829 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079330756 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134430299 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175006758 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145988648 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087424576 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111369238 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.268287727 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132820692 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124853766 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146560343 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112316494 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142405355 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115198353 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090571535 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092392515 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102423187 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110203292 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099991301 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.11000514 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115793958 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096578869 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133840556 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105416645 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111281428 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117603463 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099728716 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09360802 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099469092 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1787496 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118766028 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170752137 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100948163 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145711245 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164337239 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076052732 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079454503 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078070215 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140767498 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084692747 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130633508 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107331997 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117596251 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12392919 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14294488 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095538899 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06907 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109423725 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133239075 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124791092 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099015817 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103872508 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164948438 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101767403 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080370599 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117169694 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116657288 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102838314 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172592808 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064564587 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109706014 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079559156 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081747927 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127653722 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295015497 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084133999 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107935168 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124879007 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117206585 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133679506 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104086595 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114133339 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128845755 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150664932 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128751062 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089950364 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112731699 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128742006 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157738806 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106089034 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097476501 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173739182 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153830314 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161423988 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088182426 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115321009 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115155177 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108845365 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138764815 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083347644 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164183041 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081811228 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136350026 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103268108 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089338841 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128665737 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108348124 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08834061 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148518397 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118001991 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083172926 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077786496 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118000895 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119711247 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106588761 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075614076 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139546492 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074016215 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132750236 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159741521 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080923822 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108172501 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096784512 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079185288 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105801841 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101630777 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087080601 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099493943 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.320007589 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08866687 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152410134 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13678282 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114404799 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136663461 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102799117 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640640504 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078281766 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153996415 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117050292 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176590934 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100907751 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118382552 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111915126 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122916189 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146407103 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105101959 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180093963 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133302474 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117107383 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080372834 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102866351 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104765861 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088477132 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10822862 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11470608 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116016112 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093551325 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11664002 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125441298 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082346183 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096309449 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157085904 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117161319 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144377558 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140720055 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085555627 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118296479 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138234285 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080657111 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120993604 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152099602 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105684162 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099316536 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080479846 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100069257 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158464855 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07327382 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157836077 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117431761 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.252884472 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115327332 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114064638 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132274004 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10920566 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121630885 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093228431 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110248663 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114777132 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082696812 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078175918 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107806606 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112208253 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099352974 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098903841 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099063618 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153013982 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072963285 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09911896 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115239145 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144198618 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175003674 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089258262 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083656172 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118808004 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11389619 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113383181 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121599342 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07935316 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081833238 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080962006 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078439012 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109383575 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113961462 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115931598 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111479474 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164618907 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083422218 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.23329658 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096103916 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10548093 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070246482 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078687641 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096251875 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098273189 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107585761 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110176461 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159717362 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095874883 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090672376 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091905103 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075032274 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083688914 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12936376 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110459138 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118397332 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098464862 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062496644 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106751243 seconds)
  done (took 59.507991355 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110717974 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082875275 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095315683 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145518907 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123285224 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203142518 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154146735 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189396696 seconds)
  done (took 2.771628276 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069115862 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095612695 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104690349 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083865968 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067935223 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069516707 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232942417 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081872502 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067608017 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098654697 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079685183 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069138812 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.429018266 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066413904 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068610284 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062015588 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067847732 seconds)
  done (took 3.455036543 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.389332593 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.616663307 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.352754902 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072774352 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.510604452 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085201962 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.16034662 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128169288 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073282684 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539365554 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.402834956 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.125191173 seconds)
  done (took 18.111414656 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076012581 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070808509 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084569083 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083988302 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.0735035 seconds)
  done (took 2.037471876 seconds)
done (took 108.09946623 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081719615 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.608613165 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053168137 seconds)
  done (took 2.334487144 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083769136 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085909829 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086894895 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083723102 seconds)
  done (took 1.995586225 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075082015 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077138062 seconds)
  done (took 1.803651753 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234885663 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16486002 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096925126 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083309897 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080063188 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08097334 seconds)
  done (took 1.90127356 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072393213 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076472316 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073725795 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077026378 seconds)
  done (took 1.950228026 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078072635 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053270098 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055292584 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058397623 seconds)
  done (took 1.897501818 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087026737 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080460283 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080064335 seconds)
  done (took 1.901457492 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10357087 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087490309 seconds)
  done (took 1.844456433 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082731426 seconds)
  done (took 1.737228411 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.101035546 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102583973 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132732349 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111839002 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14091644 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109563379 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084893452 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086344402 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077025464 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08705069 seconds)
  done (took 2.68872196 seconds)
done (took 22.275354673 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07867029 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375028053 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360612371 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091795005 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669813971 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356596269 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.998198725 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094047336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116072957 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06820123 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085482758 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651234231 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.988560992 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324430993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.974733785 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324723089 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651017666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06862448 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068616246 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068312364 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.982600138 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068613439 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068312689 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069375666 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650739085 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373285678 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069148805 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319274252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068634692 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070686052 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355549739 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069188269 seconds)
  done (took 16.214802241 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070838261 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121101807 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074020712 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085266578 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071334984 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070739654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071759328 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069352503 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121617312 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068620203 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085922048 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068201409 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072178456 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086635866 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088825892 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06916968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069656124 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06922393 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068830845 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069277371 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087432449 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068673706 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068619569 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069149392 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068276461 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080885324 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069287813 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06901039 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068692252 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070874309 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071822438 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0693484 seconds)
  done (took 4.091279962 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115446373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125519208 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075248863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105202255 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11286718 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070866102 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144709013 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09460803 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128134745 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068335057 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08567744 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068594543 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102869668 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069025057 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088581436 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068855299 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069341811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069133484 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06835527 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069292799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088250662 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068605436 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068541323 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069431257 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068440998 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082369856 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069196737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069196456 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069405738 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071102687 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071760118 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069092557 seconds)
  done (took 4.333445894 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07368679 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07582054 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084381517 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084445023 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071447996 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072388661 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073550885 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069995903 seconds)
  done (took 2.268309806 seconds)
done (took 28.563796312 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079292172 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07031388 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.0737027 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083175487 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073970832 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079730342 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067847624 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07628382 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073219804 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073806263 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076302417 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067649282 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07223941 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068055634 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074680387 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068223596 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079946135 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072227187 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080195576 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080112384 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070374096 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073526437 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076074932 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081112731 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083313684 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083719666 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080918261 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076132167 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072084452 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073753382 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079630791 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086270785 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071071168 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081805885 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069145236 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06834956 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071912204 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068076827 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.0800248 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077146929 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070197955 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076814328 seconds)
  done (took 4.812828508 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089380604 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09503986 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.087422613 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063833017 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067743183 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068058329 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089978856 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062331103 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.0601496 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089186113 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057214342 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060321795 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066510726 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053994673 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061428294 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057301345 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062486514 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056281385 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060685527 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060637196 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089583726 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054179165 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078408628 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064153177 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05652383 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062036385 seconds)
  done (took 3.454912137 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075566045 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087364312 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091508945 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132821811 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107894454 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080021459 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080285353 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09651952 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.090499107 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068039963 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071345712 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093568091 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090324274 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07472739 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068120842 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087350316 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084202464 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069197248 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074108743 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095992232 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088213813 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088852383 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09953393 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086331368 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070699758 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074346218 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075339554 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086183607 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077186095 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081221555 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075888876 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075447143 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073792205 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082233424 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074885078 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072330721 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09440201 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079083742 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080629513 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069230873 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077142779 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070521185 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.105273053 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128734816 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069603649 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075747848 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07307303 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078319224 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068708539 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090228336 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08012072 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068897035 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072531594 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067739795 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069209248 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082319243 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070876475 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070686969 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077866554 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07491981 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094269699 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073650396 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084918306 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069002053 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076768347 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068025919 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069594469 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.0676338 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097855961 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070222124 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112721549 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069914847 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069966504 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078416008 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077307008 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075441607 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069530232 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084898663 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079861721 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072073426 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07795761 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072205592 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.0720052 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093742587 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072858105 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070292446 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069804518 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074518337 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071860654 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069722749 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081870595 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068141679 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071603091 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085908843 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068502755 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069958172 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073962999 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073222092 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068193553 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079906435 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073333085 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069532877 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078547608 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069146419 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.0712677 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082038065 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075133564 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067432991 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073079795 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074308636 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069686714 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06988065 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071349396 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070596668 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077419571 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07559376 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072792168 seconds)
  done (took 10.870906661 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166128605 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.1596106 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.0709972 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150694877 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07738737 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080616009 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152789457 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096242429 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069117971 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069294964 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069762728 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111790537 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10939608 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124528073 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083531219 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071470595 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088387622 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121461213 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159077105 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.150805682 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085512403 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.0780003 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070808053 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069788514 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071394755 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079088866 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086284549 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077508367 seconds)
  done (took 4.501103187 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082126895 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106105598 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075438946 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092100819 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091181866 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068725513 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071361195 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070676603 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082694713 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078948577 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068921338 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073901074 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.0760382 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072434192 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069748171 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075621621 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075770632 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07023801 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072189653 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07388545 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079159683 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093145585 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072248179 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067552237 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073700167 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067868561 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06426845 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085008599 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068936235 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096613522 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066225996 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073715736 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08342346 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069529957 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.0682264 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069659739 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068849536 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069238829 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070430585 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066720554 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066830228 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057758756 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067402827 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079703735 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075363547 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.0569419 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073559289 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073833646 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074529506 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065992444 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071675122 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071669941 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07168349 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076058645 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072726705 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073749949 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07009186 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075155136 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078180835 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068482179 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065849161 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066722494 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073602866 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065860539 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077327573 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073382102 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067457358 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068457572 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070624099 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075553996 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068176356 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072639087 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066791141 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070406315 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07322907 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070875568 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070116481 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067146434 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068356998 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069062778 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055937589 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068378513 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053749183 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071733219 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066649456 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067488603 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068160839 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073515924 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080416989 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069847221 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074554764 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06971891 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067583197 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071796289 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060760841 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071458712 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084304414 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083475162 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068607365 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066306387 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082174697 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073233474 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067485054 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056340471 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073688927 seconds)
  done (took 9.288363346 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091986662 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071029719 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085274482 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09250492 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088943591 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076648336 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078834297 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070234431 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084074307 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075297984 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07763968 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068763541 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079125863 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078683098 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070942515 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078895853 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073618115 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085778016 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084458536 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069365722 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077206984 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081765098 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091823379 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083785981 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08207226 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083409495 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092320889 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078336163 seconds)
  done (took 3.958571447 seconds)
done (took 38.552423228 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.750218853 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.914742115 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.735528752 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.107897224 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.825112644 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.973049378 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.943633804 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.726813162 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.881459876 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.769351331 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.942066454 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.848710397 seconds)
done (took 65.089613897 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.795127857 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.872823926 seconds)
    (2/2) benchmarking "String"...
    done (took 1.954132405 seconds)
  done (took 5.500645534 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.945451529 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.289690295 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.980907794 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.729151642 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.736031449 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.073323788 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.53883479 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.242383128 seconds)
  done (took 30.267472869 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.792008571 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.963369154 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.398116857 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.434047134 seconds)
  done (took 15.309348686 seconds)
done (took 62.574597784 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.733382839 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.755463477 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.743338338 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.71928392 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.792541204 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.746941963 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.17166128 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.790901243 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.729993119 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.715737848 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.73457183 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.167486711 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.745247087 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.210854592 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.732180832 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.739978038 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.760522827 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.265847008 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.893584492 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.742196736 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.742399807 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.774758263 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.731244037 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.74032589 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.789425488 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.732725869 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.162015054 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.73390986 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.357453937 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.731243969 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.761278789 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.746750764 seconds)
  done (took 202.570231205 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.733473462 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.898486202 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.925599841 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.760617482 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.391358637 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.913576849 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.854809205 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.419747424 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.733752071 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.732372821 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.006780842 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.740507556 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.031627908 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.681947827 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.770706305 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.74956321 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.867945458 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.020818338 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.768543507 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.907744274 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.743085656 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.865377616 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.835173286 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.971830255 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.757170622 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.839482307 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.899056495 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.74856027 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.929947111 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.853468876 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.771242589 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.746038205 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.964849105 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.611679941 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.761347368 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.765932106 seconds)
  done (took 169.653161523 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.131171219 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.735454984 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.733588991 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.740327643 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.745809759 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.733327896 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.857857063 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.865384681 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.348403885 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.529152215 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.737982068 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.788485271 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.557852658 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.734776794 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.806460502 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.750394537 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.739520435 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.750606645 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.761727264 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.741109399 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.738473701 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.861933844 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.750073103 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.070471681 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.748316767 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.740714814 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.74314412 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.109418481 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.738319473 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.742518011 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.996542722 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.736208412 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.737298045 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.630866133 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.382289614 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.829977566 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.738055205 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.742842166 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.735267408 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.955302005 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.739440414 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.738560982 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.740099676 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.913077705 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.736351078 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.858960472 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.738167841 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.255817718 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.738104507 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.738618206 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.447039392 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.443798753 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.742383858 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.739343994 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.740166175 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.738304651 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.738297071 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.742961724 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.324329983 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.741031369 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.811200391 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.740987901 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.742014591 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.748501727 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.740905593 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.906265333 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.742789706 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.952469162 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.795504325 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.977486768 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.85860477 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.741348785 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.739114592 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.80492253 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.830759214 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.742016478 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.73696587 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.738665284 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.738695576 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.817273892 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.738405358 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.878528538 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.74706385 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.74444349 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.791185652 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.808476983 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.742167857 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.631865125 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.740702359 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.74287823 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.058781469 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.806463382 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.739811701 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.737341982 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.744216429 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.882438983 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.859362413 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.53151841 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.744070924 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.386074402 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.743704139 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.740770283 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.897124478 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.740896123 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.927904539 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.741310456 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823418263 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743191015 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.74446106 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.744597065 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.776245395 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.743416048 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.80105605 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.744077011 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.118623988 seconds)
  done (took 398.671788435 seconds)
done (took 774.75618612 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.399690258 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.35799268 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.466546496 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.373944986 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.344316138 seconds)
  done (took 13.624661207 seconds)
done (took 15.301220805 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.831168682 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.832023305 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.763942363 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.830568011 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.76430745 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.830178783 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.816040409 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.770204405 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.803318225 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.772973203 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.799793517 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.768649311 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757636237 seconds)
  done (took 25.028785205 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.980901006 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.982633037 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.813717738 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.975809951 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79072498 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.979622988 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.911636381 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.897938111 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.895730345 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.761069761 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757800901 seconds)
  done (took 22.434997122 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.981813879 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.991075491 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.822340921 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.982400322 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79156169 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.992276242 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.906040431 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.897432882 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.899091913 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.760334007 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.754644723 seconds)
  done (took 22.470648642 seconds)
done (took 71.616588711 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.752286032 seconds)
  done (took 3.440323941 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.780747202 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.930581853 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.758141858 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.763252857 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.753679384 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.757259341 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.756011195 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.752612978 seconds)
  done (took 15.943158732 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.750453561 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.757484431 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.757218221 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.746459845 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.753589218 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.749083096 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.761279605 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.754545723 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.756943378 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.750948129 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.756920169 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.754876839 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.757833244 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.759123594 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.76318987 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.75489613 seconds)
  done (took 29.776294564 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.761423972 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.757212527 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.757400028 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.758834067 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.753172562 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.753446067 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.758979409 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.753435805 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.753629355 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.760775496 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.75773682 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.756637783 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.750770917 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.756093614 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.756003663 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.75897783 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.757213755 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.755026944 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.758836441 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.756867273 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.752686402 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.757109971 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.756537489 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.755497151 seconds)
  done (took 43.847310754 seconds)
done (took 94.685970798 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.709013011 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.157930756 seconds)
  done (took 8.562508704 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.758372918 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.756907274 seconds)
  done (took 5.246175562 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.757056743 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.755509101 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.756114313 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.760363532 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.752465339 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.761448645 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.754683357 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.757065122 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.755460225 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.763332748 seconds)
  done (took 19.266155072 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.75799829 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.762261963 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.758492306 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.754284772 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.754249565 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.756763822 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.761108663 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.75935974 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.760422382 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.760863778 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.758369267 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.759880456 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.759206761 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.759598918 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.763893622 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.755094596 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.757505111 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.755334552 seconds)
  done (took 33.350707954 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.759708577 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.752212573 seconds)
  done (took 5.210473735 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.756457546 seconds)
    (2/7) benchmarking "second"...
    done (took 1.757484581 seconds)
    (3/7) benchmarking "month"...
    done (took 1.755182425 seconds)
    (4/7) benchmarking "year"...
    done (took 1.75636249 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.757337035 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.753278997 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.759972894 seconds)
  done (took 13.995475121 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.763001831 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.929180812 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.003406446 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.433589681 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.760397734 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.765426182 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.7448099 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.766815609 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.766104533 seconds)
  done (took 19.627409303 seconds)
done (took 106.947498194 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.568387283 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.755426298 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.092052334 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.854977682 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.775329788 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.092380836 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.766986497 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.065889568 seconds)
done (took 42.658137809 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.80237635 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.296027576 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.336533978 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.987651922 seconds)
  done (took 12.309742536 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.73689991 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.292255453 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.788361045 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.336237535 seconds)
  done (took 19.856940737 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.121676214 seconds)
    (2/2) benchmarking "read"...
    done (took 2.09944324 seconds)
  done (took 5.917181363 seconds)
done (took 46.576633894 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755023838 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.758381401 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.756243154 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.756262991 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.757803715 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.756627343 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.75604374 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.757044522 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.755068423 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.755394142 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.756888114 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.757420903 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763095007 seconds)
    (14/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.762725744 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758675428 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755832173 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756539595 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.755845955 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754442657 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.7537675 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.755402665 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757106187 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.757030243 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.758041918 seconds)
  done (took 43.861564463 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.756261836 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.754591103 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.757410979 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.758844112 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.752361715 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.756440291 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.758551515 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.760727472 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.767598507 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.759697224 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.754858719 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.759804418 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.761477203 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.758540612 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762160868 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.757725138 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.761668823 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757063238 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763773574 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.756984601 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.761115956 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755948309 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.76158367 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.762763424 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.764260449 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.762106017 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.759871638 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.762786543 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.764084039 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.75822026 seconds)
  done (took 54.481169088 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.772157537 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.771281333 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.76435145 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.76557289 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.763360089 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.764974184 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.76459702 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.758554923 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.763063607 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.765806735 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.76623586 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.766553306 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.762423396 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.765605483 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.761358222 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.770697517 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.767483896 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.764978292 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.763618788 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.764026134 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.763307704 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.771226311 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.76757934 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.76555005 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.763545214 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.76582064 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.766846876 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.770826049 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.766728716 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.764734215 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.766138247 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.768881201 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.770781891 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.763858759 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.766056063 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.764106849 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.774104539 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.770264618 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.76689181 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.769279582 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.765181078 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.772787183 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.764313653 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.76817226 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.769839569 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.768950926 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.767452553 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.768797079 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.773937406 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.770077862 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.772526871 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.764058103 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.766960237 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.776249898 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.769250228 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.773221241 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.76722904 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.770000772 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.773759661 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.769962646 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.765204279 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.771350855 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.768504796 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.770225995 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.775227706 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.770327804 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.769868335 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.771121554 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.773828793 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.773519841 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.774362555 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.773648324 seconds)
  done (took 129.003997691 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.772492154 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.771941924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.765301977 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.767138248 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77000895 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.769511624 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.770405645 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766043264 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77163149 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.771310612 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770812567 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.771610949 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768412039 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.770871127 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772717469 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.772407367 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.772037902 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.772844815 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.773187684 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.770218932 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773231246 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.772968292 seconds)
  done (took 40.663988239 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.774537715 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.771824811 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.771668019 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.77440071 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.770454282 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.771134542 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.775056059 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.773740596 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.774100681 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769171404 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76568228 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774502814 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.769093037 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769435851 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.771865235 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.769351769 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776480575 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.771126324 seconds)
  done (took 33.602114037 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.771882919 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.76827036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.772822294 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.773533527 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.774065713 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.777130333 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773998394 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.778324184 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.7734263 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.775477708 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.773870246 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775963003 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.773950148 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775673311 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776927171 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.772268571 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.775609214 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775060126 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777432199 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.771172915 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.772847912 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.776934615 seconds)
  done (took 40.750276411 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779423945 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.775868804 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.774622124 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.775783346 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.769642215 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.773707403 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.776596157 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.773567407 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.77627334 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.775829294 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776988926 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.777945447 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.776317149 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.776528891 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.774769957 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776944914 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.777404346 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.775437167 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777737314 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.775237941 seconds)
  done (took 37.230297071 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.777227565 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780081096 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.784658203 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778224153 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.779098501 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.780922279 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781369503 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.778604875 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.780450597 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.778604279 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.780823903 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.780337408 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780654177 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782437844 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77948421 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778726752 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.780518635 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.77921091 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.781899034 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.780087564 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784221012 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.779353241 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.780668816 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782936252 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.78036735 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.780019254 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780420524 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.780932382 seconds)
  done (took 51.568069681 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781253624 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.782381573 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.776733117 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.778317122 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.776127003 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.777769225 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.778421453 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.776747921 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.785232992 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779471197 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.784473935 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.782584629 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.784465415 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.775052222 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.781870174 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.783255792 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781862031 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.777938271 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779222036 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77710672 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.780869926 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781054907 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.780245113 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.778166984 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781865865 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.785360959 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781790123 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.777542049 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782390365 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.782881074 seconds)
  done (took 55.127432481 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.801533461 seconds)
    (2/2) benchmarking "in"...
    done (took 1.801378015 seconds)
  done (took 5.323266398 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.780454198 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784728448 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.781310275 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.777547908 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.780746765 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.784224539 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.781821968 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779321483 seconds)
  done (took 15.967442977 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.782533715 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.782353687 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.779655017 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.782704115 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.786701574 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.783875744 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788847547 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.783358466 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.78525424 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.791447705 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.794103516 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.79335276 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.790248672 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.781855618 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.78043216 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.784437482 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.780416603 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.783523912 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.781798272 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.784402106 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783445436 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.785627428 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.784350689 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.782962416 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.783534552 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.794865577 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.786703668 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.783279436 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.784557857 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.788553353 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.782541627 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.783225256 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.784121718 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.783284075 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.780563636 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.787113309 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793071509 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.785722628 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.790479018 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.786815636 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.784687848 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.781305987 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.785352367 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.786211691 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.786453887 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.787843129 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.787827459 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.782471082 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.786789482 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.786811013 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.790949696 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.785018489 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.783151326 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.790073954 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.788077628 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.794134349 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.786425015 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.786619606 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.795051415 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.794990202 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.796606603 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.794038391 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.786134742 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.786053308 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796224239 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.807626131 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.791892968 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.78188086 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.781252217 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.787177219 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.793695626 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800934185 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.793574927 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.786592679 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.788758902 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.789742831 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.786020278 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.787167262 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.791996692 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.788255336 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.786638995 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.786694171 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.796977847 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.809697779 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.788263348 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.787974702 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.787141287 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.788255354 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.788150801 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.798280586 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.789420739 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.785878584 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.78496725 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.785542417 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.791447112 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.788441611 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.784483946 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.787458913 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.785961971 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.790387803 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.788010126 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.79049163 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.793542015 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790260896 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.792422657 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.795037704 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.785764842 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788705517 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.79505038 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.789633265 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.791743401 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.790698269 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.797026185 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.785861218 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.791553406 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.796857485 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.789436691 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.792237337 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.791133631 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.790552745 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798651639 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.815307535 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.789605086 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.7917309 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.794786834 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.800471463 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791630824 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.792222966 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.786543454 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.785419164 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.786549409 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.790319156 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.790497561 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.789828253 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792167339 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.791658757 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.790205965 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.787953241 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.790030685 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.791152463 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.790704017 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.787971369 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.790567891 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.789633225 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.792690464 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.794133016 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.797965524 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.792015467 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.78822544 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.791539818 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.787356794 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.791911673 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.792798941 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.792624213 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.79377627 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790369955 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.793245079 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.794425576 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.79261189 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.793147658 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.790859518 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.792519081 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.796218566 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.791828166 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.796252609 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.790934037 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.78733238 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.788234028 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.789250805 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.79072464 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.793567291 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.790535167 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.79595649 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.796492794 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.79247971 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.791466228 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.789815892 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.789219759 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791750136 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791762159 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.791881342 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.800250527 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.793476443 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.796565491 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.79106022 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.793473454 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.792054687 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.793085538 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.790226062 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791803847 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.796589776 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.798410238 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.804976016 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800010832 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.791584889 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.794962246 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.794164502 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.797353983 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.794412949 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.792918858 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.793781761 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.794222685 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.791768463 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.794545312 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.793408573 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.793694446 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.788208304 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.792567203 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.79142755 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.79258516 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.792521002 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.795871719 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.795534579 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.791336227 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.793053362 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.794520369 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.788730447 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.792740989 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.794561968 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.794946023 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.793106695 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.792344637 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.798683893 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.789361958 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.795041462 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.791868726 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.794045129 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.790174298 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.794069933 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791428582 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.789156362 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.801786931 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.795649953 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.795013836 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.797060491 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.791158183 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.793199403 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.796128322 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.793360045 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.788705481 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.799484603 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.801477743 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.796374245 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.795418323 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.795640974 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.792193582 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.796497392 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.800909967 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.793029327 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.796283596 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.793697084 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.79412204 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.792725944 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.79668857 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.794658169 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.795302198 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793531665 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.78699013 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.796586823 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.795756232 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.793839949 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.795860935 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.797824622 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.798943788 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.80456068 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.80138739 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.795035484 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.797888199 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.796173763 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.800837629 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.795468294 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.799069102 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.795207552 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.807501133 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.803789406 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.802471868 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.797628193 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.793879296 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.799175452 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.797943833 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.797425526 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.796544368 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792348341 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.798113459 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.794231017 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.79409444 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.794481626 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.797249589 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.796881047 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.795976535 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.800490269 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.79314605 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.795064286 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.797364975 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.794425557 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.793978814 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.797509098 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.796467777 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.80083476 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.798301778 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.790586952 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.795582984 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.801686031 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.796918966 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.798689448 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.797467135 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.798025684 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.792220639 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.795694204 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.797809374 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.802940756 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.807018952 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.79762076 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.806287602 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.800142232 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805667025 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.798882403 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.799328616 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.803103443 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.795861326 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.795035705 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.801804659 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.797521922 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.803986742 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.794770033 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.800117253 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.803293593 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.798406667 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.796009191 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.798413484 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.800175928 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.799063067 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.796731964 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.805888629 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.796603443 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.802634479 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.79838502 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.795467217 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.798187194 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.798241508 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.795419381 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.801994081 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.796832738 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.798479661 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.796580734 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.799987966 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.79607352 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.798550762 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.797505407 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.794241135 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.794158633 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806456102 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.799463881 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.804037961 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.792935996 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.808477805 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.797539491 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807789274 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.796033143 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.794994132 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.798593696 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.79744435 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.795858556 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.799135609 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.799521802 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.802473292 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.801576409 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.800672062 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.796345855 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.801113776 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.800681321 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.796377699 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.796180846 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809628158 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82835525 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.796174207 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.802013142 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.793124772 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.79812022 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.804811071 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.798831819 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.79970327 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.804235463 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810672547 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.806602043 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.796043705 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.803345061 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800851655 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797072248 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.798007523 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.802453499 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.800973455 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.799277613 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.798544607 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.796968352 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800572565 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.800620989 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.796086376 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.801787669 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.795482166 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.811741024 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.802417737 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.799052692 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.800875503 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.798597494 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.801927872 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.802721402 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.801087101 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799094515 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.802572513 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.801497799 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.807746605 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.807446587 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.802309348 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.799010255 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.798771681 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.802602328 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.803690901 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.803779256 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.803009831 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.802767674 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.805589148 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.800704241 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.805394515 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.801866407 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.80469754 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.804227943 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806466386 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.804358074 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.812135136 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.801554424 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.796368425 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.805082761 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804989947 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.802067881 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.80350305 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.812290745 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806565084 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.813810333 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.811632287 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.80999209 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.805694743 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806897137 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.81524229 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.800655165 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.804506977 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.801551183 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.809444763 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.800682579 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.808110746 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805241289 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.808079147 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.805554466 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.800014532 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.812298958 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.802946394 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.804337457 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.805985826 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.807697345 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.805652696 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.800453167 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.804911385 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.80017378 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.81204177 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.802596133 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.800420797 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.806928642 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.806024069 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.80830777 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.810337488 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.805011482 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.805529696 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.800138926 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.808210468 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.805462539 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.806495729 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.803486861 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.80544948 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.80897518 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.809567273 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.812858209 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.806891748 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.807212834 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.804739615 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.805907025 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810990994 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809445101 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.802093896 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.805550405 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.806856582 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.805190049 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.806232323 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.808313903 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.807507859 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.810000047 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.808073272 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810175277 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.81121384 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.817283846 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.81347205 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.806256397 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.807241087 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.804587743 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.807221008 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.811427508 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.80828989 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.807474308 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.808228834 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.806643781 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807880371 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.804298936 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.810087044 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.823795619 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.809324493 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80690689 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.808441122 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.812735631 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.810936158 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.806425606 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.806730844 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.811675471 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.812690283 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.816125593 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.809136093 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.813235316 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.811253952 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.806764048 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.814778125 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.813272803 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.816468552 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.812657909 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.811412656 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.809043167 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.814941628 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.827667678 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.811945864 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.822608057 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.842455023 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.810590445 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.812404802 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.810272756 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.809279108 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.814097237 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.808834727 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.812284255 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.81254959 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.812275819 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.808108934 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.811563508 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.816361547 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.812871763 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.810733266 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.810279266 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.810848958 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.811849049 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.804484119 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.808559029 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.810235856 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.810399564 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.811795236 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.810155941 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.806787965 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.824913858 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.818207234 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.809724916 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.809515284 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.803127842 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.815603447 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.814938389 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.820300492 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.818047788 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.810231081 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.80434525 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.811964651 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.809532497 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.80586552 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.809268574 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.811252174 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807788417 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.798733565 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.822422548 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.817413786 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.813140539 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.804814678 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807800381 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.808988407 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808366492 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.814120781 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.813265401 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.808421332 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.810778435 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.817589144 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.813800665 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.812033517 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.811479741 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.819055938 seconds)
  done (took 1073.739804123 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.801721741 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.805744962 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.803937148 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.804714176 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808229714 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.807470844 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.803869796 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.810859748 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.807923004 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.80845784 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.803408621 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.8097154 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.808700165 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.805652383 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807789614 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.806328918 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.809251107 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.811197984 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.810503693 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.805850146 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.807164749 seconds)
  done (took 39.695124848 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.806229211 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.808557715 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.809220577 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.812194434 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.8079617 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.811554457 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.80460462 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811819909 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.80806498 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809037515 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.811940292 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812298656 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.811876461 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.812928975 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810041982 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.812929946 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.811868416 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.811931254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.813692459 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.807828928 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.813289994 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.807717135 seconds)
  done (took 41.573785306 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.81563477 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.811192214 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.813191566 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.810737541 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.814132396 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.80828943 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.817464918 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.816471524 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.809851565 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.81556405 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.813625149 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.816867095 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.822928339 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.822137936 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.81724873 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.814477867 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.962811864 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.8161182 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.816350013 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.813991256 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.812295238 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.819125146 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.811643784 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.8142831 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.813774372 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.815319101 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.815431956 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.814603741 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.820003355 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.816210528 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.814097726 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.815153291 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.816757459 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.813908895 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.813867799 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.817694914 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.821539964 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.816277337 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.813085214 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.812727559 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.826219445 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.843316119 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.816374841 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.820147731 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.817306056 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.817975495 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.823128221 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.826038149 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.814130411 seconds)
  done (took 90.910733339 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.815629045 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.817195952 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.812953489 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.815970486 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.817227417 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.817394376 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.82088349 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.814666374 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.81464723 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.815062912 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.819693982 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.809698822 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.810960863 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.813516746 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.815264633 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.812595235 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.814466193 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.815162997 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.811220425 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.815248931 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.815878957 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.816345807 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.819682466 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.809013552 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.819976996 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.81312582 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.812392315 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.817689881 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.813988336 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.812623446 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.818538386 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.816532844 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.8149327 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.812854299 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.816663773 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.813604389 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.81453139 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.810538312 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.818390837 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.812935232 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.817497267 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.815099232 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.820379073 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.815729309 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813720485 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.816252085 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.811720201 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.810582007 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.813751127 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.817961625 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.817141815 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.817454105 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.816639663 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.812870002 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.814279358 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.815521663 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.810444955 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.814763254 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.815902094 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.81500254 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.816018711 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.817067125 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.813762485 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.817930379 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.818518477 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.814534435 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.813751617 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.814900012 seconds)
  done (took 125.181922731 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.817484281 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.815014715 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.817939172 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815848442 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.813783627 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.816949385 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.814804473 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.816265842 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.814871773 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.82011799 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.816580726 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.818075214 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.812757052 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.813711194 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.819091769 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.817657105 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.819059542 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.814621671 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.812993138 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818390915 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.81564416 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.815710032 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.8186904 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.814885339 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812481498 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.814420997 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.818129185 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.817805383 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813323911 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.818902824 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.817570553 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.812338442 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.815533686 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.818932204 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.820524526 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.818535606 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.819292143 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816293723 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.818653225 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.812859394 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.817307395 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.818402562 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.822761298 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.820175346 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.820500779 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.815692664 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.819208466 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.817955207 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.817467891 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.81797208 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.817370791 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.822334832 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823248172 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.81763214 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.819672108 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.821401051 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8184194 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.822612463 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823767225 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.821615849 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816766398 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.819299558 seconds)
  done (took 114.445432625 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.818807226 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.821197295 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.820091705 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.818615556 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.822988816 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.818897103 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.81812049 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.818885159 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.818820193 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.818226565 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820933661 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821087142 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818527925 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821216042 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.816266169 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821530774 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.8165807 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.81686035 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820083784 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.817968177 seconds)
  done (took 38.140262217 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.816709073 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.819634109 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.81973101 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.815850015 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.822928373 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.81824183 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.820148959 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817356199 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820498779 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823701921 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.820518977 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.823837129 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818379487 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.821284392 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.82194314 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.82155139 seconds)
  done (took 30.87735726 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.820839358 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.818254145 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.821856028 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.824403746 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.817335422 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.819951448 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.823721419 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.820588206 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.820454726 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.822412744 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.824213938 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.823041197 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.819739452 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.824797656 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.82184368 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.829653178 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.821025422 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.822507447 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.819924032 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.822947298 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.819781596 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.818959244 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.823434814 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.821868933 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.822187847 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.82216845 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.822469749 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.823892558 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.823116309 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.82389117 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.825548283 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.823651971 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.824518773 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.820567598 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.829578246 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.822093321 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.825931317 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.824904223 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.826256538 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.823845833 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.820995462 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.820021448 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.820468559 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.827108862 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.822551279 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.82465483 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.82034333 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.819923026 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.822775336 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.820944318 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.825811322 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.822662926 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.82402734 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.826513786 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.826020962 seconds)
  done (took 102.009498469 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.82349057 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.825086181 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.825052671 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.826975436 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.825508327 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.822026148 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.824540727 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.821269088 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824006875 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.82591837 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.824895462 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.822154743 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.825552652 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.827670312 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.821417751 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.825559631 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.826131624 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.82077607 seconds)
  done (took 34.599706683 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.82513957 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.823366062 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.826473551 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.823562077 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.824789024 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.82820529 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824040198 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.825934585 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825867288 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.822947732 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820365601 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.828284224 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828383721 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.828141809 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.825309249 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824372766 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.826500721 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828280759 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.823933418 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.824768973 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.828016178 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.827606714 seconds)
  done (took 41.924747741 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.824118692 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.82778862 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.843944885 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.845101841 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.847881235 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.862703748 seconds)
  done (took 12.814819498 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822136042 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826256424 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.825839078 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827994739 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826256984 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828186382 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825765251 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825411141 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823145778 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818875867 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824398665 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.829758692 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827192249 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825007151 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826627766 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824301256 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82664 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827917422 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827137274 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.828895282 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827671816 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829572229 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826213518 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824672825 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825873483 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82818209 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.829119733 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828002631 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827381947 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831143795 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82612486 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830342745 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826728859 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826294271 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.830204785 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827391548 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827244794 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833888973 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835117729 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831913628 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.834387061 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833245217 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834426466 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832727269 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833887403 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829662162 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832258429 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83012664 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833639276 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837507921 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834216069 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83230028 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835753001 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83569209 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835829978 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834552567 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832758813 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832267294 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836234392 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833750193 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83034839 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834573136 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831307938 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835001731 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838334882 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830945024 seconds)
  done (took 122.531519133 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831645096 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.833900701 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833304582 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832811288 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831279765 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834060272 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831889684 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832668149 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814249565 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811988529 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816180676 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81106625 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812597055 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818317335 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811391019 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811852694 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811260405 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810814324 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812149882 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818710477 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810059289 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810063987 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809896729 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809758133 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814813732 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811900562 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808253743 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808564501 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809766371 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809931594 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811884912 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809683944 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808559022 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.811179501 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809060965 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810400786 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810395473 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808744623 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809186163 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812590415 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808756428 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815249287 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808891607 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809437825 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809387735 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809911914 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809160628 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809443719 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80961439 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810148791 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809028557 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810646134 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80998096 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810545315 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810429769 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811083907 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810814804 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810748614 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810579507 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814797972 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810399241 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811544183 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814320153 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81115358 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811207307 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812722476 seconds)
  done (took 121.480875317 seconds)
done (took 2499.192520407 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.894932914 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.868596669 seconds)
  done (took 15.508407206 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.975873683 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.931802421 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.814516348 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.867793494 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.81059078 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.837302403 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.82899741 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.810320126 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.814049548 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.81556112 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.813967686 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.00620998 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.812441047 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.809600433 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.814347514 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.907635061 seconds)
  done (took 51.59739446 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.819736448 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.818198601 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.830840923 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.821233885 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.81753588 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.836294922 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.852407586 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.822801327 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.880766334 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.831388505 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.930826867 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.826434843 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.816574475 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.888422469 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.825180269 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.827364636 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.907351318 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.900855458 seconds)
  done (took 35.001438243 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.891585868 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.809637669 seconds)
  done (took 10.458895699 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.817668023 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.805997911 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.827435498 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.833038008 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.814225082 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.819493513 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.836031584 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.837575791 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.830179845 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.797317093 seconds)
  done (took 69.963726742 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.813257452 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.809421899 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.80963191 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.807398595 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.802027795 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.801689006 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.807061207 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.803451914 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.50558974 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.841836653 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.814950489 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.814843201 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.809641825 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.80611125 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.805754548 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.8310262 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.925713246 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.806339083 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.80933857 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.812894581 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.80843116 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.862433883 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.820206811 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.812090181 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.832645136 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.504442621 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.81177684 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.811999713 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.930208062 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.802394562 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.804164811 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.807200519 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.808270831 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.185445102 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.100098541 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.806837294 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.815744055 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.810951261 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.802463941 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.934116307 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.80605361 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.812001038 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.740775694 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.065100866 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.917849475 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.847377754 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.190648839 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.807387378 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.804238288 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.84019124 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.804342368 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.803045119 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.816163525 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.310597438 seconds)
  done (took 129.218175969 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.79455806 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.057805259 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.953127318 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.797241747 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.083174609 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.005624865 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.791842647 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.8485482 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.794164452 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.025880687 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.01629262 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.906504294 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.792899451 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.794674232 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.791112818 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.786611371 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.957496838 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.871249228 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.790900022 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.790355775 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826506426 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040952027 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.924674174 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.79774321 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.811780786 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.008070952 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.923061324 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.90494642 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.239440627 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.788098699 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.857316356 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.79363991 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.792707079 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.786244137 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.95085001 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.891120022 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87946943 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.7896094 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.787598128 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.78396995 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.464722398 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.986099601 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.885664653 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.934478609 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.041008357 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.996081334 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.574100359 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.78648752 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.528633383 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.952234364 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.024046664 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.0262632 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.92013158 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.789716432 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.060901804 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.78620232 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.786959954 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.023089171 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.039406294 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.892852808 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.78791235 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.791068789 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.783993629 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.036489909 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.788413849 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.881004224 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.786245039 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.785866315 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.88331934 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.895725796 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.033386432 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.999565122 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.818463171 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.086089875 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.256765282 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.038676334 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.853913669 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.022539087 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.788547579 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.782721125 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.875788413 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.634375218 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.986268074 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.035048525 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.041162332 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.822792077 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.51228299 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.783318539 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.017555023 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.011671476 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.040159065 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.023898554 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.937122263 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.100641636 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.786181555 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.788212323 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.041733092 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.923265506 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.786393078 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.153003303 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021513654 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.359362321 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.818133251 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.105014816 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.921887828 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.785685758 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.431642986 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.789657617 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.018213575 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.828303506 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.786259634 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.788721121 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.007708676 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.772787629 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.78782491 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.491237508 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.848940714 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.787425092 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.021811163 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.786622337 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054842808 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.789060987 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.02881974 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.067860731 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.821882901 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.958102632 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.030787196 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.788354054 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.049845633 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.03619485 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.90727487 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.063833248 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.723416169 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.788438139 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079443139 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.788581243 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.788550066 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.963915463 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.786879857 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.024274257 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.791769532 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.074147974 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814160643 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950748383 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.790403465 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.049260963 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.824524407 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.840247416 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.789632209 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.920671499 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.786797507 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.786818786 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.944689686 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.787758621 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.787670531 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.334274181 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.787405906 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.949232623 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.023389667 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.814588782 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.865103498 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.460104058 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.792822513 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.879647733 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.816968669 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.136528859 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.789545276 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.006627863 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.789865685 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.327613995 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.790652117 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.032998915 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.021501241 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.792004942 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.787111722 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.698083602 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.788727654 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.791981553 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.95154072 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.599049285 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.788772598 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99445212 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.790147969 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9234175 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.791249968 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.871873815 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.146681753 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.78975709 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.789931659 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.793264562 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.79059116 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.789916093 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.002601725 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.82147616 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.319634683 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.931709224 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066058049 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.1110746 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.046358005 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.835582619 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.790788559 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.037135335 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.792126883 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.854561417 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.793038673 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.817073124 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030495724 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.794277035 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.002844443 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.072541979 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.728409125 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.84372442 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.799327521 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.793582744 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.710002406 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.951301626 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886827019 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.793158909 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.794572891 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.915672975 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.927647981 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.01052476 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.789484915 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.025663255 seconds)
  done (took 885.89024803 seconds)
done (took 1199.377933085 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.795459797 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.794187306 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.779859782 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.79366797 seconds)
  done (took 28.893427116 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.802182406 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.799991446 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.801110664 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.799659555 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.802368235 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.798867564 seconds)
  done (took 12.533864681 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.820873058 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.795093021 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.793903528 seconds)
  done (took 21.142803161 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.865356567 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.206735714 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.910611076 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.239091723 seconds)
  done (took 9.957390339 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.800940271 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.801095063 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.801429472 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.803666921 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.80399316 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.806246898 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.803867324 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.804822189 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.805804344 seconds)
  done (took 17.969159405 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.245471178 seconds)
done (took 96.467761416 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.827647948 seconds)
    (2/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.881987499 seconds)
    (3/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.15080197 seconds)
    (4/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.927766228 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.91946301 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.929895027 seconds)
    (7/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.784269834 seconds)
    (8/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.95761156 seconds)
    (9/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.649404706 seconds)
    (10/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.944164559 seconds)
    (11/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.051933855 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.045023151 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.842247485 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.987973595 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.126701259 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.822940726 seconds)
    (17/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.284098653 seconds)
    (18/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.896849475 seconds)
    (19/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.310111137 seconds)
    (20/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.88374 seconds)
    (21/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.424631936 seconds)
    (22/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.279140911 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.886120307 seconds)
    (24/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.815979078 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.924886026 seconds)
    (26/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.261263977 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.133207293 seconds)
    (28/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.158562841 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.973193713 seconds)
    (30/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.910673148 seconds)
    (31/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.807978894 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.893791105 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.801025588 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.943665987 seconds)
    (35/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.88704584 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.784081888 seconds)
    (37/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 3.172950003 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.067780455 seconds)
    (39/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.801698469 seconds)
    (40/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.828043624 seconds)
    (41/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.988888157 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.097675258 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.495940507 seconds)
    (44/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.01334147 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.940746289 seconds)
    (46/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.717934176 seconds)
    (47/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.925926662 seconds)
    (48/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.167122566 seconds)
    (49/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.877434788 seconds)
    (50/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.821754082 seconds)
    (51/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.801887021 seconds)
    (52/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.013453725 seconds)
    (53/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.931823351 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.102210716 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.919945059 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.802576808 seconds)
    (57/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.763689868 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.062379663 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.706843514 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.790780163 seconds)
    (61/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.402356536 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.828332659 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.909935073 seconds)
    (64/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.344370822 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.930611919 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.58715141 seconds)
    (67/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.737319605 seconds)
    (68/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.287321301 seconds)
    (69/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.93838832 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.855157062 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.860579915 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.137400337 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.796098261 seconds)
    (74/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 3.158154326 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.922768648 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.18196716 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.9720572 seconds)
    (78/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.954013821 seconds)
    (79/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.790817479 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 8.305013833 seconds)
    (81/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.090448245 seconds)
    (82/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.947566217 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.878581396 seconds)
    (84/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.37734173 seconds)
    (85/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.372406829 seconds)
    (86/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.789259248 seconds)
    (87/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.533981264 seconds)
    (88/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.889258892 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.505338834 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.455153475 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.080825959 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.802728357 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.598968378 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.778747557 seconds)
    (95/309) benchmarking ("sort", Int8, false)...
    done (took 4.781646052 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.635849893 seconds)
    (97/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.837685297 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.90388971 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.041928799 seconds)
    (100/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.934025927 seconds)
    (101/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.788319652 seconds)
    (102/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.888146333 seconds)
    (103/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.971698431 seconds)
    (104/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.977814063 seconds)
    (105/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.483838188 seconds)
    (106/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.088228613 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.026460525 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.191060495 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.96602383 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.110164635 seconds)
    (111/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.751612803 seconds)
    (112/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.145040518 seconds)
    (113/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.804811062 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.944429882 seconds)
    (115/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.837323453 seconds)
    (116/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.887698726 seconds)
    (117/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.99587801 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.87862917 seconds)
    (119/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.129126287 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.116269148 seconds)
    (121/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.79177546 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 3.383049034 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.792308037 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.8861063 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.913157184 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.930276999 seconds)
    (127/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.88841781 seconds)
    (128/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.959099505 seconds)
    (129/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.401342728 seconds)
    (130/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.971702347 seconds)
    (131/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.165788881 seconds)
    (132/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.881010537 seconds)
    (133/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.865203766 seconds)
    (134/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.265179028 seconds)
    (135/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.998727528 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 2.253900842 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.828185413 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.01155302 seconds)
    (139/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.92768493 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.801767506 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.056421833 seconds)
    (142/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.816255231 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.025110498 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.059882143 seconds)
    (145/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.265401532 seconds)
    (146/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.242673751 seconds)
    (147/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.791758499 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.533167852 seconds)
    (149/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.871789726 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.908502698 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.108839677 seconds)
    (152/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.170456193 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.812651135 seconds)
    (154/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.894611119 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.71091895 seconds)
    (156/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.850388449 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.045834659 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.831944113 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.107194954 seconds)
    (160/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.833788412 seconds)
    (161/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.419922341 seconds)
    (162/309) benchmarking ("sort", BigInt, false)...
    done (took 6.81308791 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.827286157 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.823237352 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.042494355 seconds)
    (166/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.813170736 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.143821483 seconds)
    (168/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.463011035 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.921724519 seconds)
    (170/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.834569685 seconds)
    (171/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.919242083 seconds)
    (172/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.891439996 seconds)
    (173/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.804117205 seconds)
    (174/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.823739376 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.81498581 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.817010081 seconds)
    (177/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 3.63545244 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.927261769 seconds)
    (179/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.291020776 seconds)
    (180/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.945821414 seconds)
    (181/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.836934104 seconds)
    (182/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.808694958 seconds)
    (183/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.983811106 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.795882187 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.887570166 seconds)
    (186/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.793977475 seconds)
    (187/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.892997382 seconds)
    (188/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.940764211 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.84865032 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.814575368 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.518582309 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.89127403 seconds)
    (193/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.836120399 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.769331599 seconds)
    (195/309) benchmarking ("sort", Float64, false)...
    done (took 5.689126664 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.823371673 seconds)
    (197/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.408141467 seconds)
    (198/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.049122639 seconds)
    (199/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.309784352 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.092699593 seconds)
    (201/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.135254889 seconds)
    (202/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.830016669 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.864292245 seconds)
    (204/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.805690513 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.181607438 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.877669626 seconds)
    (207/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.792367427 seconds)
    (208/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.14242771 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.624361897 seconds)
    (210/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.909800437 seconds)
    (211/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.947297286 seconds)
    (212/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.836344871 seconds)
    (213/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.143970726 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.18779749 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.599345119 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.024405776 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.973224959 seconds)
    (218/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.912969914 seconds)
    (219/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.318693221 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.810205653 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.810896368 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.83436829 seconds)
    (223/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.719073806 seconds)
    (224/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.151534744 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.832969436 seconds)
    (226/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.207397493 seconds)
    (227/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.371145875 seconds)
    (228/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.741743222 seconds)
    (229/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.805013639 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.92825668 seconds)
    (231/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.940190998 seconds)
    (232/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.11152889 seconds)
    (233/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.232182649 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.107770809 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.686863866 seconds)
    (236/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.942305213 seconds)
    (237/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.023176801 seconds)
    (238/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.989349148 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.804179017 seconds)
    (240/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.901220179 seconds)
    (241/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.876836406 seconds)
    (242/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.192207137 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.502773916 seconds)
    (244/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.986834185 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.176492493 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.896460754 seconds)
    (247/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.120086069 seconds)
    (248/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.791798748 seconds)
    (249/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.944704646 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.09716272 seconds)
    (251/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.938307435 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.805823556 seconds)
    (253/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.808746432 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.983095402 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.193289365 seconds)
    (256/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.108064578 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.899288219 seconds)
    (258/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.002244581 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.619322656 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.914918796 seconds)
    (261/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.810398476 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.833213532 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.64720817 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.808360672 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.834185683 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.79522842 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.631848965 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.456776743 seconds)
    (269/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.017074746 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.206132852 seconds)
    (271/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.939671344 seconds)
    (272/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.02320884 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.729614583 seconds)
    (274/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.312563494 seconds)
    (275/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.829256404 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.809724704 seconds)
    (277/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.782693653 seconds)
    (278/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.183388294 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.13723287 seconds)
    (280/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.354337621 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.824902854 seconds)
    (282/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.003683155 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.878449001 seconds)
    (284/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.893753671 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.811050694 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.897192587 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.786053377 seconds)
    (288/309) benchmarking ("sort", Float32, false)...
    done (took 5.542738922 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.898397564 seconds)
    (290/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.143706611 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.967660662 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.12211716 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.547150694 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.188945965 seconds)
    (295/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.834186646 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.840858833 seconds)
    (297/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.169948858 seconds)
    (298/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.226145608 seconds)
    (299/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.971583036 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.146734973 seconds)
    (301/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.091198818 seconds)
    (302/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.871847946 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.070853024 seconds)
    (304/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.81957894 seconds)
    (305/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.825791042 seconds)
    (306/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.811310466 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.830276238 seconds)
    (308/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.137120851 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.81054901 seconds)
  done (took 1000.644440284 seconds)
done (took 1002.447337545 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.845110438 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.838487116 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.824186947 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.841660462 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.933621763 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.852714459 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.831270901 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.824297418 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.869426143 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.871333882 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.821439214 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.851278258 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.823240323 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.822615581 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.821972263 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.83673275 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.128820453 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.843494432 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.840188428 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.830449056 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.839498563 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.821304607 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.872054969 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.852206418 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.824979567 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.823931251 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.826971267 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.840401059 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.934412012 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.82555557 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.825038633 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.836592649 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.129379271 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.840669729 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.817212102 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.84313415 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.83413696 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.8330623 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.826014696 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.855286766 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.257985737 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.825273362 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.825136781 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.825398541 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.824606152 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.828957684 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.825823382 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.828965222 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838389282 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838493417 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.258061548 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.84195617 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.828491536 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.825290528 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.834340837 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.824223757 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.827584555 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.840434578 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.844431156 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.841100353 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.121466239 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.848590003 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.826296508 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.84164175 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.832074176 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.295431829 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.822147157 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.829620584 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.261504187 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.831537734 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.296026193 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.835377333 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.826232955 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.839771833 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.85694163 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.131840351 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.838094508 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.823219448 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.83256571 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.823620398 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.833396735 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.8382235 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.830077055 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.826023199 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.840547545 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.857202298 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.836212845 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.8277607 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.835357401 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.846700768 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.833679192 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.837967411 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.829427914 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.821821308 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.837390515 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.829643558 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.829406455 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.83041934 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.831252654 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.837192586 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.259465577 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846043519 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.823600829 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.823312719 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.826483805 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.842810712 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.259761724 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.830963804 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.849935552 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.87474106 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.829862663 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.12510367 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.850322697 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.842432181 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.834940219 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.830926643 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.822204675 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.124263915 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.282920624 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.845793018 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.828810129 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.826012011 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.845018088 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.829117553 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.824048569 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.13521448 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.847076454 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.841836563 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.949285548 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.838622143 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.86014249 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.825659219 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.829853559 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.859856239 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.844706625 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.859434571 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.831173268 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.844290537 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.84615592 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.82505106 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.840836479 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.839400753 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.828789086 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.833221249 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.824543681 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.860812736 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.842578912 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.841647439 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.850428057 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.94952186 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.826048109 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.124076166 seconds)
done (took 287.073360702 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.893562029 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.826605822 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.923800181 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.825939627 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.908398278 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.911691464 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.821225335 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.822620922 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.821401703 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.250655419 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.823675746 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.824041743 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.822307019 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.823745442 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.90971639 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.826306126 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.823259861 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.161360861 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.827022444 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.897824802 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.826671433 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.823532888 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.827112897 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.199943194 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.82424464 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.828321091 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.899062252 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.825682237 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.16340382 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.821242591 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.825994044 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.162984994 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.918207699 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.845226157 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.835157757 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.833261571 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.911290894 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.831086227 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.909222019 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.908533038 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.926116618 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.867696312 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.824419274 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.825684744 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.832417424 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.829166595 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.824742687 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.854646782 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.820600706 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.8359642 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.161993365 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.827261252 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.833013342 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.824950023 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.825142705 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.858484116 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.824744269 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.82978095 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.91902566 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.829265203 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.889020669 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.198911602 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.198025104 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.829236868 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.820837779 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.825146102 seconds)
  done (took 181.458780841 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.897035064 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.901302132 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.894373074 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.831480345 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.877718264 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.895997983 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.834343943 seconds)
  done (took 14.890005647 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.833939068 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.82945049 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.876399537 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.879460839 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.829598314 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.977520327 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.829513813 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.839590988 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.827926138 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.883528248 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.830743133 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.828363539 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.834810074 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.824551421 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.878345633 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.840727098 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.945530948 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.832083474 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.830847716 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.980786011 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.82691313 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.837430588 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.886138049 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.841800283 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.830539907 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.836007296 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.414453462 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.830757266 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.826582012 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.829779485 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.826145954 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.872182717 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.832571657 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.832073401 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.828300393 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.945769165 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.83097722 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.826147235 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.829236933 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.826482429 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.830907197 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.831381059 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.831663106 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.828906415 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.831015799 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.856234557 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.830537902 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.831248919 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.830492744 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.833264547 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.881799009 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.832513331 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.828411329 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.830062248 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.886264685 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.838336894 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.833310879 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.828814787 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.833457952 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.829027691 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.983812286 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.883650125 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.831471408 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.881086269 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.832879251 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.833194401 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.833624401 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.831946227 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.928301067 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.832577314 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.882099724 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.830667233 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.991449637 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.8573057 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.83369928 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.835228621 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.835535433 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.832306235 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.833668271 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.839640124 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.829110233 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.833218508 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.839861891 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.829073024 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.829928956 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.943981956 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.942167676 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.831216374 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.847103924 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.839712825 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.829850756 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.884367459 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.832025273 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.828418648 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.887581069 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.950272386 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.88917635 seconds)
  done (took 202.073411697 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.837736451 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.841475498 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.835332106 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.850221558 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.833938262 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.833707992 seconds)
  done (took 12.794999369 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.835390008 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.835166042 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.834124826 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.834274916 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.835237316 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.834998762 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.83519877 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.835480069 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.837607131 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.833272216 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.835410323 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.83379394 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.834791745 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.833144291 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.833060221 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.832916094 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.834324801 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829913675 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.833535434 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83301853 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.981806273 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.834463401 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.83333305 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.834779168 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.835868658 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.834676941 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.841271018 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.833421197 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.833700023 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.841515397 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.835690153 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.835605692 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.834174039 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.838052828 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.83689775 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.834040384 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.836851881 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.835605464 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.832826725 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.835393675 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.834189012 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.833511377 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.833867404 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.835622413 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.836110458 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.837965583 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.838534416 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.842480395 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.835914186 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.834932506 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.836690743 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.83522042 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.835990681 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.83600684 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.835759074 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.839268757 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.839141545 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.837656894 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.835663281 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.835654526 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.835291658 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.836247309 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.837497438 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.839659028 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.843165658 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.836324507 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.836016886 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.838782805 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.836394475 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.834427411 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.836036155 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.833016121 seconds)
  done (took 135.083923737 seconds)
done (took 548.064681015 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.957324674 seconds)
  done (took 8.722002942 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.968220669 seconds)
  done (took 8.832223062 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.14258551 seconds)
  done (took 9.909903111 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.8720703 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.845477927 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.832953277 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.835827088 seconds)
  done (took 29.164309275 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.955928926 seconds)
  done (took 8.723471754 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.842367597 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.828202873 seconds)
  done (took 15.475602065 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.835506308 seconds)
  done (took 8.606721796 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.900388385 seconds)
  done (took 8.670738234 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.847837776 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.86187635 seconds)
  done (took 15.491525366 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.816943128 seconds)
  done (took 8.585286422 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.480545902 seconds)
  done (took 11.254413268 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.832774766 seconds)
  done (took 8.614430714 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.879018218 seconds)
  done (took 8.647402438 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.93568823 seconds)
  done (took 9.704517586 seconds)
done (took 162.161801558 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.833579999 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.832108654 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.831504725 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.833136746 seconds)
  done (took 29.097218256 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.872853614 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.871439847 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.874701973 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.883573253 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.876480849 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.873133474 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.865246415 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.864742087 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.882939999 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.876590077 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.874808299 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.874526679 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.873590051 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.86452874 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.875781294 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.874515464 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.88378942 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.87461386 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.865793414 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.875873306 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.839764412 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.883946881 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.875159093 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.841390629 seconds)
  done (took 46.688841329 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.040515558 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.912008188 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.994963314 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.892283002 seconds)
  done (took 9.609533123 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.890968471 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.893721639 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.905656069 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.944412662 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.966628847 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.902586556 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.865655586 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.86170229 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.847117989 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.892934481 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.968104979 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.887349876 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.994548506 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.840126182 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.027054358 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.840121151 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.840777172 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.893075947 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.944379177 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.956054302 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.841103771 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.893225294 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.895391742 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.889161037 seconds)
  done (took 47.452027214 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.838912112 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.847840481 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.845497396 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.839961654 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.840472405 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.839990163 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.846345974 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.841019702 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.860786945 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.840982563 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.839909924 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.839340604 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.839752435 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.841135251 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.839389547 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.851897671 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.854191107 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.841616392 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.843870941 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.847280279 seconds)
  done (took 38.651547548 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.834459628 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.688949816 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.18748856 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.090864309 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.836278361 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.836320036 seconds)
  done (took 31.246236836 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.853531259 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.845595793 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.84209177 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.899062628 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.975674372 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.847758643 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.842607577 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.851863148 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.88468177 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.904193873 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.857060487 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.866337938 seconds)
  done (took 24.24383411 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.836804684 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.837053339 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.837053033 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.85264762 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.852715404 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.849729179 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.85012151 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.835863769 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.854631175 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.860547628 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.848787735 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.854737668 seconds)
  done (took 43.945306533 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929065261 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.728370036 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.906368835 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.557025168 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.313988153 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04828226 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.349424293 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.180730145 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.845751817 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112590431 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.944272838 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941382644 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.094685396 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836246593 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.861630473 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.331618481 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133475554 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071247414 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865197318 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.626713529 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886921461 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.26876924 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.679889329 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896709847 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.050181923 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.975096853 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.105252584 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.801875908 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976190742 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875833947 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85103339 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.83984647 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115849073 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221340861 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939471493 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851075449 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.495433094 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.558758011 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.831245397 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.598757587 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.667820599 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.960698942 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849994347 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841418771 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.777518139 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269377013 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212253445 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.846202327 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.550941488 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.840919142 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.851448822 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928984936 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.845213517 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.658063431 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791637649 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.117941268 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.837277543 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847556872 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408898417 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.960146132 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311028034 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.810320909 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.035330675 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609392318 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236733302 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.988797036 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.843763854 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84520179 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779438171 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.029168572 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.892636971 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.98927576 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.860373103 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494451889 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154122385 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.976502894 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78570101 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133650475 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.544917452 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.809771676 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070459153 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.793720039 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778126625 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.701541429 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.776771045 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116972236 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880330952 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.485922598 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884379137 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181079841 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.854297071 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857721373 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849786246 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.067963252 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.409432812 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842926895 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.691623275 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987658634 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864045461 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.184198223 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780085982 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.844588206 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099249374 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.055112115 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.007758106 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.355297199 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999431117 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885596259 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.85667269 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.68916305 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.887824621 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.119524533 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901445218 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.95604047 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900650088 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.802579047 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150962867 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905727 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.943334571 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.905935799 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.968688213 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.181419947 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138374478 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910363745 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856198315 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847203869 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.626728876 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396063403 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.112697805 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.847439522 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.260699846 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.889431756 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.848239973 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7829693 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.462852681 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.947296465 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.816377334 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.071894112 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.724089595 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154343265 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781305584 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.993533004 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.958514676 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.068558153 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.502040379 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.924198245 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.102787946 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319871196 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.040081193 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88947399 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866653189 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936334345 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86992852 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.186720856 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133935069 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.850656493 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.850751279 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.63438221 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.843559508 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852151017 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.853955385 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.646659664 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130892835 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.869421015 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.857280271 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.739284731 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.861541564 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914759942 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852247342 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.858305547 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.399704399 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.611204275 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.860692375 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.465810874 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070990091 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857159709 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.623564229 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958108547 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.932090252 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.122794095 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906796762 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.782921273 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.558995713 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.542827126 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850902581 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.786751215 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.849322371 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859267761 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862402913 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.229829667 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131442497 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890952436 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.618083067 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.888177239 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861242802 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.855738779 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849556246 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.388746653 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.973375371 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32893778 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.891955039 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987363408 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.865047338 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.786300071 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.853053438 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853628675 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.850812105 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.808048351 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902763855 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.623250496 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227480529 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109359701 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.496973315 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864267726 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.648318818 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.905550242 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.872035701 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.715230511 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.716371917 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.944005715 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862929686 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.863081763 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.633450891 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.559740864 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415719097 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174077606 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159198546 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296262816 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.246355941 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.152005337 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191787752 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086724947 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.381578943 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911890074 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195672474 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796677649 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934854735 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.508731613 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205189533 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863847005 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.08202906 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243949496 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.634864572 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017477963 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063927084 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886682682 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.685271812 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811454145 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.057315849 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99339262 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.651204685 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050097053 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188526792 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.576359919 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.939130955 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.851661411 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.562403937 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935285704 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.567581577 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.214916012 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.300104057 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.867205503 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324056286 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.863356379 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.298566885 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208024151 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.090154405 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.969433657 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790089332 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.863611814 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.864924342 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.853136567 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.847749667 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.713090726 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.104941594 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863432436 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090495861 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.04930972 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147608961 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.758538678 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.859883389 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853797841 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155088756 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.564581666 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014777917 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.227622287 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.377103595 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857424342 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.788383755 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788355209 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.546511346 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.856206003 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.829351115 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085268801 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.043883613 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.840135161 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.282206151 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091121614 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109704467 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.86891485 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.131990665 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128973153 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.591779692 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882907588 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.955343842 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.570332701 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.961318149 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.124205027 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.091616362 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.655124159 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.087365886 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.907022178 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.67306781 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.854561637 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.071570549 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.124142993 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.84439832 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082554387 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.579258103 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.957762833 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174935953 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910524787 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.799161465 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.000376072 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.049927922 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86656126 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941188709 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865396148 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.867761883 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.867614262 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902227744 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.851105254 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.97668018 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.869742624 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945021117 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.976101816 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.386379555 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.861074062 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136268112 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222557421 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182390249 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914939652 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.856147564 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864365911 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791953748 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992593602 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.303575935 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133199029 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.989447063 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.156449323 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881947436 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.582095906 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.155247648 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096011908 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132441667 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.75335656 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860191808 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.888506089 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.125485454 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86911689 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.071125546 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091378063 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187214011 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32777912 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.027902851 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.220297248 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133673079 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.227948722 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859962729 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447836568 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.969493389 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.570832919 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.902294608 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.869295352 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119938605 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87021763 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244038398 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880251155 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.059162198 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.376472338 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.637133674 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14536969 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.846101587 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.919847541 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138604931 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.245887922 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169769316 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929192947 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870779628 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.574742325 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997040464 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.717914571 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.127975321 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859317449 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071970276 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.569015253 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.869762715 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139528312 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167328979 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.855521688 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.725376145 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867148986 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.868465211 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085139015 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133290064 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113577799 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86859504 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.862759874 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.675873649 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139074881 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920203809 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793680196 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.863978328 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962177005 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.10802847 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884113818 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.379415202 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.573271173 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162198754 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.780501297 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881486305 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299912153 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.230012712 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185450919 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.406687397 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090749309 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.421559005 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.751301189 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157212012 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.866932763 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.30534324 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162810628 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.867823672 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.413152554 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89515502 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.137694509 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181352228 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.971865386 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.63280318 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.830973684 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.087380561 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.459685981 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806628098 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871328813 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.92318782 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.863611233 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.990096463 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872953475 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.770519997 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.729433714 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.609356594 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36076312 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.872508286 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.857014791 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.620681466 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.437092243 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897743025 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008620246 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878634149 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.57576775 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.158076288 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.119122179 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.422527698 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.869297688 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.872056521 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863383591 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.798250223 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.062116583 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.248908107 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170721091 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.254094909 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.901928769 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870210669 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.083296782 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078786105 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.792072775 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00163446 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290693275 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899676832 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.598361061 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.547613192 seconds)
  done (took 1675.487567022 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.89190937 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.915407043 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.91058427 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.934339218 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.938281758 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.950215849 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.93270466 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.954815137 seconds)
  done (took 57.236674787 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.885800825 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.08566814 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.895838708 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.885771487 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.894604582 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.887629268 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.058846255 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.895344082 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.894491951 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.898102668 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.888060204 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.887681673 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.203271957 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.909278598 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.885893607 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.873379488 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.894916797 seconds)
  done (took 74.685455545 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.884322159 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.092806761 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.922895261 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.909258587 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.832968892 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.902572433 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.847332092 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.893794936 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.892155516 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.111866438 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.22178196 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.909504879 seconds)
  done (took 90.248404644 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.898825417 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.892309337 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.894566787 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.893463983 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.892770845 seconds)
  done (took 11.300632878 seconds)
done (took 2181.683816444 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.136751875 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.108040738 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.119564924 seconds)
  done (took 6.054839418 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.035981759 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.085761926 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.206720863 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.211711779 seconds)
  done (took 10.368734878 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.183145425 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.278027963 seconds)
  done (took 6.289201886 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.295182236 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.900684143 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.282875328 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.887156916 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.888727429 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.890346725 seconds)
  done (took 22.497938908 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.893316568 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.895358119 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.8917658 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.895133165 seconds)
  done (took 9.401243147 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.873042992 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.697895093 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.877229735 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.890380546 seconds)
  done (took 21.165722087 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.641323913 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.290461193 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.635821917 seconds)
  done (took 9.394076924 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.397564181 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.781465701 seconds)
  done (took 9.006143795 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.149223936 seconds)
  done (took 3.977899165 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.92094376 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.163115419 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.411325098 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.415343005 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.495317721 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.725103944 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.199637213 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.132722436 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.309573792 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.318183681 seconds)
  done (took 24.919268639 seconds)
done (took 138.510078198 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.269192329 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.133493251 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.090512025 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.238978193 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.125594512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.089989509 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.105787349 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.220017735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.733294716 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.732745233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.236700956 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.124549036 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.053767648 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.12765987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.056109863 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.126451727 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.110709039 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.285121402 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.931652659 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.130513531 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.115810258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.864212225 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.080112852 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.878232403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.116692002 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.037343481 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.455753494 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.129930474 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.086333749 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.461221912 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.037817214 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.281087892 seconds)
  done (took 173.297558187 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.891833148 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.892944073 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.890253234 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.891940731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.282326405 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.893230852 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.890963878 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.892940938 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.984477246 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.971155475 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.892370481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.281988329 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.891987786 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.8909338 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.895334798 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.892778823 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.195117096 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.898020292 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.906657348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.909415152 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.912521602 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.137554687 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.915432464 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.183311012 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.229325761 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.914095466 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.894561588 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.917076231 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.89797155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.901821707 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.904844467 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.894143557 seconds)
  done (took 208.670638028 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.892861198 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.892430378 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.892021213 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.89331115 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.894896302 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.894064068 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.897960718 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.892958743 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.492917162 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.492828314 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.900639999 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.89836298 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.899534855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.892654568 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.899422853 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.89519443 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.898161946 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.898395093 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.898858848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.903518576 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.904534438 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.650811631 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.90282283 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.660614191 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.899191043 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.901867553 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.89571333 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.905841603 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.908236559 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.908873001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.910417348 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.894445399 seconds)
  done (took 221.309954002 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.089787164 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.90082508 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.903207964 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.847181352 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.900874484 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.902428741 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.863540628 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.099556681 seconds)
  done (took 19.364264941 seconds)
done (took 624.474321194 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.334839404 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.181657965 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.073066193 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.923894698 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.146561786 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.960578237 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.921250928 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.982969812 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.644102651 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.985190766 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.594377776 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.934836211 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.688218905 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.94102367 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.043871109 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.976714067 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.459913553 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.549421135 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.090737703 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.964463793 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.092286898 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.877909634 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.995776436 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.675404257 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.706950299 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.922140779 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.093022859 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.465364494 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.935262825 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.07968851 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.678509384 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.295410676 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.930265184 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.918558582 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.977547091 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.953711812 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.249533808 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.929231454 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.040815842 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.686217744 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.978447937 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.530660094 seconds)
  done (took 104.24696915 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.893794669 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.892151378 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.89139151 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.891874483 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.892718555 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.891714116 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.891295939 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.89042851 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.892798036 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.891423278 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.891010856 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.891661726 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.892826196 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.892178302 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.890930661 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.89089341 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.892028611 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.893417253 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.890990109 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.891540424 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.892034567 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.893184902 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.905710198 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.8921605 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.893729072 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.893130627 seconds)
  done (took 51.05368168 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.905614142 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.070979969 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.153817271 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.920998154 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.906208625 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.907483867 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.923281166 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.910799979 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.908654857 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.907647509 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.000246488 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.911709816 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.926046234 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.158823698 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.91793671 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.906536874 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.906575766 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.905138459 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.078304157 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.919797926 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.923514107 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.911132014 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.92295485 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.919300334 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.909172427 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.907399604 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.908726797 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.372142847 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.91314253 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.997966731 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.948883802 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.929885234 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.325721149 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.168218507 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.958175709 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.916322224 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.905591077 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.99977561 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.912425462 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.906530924 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.925295265 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.910940349 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.167823502 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.398501555 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.91862093 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.907616932 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.385247542 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.007415833 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.945674967 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.916887395 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.161717899 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.920562403 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.910844717 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.909201058 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.944642151 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.919112057 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.908851383 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.229517401 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.918766237 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.923737136 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.91226481 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.909322664 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.084892998 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.916245785 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.070841987 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.915030934 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.915648326 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.908507665 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.162518115 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.921945057 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.409656287 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.917388422 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.908579089 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.997832054 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.072625952 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.406880126 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.916209867 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.086882423 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.338651271 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.927570732 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.91584699 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.35850911 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.931765933 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.913711901 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.907388192 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.909922525 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.90976861 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.953250403 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.92344237 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.330935008 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.407796133 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.239203815 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.928339117 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.92300231 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.906253405 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.224631234 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.915847213 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.90816041 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.152858178 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.415418442 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.916466286 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.917675121 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.396439607 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.920650293 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.928820915 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.916659476 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.166581426 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.919821694 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.954744349 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.910023332 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.914867243 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.912207374 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.927150336 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.916724054 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.909633191 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.381970604 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.017624441 seconds)
  done (took 236.580277388 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.905224775 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.911963863 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.90315254 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.903369325 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.904464949 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.908805019 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.900088031 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.899883537 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.908341431 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.90355404 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.904352222 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.90177645 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.902423785 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.903666936 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.943922945 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.908484334 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.516614431 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.907404105 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.904268518 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.901840241 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.550100899 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.905007048 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.902936996 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.903269803 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.904375657 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.907553018 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.912941603 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.937689503 seconds)
  done (took 168.512043484 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.91093027 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.021153914 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.92739867 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.935767427 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.914890987 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.910079959 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.931209554 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.922825146 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.91375713 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.907095123 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.908363181 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.966652763 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.923153003 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.006977042 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.94020826 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.938418691 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.010569457 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.917642922 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.90825179 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.90889055 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.940894634 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.904297239 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.969346947 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.028277626 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.924389443 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.021259907 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.914326445 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.910584466 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.908493593 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.026711862 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.921303578 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.969008013 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.936311531 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.927133933 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.026015079 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.024288797 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.014136134 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.941619845 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.912310746 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.909246685 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.909936515 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.898787079 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.022374369 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.926822817 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.911663067 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.014101812 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.926118458 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.912575984 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.921094346 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.908268143 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.923039215 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.929768604 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.971191265 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.039287422 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.940994002 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.935310884 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.935506562 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.19631429 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.925974138 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.009946949 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.901739789 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.024417771 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.930870026 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.898558491 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.909265185 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.914906019 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.937449396 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.941729117 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.013161215 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.916469201 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.008899919 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.946020526 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.914343826 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.91124059 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.912749192 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.028624052 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.027608563 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.944342266 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.948152876 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.941117846 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.904849068 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.910328141 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.901098122 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.926797701 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.915092844 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.025916626 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.030714419 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.91966823 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.913346022 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.912499375 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.915186145 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.940353137 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.029336964 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.94677237 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.008457483 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.97567286 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.984463751 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.923189546 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.92674325 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.914886724 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.976316194 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.925125595 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.924443658 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.242949982 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.986659446 seconds)
  done (took 206.810965039 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.372741792 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.970128326 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.968166094 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.223136661 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.328621451 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.834659672 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.960394155 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.960401967 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.984672671 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.144311978 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.031467741 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.982992376 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.950234449 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.935269705 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.95818626 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.980958615 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.973522532 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.303579619 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.078475275 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.055559756 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.938371299 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.224755896 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.287722753 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.353698277 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.996702984 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.301821111 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.649735389 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.101610439 seconds)
  done (took 62.703463018 seconds)
done (took 831.736567152 seconds)
SAVING RESULT...
DONE!
