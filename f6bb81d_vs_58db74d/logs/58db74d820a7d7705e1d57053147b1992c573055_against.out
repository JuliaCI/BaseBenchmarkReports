cset: moving following pidspec: 8722
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.332426417 seconds)
loading group "string"... done (took 0.591457097 seconds)
loading group "linalg"... done (took 7.740319051 seconds)
loading group "parallel"... done (took 0.174813136 seconds)
loading group "find"... done (took 1.192566064 seconds)
loading group "tuple"... done (took 2.148149193 seconds)
loading group "dates"... done (took 1.345203699 seconds)
loading group "micro"... done (took 0.248776011 seconds)
loading group "io"... done (took 0.939679787 seconds)
loading group "scalar"... done (took 41.823625025 seconds)
loading group "sparse"... done (took 13.859422336 seconds)
loading group "broadcast"... done (took 1.050279636 seconds)
loading group "union"... done (took 14.880617952 seconds)
loading group "simd"... done (took 4.853987792 seconds)
loading group "random"... done (took 9.759301222 seconds)
loading group "problem"... done (took 2.080932269 seconds)
loading group "array"... done (took 22.837996095 seconds)
loading group "misc"... done (took 2.096249212 seconds)
loading group "sort"... done (took 3.516558971 seconds)
loading group "collection"... done (took 19.411402562 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.489442646 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139538137 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.144627639 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.152157892 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185514263 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135077474 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153621745 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.10905632 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.901587448 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171170872 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139090767 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.490527743 seconds)
done (took 4.964012656 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.209265491 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080749137 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094159654 seconds)
  done (took 0.868484308 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.089000765 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.141746151 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.088343046 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073316039 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072032917 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089072417 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072437367 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.08907688 seconds)
  done (took 1.321428408 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078891226 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.075358881 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.091180265 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074435125 seconds)
  done (took 1.014914497 seconds)
done (took 4.207880349 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.71241857 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.256698971 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201413438 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.498664251 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.174512105 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.205460871 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.666901717 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.33618572 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.238527511 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099942578 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.126864721 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38946528 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112687297 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679707122 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.086300505 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12319528 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.171480694 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.45391108 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.092331086 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089663107 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.111916451 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.149515428 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.108765329 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081934236 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.176007294 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07564425 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.183047601 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.104940079 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.075663279 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.264857683 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.181332152 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693111978 seconds)
  done (took 10.655607828 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111317779 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134294649 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074589258 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.151136049 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133775356 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077384791 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09265336 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074976002 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.117960205 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17394216 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.111330355 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136724786 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.087710656 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.076839982 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.111375131 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.223975833 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11678246 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.09446963 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094794256 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084385996 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.133073294 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09111802 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10306026 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10266542 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.163392504 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200800669 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107533731 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121899214 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.077152749 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.108136857 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138706137 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.153080484 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073885358 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074513122 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171771277 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119836806 seconds)
  done (took 4.93347083 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.084196811 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18626384 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097619655 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16636805 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.106223854 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.09026002 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.13834134 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.074228552 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108223555 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257196604 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.183395171 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1593198 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.136719193 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110037749 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075067546 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095239041 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073682766 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.491187378 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.118952533 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149464637 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093333885 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098679063 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09796339 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36756157 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080122358 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.07137071 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094732325 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066477073 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15399503 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094621403 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.170049337 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.094540112 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096288745 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129138567 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190791443 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105103234 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.129197915 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093102023 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073688441 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.178247458 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085218933 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.094504605 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102011871 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132960333 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.1327094 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.087969159 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07477456 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.202916106 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.089070455 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089411332 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.948991045 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.175329796 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088058364 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071649154 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335495607 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114170749 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075161449 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.091318978 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282792339 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123009095 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09265683 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075424183 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07683955 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.094997374 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381464309 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.075728405 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.692029112 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077627041 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.086026686 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094417835 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.092066859 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.104083796 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100446937 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084040052 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094471468 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095197829 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076909549 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.093995329 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077292219 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.093765225 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095985912 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099003642 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07435861 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158731499 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.075172048 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.112231342 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122575982 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.078915569 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07386477 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128348935 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095683983 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075298408 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132177837 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.077043411 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112952478 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092863319 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.123221732 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09285946 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.072597325 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.153239451 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08771448 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105960404 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097365667 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124619471 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102203701 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076890882 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095181744 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074751321 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07358007 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160205426 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.075752802 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.093524558 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.077318451 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090197322 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.0889535 seconds)
  done (took 21.707646883 seconds)
done (took 39.079036005 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.337057785 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107030143 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106262373 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106071544 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102929754 seconds)
  done (took 1.530700654 seconds)
done (took 2.278948306 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.163411891 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110283349 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089382407 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104516284 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089473416 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109889702 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.126164435 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.105191747 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110583983 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087717269 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105147993 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088257268 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071136692 seconds)
  done (took 2.130175531 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089462451 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11060301 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077215804 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090252897 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090375408 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090711413 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105849021 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096739009 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106942457 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081664966 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072199814 seconds)
  done (took 1.756307377 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088440743 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091752825 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094308081 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088182959 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090642345 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088566602 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104475795 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093646438 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104907838 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08023201 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071145764 seconds)
  done (took 1.742603825 seconds)
done (took 6.364932318 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089224647 seconds)
  done (took 0.828969548 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.989007169 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.83222696 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.098310452 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.161323494 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.305454305 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.208952091 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.576572236 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130922888 seconds)
  done (took 15.259155331 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.125019548 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095487732 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.080100596 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093831074 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074638411 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091210252 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079130151 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.077097296 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.091604261 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075567683 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094664957 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075721947 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.094620906 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.0772238 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094967822 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078743508 seconds)
  done (took 2.199778591 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112761794 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111427918 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099860476 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085767453 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099029441 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080663605 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101431426 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.083222498 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095921859 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.08093129 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102034801 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.084496207 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100320944 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078750305 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100059004 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.085928127 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096093183 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.083151697 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.100594527 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099369616 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.085571984 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096720771 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.083332872 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101195794 seconds)
  done (took 3.097833746 seconds)
done (took 22.132424047 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145812003 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079478801 seconds)
  done (took 0.972083372 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09514239 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.1151618 seconds)
  done (took 0.966778526 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100726513 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094184447 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.129749478 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094183465 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096182095 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077457926 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125989495 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07811692 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095481291 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078608877 seconds)
  done (took 1.726418404 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.079313615 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081479909 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10159592 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115206226 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088100964 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096869502 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082955159 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098878104 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083519101 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092548919 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085561957 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112050603 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085789377 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.112539486 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100364972 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083061491 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104152535 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.081103339 seconds)
  done (took 2.439932028 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.075317839 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078856338 seconds)
  done (took 0.909708894 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07829885 seconds)
    (2/7) benchmarking "second"...
    done (took 0.075659 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09657116 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097045726 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076379855 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075218263 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092561526 seconds)
  done (took 1.348133161 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.479124508 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138861694 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263367986 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.080710836 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.116632139 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.326626285 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.074604344 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.099277513 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.080834775 seconds)
  done (took 2.45618412 seconds)
done (took 11.571256764 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086720744 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.097458995 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.126702555 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.450421021 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.11197151 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.075004757 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.153392715 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251660538 seconds)
done (took 2.11699611 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.138447133 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.597589327 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421057213 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.222747035 seconds)
  done (took 2.00264526 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.402489944 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.102945917 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085448248 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077058647 seconds)
  done (took 1.430891108 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073345351 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077945515 seconds)
  done (took 0.914687141 seconds)
done (took 5.248956645 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074242172 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.126442089 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075202421 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07275007 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.092581866 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.075408762 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.092460773 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.073191424 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07495868 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.0937824 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.076076659 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.092209905 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.075757031 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074873698 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090188811 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073055248 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092491282 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.072681603 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.184580283 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08960225 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075558429 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08949437 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072737036 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.072504905 seconds)
  done (took 2.877853553 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102328137 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094703415 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081890383 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099315338 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080064638 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09905303 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081308464 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093724138 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081707044 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095902844 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079212637 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.097444853 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077391622 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098043207 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078349489 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097646526 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.081820394 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094082196 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077998967 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097819892 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081495379 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094207473 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.079965999 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09941097 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078992857 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097056123 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077606571 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.093648755 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081130944 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097805225 seconds)
  done (took 3.437852052 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.079087304 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072697685 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092058076 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.081335205 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091181899 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076938982 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.073120489 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091556523 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.074071279 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090920273 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07488401 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.072881605 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.09148214 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.074820611 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092529282 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.076733539 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.103956868 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.074637451 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073488295 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.092790347 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076750972 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091359338 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076721647 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073126849 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092298205 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072810787 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091208632 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073310986 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.07340782 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091461528 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.076865263 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094763044 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073454076 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.080239466 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.095181662 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.073676286 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094984043 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073386379 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.074677076 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091463195 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.073207468 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090745101 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.074184842 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.080497251 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.095451452 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074441432 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092022907 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.075477489 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.074375267 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095492906 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072876503 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09237003 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.075983683 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093520825 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077831723 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072966997 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092817617 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073368569 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092333694 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073460217 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072913368 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091154543 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.076157651 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091904367 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.089383116 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.080466021 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091790786 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07557003 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095387472 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07586 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093598884 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.087941596 seconds)
  done (took 6.726331723 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077602579 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101181137 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075449471 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.074768346 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090381347 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074451877 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099081116 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074308673 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094033017 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091287482 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092595936 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075833325 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07570659 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096489739 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074048136 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.094111246 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084085868 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090544068 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.073978908 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095753147 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074506419 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098464958 seconds)
  done (took 2.655771356 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206434237 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100018903 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137372193 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089153049 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110625033 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.089201662 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098506994 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080952104 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099239432 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08430047 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101463012 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081592849 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109966881 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102442712 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08405967 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102109101 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08049785 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101678815 seconds)
  done (took 2.633871278 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.086438167 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093478414 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097541654 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095971252 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.077362969 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09840031 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083243652 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110948195 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078827666 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09511643 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086883611 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09753511 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.079488934 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094950789 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079605329 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076543128 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098247857 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077148437 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104648043 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101222812 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084005073 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106183514 seconds)
  done (took 2.781428929 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090971483 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097088533 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097299942 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099659712 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075993826 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096320964 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.083842904 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094937402 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083997357 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.078678735 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095689419 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07829644 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.100457074 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076594182 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100931233 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077017154 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098054384 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077038494 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097273999 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07622527 seconds)
  done (took 2.554813895 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114759587 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110018948 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092737687 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120455149 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092161835 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110375564 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12058155 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091706769 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109439549 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105387096 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110102426 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091808378 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120343016 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116755034 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091403702 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122722385 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101748611 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120275562 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112899179 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091831567 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1226483 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092252596 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119935574 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092499645 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11066237 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092190667 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110616776 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116947912 seconds)
  done (took 3.788024557 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074958932 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075303644 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093138239 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.074110658 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.074296706 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.093234724 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074962912 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.092908413 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077129174 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074018472 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095396451 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076617845 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095357006 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077334964 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079497073 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095148724 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076741489 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.092620387 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074068236 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074917571 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095457249 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076452675 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095016124 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074442649 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07381979 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.095080975 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074913144 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093373121 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076679707 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074186328 seconds)
  done (took 3.253679405 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083159476 seconds)
    (2/2) benchmarking "in"...
    done (took 0.09863988 seconds)
  done (took 0.968021214 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072761516 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110762802 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.074282578 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080344833 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101436437 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076829896 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105523295 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082590863 seconds)
  done (took 1.487601757 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.093026364 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11455871 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082745822 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107811673 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094716055 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112277049 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134003138 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102100883 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.084063973 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09503876 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.09371599 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096600219 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.08403071 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07726673 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.102912963 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083757106 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098145399 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088763207 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103887374 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080582296 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101948868 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090312801 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09921323 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080553156 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078997845 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107834752 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087632334 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104261144 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081632029 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106154598 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.083371446 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090529818 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082296931 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101615926 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078781632 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113563417 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090551928 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099583613 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.087068723 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083707659 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105963014 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.07621548 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.10253235 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.083951114 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107658424 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082507223 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102192309 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.075561449 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.093876601 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080733987 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076145284 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097088188 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.072408845 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104684322 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.082510075 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110321889 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.0813867 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098665815 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081057522 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099788575 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.084257535 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.079908636 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099037298 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.0812679 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104826745 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.082420776 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104993783 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077033575 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.090837654 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079910966 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.087324157 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.120274981 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107052814 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083631809 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083404826 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098899554 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081630788 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103505351 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085107731 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105570858 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082542414 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104136214 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085722738 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096874285 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08099692 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104211019 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080098682 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.080492782 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.094870812 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093625576 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099353315 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079314934 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095316257 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.087982008 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.100617263 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081840317 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.075524032 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104382522 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071972228 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102512713 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084020226 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097652615 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.087504637 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102403743 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084880445 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.105233888 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088035762 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077976578 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.100862441 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.074642741 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102379768 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.076818246 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.104881864 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.073024373 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081265691 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100034276 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083371816 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.104968047 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080467581 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101948149 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086357168 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.104420603 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080005844 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094077873 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.081820136 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083158644 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106051763 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.085790457 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099954133 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077200033 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096405913 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.082804143 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101816353 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08339558 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101514404 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081476478 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072833139 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098781413 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.08415531 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105430719 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078435336 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097646858 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.083426526 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.098589605 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081610146 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.083797652 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.099459454 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077995592 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102644554 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080569911 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096080304 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087586837 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.100358346 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.080645202 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.082295087 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10678093 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.080938171 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102534039 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081222755 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.103434841 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083811465 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.097117709 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078266001 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080273288 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108052916 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.080096698 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095616795 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.075415858 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104209901 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.075930898 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101279999 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.07756029 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08057191 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103138574 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079620889 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101601017 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080304517 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112932519 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091782783 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104169957 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.084261431 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.10871539 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08306249 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.100227369 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082334016 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084789968 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102991369 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.086768504 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.103732412 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085343511 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.100747612 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.075448662 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10439392 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086172572 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.078198241 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098959934 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.078015581 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102090377 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.085503748 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.102581162 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084478758 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100377257 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.079116724 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087855383 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101792306 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082030889 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.096989184 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.083294967 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103343078 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.084421903 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104322585 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.08869654 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102424397 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077806424 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10680702 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08033267 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.08494011 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096753908 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.076038806 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.097667386 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084520496 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.080884924 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101307474 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.072635493 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105502865 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087450048 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09833233 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079072142 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102454756 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088585555 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.099867402 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082616018 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.082954299 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104292605 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092247098 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.097672386 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.082424601 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108167699 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083540105 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093112252 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.084599949 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101089935 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.078714595 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081925388 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099665317 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082352608 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104904174 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083808407 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092421374 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.082096582 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081549056 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096821134 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07809655 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105037049 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082776457 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100340401 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088873183 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10437365 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.084729908 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10243313 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082339526 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103790395 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084898647 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082584684 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104344846 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08211016 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.097777285 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.081981218 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.09741472 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080550351 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.081035262 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103877338 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081837758 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104388635 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082312763 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099399736 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08177491 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103486168 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080535083 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.079294644 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.098765977 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082867901 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099925768 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.078841564 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.101761041 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078298219 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106129354 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083730931 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087563531 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.099719727 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.075917004 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103938484 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.082349507 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.1043059 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08491199 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104438246 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.080777938 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.0828988 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101402653 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088673941 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.105850186 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088852742 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104862685 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079801564 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10233357 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.079190998 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.080651241 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.09790973 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081465046 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104654109 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.079086517 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102233241 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.084358559 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.102191876 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.079431157 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080494774 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10400709 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.079655004 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104550968 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.074392637 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.098744635 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079106714 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083808068 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107498541 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084238994 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.098507472 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082382321 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105136697 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082001206 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096206015 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.087499637 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105757942 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084715313 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087724042 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099502918 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.081345187 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.109275317 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.073862142 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101192877 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080282753 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.07686255 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107822805 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085107229 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.10764638 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.079948427 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.098523488 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.077301096 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10568615 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081702112 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.073756548 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100283605 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083276875 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.098266291 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082512827 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10403274 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.082833322 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085681777 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107263592 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.082574856 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.100776073 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084710927 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096077686 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078948259 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.098833136 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08323028 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084958741 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.096939445 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.077107251 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103487453 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.081235249 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.099483426 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083326972 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.081280456 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106877042 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083982425 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.102538992 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088684907 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094250421 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.082394016 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103660866 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083268405 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.07921596 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.103659044 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083246099 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105104368 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.087210094 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103779702 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080399673 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103803793 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080797721 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103696327 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083636566 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083671533 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.099484741 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08571684 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10845101 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081585813 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103088021 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079891485 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.080315225 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105531459 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085240756 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102835895 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08779722 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099584611 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.081380099 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.106280972 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.084441656 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1036279 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0850365 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081642522 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106704562 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07892747 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108403161 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.079917939 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105351183 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081344341 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.097425992 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083931766 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083144458 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102474012 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.084547059 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105403775 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.078881447 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.098990025 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081173907 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.081580691 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108607116 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088436131 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102671137 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082806016 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099099735 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.077369229 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104852948 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.077621906 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.101787267 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.083452308 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086011468 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.102265605 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.080190362 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10287751 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.088162313 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106861163 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.085444096 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.097976366 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.085081364 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105137734 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.082542376 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.081633912 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100634401 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086930647 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106219721 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.081512613 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.09952966 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089713113 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.10440933 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085679684 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.081447839 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101598925 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.080907722 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09899814 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08659873 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103682226 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087294175 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.102904847 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084467946 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110919171 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.078059774 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.080641163 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109303701 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084896241 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107807782 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079305478 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.101619948 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086434985 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105961777 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.076806022 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.079071769 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098118867 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.082657818 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.09950192 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078769636 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109956897 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087266284 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.102740735 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080838905 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080703696 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096184688 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076805581 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.097271875 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084411424 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099642795 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.087559605 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.076472924 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.096670785 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.076702574 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101508532 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081317535 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.102373459 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077463095 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080053818 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099651501 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083613228 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108161398 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082829249 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105323881 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085309739 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104170048 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082011299 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109957293 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.07786224 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.085106818 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111564916 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085818555 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101685295 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086690108 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109882537 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086189141 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099597471 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086511446 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104069221 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.081495804 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.086325075 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106906076 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095295724 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104834671 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.080497664 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104035629 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.083741346 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100729056 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089245014 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106969415 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086767046 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106674428 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.083384267 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088437337 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104477294 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086831752 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103400591 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.084284288 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104110374 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081199028 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.083234349 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.10078847 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086909803 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.107172412 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085219158 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.107961923 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080453203 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111279538 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.089166636 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103402466 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.077375739 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.080288288 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10183557 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079929517 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106417325 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079707547 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10335809 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082910596 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.08416695 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102647722 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088044439 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103732033 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087386371 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104888348 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.075399801 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.082311472 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104466241 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082529451 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098666722 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08596779 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.110412818 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087242334 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110546112 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.079070054 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.082546297 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104114272 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082149043 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099839023 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088373487 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104243756 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084512505 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.080485462 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106264182 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087247894 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105363067 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08666388 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107879054 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084104294 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.107955731 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088932806 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.098760062 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.078838783 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.087665331 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103622429 seconds)
  done (took 55.446573488 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123823207 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10349087 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075374274 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096030585 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120110527 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07759413 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075665428 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101737403 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081337975 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110224309 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076752672 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096640333 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.096854077 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12470534 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119216288 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109953559 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074118556 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100313329 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075979345 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08167374 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11744353 seconds)
  done (took 2.873137271 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099889035 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112768795 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089382466 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114632657 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103787449 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090613355 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109434525 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11018806 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093844941 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105123973 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114263787 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090980307 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.106972875 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.085509718 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107497438 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108989657 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09466112 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106829484 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.092188101 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112312187 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110332321 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.092325366 seconds)
  done (took 3.087491892 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08703307 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084401958 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.105752698 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.076235011 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105421514 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.076468292 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.110838395 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.079022116 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089232412 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.100433365 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080065515 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100294176 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085141939 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.076195823 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101089444 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.078914535 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151828427 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109677995 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084874642 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106991138 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.079262564 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.104528883 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.079502656 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080862232 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101410091 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.094789076 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106850025 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085796931 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105455076 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.080230071 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085622105 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.099910653 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.083472052 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102455866 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.080859933 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080491551 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10641235 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085130209 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.099866097 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082145754 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.081159761 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102117613 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086480098 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104066623 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082466894 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.099837778 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083588505 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085069012 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097985806 seconds)
  done (took 5.376109661 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.110065592 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.15311186 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105256095 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145217839 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.098275697 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115686037 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.084928199 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123192382 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100100445 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083981891 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120838503 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118943389 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084411178 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.111958788 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088854495 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106517133 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086063176 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101685456 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090266493 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101973646 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.089784336 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.10979064 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119474371 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.095472371 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110710948 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084241995 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101769817 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.09057419 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117256845 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111761675 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091210909 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112723428 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121066371 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087280344 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100917722 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08759608 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121704366 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.0857091 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108325051 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.079786602 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108620039 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090406902 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109435046 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120922152 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086294709 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107748591 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085746567 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099369014 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.096577957 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.108589547 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095472973 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11877158 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110711295 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086118796 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110846103 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.09895732 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105823523 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083322717 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109633769 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11750056 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.079451013 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089438533 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120715733 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.108481338 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093680704 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118432512 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108490517 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090327511 seconds)
  done (took 7.997517076 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109698333 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110293601 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101153252 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122212408 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111078183 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.090593608 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11026311 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090160707 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110636661 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.097508452 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111208464 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159695171 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088215507 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116280625 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.090952416 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111354976 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091000142 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110695821 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090287119 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111593427 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110922777 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101082778 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111407384 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.099543953 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124869436 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109292342 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090517035 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111435557 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100670542 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110685665 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124275878 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091323674 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111570242 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122729231 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.10304886 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111896538 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085224912 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111508633 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090898248 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110998896 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088320539 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122548751 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111466438 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088633516 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111229368 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090223478 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122432778 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12427585 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095908762 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117722477 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.090164156 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12143464 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112379074 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090810597 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121193109 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128778569 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101873027 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121336783 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111678984 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101407412 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12156869 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128789186 seconds)
  done (took 7.540016039 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109581035 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113231486 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119280265 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074804092 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079574381 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108229145 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079569407 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.098231546 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112789841 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093147627 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117408634 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086571815 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111445613 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114785473 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086422458 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111967345 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10700199 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08626874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112479877 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087195227 seconds)
  done (took 2.856145742 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087660546 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11959555 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.079944682 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107453082 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.083007763 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106576319 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081251997 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102259768 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079814717 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102943243 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092310014 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111915694 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080417447 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106525697 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09050564 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10815598 seconds)
  done (took 2.389927335 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099529441 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119895251 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.102854271 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.106483764 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.076983478 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105626219 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.082446744 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.096057114 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075867809 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.115408009 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.086198186 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106062179 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082871433 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100356273 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.079935027 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106716102 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075644743 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088519063 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105114489 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.107149631 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109690185 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085004045 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106685033 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.084217782 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105904946 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.085992999 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10952987 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077294221 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100699748 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.084049495 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105928137 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.090348312 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100007742 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084177911 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098028266 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077400068 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10386008 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083347074 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107050026 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082635458 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.080862 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105535141 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085996761 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104301757 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.078993379 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106629158 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077930637 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.11047186 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.085435087 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106395373 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086047945 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11166738 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.089665505 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115595954 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093220675 seconds)
  done (took 6.092086045 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094274841 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106090933 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075234469 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081264089 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106533501 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.083717322 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10798926 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.080974942 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105263059 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077189281 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102636432 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082414342 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083954265 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105181524 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084075195 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107418278 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078834197 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104445261 seconds)
  done (took 2.52380036 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085044449 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080787224 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110945398 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07993856 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103189548 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082805925 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099400672 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.079023902 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08077328 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101877935 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083451763 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105564011 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080639915 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.105204837 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083290768 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104111672 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.084215214 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081497737 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104698089 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079404768 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105797685 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07849339 seconds)
  done (took 2.855086131 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.111465717 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.118936747 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.086186414 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.204339134 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.121550715 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.103484497 seconds)
  done (took 1.60517145 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104144623 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135833309 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081002508 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103174574 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092882002 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104882908 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084367844 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105306055 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095369274 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118237314 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104477309 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095730785 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117392532 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114892489 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091584727 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114469184 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108702209 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084687848 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082762214 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125023622 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104379674 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096087848 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105952671 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105720624 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084920806 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1156382 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095568475 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120210087 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104087357 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095892228 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115036865 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086481579 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117850676 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118148157 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084131516 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122341186 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109512253 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108788584 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117012017 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120432921 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087089571 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116619307 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099546473 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115681205 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120171805 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08541899 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115658399 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085521373 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108403342 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133483002 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092213776 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1176648 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112297675 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097717123 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119594584 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135084081 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12118166 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096353343 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11646848 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121729209 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095981071 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115223923 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118978561 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097338471 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116187285 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119683929 seconds)
  done (took 7.920180732 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117336748 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102208432 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084913661 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119940218 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116339788 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084822293 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107749437 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085178014 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106650408 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082507739 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152922426 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106380349 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095146459 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116841066 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105561369 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086283313 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108614793 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095371719 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10527104 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134692727 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084652203 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117826256 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116143062 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095055555 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119171056 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112006703 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087266223 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10930262 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088922932 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109735411 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115882573 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085740076 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119439559 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084728687 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120994473 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088192441 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10762038 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115947493 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088062576 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117182635 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098241313 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127576257 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109077523 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089012483 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123953975 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11000478 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089805202 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106757312 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088070961 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106735025 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102023003 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123661876 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124113943 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120789776 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088585615 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110278737 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089078542 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110207192 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089262117 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117089744 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098598213 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111315978 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136937253 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088757087 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110974277 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12148981 seconds)
  done (took 7.857523013 seconds)
done (took 150.350104348 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213189272 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.200584464 seconds)
  done (took 1.276058783 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.094779854 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137399244 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097481863 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168589793 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08015733 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.112859092 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13328204 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09472965 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.101022957 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.080258023 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101792682 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.081966925 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.146362553 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.10100468 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.080211204 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103105408 seconds)
  done (took 2.583730072 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113030347 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.243017862 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.118419379 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.078185493 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106100249 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080153658 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.077600767 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.109970541 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.081383892 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.100623724 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079987643 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.101962832 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.079920161 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.081010518 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.102047912 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079860849 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.102278442 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08046664 seconds)
  done (took 2.686691784 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107333924 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144900412 seconds)
  done (took 1.123433942 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242970074 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.155553112 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.222402259 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.359823951 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.181258817 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.327981561 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.174478798 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.173388447 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.169962964 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.17093749 seconds)
  done (took 3.042605752 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.114103971 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170180814 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.288300712 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.149609262 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118796161 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094447178 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14998106 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.120181111 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.101685743 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122740157 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122483164 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.086466419 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.132040369 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.111917443 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.09002709 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.109838254 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.334703537 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.108908237 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.088733694 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.108296943 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.111347678 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.100869422 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.089532864 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.108348913 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.121264055 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099919258 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103068763 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.079265144 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.108660532 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.089010764 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.108963857 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092622962 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122412264 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.144496808 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.113103918 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.144598914 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.088426559 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.107830043 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.088705775 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.105701262 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.090619279 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.110715805 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.095197438 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10778081 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.079659873 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.108065731 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07926656 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.079576598 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10821189 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.087796204 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108836732 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.086472475 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.164642624 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088177684 seconds)
  done (took 7.112286801 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.789568911 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.146858301 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08549291 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.865578109 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137580469 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120130707 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.758512416 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135176649 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224184041 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.770680211 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128626052 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.116190244 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.196639723 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.220189813 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925492949 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.299759692 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.670725477 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099139046 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.142206088 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.143517223 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089136236 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130649155 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122905287 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.444097003 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.085101995 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10567032 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.088821518 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113545282 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.150431049 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084709055 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108028438 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167864315 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.234289346 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.194111501 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.085251907 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08300914 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105537906 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.157305371 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25858181 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.184538155 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.168527714 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080143207 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.105678865 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.092638957 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124264832 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.079806413 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.174275314 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.163605494 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.159639053 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08657342 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.113794258 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112089973 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.092664068 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.152821138 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103299431 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.283570526 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.300645942 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104757081 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091399769 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120426148 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.231482916 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105269011 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.1911303 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131741664 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.202421366 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083425577 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795105127 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.15659895 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.083465007 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11128757 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.089608215 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110133436 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.091782953 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159997401 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.382419608 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116781579 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.086797691 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104072707 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196115315 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083844064 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105449156 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.154376501 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085072304 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111919224 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.095750671 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115083811 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.158054785 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.218518269 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.115935856 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.08936562 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.110057026 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094309175 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.1078544 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20284981 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.208523252 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.150625917 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.200208115 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114718736 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.153303933 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.156030326 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091120453 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.181569105 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089658142 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118723466 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093568643 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.207778283 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133055668 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084043125 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108113944 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.088830152 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136922927 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085661001 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11115444 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.156921895 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.474969354 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.175644445 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.081053353 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086558929 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113239002 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.152908328 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11032804 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.227369869 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113540351 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.156680675 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089452593 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.102797761 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.089702148 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.152628415 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116596793 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112390099 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094563879 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112839035 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.219256158 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186627368 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117295288 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210291431 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.171734736 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.112057512 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.16229991 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111162157 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.15793459 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091648429 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113297488 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084520408 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778315083 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.094324673 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.112140171 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.086661495 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186216312 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10481609 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084860449 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083317762 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102478876 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.744675956 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107940355 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081348754 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105654188 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089475561 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11246409 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.08842181 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108876283 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.151707051 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219319494 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093196445 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.111793194 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083991795 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.150631536 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.106848753 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084281972 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105395391 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084467894 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112693846 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.086532433 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084249179 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183042092 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.149133421 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.187242959 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.586692698 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083747754 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.106383824 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.196344396 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10619479 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.251307597 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112271078 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.214198905 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155469978 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080767335 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.300137232 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.157617753 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189793008 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086231767 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.159901552 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102752159 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.088702718 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.174137607 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083863432 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.088500457 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.169768032 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.095843624 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.116615062 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.899069503 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105501366 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.216532347 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.080422821 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.158278442 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10733755 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1135726 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259088214 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106286402 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.099025608 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.152139239 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.109010438 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084021659 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.710316277 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084245708 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115434792 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089833445 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.213584049 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.155706917 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112185355 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09012515 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113982782 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.152577579 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.200227933 seconds)
  done (took 41.119805605 seconds)
done (took 59.814439152 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.255816429 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211064122 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.264997004 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.162666167 seconds)
  done (took 1.886966826 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170680904 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.120734171 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.139459062 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.078919563 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.147024241 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.101090238 seconds)
  done (took 1.653017576 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.339992979 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.289599945 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.212566415 seconds)
  done (took 1.740441805 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.24147878 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236734869 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.460749195 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.312851022 seconds)
  done (took 2.249743477 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198495949 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096510663 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.117775125 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110014445 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16336631 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.202039623 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136508002 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.144265194 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102417206 seconds)
  done (took 2.214825695 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.15862117 seconds)
done (took 10.806166498 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.162925952 seconds)
    (2/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.271874343 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.275407257 seconds)
    (4/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.188755866 seconds)
    (5/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.143953989 seconds)
    (6/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.113997031 seconds)
    (7/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.090292833 seconds)
    (8/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.245820303 seconds)
    (9/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093232873 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.098957933 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.154147094 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.208675527 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119536097 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.118365032 seconds)
    (15/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.213832188 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119640477 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112970524 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.230226078 seconds)
    (19/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.18455515 seconds)
    (20/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092230977 seconds)
    (21/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.118541923 seconds)
    (22/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.200730348 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.128961718 seconds)
    (24/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.118317402 seconds)
    (25/309) benchmarking ("sort", Float32, false)...
    done (took 0.172753692 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.109182654 seconds)
    (27/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113368194 seconds)
    (28/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.168701371 seconds)
    (29/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.103836022 seconds)
    (30/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.204386627 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.13221675 seconds)
    (32/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.119531235 seconds)
    (33/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.077942387 seconds)
    (34/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.19375168 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.114353161 seconds)
    (36/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.087111837 seconds)
    (37/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07914559 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.267924467 seconds)
    (39/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.228101171 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.106656783 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.265610556 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.188168228 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.115068758 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.088545577 seconds)
    (45/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089925559 seconds)
    (46/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.209118048 seconds)
    (47/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108749437 seconds)
    (48/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.108535768 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.105751114 seconds)
    (50/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.220662766 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134309839 seconds)
    (52/309) benchmarking ("sort", Float64, false)...
    done (took 0.171723195 seconds)
    (53/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.187639358 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.169576164 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087947216 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079731755 seconds)
    (57/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.112892487 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.130256426 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.11446493 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08078763 seconds)
    (61/309) benchmarking ("sort", BigInt, false)...
    done (took 0.218925816 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110695439 seconds)
    (63/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.160161946 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.198074824 seconds)
    (65/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.113530188 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.085410302 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.102440789 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.107863864 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.133913142 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.110788011 seconds)
    (71/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.211714915 seconds)
    (72/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.106476874 seconds)
    (73/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.13247168 seconds)
    (74/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.197423634 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.131182216 seconds)
    (76/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.095218588 seconds)
    (77/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.148964981 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086722804 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068113185 seconds)
    (80/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.209884481 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110123561 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.197810867 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.219535617 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.151023639 seconds)
    (85/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113403118 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.095302495 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109188823 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08166299 seconds)
    (89/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084598987 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.133667551 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.080062529 seconds)
    (92/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173954481 seconds)
    (93/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.115820577 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.152928941 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.092363181 seconds)
    (96/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.185584404 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.088451791 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.187304171 seconds)
    (99/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.125152643 seconds)
    (100/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.156542683 seconds)
    (101/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.19625086 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.105602814 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.092182623 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106661451 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.095065807 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06876 seconds)
    (107/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067665982 seconds)
    (108/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169989765 seconds)
    (109/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110137997 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.141726082 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.130740695 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.19139396 seconds)
    (113/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068938139 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.088582271 seconds)
    (115/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.106054325 seconds)
    (116/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.209737819 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068170273 seconds)
    (118/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.087758798 seconds)
    (119/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.132782414 seconds)
    (120/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06967074 seconds)
    (121/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.117085259 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194967789 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109445532 seconds)
    (124/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.093564686 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090306539 seconds)
    (126/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067804097 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.093238713 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.191436607 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068614692 seconds)
    (130/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.105465137 seconds)
    (131/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.118266053 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.182581262 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.091607741 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10439529 seconds)
    (135/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.088590904 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.111535293 seconds)
    (137/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067495887 seconds)
    (138/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.08346899 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.109349415 seconds)
    (140/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.236970873 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08816943 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068771115 seconds)
    (143/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.157300376 seconds)
    (144/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06889785 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.105151781 seconds)
    (146/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.068675103 seconds)
    (147/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.190722845 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.080435997 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.092456381 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.080984212 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.112077033 seconds)
    (152/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.071108347 seconds)
    (153/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176902805 seconds)
    (154/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.162561372 seconds)
    (155/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.131998493 seconds)
    (156/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.200613819 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.080293259 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103978065 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.088138644 seconds)
    (160/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067628061 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.104916858 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.100938096 seconds)
    (163/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.091036611 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069047025 seconds)
    (165/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.178507401 seconds)
    (166/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.09321359 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129999298 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069201885 seconds)
    (169/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.174130263 seconds)
    (170/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.082374444 seconds)
    (171/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.09311119 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.080735777 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.090743775 seconds)
    (174/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.103940557 seconds)
    (175/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.068645598 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135011094 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.080379941 seconds)
    (178/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.14980693 seconds)
    (179/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.088951573 seconds)
    (180/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.103150439 seconds)
    (181/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068721737 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.082827964 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.091723424 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.068413161 seconds)
    (185/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.079460907 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.093704587 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.106560278 seconds)
    (188/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.105432918 seconds)
    (189/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093594777 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.104755092 seconds)
    (191/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069041113 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068735847 seconds)
    (193/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.174134874 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.080672065 seconds)
    (195/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.104112473 seconds)
    (196/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.083181294 seconds)
    (197/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.239411203 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.18198941 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.1190606 seconds)
    (200/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.162227377 seconds)
    (201/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.0692609 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.09252261 seconds)
    (203/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.087327524 seconds)
    (204/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.117000159 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.092271983 seconds)
    (206/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104178856 seconds)
    (207/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.080451411 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115344089 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.161756418 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.129632307 seconds)
    (211/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.127673364 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.110632334 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111002952 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10436866 seconds)
    (215/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094273555 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.156626068 seconds)
    (217/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.091028608 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.105103828 seconds)
    (219/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093905338 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.079424603 seconds)
    (221/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.162276056 seconds)
    (222/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.087267722 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.196626515 seconds)
    (224/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.180902787 seconds)
    (225/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.068153095 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.09298537 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.193519482 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.090989775 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.088718308 seconds)
    (230/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.123255935 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.069083439 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.233820381 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.107875924 seconds)
    (234/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068952049 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068911768 seconds)
    (236/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.102778733 seconds)
    (237/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.078489704 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.083466833 seconds)
    (239/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.104367191 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.082446034 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.124791871 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080322864 seconds)
    (243/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11118232 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.167038713 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.092228689 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069167876 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.068260703 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.222509035 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.096289234 seconds)
    (250/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069764592 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.226192155 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069601731 seconds)
    (253/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.102335755 seconds)
    (254/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08102547 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10646206 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.174735982 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.228024367 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.105455496 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.107665325 seconds)
    (260/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.103114876 seconds)
    (261/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.091952689 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.070752006 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.130199941 seconds)
    (264/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080223159 seconds)
    (265/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.106926013 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.101919719 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112330645 seconds)
    (268/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.084844849 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081318156 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117182555 seconds)
    (271/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.069520831 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.146250416 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.102815648 seconds)
    (274/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.107275934 seconds)
    (275/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.084425775 seconds)
    (276/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.105208672 seconds)
    (277/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.091807502 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.080145172 seconds)
    (279/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11240983 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.083310012 seconds)
    (281/309) benchmarking ("sort", Int8, false)...
    done (took 0.18996972 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.113725364 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.13150898 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.1074455 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.08005103 seconds)
    (286/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.094328233 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080239276 seconds)
    (288/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.072072989 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.114265643 seconds)
    (290/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.078837482 seconds)
    (291/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.10650063 seconds)
    (292/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069168421 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.081468883 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105145116 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131252688 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.104238164 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070343771 seconds)
    (298/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068922173 seconds)
    (299/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.093742545 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.104898544 seconds)
    (301/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122493878 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07969527 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.091850492 seconds)
    (304/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.086181977 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.084835573 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.139948753 seconds)
    (307/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.106562694 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.147849607 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.10753704 seconds)
  done (took 38.573956885 seconds)
done (took 39.480893959 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094536445 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.133203349 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091056316 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.109087821 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.118128922 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094890784 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.113882024 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.092466777 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.117965531 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.096314939 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.11776399 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072415592 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.115471226 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.093030229 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.11571064 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108956274 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117424131 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.088189267 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.083615179 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.104235867 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.084271395 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.105468706 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.08281079 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070955849 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.116156499 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.08903084 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.111509819 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.092511629 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.105341645 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.081388321 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.080612358 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.112946297 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.081105572 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.118932873 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.087549373 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.108877283 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09318141 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.090160816 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.106914298 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.081541622 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.113474591 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.081255287 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.08695088 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.112967643 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.082600658 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.104127119 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.085192952 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.11821795 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109861586 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.107307369 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.090027158 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.091085847 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.115403471 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.087208174 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.104717526 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.085015403 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.104596833 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109732282 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.109213068 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083410662 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.088817394 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.113392585 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.080365099 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.108960463 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.085477192 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.115746026 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093220763 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.079956626 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.116137311 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086596999 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.105069085 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.08529696 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.079786243 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.106170908 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.090555234 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.116722839 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.080521526 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.107034895 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.088731716 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.087169921 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105017642 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083263274 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.107250145 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.083284684 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083329662 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095848415 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.080459366 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.086849102 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.104358533 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.0853853 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.111769492 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.088090034 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.106514367 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.092573622 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.080394994 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.10561897 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.082237479 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.105504664 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083690846 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080178193 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105706402 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083782996 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.114673128 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.083293172 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.082429863 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.117842799 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.081646757 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.111544048 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.080443954 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.080625409 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.121663374 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.091361666 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.105453657 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.084039631 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.104930804 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.083509586 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.080230041 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104997849 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.081423727 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.105086979 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.084011751 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.081113422 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.107554544 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.083055837 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.119475677 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.081701252 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.080671704 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107900095 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.081639917 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.110929764 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.082643096 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.081199075 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11016349 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080663608 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109507947 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.081994287 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.08288111 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11057285 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.085773993 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.107127819 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.085542651 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.109931301 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.083585467 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098404925 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.104538682 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075712511 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083356028 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106978515 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08289468 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.104950987 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.083135987 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.080633329 seconds)
done (took 15.565504733 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.081882169 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.179177072 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.140515205 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.114899173 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127566814 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.081891226 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116779318 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.113649649 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.107979579 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.13704136 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.105552516 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.125768949 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120220423 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.104676278 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.08193499 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.084985319 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.107264341 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097358219 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145736826 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126665268 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115780941 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.104734048 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.110800047 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.130474436 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090792224 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.133613601 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.08213021 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.110586977 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085950153 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.122210431 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.102764346 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110139889 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.082434779 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.127821221 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099051283 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088983633 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.106289051 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088533537 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106232537 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.082252543 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.128648744 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103838462 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.11173195 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087497408 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.110406286 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085341999 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.082236083 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115761633 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092390353 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110302484 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.096196229 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135079856 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.108680654 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091821856 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.105058861 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.09351093 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.114810342 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.084585693 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.081905069 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.109099802 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.081608244 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109362835 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.097424263 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130777337 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.08631229 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.115982322 seconds)
  done (took 8.012084999 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.09930611 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135214347 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.099675264 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.124745261 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.082369334 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.106681326 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.083205447 seconds)
  done (took 1.702524387 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083077093 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.107411978 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.133685226 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107998455 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13049323 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.125733937 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092281562 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.082472089 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.127201684 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.084050994 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132511867 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122805729 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11096669 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.090669271 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135724267 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.082963225 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13512068 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.082262769 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112133912 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109450411 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110508039 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.104315241 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.109759469 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083446443 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.100425372 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.108090896 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.158350566 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087692449 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083527863 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.111201938 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08171304 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.147340623 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.099745153 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.120101598 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082804457 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125772964 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.100940274 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106060872 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.09908851 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.113438366 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.10069662 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.083151044 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.109443209 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.080888026 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.111621718 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.096306967 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.111858781 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.084544136 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.085135944 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132148435 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.084337177 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124991604 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083192482 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.112342683 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.085701407 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089032239 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.11849056 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.084001284 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131770244 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084362888 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.128454262 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.102843949 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.125979604 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.10251305 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110174089 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.100585993 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.127966035 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.086304235 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084558148 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.112582746 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.102308363 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.105179951 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.085280327 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.122045128 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.085893618 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.109098268 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.134555327 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084781385 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.11919095 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.083369437 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.108652787 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.084070082 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.135038288 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087034794 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083139794 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112299369 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086259821 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.106540948 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.082506579 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.086444892 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.10660445 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085319308 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.111184615 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.084225071 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111029457 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103572145 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.084922149 seconds)
  done (took 11.068649901 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.084563312 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.084429547 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111992663 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.085297381 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.109265822 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.085812519 seconds)
  done (took 1.549746446 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.111431166 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.109092164 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.097241518 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.112960987 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.124354603 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.132981765 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108152902 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117253037 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.101522077 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.120575649 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107840059 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.134785617 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112960572 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.115055616 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106631047 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.113960102 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10781678 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115135167 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.094791194 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114474775 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.100101602 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.114063217 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08898611 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.128259815 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093320466 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.113999133 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.089680096 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.120990087 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.095793544 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.117497947 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.08917253 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118384666 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.090811047 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.116922438 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.108870222 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.113959278 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088759033 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119734405 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090086681 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117889966 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110143607 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113999636 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.095220955 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119612616 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.093378954 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.113731967 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095179463 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113839332 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108223158 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119423164 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095680166 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.087792655 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118208317 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094529452 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.115623803 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092162167 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119618771 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108033685 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.114776557 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.089018218 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.111700668 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093400592 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11892103 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.092915694 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118833698 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.09556001 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.114491358 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.088778492 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114221276 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.089402377 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120117569 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.086511594 seconds)
  done (took 8.726187315 seconds)
done (took 32.0271695 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.676534374 seconds)
  done (took 1.654583325 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.676370076 seconds)
  done (took 1.656105019 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.13236592 seconds)
  done (took 18.121145521 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.457582169 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.550009054 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.818988023 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155857718 seconds)
  done (took 2.963209961 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.943140324 seconds)
  done (took 1.94581989 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238263727 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224511965 seconds)
  done (took 1.450606303 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.759264585 seconds)
  done (took 1.753109774 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.423897412 seconds)
  done (took 2.415562051 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323415084 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.152744943 seconds)
  done (took 1.478171223 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.56229802 seconds)
  done (took 1.561741463 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.704475088 seconds)
  done (took 7.707130015 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235617758 seconds)
  done (took 1.24499382 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.283939341 seconds)
  done (took 1.283296278 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.505955245 seconds)
  done (took 4.505946568 seconds)
done (took 50.731862676 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.093712516 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.095960298 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121953824 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.093457955 seconds)
  done (took 1.402938791 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099012647 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.089049779 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.123594563 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.08803885 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124927432 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.08989851 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.117969489 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099713271 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115381747 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.091367253 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.115907512 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.089664644 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.118997959 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.092113013 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.112850619 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.093643463 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122163984 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.090279799 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.093546039 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.116979422 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.087055174 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118183657 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.093694144 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.114797882 seconds)
  done (took 3.508423812 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.094401178 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.088334893 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.116961852 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.087459601 seconds)
  done (took 1.393067939 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.094429608 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.099334236 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.125736931 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.094003039 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127657473 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.09948853 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.112296725 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086141392 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11386732 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094823286 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.083938469 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.132584356 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.1263765 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094099827 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.095424482 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.1092493 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085354847 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.126810463 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.0939822 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.120662269 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.086764402 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.119176133 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.084982049 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.100259555 seconds)
  done (took 3.51798085 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.16455525 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.121933805 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.106898439 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.115403361 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.128195397 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.135740225 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.081813183 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.135488767 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.081321415 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.12385081 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.087065279 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.15431473 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.094718441 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.108550407 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.082603247 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08151518 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121589137 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.094748621 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.111208538 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09571596 seconds)
  done (took 3.240719635 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.093152733 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089355334 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107930502 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.085936364 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118902649 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090978 seconds)
  done (took 1.602998026 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091569323 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.083617106 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.114317713 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085844567 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11457598 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083606832 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.082905916 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110927172 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.083742481 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.10893355 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.086038768 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.082686529 seconds)
  done (took 2.144894161 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.498729827 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.084973401 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.110110003 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.106384714 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.094112785 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08229688 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.125740428 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.084172766 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.137167279 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.081681077 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.110693545 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.086020651 seconds)
  done (took 2.61906192 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202457486 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093668644 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253408675 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202962437 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127023766 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160974286 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144879248 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16026764 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179049051 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132881771 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18731603 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126006156 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149454221 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171679696 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135542461 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.124880162 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168162424 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19362861 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143404467 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19633178 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156280011 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162904933 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174498474 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147223248 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106391796 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152728175 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115881512 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09728253 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166751892 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164292292 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166816885 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144962818 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134151754 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19223155 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199637413 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171190063 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18098729 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13041074 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173122988 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.160044547 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217038359 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134916673 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189024642 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14855892 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098723654 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174475097 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150474561 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.172723837 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099421848 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136004133 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173803282 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169886393 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171043844 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132849569 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16089104 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117928279 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139746564 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142093474 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178106654 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180706677 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159320467 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.088213135 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138072605 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174759118 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171448914 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112169321 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159429082 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120611997 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167658592 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187513283 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170849491 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157045695 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.174897601 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130803507 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156510255 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163674528 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120341006 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172010316 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154878177 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.115169665 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117338854 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133332718 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09603482 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189834808 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118850243 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196642978 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103052329 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139003645 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151982345 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12513721 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156150576 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159310424 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159988697 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142180421 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086212517 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141638184 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119974589 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150613165 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128033529 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151909919 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110545216 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123329945 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146323049 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.091825587 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153940781 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.095544812 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15792065 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160315293 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.120956834 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131734448 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145702827 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.145518705 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163861337 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177424764 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101380849 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128195055 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186500786 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153467217 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102351159 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168516248 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182920253 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.150827496 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104882647 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160694991 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212404908 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110954174 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181597218 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136727355 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101725558 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135587558 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154248989 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152840688 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152195703 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098050681 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.14676325 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184573923 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.091344039 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133011143 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168546799 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095096392 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124681228 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136588173 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103484203 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.132711129 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.109337993 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132040082 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149415153 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153385177 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121984674 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149071575 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138463836 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182616085 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128423453 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.11870716 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144883645 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.087835331 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168735084 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177904895 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12597981 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189052864 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159688245 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148647995 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158027967 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099904251 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171997999 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124019615 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.08782458 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158485557 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154598851 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157198801 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.173194264 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120092652 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160049524 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.14833748 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143172496 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156925107 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131099885 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14995216 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.133086614 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156562825 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126116138 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118119321 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091192215 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123638943 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142433728 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099529878 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128300137 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175728238 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157498532 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112500902 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156306185 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136459411 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175681551 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.093898479 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158907875 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.165752854 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133642022 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.176618123 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173868153 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160896171 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111605548 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170465773 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.116402298 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092116473 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.128391858 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158462933 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101134713 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130469909 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109722124 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174493032 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165683043 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145301995 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154228058 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161747652 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185235935 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.088338585 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164688759 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16192849 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152327077 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.145341253 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128551865 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.118445859 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171340129 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136340474 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181747486 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156723407 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161661027 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187350754 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.145561388 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099713061 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144622128 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159026088 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135283529 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131285885 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141777671 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131072687 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11667793 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.123705677 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093995846 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165965443 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140637692 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169256326 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.142442175 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162762306 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094046801 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13960916 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155641726 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112790201 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112025671 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160332148 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177109635 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13789357 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123298092 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166154103 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126909237 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.17297521 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183670393 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177106986 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13144283 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112766604 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157151385 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155250729 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156670564 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174008947 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113933573 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17293918 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15401707 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.130601078 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104184238 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143604037 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14569061 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.107717953 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128205618 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146227838 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.105049543 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169232501 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138715582 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15314021 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129810246 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145399609 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.138896953 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109173713 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192474541 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153206077 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171747194 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.145053697 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.156980385 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190969029 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092435083 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125533525 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.094842386 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174986393 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128403566 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12480196 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.140059346 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149283954 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154750694 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131620233 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133918348 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.086071819 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154374505 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144099507 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154689709 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110220881 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132203348 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179836666 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138967533 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098521142 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158620643 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146183558 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113922195 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167714144 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.110169624 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113225277 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12231073 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100247328 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155826395 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165192084 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.102607534 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.171325019 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159112555 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10940229 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154931483 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134162836 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11248688 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155335539 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16388158 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16690104 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.128099757 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123687315 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156550152 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169762408 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144253749 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.132042792 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129404068 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175793459 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.180305828 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.128659072 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155643331 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127487765 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153742534 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16239642 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130735695 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190711565 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126837991 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162253455 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107486488 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120182766 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152042322 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.11222734 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129249769 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165099287 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123070989 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128813368 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093974652 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146499184 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153523047 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137086037 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.093645622 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165720296 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.119738304 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128651653 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17407097 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126991546 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121018952 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140621292 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129923739 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109521458 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140861379 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131409284 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.132788398 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173632077 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.125775246 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169795204 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167202978 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156608237 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124117867 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141146263 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663572012 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.095680391 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174927541 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142055426 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178848815 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144004332 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130882026 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155522229 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145221772 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160727356 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143855642 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.196671885 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157994833 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153493399 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126940468 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111770539 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139400314 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.126149998 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118182293 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155968406 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13597681 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.102892557 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.151778853 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139041749 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.100428193 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134482601 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180856099 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112885868 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168349072 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174113936 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135037332 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160161856 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164201532 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097315768 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15367968 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164882866 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138547239 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144088049 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.098099449 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.130464041 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17423974 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.091400435 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155527555 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155335734 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126729171 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156645006 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.129542995 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154207334 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108796177 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155857441 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126770966 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146447242 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123875599 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127498702 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.094128036 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150634791 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148536681 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.14368553 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093640527 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.135949086 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168192586 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.11880341 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100333578 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153823973 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154031133 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184839989 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13839501 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102628532 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13844306 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113277846 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148171085 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154649366 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.095824721 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128439998 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.124895544 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13485766 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137235032 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150555096 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117309812 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150505633 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191377126 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132772169 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.270962915 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107196069 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150962513 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08992687 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.124968157 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10832484 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129570351 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138835306 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114196955 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175742449 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.140010114 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.101048615 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122035018 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.091428382 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128864303 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153973033 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12029761 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153202852 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137651121 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082881038 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140337796 seconds)
  done (took 70.161611103 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.141769858 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.128455645 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.143051909 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.196877938 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161863633 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246948505 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.204728543 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231831259 seconds)
  done (took 2.542147534 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.087874524 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.137920593 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.121882796 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131041975 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.110989148 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.087242196 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.319822892 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.128303741 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.08513442 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.142167014 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.127465645 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.111902181 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.52359275 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.085164724 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.111641705 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.081356766 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.11070319 seconds)
  done (took 3.58599393 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.464441016 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708956843 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.4696045 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.118459852 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.132676517 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.129752619 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.756192641 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.189642751 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.111916816 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.474817531 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.745476209 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.181269965 seconds)
  done (took 18.578406977 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118596769 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.11160402 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.158516461 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.156924965 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116394532 seconds)
  done (took 1.76184525 seconds)
done (took 117.057059358 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.097753719 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.397933999 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07330648 seconds)
  done (took 1.602234025 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.105142705 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13388543 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107034709 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.132780975 seconds)
  done (took 1.581941234 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.091756872 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.093454065 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.134150543 seconds)
  done (took 1.416103763 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.30612801 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158054045 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.136010777 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.099858312 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095276643 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.125145684 seconds)
  done (took 1.422820045 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092221627 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.093619687 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120074227 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.09630861 seconds)
  done (took 1.49952047 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.098401789 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.074824165 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103295483 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075747998 seconds)
  done (took 1.456260722 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.10790359 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.126195797 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.099325363 seconds)
  done (took 1.437253289 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.122356319 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.13412038 seconds)
  done (took 1.361878627 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.098203851 seconds)
  done (took 1.198538877 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.111251205 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.163414331 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.170146098 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115145587 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.169410993 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.14718862 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087500861 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085924914 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.116468869 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086849161 seconds)
  done (took 2.3585455 seconds)
done (took 17.134821977 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100699797 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.516014386 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384476956 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139392012 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691516841 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.403916372 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.008239139 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141478983 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161876872 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.086255263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131519834 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667457687 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.063608468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.437653991 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.048684869 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.437491085 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.668260596 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115147957 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086503572 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114951224 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.99435814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113871229 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086852589 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086357885 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.696650873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.390993344 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115717671 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.43687979 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114550949 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094558063 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373235041 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115501548 seconds)
  done (took 17.118272391 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.092472019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171932174 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097981695 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131282841 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.094244757 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116097001 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.090087923 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087433221 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176155035 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114887664 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103797705 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.114721818 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.090636755 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086734964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13586986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086597049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116107238 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086854223 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.114610664 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087750639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.133278021 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087188571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087499173 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115786596 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.086705838 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128238833 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088139747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.114765292 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087973253 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094178714 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118018765 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.087784857 seconds)
  done (took 4.536928704 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138695449 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182849626 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097866353 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150642574 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167185235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089133568 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.193410024 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141248614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151634324 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116491273 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10382675 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116435941 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121030894 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.117744093 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107234381 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11665109 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.08844879 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115525596 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088494597 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.08695495 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136239912 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08760302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116601222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.08710295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.115771797 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101269793 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116424226 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087876026 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086994375 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124478413 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090347134 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117218609 seconds)
  done (took 4.874334761 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09110741 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.093776545 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131285552 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.103035122 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117495386 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.091035717 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.119794466 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090204638 seconds)
  done (took 1.949604328 seconds)
done (took 29.586574234 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.097246462 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.08899127 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.121980291 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099956339 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.120432749 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.100122554 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115069274 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.093624787 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.093559859 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.121087363 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.094300063 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115506647 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090430807 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.086223078 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.122853148 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.088065971 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130350581 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.090266602 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.130619102 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.101442513 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.116834335 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.094769303 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.092713869 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.130370713 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.101698169 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.130119304 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.101952565 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.122592435 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.0884365 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118334193 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.100763369 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.136073315 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.08799098 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.100131187 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117381997 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.087012688 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.115517278 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.089642705 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.129402702 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.094375854 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.089567338 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.123465307 seconds)
  done (took 5.575659297 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112663316 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.145278126 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.1088294 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.111187784 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.089506563 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081879324 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.142140174 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080411385 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112376133 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112075142 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104830308 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078549957 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079413867 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103990572 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07783033 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076433447 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110550753 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076686833 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.106712656 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078792432 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080476671 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.103699755 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080956094 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079748598 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105701177 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082520812 seconds)
  done (took 3.644462687 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.093972704 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102269818 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137121451 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.168973024 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.119732456 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.123894786 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.096205714 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133962645 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.103510257 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.086097672 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.118644456 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.115006622 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135510409 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.095067213 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119068464 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.102023988 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.129354909 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.089208311 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092112436 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138634999 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.102944933 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127400719 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.108288344 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.127985377 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.087058327 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087970379 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121572752 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.096953318 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.12432098 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095515407 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122557715 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.089961049 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.117648886 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.098680296 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.121214794 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.088444347 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.105387826 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12620242 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.096097358 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.117566236 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.090208413 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.088655442 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137630887 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16232632 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.087370397 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.093407449 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123570228 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.095399509 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118369177 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104609799 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126000051 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.08676835 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.088974803 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117925981 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087378204 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.132442345 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089355316 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118690572 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.100458976 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.089342489 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.128764559 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.090997579 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131909151 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.087651449 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123408119 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088445026 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.086654392 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.115899704 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.110507677 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123536051 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128988436 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.118282598 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.087631699 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125969992 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.093559219 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092641794 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116893048 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.100868973 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126651042 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.090369815 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.127648321 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.089349001 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118499265 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.105025493 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.088718561 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.119036832 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.087754059 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.122975335 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.090249847 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.087426375 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130843263 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.086679164 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119376035 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.0999516 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11642648 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.088751916 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.092178727 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.121199967 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.085428812 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.129495958 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.091840834 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.117625494 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.097431004 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11676514 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.090756921 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.09587582 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12120023 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.086546336 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.13052169 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.092248455 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117604368 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.091485933 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.118625089 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.08950187 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.096070982 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.123833675 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.090606569 seconds)
  done (took 13.776980268 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225197153 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214676733 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.089409454 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.207030523 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.130897862 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.104098514 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.207980415 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153458413 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089953987 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.087153766 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.119209242 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.160252023 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124327399 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.164352399 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.101364194 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.116415371 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.105973584 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163155738 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212058344 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.204404715 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.10648603 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.127386542 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.088568618 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.11961258 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.089540733 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.128066579 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.105032901 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128553003 seconds)
  done (took 5.01066053 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10385124 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149857379 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09306309 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.13967103 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.113828395 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118839583 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.092483841 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119615077 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.101590025 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131989293 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.087123173 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123166078 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.095093624 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.09587658 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.118917868 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.096989891 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.127954593 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.089076108 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.120752769 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.092575587 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.093864251 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.135165126 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12125262 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.087661422 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.096830197 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117946752 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089403871 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138287466 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.117258479 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.110194952 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.085181138 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.124716536 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.097956197 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119038438 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.087978609 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.089602302 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.120291394 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.089199381 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.119824318 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.086665639 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.085324095 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.109361216 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.086979909 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132647132 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.093864895 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112246826 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.094115625 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.123351577 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.088412766 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.084540458 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120613868 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.090894488 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.120325092 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.095389803 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09179068 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.118862025 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.090697465 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11859049 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.094965102 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.089703546 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.115999146 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.085997711 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.121905405 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.091071212 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127110419 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.092398467 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.115592186 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.089981028 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.091364173 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.125655854 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.090557952 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.12051443 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.086559412 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.089703927 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.120954148 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.092021684 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.120970138 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.087459053 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.087020803 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.118637716 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.07755318 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.117976963 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076622234 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.090904981 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.1166227 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.085974187 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.119837185 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.094055068 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133897002 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.089382562 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.125249819 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.089152787 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.086450456 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121851695 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.085237467 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.120690842 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.103794889 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.138036735 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.087702212 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.115485461 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.101926193 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.089813237 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.117660984 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078454533 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124849052 seconds)
  done (took 12.177935155 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.110694161 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.143032196 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.090859046 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.101661023 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.145220939 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.113567293 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12569872 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.09418163 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.120674278 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.105475117 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.118373906 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.097381446 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.091145816 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127986063 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.110593189 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127654938 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.090245172 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.128124346 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.096100702 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.153209061 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.101236916 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.133112641 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.099223976 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.08798423 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123828662 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.100741539 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.144651968 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.098480912 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.128155506 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.103417116 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.128277881 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.114561028 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.104081104 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.123127988 seconds)
  done (took 5.024958285 seconds)
done (took 46.32676885 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.206131392 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.419345121 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.196738678 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.067621782 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.216540034 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.221251019 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.208977863 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.195271128 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.236350246 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.197749108 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.461391378 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.814502818 seconds)
done (took 58.57408831 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.242551714 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.358216182 seconds)
    (2/2) benchmarking "String"...
    done (took 1.514357137 seconds)
  done (took 4.00247726 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.806094687 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.147397767 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.461096971 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.198316914 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.199278693 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.486657779 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.914621501 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.614234678 seconds)
  done (took 28.151084468 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.204862343 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.603758459 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.054295787 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.973402674 seconds)
  done (took 18.966192553 seconds)
done (took 61.29949693 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.203926518 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.203613369 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.235251361 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.185572351 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.312027642 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.232129297 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.52103811 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.234866422 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.216397036 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.191921978 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.221163785 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.223160028 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.211974041 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.557898543 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.214882159 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.199912181 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.221585405 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.731382052 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.606311443 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.206643777 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.200260223 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.253268978 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.224236842 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.200616844 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.25557393 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.201071543 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.20633353 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.211460165 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.787445879 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.203950936 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.216031842 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.703530404 seconds)
  done (took 190.726734864 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.200053564 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.244981671 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.335231457 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.24321438 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.625434621 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.404003352 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.338098008 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.697638891 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.222391322 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.21438478 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.444913839 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.207496946 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.515025501 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177408524 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.211017307 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.261875868 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.409691903 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.507913341 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.224330127 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.476708913 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.21813956 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.441607089 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.352206388 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.394432206 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.234452437 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.237751215 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.226814467 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.235293093 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.396002171 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.346843505 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.261382954 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.247063558 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.840401477 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.060789601 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.208818849 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.240122404 seconds)
  done (took 150.035599484 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.504516333 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.20166875 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.202331118 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202389762 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.202794318 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.23611193 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.20281838 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.793660566 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778319221 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.728649445 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.651994179 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.633741722 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.5112232 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.208498657 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297709256 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.217981661 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.207685578 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.219202443 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.229573894 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208499387 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203904419 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.796316617 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.221680098 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.331798632 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.381761886 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.219970919 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237255073 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.602356123 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204089156 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237066076 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.538502988 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.254061788 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204900343 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.613044117 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.660800189 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318912819 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207091011 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23822938 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.205328496 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.487880973 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205799497 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.206144623 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.20839477 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.913013856 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.209678087 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.798818898 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.211169146 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.193706879 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.211280513 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.205954023 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.181063933 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.941474154 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.211759926 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.20603724 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.207889572 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.205636177 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206257858 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.241421308 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.208997712 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.30580973 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.207334153 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.209489068 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.23946876 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.207039997 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.413854692 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207877099 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.488783666 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.262931163 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.424553354 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800108197 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213452481 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.206718122 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306434166 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32822662 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.207615859 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.207619199 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206948196 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.20747147 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.319128894 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.207654888 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.63336314 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.385420642 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.225236984 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.647388033 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.310312226 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.20709927 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.63983446 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.210951912 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.206376762 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.972299398 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305487282 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.206265377 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.206027091 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.207090805 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.632623428 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.780983895 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.471500052 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.213316089 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.207004877 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.440690006 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.207888019 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.642958782 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.780136279 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.913824546 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.213145465 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321808837 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.385640583 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.225744946 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.206788441 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.641777591 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.213510282 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.264770536 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.212390299 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.208148304 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.607732124 seconds)
  done (took 368.549189662 seconds)
done (took 711.946696595 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.825639486 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.81310512 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.925935544 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.808182158 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.767478843 seconds)
  done (took 10.278918616 seconds)
done (took 11.417728226 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.397007851 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.397332926 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272265148 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.399349317 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238343146 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.416932751 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.378613862 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.229224475 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.310573768 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.291152539 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.311330487 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.262296319 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.237139596 seconds)
  done (took 18.281718864 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521977683 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.515319466 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272799051 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525090936 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249042777 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.53627719 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407452734 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.42138614 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.421603941 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224681374 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223772849 seconds)
  done (took 16.460302313 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.539115874 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.526142594 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.276075348 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.552137166 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251599257 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.52864209 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407928857 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425701573 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432217968 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.225049414 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223920288 seconds)
  done (took 16.529469115 seconds)
done (took 52.409880823 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.217986534 seconds)
  done (took 2.359731063 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.254606241 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.422801808 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.236702392 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.225357925 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.218754012 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.221593205 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.227869138 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220673373 seconds)
  done (took 11.17044133 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.219028678 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.216789354 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.218152085 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.215751033 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.216543632 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.216887721 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.219203829 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.219724701 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.217726035 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21818651 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.219147793 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.671602279 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.219353087 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.216298323 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.219442102 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.219370086 seconds)
  done (took 21.086121361 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.218626725 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.217005654 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.217232929 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.217132652 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.217354666 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.218730998 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.218564458 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.217495431 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.216701912 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.217818899 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.218499649 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.21623926 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.219232662 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.216001663 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.217923891 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.218685004 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.217734138 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.218018848 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.223069428 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.217625757 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.219504761 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.217930472 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.21985896 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.218948383 seconds)
  done (took 30.381176784 seconds)
done (took 66.138184092 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.434252359 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.033463785 seconds)
  done (took 9.61185745 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.279324117 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.283054668 seconds)
  done (took 3.70696933 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.221849983 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.221996961 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.222613118 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.222731699 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.22064425 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.221139983 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.221915521 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.221101106 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.221944365 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.22166186 seconds)
  done (took 13.362489556 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.222268727 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.221614029 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.221340984 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.221735308 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.221054866 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.219470207 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.222800074 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.222674189 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222317893 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.218565269 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.221998141 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.219489219 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.222728667 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.220023881 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.222232033 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.220167238 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.219685324 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.219581104 seconds)
  done (took 23.125325062 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.235553184 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.244824211 seconds)
  done (took 3.625812915 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.350357795 seconds)
    (2/7) benchmarking "second"...
    done (took 1.26187539 seconds)
    (3/7) benchmarking "month"...
    done (took 1.331978837 seconds)
    (4/7) benchmarking "year"...
    done (took 1.317552137 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.264037109 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.240331806 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.262327313 seconds)
  done (took 10.17409729 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.224530865 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.405712002 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.508483657 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.82809335 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.224692324 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.227248002 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.102070814 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.227082899 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.229851676 seconds)
  done (took 14.123636964 seconds)
done (took 78.874136477 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.246503826 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.216344574 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.492297146 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.231319525 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.230724325 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.558789836 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.247485359 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.348714991 seconds)
done (took 37.719390078 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.239306319 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.008776929 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.015892085 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.218865121 seconds)
  done (took 11.391328067 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.206823851 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.210397409 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.217486499 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.354120964 seconds)
  done (took 18.13713506 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.319252008 seconds)
    (2/2) benchmarking "read"...
    done (took 1.561079642 seconds)
  done (took 5.028656708 seconds)
done (took 41.944212178 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22452113 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.225390027 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.22458265 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.222829706 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.221784694 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.226503034 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.222198053 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.222066375 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.225056809 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.224748855 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.225031949 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.224902699 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.22487543 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226421581 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.222232157 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222769526 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224743293 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223371863 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222874944 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.221619064 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226272911 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.223801058 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.22082144 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.222031134 seconds)
  done (took 30.520084696 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.224270723 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.222151486 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.224760847 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.224026159 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.222227004 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.223707605 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.224325224 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.221280257 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.224132752 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223619742 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222466883 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.22129625 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.224516584 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.222080999 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224256346 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.222816237 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.224739838 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220976132 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2243541 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221160177 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223956931 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222678333 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221611227 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22416695 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.221170239 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221127901 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.224031694 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.221962482 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224119647 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.222349393 seconds)
  done (took 37.838447043 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.228059147 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231397824 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.22383733 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.224470879 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.224160235 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.223988212 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.224924586 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.223279893 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.223592418 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.222347183 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.22337471 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.224088973 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.22302343 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.223391591 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.224364646 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.223737808 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.223866629 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.223047235 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.22281469 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.223455258 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.223697857 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.223616253 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.222049802 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.223523933 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.223722955 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.223752066 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.224554194 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.224180625 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223772671 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.223853435 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.224029449 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.224258971 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.223916519 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.224649594 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224037451 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.225333361 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.230097219 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.231005255 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.22364217 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.225556404 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.225370761 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.223947341 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.224165804 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.224945143 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.224765295 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.224509835 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.22481595 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.224721638 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.224418762 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.225011665 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.224512126 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.224990577 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.225211175 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.225349895 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.225586413 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.224570938 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.225583347 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.224760461 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22541127 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.224974573 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227382173 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.226587083 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.225160015 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.225279399 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.226774665 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.225988955 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.225956724 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.227460254 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.226835385 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.225894969 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.225675 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.226826476 seconds)
  done (took 89.339856795 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.227127507 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.224669672 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.224152301 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224024933 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223566295 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.227008674 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.223650292 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225285696 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223007925 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.227471265 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226179719 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224801853 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224304173 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226311491 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227606411 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.225252797 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.226659946 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.225073407 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.226354406 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227305952 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227719526 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.224928937 seconds)
  done (took 28.113157317 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228101139 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.227707365 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.226249842 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.227703149 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.2252899 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228293902 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.228585642 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.228650012 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22907225 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226298669 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225472854 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228837845 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.22602566 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224821231 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226316936 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22501199 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228938572 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226435324 seconds)
  done (took 23.23890644 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.226983789 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.226037614 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.228586419 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22632059 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.226517216 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230472504 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.22610435 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229092464 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.230144745 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.226355896 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.228494358 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228307655 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228613758 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226437803 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228827899 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.227293893 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.229831608 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226221964 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22959765 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227456059 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227579592 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229173521 seconds)
  done (took 28.166592356 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229733968 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22976983 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.227690321 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.227322385 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226596759 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229370884 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.229319091 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.227703599 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.230458507 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.229819497 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228250571 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231677431 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.227483774 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.228815788 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.22848324 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228928075 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.229530359 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.229931503 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229802833 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.22839289 seconds)
  done (took 25.732144527 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231127096 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231752514 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.231211914 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231161851 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23134792 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.231997976 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231364827 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.232168281 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23296645 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232487817 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.232276419 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23356344 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232765877 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.233033735 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23251826 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232669551 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232752436 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231665552 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.23350351 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231698935 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.232892584 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232608408 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.232374533 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.232826817 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.232265125 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231828932 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233414592 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233463751 seconds)
  done (took 35.660633893 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232949262 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232689887 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.230270097 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.231119899 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.23102239 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.230888107 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.231530052 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.231322452 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233622997 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230862547 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.234065374 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.233690537 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233266013 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.233706233 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234035968 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.233751731 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233858408 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.231794891 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231525039 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231472624 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.234123249 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234334435 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.233734805 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231307961 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231231807 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.233941795 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232416283 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232249539 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23430768 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231428453 seconds)
  done (took 38.133755513 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.280025374 seconds)
    (2/2) benchmarking "in"...
    done (took 1.273679353 seconds)
  done (took 3.710430089 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.230984625 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233588247 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.235029563 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23179963 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.232314026 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234735523 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.233676671 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231407625 seconds)
  done (took 11.020071745 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234061342 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.233783315 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.234036839 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.233902478 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.234488726 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.235072115 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242061391 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.25365203 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.235436274 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.235781984 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.242257051 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.241933821 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.237205416 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235750644 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.235628395 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236051202 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.235616837 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.234123136 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.233830281 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.234921882 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233811812 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.236832149 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237642368 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.231284844 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236476842 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.24625908 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.239717851 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.234178937 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234766181 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.23891313 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.236124198 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.231823711 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.234770107 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.233432472 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.236183667 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.23330305 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244972336 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255768892 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.241069217 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.234615683 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.235548951 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.23295931 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.236715261 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.236126812 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.238837752 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.234941721 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.236280092 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.232981667 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.235017473 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.238392091 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.242621839 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236816202 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.232961635 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238936558 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.237019985 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243122667 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.254514825 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.239823577 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.245884056 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.246212201 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.25018075 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.245630162 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238511003 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.235166354 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247160487 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.261065878 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.244418884 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253008995 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.234388675 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.237172562 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.243460295 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250672239 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.262734485 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.236182176 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23667049 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.237856483 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237842003 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238048124 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243899629 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.258890808 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.237059952 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.236007921 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.247887005 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26235159 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.237431398 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.236427807 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.23685355 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.236126052 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.238905518 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248252132 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.257132259 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.237463646 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.238853916 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.240124001 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.240313788 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.23835835 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.238846046 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239953348 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.237284227 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.239135273 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238119159 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243561437 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.249159305 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237577727 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.237829684 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.245281629 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.240257995 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239506197 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.246954376 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.24013551 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238197314 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.240449374 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.245726107 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.238244145 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24313764 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.247858688 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.237342683 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.241685413 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.238827313 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.239780239 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.24949282 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.265835009 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.239700028 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.238813782 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.245293372 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.249816832 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239051698 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.241857196 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.239966764 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.236510765 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.236270833 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.240357478 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.240068888 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.239682047 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238631642 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240192037 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.236969304 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.239770977 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.238557842 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.240296104 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.240521546 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.240400074 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.240235947 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.24102314 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.239228239 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.241499094 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.245024268 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.240105174 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.241002141 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.241377145 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.2374686 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238931993 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.240697383 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.239101851 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.239886623 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.238402674 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.240327824 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.238686075 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238951067 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.24012568 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239707151 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.240247159 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244567848 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.238251921 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.243513227 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.241688519 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.236989984 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.239784825 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.2401726 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.23953309 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.240394622 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.24042402 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.243957443 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.246013072 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.239439347 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.238990526 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.240345156 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238926467 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.239645797 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238686613 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.24317825 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.248293692 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238194249 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.247331071 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.239203515 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239106138 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.240773465 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240937489 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.239827231 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239348938 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.243629366 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.248534225 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253890195 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264285225 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.241570954 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.245001306 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.241483481 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.243996172 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.244393559 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.240199061 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.241390304 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239664584 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240453229 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239189976 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.241521007 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.239884859 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240432988 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.241415374 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241216449 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.240348273 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241837235 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.241700399 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.242110343 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.238648245 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242408322 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24067189 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.241219102 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.238929127 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.241124037 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.242373865 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.242178838 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.24120988 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.248669224 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.240271242 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243598641 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244136714 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.242683406 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.24089897 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.242069497 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243556974 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.242753968 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.250897506 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.26108814 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.244429402 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250036769 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.26032989 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.24317555 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.246596947 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.243786019 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.241371787 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.245521963 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.250933298 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.243393622 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.242404374 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.24202914 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244302421 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242733189 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.249973153 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.24142482 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.243635599 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.244183859 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245806699 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.241274805 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.244656953 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.244890908 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.244805206 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245585256 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244776819 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.243597077 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245658024 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.243347859 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.243212133 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.2442883 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.247062993 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.250835639 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.248999823 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.245702067 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.246531225 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.245025921 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.248653192 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.246201828 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.24359279 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.242920284 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256375661 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.265951603 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251183735 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.246202068 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.245398377 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251941911 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.245806728 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.248313002 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244309534 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243730339 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.244302779 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.244133751 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242620729 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244324029 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.244372086 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245112767 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.245358106 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.247840001 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.244924233 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.244088688 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.243488665 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.243131195 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.244613453 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.242700995 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.244865315 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.245804276 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24539519 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.244092677 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.245314313 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251557464 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26151532 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.243997666 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.244146851 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.243939859 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.243711092 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.244603089 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.242303861 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.24772423 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.249268303 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.247299081 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.252846439 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.245524969 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253077704 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.242684176 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.247103191 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.25074653 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.241768608 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.242993866 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.244507316 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.243110302 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251202271 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.260943587 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.245184411 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.247277353 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243899578 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.242701265 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.245655072 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.243626564 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245249212 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.24401714 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253891765 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.26784851 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.249262826 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248105712 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.243267539 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.245020968 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.245344402 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.245643948 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248702399 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.245565464 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.245373423 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.246241212 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.246902826 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.247398752 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.244206955 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.245726016 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.244188394 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.247002673 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253011711 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.263970259 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247945001 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.245980248 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.253786402 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.244855324 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253282768 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.262863918 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.24585918 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.243683892 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.245585971 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.247471082 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.245242882 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.247746236 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.245276831 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.250293439 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.249363537 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.244493533 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.247716666 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.247605294 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.244598164 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.245164589 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255572083 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267488809 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.248290964 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249891832 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.243798196 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.248750646 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.24807099 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.245213845 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.24603165 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.250754031 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255724626 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253017572 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.247340969 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.245605662 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2456582 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244372428 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.246428807 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.246306293 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.24469382 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.246977238 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.245762836 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.24521825 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248057765 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.245527022 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.247978126 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247002762 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.246512882 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.255034459 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.245175569 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.246368959 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243722028 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.245671234 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.245972416 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.247428192 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.245373714 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24692135 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246061398 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.247380887 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251816842 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.251721216 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.247925946 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.246874968 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.245192417 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.246280522 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.246886285 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245551148 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.244689869 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.245176064 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.246852114 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.244741358 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.246867896 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.245863432 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.246405364 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.24688373 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24712685 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24927702 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.253748969 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247807517 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.244371143 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.245893727 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246504873 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.24576607 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.247789093 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.252361482 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.250161823 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.256305837 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.254637023 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.24985471 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.246832467 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.249478089 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.25399894 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.24528868 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.246444441 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.24578552 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.247236917 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.246708546 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.249241291 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246694022 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.252972743 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.246377801 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.247004397 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256610893 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.267790202 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246082637 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.247836864 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.250368698 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.247983992 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.244931256 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.24701098 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.246960048 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252310726 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.265310839 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.2460273 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248940619 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.24547698 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.247888151 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248496027 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247250312 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.247720371 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.245323955 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.247075235 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245266261 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248495954 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.245055493 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.246344707 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.247560801 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.24991807 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.251994914 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.246652457 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.249036504 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.248054706 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.248242141 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.246548426 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24809062 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.244785483 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.245356358 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.247126528 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.247416449 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.247372436 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.250897985 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.247990783 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.249722937 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.249458799 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247647869 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251186952 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.257059103 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.254850837 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.246542975 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.24942562 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.250544578 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.251213373 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.246890944 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.248396702 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248821336 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.24858371 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.248524884 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247344493 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.249322621 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.251749982 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264272536 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.269494177 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249859491 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.250154279 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252683426 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.250147432 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.247272362 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.249478972 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.251442867 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.25184113 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.254736712 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.249078126 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255632669 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267207602 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.251011884 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.25246583 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.252007833 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.255757315 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.252080994 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248724371 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.247835187 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.254286703 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.263582005 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250643496 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258782005 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276129234 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.267454701 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.251149831 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.250289866 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.248791084 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.249916696 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.252804457 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.249561031 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.251111927 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.252579768 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.250668451 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.251265275 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255445038 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.252811642 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.251194786 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.250595964 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.25083602 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.251363007 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.250414472 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.250386527 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.250865258 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.250481479 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.249308632 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.249748955 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.250597093 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263259167 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.275342975 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.25133489 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.251050147 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.249263702 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.255149814 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.254547639 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260545279 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.258097165 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.250867904 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.250745015 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.254154486 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250878052 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.249689601 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.254180099 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.253711877 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252494071 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.251712064 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.262560459 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25860457 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.257730792 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.252569598 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252783584 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.253249587 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254172431 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252798665 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251510416 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.253468968 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.25514154 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25534097 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.253892152 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.254323987 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.256273854 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.260543483 seconds)
  done (took 743.752846959 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.251996337 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252264858 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.251344225 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252389045 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252615319 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252140955 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252467194 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253110564 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.251717231 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251734906 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.252483709 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251492927 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251126047 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252778482 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253894149 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.25295487 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252169337 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.25344919 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253069277 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252692812 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.252883402 seconds)
  done (took 27.475412504 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.25510631 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.255096489 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.252851094 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.25614441 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252802791 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.255234326 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.252399692 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255377376 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.255537981 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252520648 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.255449964 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255510442 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.254058662 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.253703209 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253012895 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255945171 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.25575404 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254525541 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.255290301 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25369198 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256430361 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.254393618 seconds)
  done (took 28.777001043 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.255655112 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.255505607 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.256172383 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.25440265 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.257077494 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.254305632 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.256120972 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.256621847 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.257154765 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.257030268 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.256192544 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.258735038 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.26335894 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.260271689 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.259304407 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.257636208 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.401552456 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.25607069 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.257342313 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.256662309 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.255219172 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.263581976 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.255759581 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.256407203 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.256640613 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.257612033 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.258771141 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.259364358 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.257272601 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.259978304 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.260623587 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.259306626 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.259246415 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.260450357 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.256845956 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.258669867 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.263188445 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.258305483 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.256263673 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.258607551 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.267683649 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.275861077 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.2583048 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.266119457 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.259580872 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.259895679 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.261454874 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.264710565 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.257385586 seconds)
  done (took 63.007822325 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.260070278 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.260721237 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.256944998 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.260094632 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.259020108 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.261470029 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.259648586 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.260193309 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.257104125 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.257678776 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.260578667 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.258521992 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.257689475 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.260738947 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.26036888 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.258504023 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.257899422 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.25825352 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.257711135 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.258832506 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.257694401 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.261080836 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.262298563 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.259251245 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.263531496 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.25789467 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.258623077 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.261634268 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.259167058 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.25946754 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.261290633 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.261301505 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.261332846 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.260021197 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.259640715 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.261841113 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.262706794 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.260374501 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.261256181 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.259890532 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.262073923 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.262262439 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.262123164 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.263727333 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.259911538 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.26009677 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.26106752 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.260491629 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.25941702 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.262973239 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.263051812 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.2607157 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.263406856 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.259930197 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.263501799 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.26283852 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.260865132 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.261189363 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.263432538 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.261121198 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.26102171 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.263681215 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.262028584 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.264366 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.265131537 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.262723847 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.262123723 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.265181703 seconds)
  done (took 86.914234533 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262640139 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.263079869 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264833009 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262791509 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263219846 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.262815741 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.263967786 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.264413458 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.263718398 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.263132999 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263371614 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.264358922 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.263992984 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.264352534 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.263950647 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.26370444 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.263927511 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.264288257 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264317433 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26405011 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.264133618 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264189721 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.265066483 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.264273931 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264948976 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.264846223 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26497431 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.264947381 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264255481 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.264729549 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265407825 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.264843582 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264987074 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.266129322 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.265395624 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.265797713 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.265082898 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264889287 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.26559203 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.265440911 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.26556451 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.265681576 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.265444209 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.265080581 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265622161 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.266151828 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.26601364 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.266513981 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268119564 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26749818 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.266579966 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.266447435 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265958792 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.267476154 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26661673 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.268932055 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26719782 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.267957596 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266699088 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.266875131 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.266730554 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.269230944 seconds)
  done (took 79.628383508 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.268129136 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.26780263 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.26693852 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.264705928 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.267739711 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.266509722 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.267462341 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.268539923 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.268746234 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.268018443 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268746598 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268596373 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268115146 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268823769 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.267760541 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268410583 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.267410709 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.267610916 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268552237 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.267227294 seconds)
  done (took 26.542546951 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.266712147 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.269265837 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.266376689 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.267017317 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.269815498 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266576795 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.269277319 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269744298 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267101552 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268647467 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.26935365 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.269006273 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267119032 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.267086693 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.270494007 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.268099464 seconds)
  done (took 21.479605678 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.267198728 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.268795286 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.269204 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.268232464 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.267670815 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.267933039 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.270701879 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.267856917 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.268251179 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.271203304 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.270350848 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.270522264 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.271051336 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.269892582 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.268840499 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.27139384 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.268691717 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.268350873 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.270524054 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.270059018 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.270295197 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.268911491 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.271825364 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.271644367 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.268762272 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.271048013 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.270005081 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.269229885 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.268833203 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.271944357 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.269101457 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.268603161 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.269037489 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.269163381 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.271152935 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.269421175 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.272939995 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.272275132 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.272828105 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.272952435 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.272464613 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.271226225 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.272651363 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.27380633 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.27157287 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.277791208 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.271279295 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.272367746 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.269768185 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.27144346 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.273851498 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.272992141 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.273659438 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.273556404 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.273581104 seconds)
  done (took 71.078170396 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.273633724 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.273649479 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.270651077 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.273308102 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.273319818 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.272293703 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.27432962 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.270968081 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.271456942 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274188182 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.271917967 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.273873475 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271517578 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.275654112 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273033472 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274230118 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.272143468 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272791353 seconds)
  done (took 24.105525953 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.27119423 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271624862 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.274768575 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.273461641 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.272261694 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.274505204 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271772952 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.275345375 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275793193 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.27335994 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272573384 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.275434252 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274922348 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.27475494 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.273377909 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272476177 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.275357083 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276343512 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.274124462 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273748118 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276542135 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276171007 seconds)
  done (took 29.222320155 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.275713573 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.274672083 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.274923545 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.290230574 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.290782899 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.296342033 seconds)
  done (took 8.896309564 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282016037 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276846869 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274908423 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278501137 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276753295 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275674459 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273520892 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275040374 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278127653 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275812259 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274271118 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278275123 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276934316 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275017607 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277512389 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27832247 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276809958 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275605045 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276310394 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278439328 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27537392 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278090977 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274839866 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275152884 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27594197 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27531372 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277945423 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275781013 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276141464 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278116519 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278080704 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275324235 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278922067 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275930758 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279263825 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278903084 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276924893 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279840617 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279180842 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276649913 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278689953 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278852803 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27932889 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276656465 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279399153 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278213912 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277359052 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276749231 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277285831 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279512219 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279563468 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276863484 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280972354 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279520108 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279998453 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280651256 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276920251 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278504218 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280684682 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278308253 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278543339 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279431473 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277893793 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278924372 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280692203 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279004253 seconds)
  done (took 85.542898881 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277248433 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277485094 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279539175 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279480908 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279341693 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278605061 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280162685 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278472602 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278261089 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278344357 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280184814 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279342105 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280170066 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279022324 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279334214 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27942654 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279184593 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279311559 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277716142 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281453346 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27915132 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279624866 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280245143 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279146692 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280454378 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281622523 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28110906 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280315138 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280207403 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279634118 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279590246 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279943108 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281030643 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280588826 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281327366 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281822999 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279405082 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280954567 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281403983 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282311403 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280816433 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283189031 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280428653 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281150352 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281294805 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281026518 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280318243 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281758574 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280783506 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281326553 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282069038 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281590051 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281177505 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28110674 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281347155 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28078981 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282991347 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281188654 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281074044 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283990726 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280037524 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28189422 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285947454 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282381183 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282834749 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283989428 seconds)
  done (took 85.718080192 seconds)
done (took 1734.763642463 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.321660988 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.377825679 seconds)
  done (took 13.901086394 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.446736351 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.399359205 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.282712799 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.311256834 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.282395098 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.294851431 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.289794574 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.283795926 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.282064611 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.283925086 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.284012444 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.471279008 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.278536282 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.285343664 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.283215521 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.377907357 seconds)
  done (took 42.34137245 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.310207705 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.296243899 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.393776899 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.310089119 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.312246185 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.465981401 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.346091048 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.294246444 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.445103589 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.333356741 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.752814684 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.311229264 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.289121389 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.330227194 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.311243909 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.46213198 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.523674612 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.743982397 seconds)
  done (took 29.435182539 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.706916871 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.312474304 seconds)
  done (took 9.223588552 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.304983233 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.307057238 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.321162519 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.315579758 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.301128489 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.308519102 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.296472377 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.297594539 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.323745773 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.339642093 seconds)
  done (took 64.322045626 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.307017319 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.290155195 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.290935973 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.289004632 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.29235967 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.280703666 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.289648136 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.28826662 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.637059803 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.410145267 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.297218098 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.298244849 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.307111996 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.29145343 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.288276459 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.325132359 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.448720651 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.28833284 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.288663357 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.296050368 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.290860638 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.389811966 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.32805017 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.288700567 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.406325898 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.638388139 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.299382242 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.297967084 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.48359928 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.290282613 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.289872643 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.290342135 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.293229836 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.894158679 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.77832589 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.300347509 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.314713545 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.300424327 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.289800274 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.45008993 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.292491611 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.298246821 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.285552869 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.779036799 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.428769448 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.404848813 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.400942333 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.293314618 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.294694302 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.352590543 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.297705168 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.292657095 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.317052869 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.038402985 seconds)
  done (took 108.402590913 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.332254713 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.663394611 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.441107443 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.292888176 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.962789203 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.840197994 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.281593658 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.527122311 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.277543414 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.267043183 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.523115252 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.731130072 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.273382846 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.30690089 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.475707215 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.266310803 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.249750167 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.991744162 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.262100657 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.251003422 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.732522799 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.249992669 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.248408162 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.551835616 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.281304712 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.67693291 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.526068169 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.688049376 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.26983069 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.243235627 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.684879047 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.27174328 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.263919107 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.242376172 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.489887313 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.572087746 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.55225887 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.242017716 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.240747767 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.240507001 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.263964882 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.656209944 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.551274012 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.231809654 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.232896318 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.661744028 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.23340281 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.239991609 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.236322749 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.431658902 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.03263724 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.235846772 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.505481206 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.241657048 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.577336629 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.261252866 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.309552885 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.694090443 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.233961662 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.334263 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.25954738 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.234431333 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.235337665 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.23866825 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.238259559 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.55927122 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.605128058 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.235969132 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.55651193 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.670473992 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.254949472 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.737104011 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.116231273 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.266639257 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.29159024 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.236897516 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.805893053 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.703351936 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.243183947 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.236083164 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.548539768 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.241061798 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.506088616 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.251839032 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.23744759 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.742929463 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.238788198 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.234801968 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.223934531 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.235036682 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.893562892 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.224574744 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.47577717 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.283697452 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.220161893 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.219494502 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.222497147 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.220714367 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.241040212 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.224626052 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.729003195 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.237862926 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.325315205 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.236453327 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.220586304 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.227148664 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.224324758 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.221268487 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.435716822 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.76326168 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.227284595 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.221729205 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.224894741 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.221220595 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.515712299 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.224024653 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.505717061 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.223040081 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.222049168 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.224383919 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.870204769 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.274332578 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.221353348 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.243524685 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.121364352 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.436568735 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.238113046 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.222189566 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.223094129 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.23807814 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.371704562 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.239806557 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.26929642 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.221666585 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.899027627 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.243175975 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.236168569 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.659158863 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.231133778 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.028391858 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.243011207 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.224247791 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.504671038 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.480669005 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.540131018 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.225184126 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.238739745 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.880130262 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.287337918 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.359620797 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.242756466 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.272753326 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.419079067 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.365211846 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.225689976 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.835998683 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.225652208 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.432907032 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.225227221 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.536477535 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.692094598 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.242627196 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.227108459 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910659139 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.948228588 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.915521798 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.224235575 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.49060393 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.206249014 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.704379777 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.224226817 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.2247943 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.722698496 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.228455637 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.23161864 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.226542619 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.225708919 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.381959056 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.397674994 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.890532885 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.230741282 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.652665483 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.232409776 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.225658013 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.255877016 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.230139738 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.571796184 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.252838262 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.229212629 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.244275803 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.227249019 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.232852962 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.678705457 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.111352231 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.227905248 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.375815082 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.834128056 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.242484215 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.227399055 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.929567123 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.95434463 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.716355497 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.263006749 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.513525083 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.235607452 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.264616048 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.888697238 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.287793657 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.677745437 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.230178422 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.233137135 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.801775338 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.242760604 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.273711841 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.227605897 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.228385399 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.741767269 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.243048413 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.229281282 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.410136526 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.245529953 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492845008 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.230292367 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.241923089 seconds)
  done (took 1087.363881773 seconds)
done (took 1356.191867849 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.230875107 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.236120484 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.222823406 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.235993577 seconds)
  done (took 26.082996251 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.238581314 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.235672708 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.236571844 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.23384022 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.2375144 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.23588227 seconds)
  done (took 8.574296182 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.270680773 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.231792126 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.23623595 seconds)
  done (took 18.896684851 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.428336573 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.440577388 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.551522042 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.342805776 seconds)
  done (took 9.920606337 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.237561494 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.237573617 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.237143285 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.239523486 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.241001849 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.24337842 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.240001087 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.239529485 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.242965742 seconds)
  done (took 12.315666323 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.98424457 seconds)
done (took 81.931781281 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.259720021 seconds)
    (2/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.220728473 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.227369005 seconds)
    (4/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.63391079 seconds)
    (5/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.247033336 seconds)
    (6/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.336961515 seconds)
    (7/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.259142617 seconds)
    (8/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.440540689 seconds)
    (9/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.258328579 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.471564346 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.085856335 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.134814832 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.581414338 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.28814534 seconds)
    (15/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.220444351 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.84856573 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.2603936 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.257888459 seconds)
    (19/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.811992649 seconds)
    (20/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.364390496 seconds)
    (21/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.304487017 seconds)
    (22/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.426201407 seconds)
    (23/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.987967291 seconds)
    (24/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.244059022 seconds)
    (25/309) benchmarking ("sort", Float32, false)...
    done (took 5.214484176 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.457993492 seconds)
    (27/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.250304176 seconds)
    (28/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.47407578 seconds)
    (29/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.24395693 seconds)
    (30/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.221981963 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.342038939 seconds)
    (32/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.342543326 seconds)
    (33/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.187937686 seconds)
    (34/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.57758911 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.356869846 seconds)
    (36/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.316315988 seconds)
    (37/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.339296032 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.23417688 seconds)
    (39/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.68257432 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.652634742 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.238825309 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.223555325 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.344235324 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.262018193 seconds)
    (45/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.23440192 seconds)
    (46/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.739812982 seconds)
    (47/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.261365658 seconds)
    (48/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.235283868 seconds)
    (49/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.381411879 seconds)
    (50/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.222645633 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.334546607 seconds)
    (52/309) benchmarking ("sort", Float64, false)...
    done (took 5.503114004 seconds)
    (53/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.241131131 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.231375361 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.352688988 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.631598405 seconds)
    (57/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.591827075 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.221951736 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.526387328 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.639598707 seconds)
    (61/309) benchmarking ("sort", BigInt, false)...
    done (took 6.257772744 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.007724487 seconds)
    (63/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.599020509 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.228675015 seconds)
    (65/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.28030182 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.306507313 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.291766936 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.467926205 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.666383283 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.06826206 seconds)
    (71/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.723928322 seconds)
    (72/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.300270341 seconds)
    (73/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.577163856 seconds)
    (74/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.733816708 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.833335827 seconds)
    (76/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.361050341 seconds)
    (77/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.602399784 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.504680282 seconds)
    (79/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.239267763 seconds)
    (80/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.868940028 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.015709257 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.224171874 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.240688794 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.228684448 seconds)
    (85/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.29569158 seconds)
    (86/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.515051443 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.684938658 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.636810553 seconds)
    (89/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.257843019 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.246753686 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.417286656 seconds)
    (92/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.235756109 seconds)
    (93/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.930876991 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.240355286 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.69125794 seconds)
    (96/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.473713666 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.324580649 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.225157117 seconds)
    (99/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.828073727 seconds)
    (100/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.587947463 seconds)
    (101/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.739576201 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.109277966 seconds)
    (103/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.721316791 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.123415719 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.231002188 seconds)
    (106/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.248193532 seconds)
    (107/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.843652968 seconds)
    (108/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.032120785 seconds)
    (109/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.569876657 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.265269893 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.255718053 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.238036464 seconds)
    (113/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.89224816 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.460249286 seconds)
    (115/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.248706005 seconds)
    (116/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.058255115 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.243455608 seconds)
    (118/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.959000608 seconds)
    (119/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.327122394 seconds)
    (120/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.226729408 seconds)
    (121/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.37141301 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.241235357 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.239032406 seconds)
    (124/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.500278921 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.240615425 seconds)
    (126/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.13882811 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.686424042 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.349132056 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.254659865 seconds)
    (130/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.256333331 seconds)
    (131/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.934324669 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.778503516 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.264349069 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.584483701 seconds)
    (135/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.288221987 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.496204105 seconds)
    (137/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.917336368 seconds)
    (138/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.327021383 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.961015541 seconds)
    (140/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.246568096 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.501446546 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.235755768 seconds)
    (143/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.620457588 seconds)
    (144/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.740770541 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.064967902 seconds)
    (146/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.424674249 seconds)
    (147/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.240367685 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.775357068 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.22865341 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.448364051 seconds)
    (151/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.392556428 seconds)
    (152/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.226931859 seconds)
    (153/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.639601975 seconds)
    (154/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.236015663 seconds)
    (155/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.26086724 seconds)
    (156/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.232220813 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.965584938 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.82745263 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.268117246 seconds)
    (160/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.410696695 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.12790289 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.756910599 seconds)
    (163/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.171577304 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.47883432 seconds)
    (165/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.22929327 seconds)
    (166/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.348325143 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.70407662 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.050909293 seconds)
    (169/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.306623018 seconds)
    (170/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.320882761 seconds)
    (171/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.230391162 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.085773379 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.265399706 seconds)
    (174/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.267467104 seconds)
    (175/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.243390393 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.163206917 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.237349427 seconds)
    (178/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.252995573 seconds)
    (179/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.347837643 seconds)
    (180/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.460288141 seconds)
    (181/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.725710182 seconds)
    (182/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.332682068 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.231800523 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.021636687 seconds)
    (185/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.232498087 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.248802731 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.120142156 seconds)
    (188/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.334629777 seconds)
    (189/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.252062945 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.254859781 seconds)
    (191/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.760096219 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.237719617 seconds)
    (193/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.430382674 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.867510987 seconds)
    (195/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.672198071 seconds)
    (196/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.244535661 seconds)
    (197/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.247919019 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.344025107 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.295071513 seconds)
    (200/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.244509564 seconds)
    (201/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.429017225 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.231054422 seconds)
    (203/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.270379539 seconds)
    (204/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.244983264 seconds)
    (205/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.294650656 seconds)
    (206/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.255471928 seconds)
    (207/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.335432103 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.29702845 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.244522681 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.300803086 seconds)
    (211/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.845506227 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.268461534 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.292073648 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.041990033 seconds)
    (215/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.269392139 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.319810116 seconds)
    (217/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.353154857 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.25766544 seconds)
    (219/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.405151859 seconds)
    (220/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.30177993 seconds)
    (221/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.975001476 seconds)
    (222/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.272039987 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.246423368 seconds)
    (224/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.232469994 seconds)
    (225/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.065058359 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.250466829 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.245441878 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.192826265 seconds)
    (229/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.456700692 seconds)
    (230/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.031513975 seconds)
    (231/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.822663777 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.245471896 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.330902472 seconds)
    (234/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.242107177 seconds)
    (235/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.244520825 seconds)
    (236/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.473898469 seconds)
    (237/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.460465526 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.806495541 seconds)
    (239/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.268477914 seconds)
    (240/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.330758158 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.574682913 seconds)
    (242/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.287725586 seconds)
    (243/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.272616718 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.247483064 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.475182735 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.331172067 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.253512555 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.254615464 seconds)
    (249/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.256953181 seconds)
    (250/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.245500774 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.28427987 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.851596374 seconds)
    (253/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.618557829 seconds)
    (254/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.590448443 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.251076437 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.252147408 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.248283529 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.45186247 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.656407498 seconds)
    (260/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.967190522 seconds)
    (261/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.247893246 seconds)
    (262/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.251807348 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.687141165 seconds)
    (264/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.3731831 seconds)
    (265/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.247606684 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.710612139 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.281103209 seconds)
    (268/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.292500166 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.09158052 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.636021074 seconds)
    (271/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.236605799 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.323866822 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.626854879 seconds)
    (274/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.380286456 seconds)
    (275/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.313285823 seconds)
    (276/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.249117349 seconds)
    (277/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.351517878 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.991024282 seconds)
    (279/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.276701227 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.256363908 seconds)
    (281/309) benchmarking ("sort", Int8, false)...
    done (took 4.319546325 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.341271117 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.237051025 seconds)
    (284/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.260907556 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.33162504 seconds)
    (286/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.057088132 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.365176693 seconds)
    (288/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.237811332 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.032663146 seconds)
    (290/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.014497776 seconds)
    (291/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.360561687 seconds)
    (292/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.08573486 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.141687043 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.250530054 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.345576987 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.291102442 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.243525725 seconds)
    (298/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.446448349 seconds)
    (299/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.342778513 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.660841717 seconds)
    (301/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.578623849 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.280186865 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.448693819 seconds)
    (304/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.384372839 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.2697486 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.237749571 seconds)
    (307/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.305488428 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.367706911 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.274592421 seconds)
  done (took 1002.810212504 seconds)
done (took 1003.970425357 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.283437668 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.277614482 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.261277027 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.282874108 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.37398203 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.437098605 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.272320389 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.264328616 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.310121897 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.312113147 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.25921212 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.436385324 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.262905395 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.261561184 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.262411078 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.276002796 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.260710991 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.271209621 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.278980711 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.271966271 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.279598662 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.261028699 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.312378312 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.438025179 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.266805797 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.265324602 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.265828331 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.282419643 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.375458835 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.26646902 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.265309203 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.274290612 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.2513445 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.262862346 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.258206821 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.281797495 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.273576094 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.273565266 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.267538294 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.29561528 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.642677662 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.270161465 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.265816045 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.264653302 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.265005504 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.268629578 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.264410051 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.269360506 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.277315503 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.277590015 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.649317544 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.286128166 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.267963609 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.265421944 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.275255027 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.263513723 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.268268429 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.280528986 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.28414165 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280590726 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.254285208 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.277132409 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.267075233 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.280957434 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.273062758 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.661708211 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.261411358 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.270419034 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.633123811 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.269632468 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.661442906 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.273484004 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.26710202 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.28017655 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.298779637 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.269752449 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.267700928 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.265648188 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.273734677 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.264286501 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.275674718 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.280227036 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.272278541 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.268292206 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280320292 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.442431636 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.275993418 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.267887656 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.277039651 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.287011597 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.273908756 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.277881163 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.270844159 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.262964171 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.277439636 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.272326101 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.269442902 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.269689919 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.272804386 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.279380512 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.633606178 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.283706569 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.265153142 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.264454924 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.26637697 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.28131734 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.633437611 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.268167721 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.290552167 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.315785321 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.26918572 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.263501306 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.277586809 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.283576262 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.277533748 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.272322749 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.264200261 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.262372041 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.63634782 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.283673926 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.271149444 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.266768014 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.284742636 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.271579968 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.265755428 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.27713963 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.278149837 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.282777171 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.390016519 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.279546918 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.300889973 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.267864103 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.273976598 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.299545018 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285081324 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.300290061 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.273458808 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285464468 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.284955727 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.268375989 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.280114806 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.280358291 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.272019498 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.275142512 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.264469075 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.300953459 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.282077878 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.28246013 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.290628229 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.392141141 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.268001628 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.264055095 seconds)
done (took 214.98255586 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.33018925 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.268044661 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.359200188 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.267463574 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.366442889 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.365576566 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.264132804 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.265225093 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.264554068 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.65017366 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.265926475 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.266093715 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.259869034 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.264606212 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.350632774 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.267370522 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.266234447 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.638693149 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.267327775 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.339422371 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.268810771 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.26757106 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.268153315 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.688535185 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.267159335 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.262150789 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.339711108 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.269311775 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.622067949 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.263322048 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.264038366 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.649680238 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.357302358 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.28614764 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.279180379 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.275587793 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.367656978 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.286126999 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.351365363 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.351021052 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.362709216 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.307446415 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.270024848 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.269411346 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.270379431 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.270057029 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.267172673 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.296141691 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.267520797 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.267971465 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.614692396 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.279434581 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.267811915 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.267437097 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.267782431 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.299255461 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.267972341 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.27183025 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.359574025 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.271983845 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.333331996 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.662454411 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.686209525 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.271321813 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.267936367 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.268763823 seconds)
  done (took 144.264787181 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.337277536 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.342881859 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.379037469 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.270930987 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.323200432 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.384107395 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.278315019 seconds)
  done (took 10.505090729 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.277491565 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.271530004 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.319688021 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.321246494 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.27112652 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.454753506 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.272577118 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.282908136 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.268540944 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.325315213 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.272896209 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.271736374 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.278669867 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.264830622 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.319055868 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.283736281 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.386595908 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.27248714 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.272779304 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.422990479 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.26954104 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.280693779 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.324530795 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.285081769 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.273311298 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.278127957 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.089356928 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.27184344 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271148525 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.273234562 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27097877 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.359038215 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.274184384 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.271456656 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271916692 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389162583 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.273947043 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271484164 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.273868048 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.268735653 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.274454396 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.273995445 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.273927263 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.271405799 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.273244878 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.296707431 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.273788475 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.274573238 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.273729999 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.274971025 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.324884138 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.274425961 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.271933868 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.271489961 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.330692992 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.281576899 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.275756128 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.272522152 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.275084658 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.272830322 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.425207429 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.322295209 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.275307773 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.322074185 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.274426492 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.276342983 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.275654223 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.275873245 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.329352353 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.274845882 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.322371056 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.27237511 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.464038479 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.297900318 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.276282826 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.27817104 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.278047772 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.274779696 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.272246285 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.28084969 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.273612284 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.277507992 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.281676568 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.273572356 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.273343207 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.461078097 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383695565 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.27401758 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.289682802 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.283396629 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.273857596 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.330031286 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.277252434 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.274823088 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328352113 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.391986365 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.33126036 seconds)
  done (took 147.804380536 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.280915085 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.285367628 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.279405068 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.301032353 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.277358182 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.277466089 seconds)
  done (took 8.896228166 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.280003764 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.278012145 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.278634272 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.277711467 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.277805761 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.278873448 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.278276137 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.279081125 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.279927521 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.278200045 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.278292249 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.279727977 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.279397095 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.278141313 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.277971443 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.279324575 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.27873648 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.276268337 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.278853458 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.278328236 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.382471897 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.278936163 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.278872913 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.278623878 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.284019851 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.280109101 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.287587614 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.279397401 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.278770905 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.28670968 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.281442658 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.280265254 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.280604795 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.285463901 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.282934141 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.280971758 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.283764471 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.282429683 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.278061042 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.281105888 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.28200675 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.280175328 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.280116484 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.282014594 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.281403238 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.284616727 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.285413814 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.288904239 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.281007821 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.281532285 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.282541772 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.280862265 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.280877236 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.282468799 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.28443824 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.300743126 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.286086158 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.282019928 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.28077939 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.281847087 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.283309319 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.281947298 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.282605813 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.285573652 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.279849029 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.283320638 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.282567902 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.285490048 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.282318087 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.282703183 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.284432568 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.280320912 seconds)
  done (took 94.566437275 seconds)
done (took 407.221931186 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.55262431 seconds)
  done (took 7.752811533 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.492853438 seconds)
  done (took 7.694515543 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.244604752 seconds)
  done (took 21.446228472 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.299398026 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.375949176 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.29297831 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.278584742 seconds)
  done (took 26.446687851 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.687900433 seconds)
  done (took 7.88779549 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.275855072 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.277562675 seconds)
  done (took 13.75499983 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.599419985 seconds)
  done (took 7.800251997 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.521905603 seconds)
  done (took 7.723414233 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.295604121 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.312275047 seconds)
  done (took 14.063798704 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.270207531 seconds)
  done (took 7.47241465 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.117133716 seconds)
  done (took 8.320349262 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.282428874 seconds)
  done (took 7.485785395 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.334609909 seconds)
  done (took 7.536725189 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.051403268 seconds)
  done (took 9.253144052 seconds)
done (took 155.83812634 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.278898782 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.279655716 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.284926988 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.285182931 seconds)
  done (took 26.331258137 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.319596764 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.319645527 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.320714957 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.32925725 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.322418221 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.319146442 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.31246177 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.312409212 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.330772559 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.323287941 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.322827817 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.322617959 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.320265671 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.313388132 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.321641423 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.321137803 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.331394743 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.321605188 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.313053846 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.324075315 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.287668592 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.331904821 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.323544825 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.288297423 seconds)
  done (took 32.857010711 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.810105169 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.358214893 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.441778563 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.338951017 seconds)
  done (took 7.153298058 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.339379341 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.341214407 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.3522516 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.391846558 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.416694704 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.350255513 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.313285929 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.309327419 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.29504172 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.341485573 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.416909726 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.357955744 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.442795475 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.287965439 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.46920522 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.288076386 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.288661711 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.340781827 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.391066893 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.413357061 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.288695524 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.339838456 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.343745929 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.358075758 seconds)
  done (took 33.68275627 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.287120932 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.30738513 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.288301473 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.287190224 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.296042878 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.288181104 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.288249144 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.28923221 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.28873299 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.294761961 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.286809454 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.301828886 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.287518596 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.288649443 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.294756352 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.289853851 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.295452504 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.289679756 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.289083907 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.294562389 seconds)
  done (took 27.039454565 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.28151418 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.220611789 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.634502531 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.538620399 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.282586097 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.283155465 seconds)
  done (took 28.447589539 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.35771294 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.492971204 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.297208362 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.632118153 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.708584352 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.290005932 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.291117159 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.522962693 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.834238502 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.818874928 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.347129031 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.356546143 seconds)
  done (took 19.157070635 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.297977285 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.290524642 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.29189548 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.307388594 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.34317103 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.295280799 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.297793632 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.284645621 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.349988147 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.350050448 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.301751499 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.344586828 seconds)
  done (took 36.96442013 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372707346 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330126392 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.19809056 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.039752334 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.011022301 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497642064 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.048781017 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.019478483 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.296782504 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560441614 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286908635 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382066186 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.542188007 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286151156 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.295021665 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.284462595 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517759209 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.751007081 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291023336 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.317406753 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316225285 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.299743382 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.322340525 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.513101426 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.50557216 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.264285485 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.55129249 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.06178494 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565661741 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.301376428 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298957968 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287851074 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.562605579 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935140148 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390458569 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493992918 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.00216413 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.840185604 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.306512008 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.241577368 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294557766 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.297222846 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299306085 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289366596 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.221816173 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289163188 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0338939 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.30187935 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.001162813 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.289765118 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.539731703 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391020248 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.292501284 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.859508303 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289276854 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.311909329 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.292685497 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295556832 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861243239 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.692754493 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.299153919 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.230175416 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.676368881 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.324667069 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891265438 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.295395638 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.293169149 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.293407271 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224252386 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.345960546 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.311874084 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437801749 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.315274549 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.940668108 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953915194 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.3037385 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.227290361 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818514494 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.298916151 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.23147714 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.518743601 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.068638931 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226223122 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.230672642 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.22461646 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980066927 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306235981 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.668833341 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.306636606 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.0220978 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.505701591 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318823141 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315232654 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.514066867 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.177096792 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292158771 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.292238384 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426216194 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314037494 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.025777143 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.232289453 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.295796177 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.54760066 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.503278149 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300052809 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.295004958 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781927312 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301345115 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.313710926 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.297431563 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.50611616 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.858855983 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.308525704 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.711393016 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318078796 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.068789058 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023402054 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305259682 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.30519252 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.293358312 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540366999 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.077456738 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.198785788 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361559481 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298722301 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.293928275 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.339541711 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.149461075 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.175270122 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.492135936 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324089572 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.31072388 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.295188194 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238563269 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.292554274 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317752369 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.096135646 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.516578312 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294492657 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578286636 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227544019 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441848302 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.305570487 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.51768458 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.46995546 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.300028429 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552936895 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307550669 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.305559202 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313292438 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31442176 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394699255 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316955224 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.295512422 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.556901367 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.297988481 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.298969622 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.346195771 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.081664395 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297667921 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.301806303 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.158576886 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854814069 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280355312 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.304848322 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185469676 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.311493985 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364092232 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.302410175 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.504489384 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.093596173 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.11385372 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.30715374 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.294832316 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541925808 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.306474723 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.32910524 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382878637 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.7760432 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.863693906 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317143413 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.231689463 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.008667645 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.990557032 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297302136 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.495673903 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299230939 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504405103 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320853564 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.822182369 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.866079962 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304574479 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.26060034 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.310736927 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310741259 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.304030973 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299394807 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.039603419 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.738135463 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315777775 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.31688788 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442403763 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.313555674 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.233347949 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.815583228 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304173149 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.301079777 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.074346174 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332765126 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.269817407 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10428297 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.558283794 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.998302721 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557288188 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.362663375 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.336938305 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.299127423 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300601478 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325264234 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.325488331 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324760427 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.310294751 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.266813253 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.743609135 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869438431 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992637763 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815869841 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.590205021 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.311871356 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.188661222 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.039618753 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241265504 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.956737493 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.487755791 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.044722246 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252447641 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785940196 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.492822927 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.051215712 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553845032 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.537552612 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.602648848 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.315176454 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.562454176 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.520816162 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336176898 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.303321399 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.236239121 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.826179235 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86161346 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323323373 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390058695 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037606859 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311949296 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.086092177 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.301821208 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.004961604 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.712072466 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.937290184 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.68977959 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.313991718 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321852856 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108363678 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.311266516 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.82734729 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904856607 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.319598968 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.789631273 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245220821 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.511342023 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.323035488 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.307693382 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.561339998 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.319873537 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.558026188 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55852336 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246112033 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.303481975 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818348314 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.166850129 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.309470749 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304084169 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034967718 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315761602 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589853794 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.317869805 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.055360618 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31224169 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.237928464 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238702603 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.996706131 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.313856641 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280690439 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774881625 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.678173783 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.340174049 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336112078 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156243951 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.560098222 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.319551536 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.866293726 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537801241 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.110506732 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334114574 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.308768265 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.314175607 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.301855432 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.196606134 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.54168155 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.305019319 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.529059372 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.249858695 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.22025311 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.305044811 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.525063144 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.186427553 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320640893 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554762328 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.025518692 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.330157345 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98090921 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339726364 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307367093 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.341043321 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.696367722 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.322046996 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376740759 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516191371 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.325366921 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.317745007 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710541134 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314370495 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.317365088 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.320950252 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400578104 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.760060432 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.053354023 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.088834026 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873737372 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018054843 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.88276864 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570725311 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.316476085 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311780884 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242017554 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456835281 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.835514366 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582148476 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438015016 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.812209683 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338144973 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.314622958 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323438244 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527079699 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583729294 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.17906448 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309100363 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.975451451 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.20657238 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.319298306 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.519597666 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784549239 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859795214 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472549861 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321336887 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056473032 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592563985 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.376085357 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30981761 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901949638 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.320604364 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.018519418 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.323316784 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323549476 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463904441 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561811052 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975236145 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.327090724 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.465946598 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.08422849 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.385324344 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.572126483 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.746643274 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.523231666 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885826583 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.996877339 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.581797422 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38083129 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.521820859 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.432280029 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458336577 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.316162081 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.199839889 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311550477 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155155119 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.022267624 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.320909583 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884384879 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575068198 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.314721702 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.317894387 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342949937 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.322921564 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.534208638 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012992628 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.543562587 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320992708 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321624159 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.302627057 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.884941774 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570409495 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254780947 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.317813576 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550629308 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.549684729 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338596716 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.778778737 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.029225497 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.849766492 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.285760527 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336012104 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.319324605 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.006582918 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886590706 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.058555173 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792669482 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.972712742 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313902716 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611433154 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.319312474 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.31498368 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615990703 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.318098618 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.325094956 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.53393075 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.888888472 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.069773657 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.330005016 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.426571989 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.251263535 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.540339958 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.957637284 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259734707 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324649315 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.732696798 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34305359 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445491686 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326923508 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.324780675 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335333011 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.054697602 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.595818367 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.320055447 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.320907524 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.31941967 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.329857577 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329897689 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883015551 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327538045 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.006804642 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.665464583 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.571031339 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.329549692 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.310993071 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.319600759 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316561123 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.03364792 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.285581999 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.843629158 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862643054 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.318956584 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.335013273 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32118262 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.533868568 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.528550617 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.316975303 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.53248396 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319368113 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338737907 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.223764828 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.083542087 seconds)
  done (took 1571.810909789 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.345296013 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.327865078 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.317659161 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.327795479 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.332100837 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.365594137 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.352160112 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.348969181 seconds)
  done (took 51.957320692 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.330575226 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.472797629 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.34840939 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.333130068 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.326595089 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.3284964 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.772125006 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.322475981 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.327162985 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.327996271 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.329023227 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.323604028 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.972640737 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.328668719 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.323249646 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.314755322 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.327318986 seconds)
  done (took 65.049240046 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.333188154 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.8363089 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.416525385 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.32086773 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.273173974 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.343512106 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.984599512 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.33805389 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.320097807 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.602377312 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.967700125 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.362376406 seconds)
  done (took 84.339695386 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.330629507 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.329741941 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.330119033 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.330855783 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.33141553 seconds)
  done (took 7.892616733 seconds)
done (took 1993.886638136 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.564454035 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.0166441 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.933309509 seconds)
  done (took 5.1903727 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.474562362 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.525975011 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.644972938 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.651051746 seconds)
  done (took 7.545628785 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.616461755 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.71810991 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.527734843 seconds)
  done (took 6.111874469 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.704218593 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.357099317 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.450283315 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.328187447 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.334320562 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.337387123 seconds)
  done (took 20.250171554 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.333128881 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.334797535 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.333090204 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.33482744 seconds)
  done (took 6.585210088 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.317006255 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.054381946 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.319846408 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.339000463 seconds)
  done (took 18.279879791 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.080253364 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.093149402 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.077241963 seconds)
  done (took 7.500825154 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.344449346 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.274644752 seconds)
  done (took 9.868619735 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.625970045 seconds)
  done (took 2.876428927 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.465108873 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.658424953 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.412304 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.308206752 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.421148337 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.086998032 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.910129439 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.520397802 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.256621111 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.445583333 seconds)
  done (took 27.735509398 seconds)
done (took 125.261626699 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.075336368 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.713269159 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.535708062 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.087138591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.55710382 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.533460668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.526468496 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.050798353 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.555828889 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.548464961 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.091322787 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.556169033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.686508122 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.711028704 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.695325254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.710568903 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.555433941 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.116291807 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.733119975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.98261674 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.536445051 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.691140544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.925597792 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.712587858 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.556182896 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.489056983 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.286507107 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.711296501 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.908124613 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.306408306 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.489656572 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.156319377 seconds)
  done (took 190.04366744 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.342366968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.345254634 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.332281135 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.33244178 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.331482704 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.35458523 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.349591813 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.359997094 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.347109358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.332716151 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.333754133 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.344140227 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.334585172 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.337354215 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.333685343 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.340285722 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.346676739 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.337165267 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.338623341 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.33248646 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.333533267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.354365524 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.33373047 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.346483932 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.34288868 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.335890374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.351710894 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.334034934 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.33514739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.336985837 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.338501381 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.337959212 seconds)
  done (took 204.141236028 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.34271774 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.344424809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.334460336 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.334899059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.334639442 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.338568001 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.351959491 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.335095868 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.335089989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.34561941 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.334763573 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.334731112 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.336735428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.334273604 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.352404063 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.334148659 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.334581492 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.367062296 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.336571645 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.335089195 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.337008788 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.334653134 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.365662677 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.334781719 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.351755985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.336119298 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.332817387 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.340768765 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.349944553 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.334237455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.338471698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.340764917 seconds)
  done (took 204.164556806 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.540731991 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.341539871 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.341863164 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.29682525 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.340779241 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.341972317 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.334418072 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.537910731 seconds)
  done (took 14.330436813 seconds)
done (took 613.929710687 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.595139149 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.308671503 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.535985711 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.364258136 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.068477548 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.380297612 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.36332685 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.526854479 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.243429031 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.529932274 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.593911419 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.360592069 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.737077761 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.360301923 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.603971003 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.457013784 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.2503227 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.352014545 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.669438092 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.852001275 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.617656804 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.781257043 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.528466076 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.237365004 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.758036179 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.784614677 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.035620848 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.237136969 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.363521086 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.673541024 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.939799882 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.30812424 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.399989469 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.400433171 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.456322468 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.454346012 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.258183697 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.414395457 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.542230968 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.546286389 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.851367018 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.06790552 seconds)
  done (took 91.065960047 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.333079144 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.332408765 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.332439312 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.333502013 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.333974599 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.334422625 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.333809862 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.332337843 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.333131597 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.333454597 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.333734217 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.335307771 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.33300601 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.33595575 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.33294445 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.333951661 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.335040346 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.336673221 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.334548233 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.333307378 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.335133799 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.333869269 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.334342729 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.334513615 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.334482958 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.33518564 seconds)
  done (took 35.943833902 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.347739919 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.598756988 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.756110188 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.352628163 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.345496793 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.35170818 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.42266341 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.354401977 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.350332459 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.349971338 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.515744414 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.348764549 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.38226465 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.784199821 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.349728322 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.348053474 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.346733161 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.347468606 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.604934496 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.356541044 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.442671026 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.347684129 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.42306512 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.358565509 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.369475855 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.348521609 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.352632713 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.862971129 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.349193227 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.515232483 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.114196383 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.426806818 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.814759106 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.769018075 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.117960396 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.356465009 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.348355521 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.520186467 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.349719664 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.347794589 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.421931753 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.348537957 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.766998277 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.965188457 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.367224339 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.348879301 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.88226186 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.520085034 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.583811008 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.358549887 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.792349162 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.352592498 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.351646402 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.350882858 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.58595108 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.356818215 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.349562489 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.874218453 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.373797885 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.424536113 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.35186484 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.349651297 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.612989094 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.350643673 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.601167473 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.351232171 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.358742156 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.370515646 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.76751272 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.36128886 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.988453753 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.369659131 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.351538365 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.516513649 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.604468758 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.917826801 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.354879077 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.619102958 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.831562794 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.431290085 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.363299227 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.85280742 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.429549666 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.363568779 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.35333985 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.35448002 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.351782512 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.3993675 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.423920586 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.924204105 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.978121696 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.891874941 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.443848628 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.361143769 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.353378808 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.874504612 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.368379864 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.35290833 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.761712263 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.984475979 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.369368332 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.360308292 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.986136851 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.378836917 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.42695649 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.365845796 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.769754241 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.352680424 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.402964207 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.352912017 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.360545997 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.375586257 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.428007035 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.359344906 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.353682554 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.958677071 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.545360733 seconds)
  done (took 177.582651855 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.348651778 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.364310125 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.346633965 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.3650654 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.347167216 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.353310745 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.34796257 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.347936593 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.352354614 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.346801813 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.347355511 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.34969637 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.349346465 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.353152463 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.358087561 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.35477175 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.961192183 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.349708113 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.348556267 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.363573718 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.136961274 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.357581482 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.360397693 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.349038046 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.351992898 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.347428164 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.353649942 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.369153944 seconds)
  done (took 152.548470052 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.356158088 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.895224687 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.357218421 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.482171379 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.375298608 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.353166355 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.479954793 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.411854871 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.355994256 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.353492085 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.353464628 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.645661406 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.357756599 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.854429417 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.548388331 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.488155927 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.862520852 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.38133544 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.35355068 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.35473618 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.484265877 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.366126193 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.647642419 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.90166998 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.358496818 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.899590067 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.347588845 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.357789345 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.355720981 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.902143685 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.354570011 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.648396231 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.43126642 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.422037244 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.90170474 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.852435967 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.867333327 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.500833744 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.364638831 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.356432963 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.355437756 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.34780682 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.902907832 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.359398824 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.357169999 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.898888734 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.376087315 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.359443067 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.363267947 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.355666329 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.415031365 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.415627789 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.653379814 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.908615615 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.432385619 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.369058945 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.484079012 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.74150051 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.361397427 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.853398725 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.348215346 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.906402346 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.37587061 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.347823132 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.358484389 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.362953523 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.502491991 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.484509259 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.863618916 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.3756185 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.855230344 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.518784626 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.35996125 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.358231232 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.360965169 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.907595842 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.856463801 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.519009797 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.488813284 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.544879129 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.358102938 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.358374945 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.349927743 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.434172821 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.358939229 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.90928214 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.872841877 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.377356702 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.362548609 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.362338543 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.360562127 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.526820981 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.915491727 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.434857959 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.8596815 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.670663705 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.654732826 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.360955235 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.41619157 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.376190537 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.65630619 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.36226983 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.413943483 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.796319033 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.656214264 seconds)
  done (took 161.424889304 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.593999195 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.558185127 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.453701562 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.486680955 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.948797871 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.914131966 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.559302034 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.493991301 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.468710156 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.611799813 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.493931815 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.451197268 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.525981833 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.433520603 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.053473937 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.425088247 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.448856607 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.511843178 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.452113635 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.372545406 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.969724435 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.646686403 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.526970958 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.172467697 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.453610703 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.138235138 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.906254494 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.880059347 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.536861308 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.628180033 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.89770403 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.463315633 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.294452059 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.999792991 seconds)
  done (took 65.047491469 seconds)
done (took 684.868539002 seconds)
SAVING RESULT...
DONE!
