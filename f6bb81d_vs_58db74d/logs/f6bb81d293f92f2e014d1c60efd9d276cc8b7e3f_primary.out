cset: moving following pidspec: 568
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.320121579 seconds)
loading group "string"... done (took 0.59592595 seconds)
loading group "linalg"... done (took 7.658457989 seconds)
loading group "parallel"... done (took 0.173863944 seconds)
loading group "find"... done (took 1.183864545 seconds)
loading group "tuple"... done (took 2.136082986 seconds)
loading group "dates"... done (took 1.339279931 seconds)
loading group "micro"... done (took 0.246982861 seconds)
loading group "io"... done (took 0.929838472 seconds)
loading group "scalar"... done (took 42.125947656 seconds)
loading group "sparse"... done (took 14.217724743 seconds)
loading group "broadcast"... done (took 1.064623933 seconds)
loading group "union"... done (took 15.245610699 seconds)
loading group "simd"... done (took 4.845717784 seconds)
loading group "random"... done (took 9.801429763 seconds)
loading group "problem"... done (took 2.058714572 seconds)
loading group "array"... done (took 22.731917248 seconds)
loading group "misc"... done (took 2.113283659 seconds)
loading group "sort"... done (took 3.503043246 seconds)
loading group "collection"... done (took 19.284783155 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.566420053 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13673072 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.125946805 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.150522211 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.19953016 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136449138 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153167 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.092906353 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.909478803 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.166648724 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139416606 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.500751588 seconds)
done (took 5.024898279 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.208928039 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.079790742 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09239576 seconds)
  done (took 0.864332625 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.087620457 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.139849717 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.088033768 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.073008857 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071725249 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.088808656 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072546123 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.087997818 seconds)
  done (took 1.315121829 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079398911 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073611899 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.09076663 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074831648 seconds)
  done (took 1.009141472 seconds)
done (took 4.186922963 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.707759087 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.252557117 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.198906854 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.497848379 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.171491372 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.203441763 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668156246 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.345066974 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.239075033 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099471918 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.125909846 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386499436 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113936219 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679018125 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.083198262 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121420962 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.166922557 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454356315 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.088125503 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088402731 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.110879421 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14842331 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.108552904 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081025506 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.175036989 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075108144 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.179569719 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.102741504 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074158914 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.264379092 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.182227483 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.703657126 seconds)
  done (took 10.626248424 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109535687 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.131767648 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074057359 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.150874752 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132291828 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07686725 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.092787888 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074896605 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.118266472 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.171915882 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.110827275 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135783166 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070416085 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093578765 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.093877005 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.240372682 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11456868 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.093385461 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.093491677 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083518435 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.130954987 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.090055807 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.102416378 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.100824243 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.148303731 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.213643529 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107292534 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120215413 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.07623538 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.107517238 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.137600901 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.153315696 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077324563 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074263076 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170701048 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119168653 seconds)
  done (took 4.900974034 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.0964351 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.184976252 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097886312 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165763399 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089114272 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139516008 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.073406433 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107842863 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25247008 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.102050899 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1584754 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.136616738 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113244325 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075284402 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.094509406 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.105761503 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092006728 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.46781676 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.159568875 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.128912672 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.09362608 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096007449 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08215906 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.375772621 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095468924 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072304444 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094507141 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067478659 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.070998544 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15686684 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096981203 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.155464179 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.093644327 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096125484 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126524905 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191543948 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106128914 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128744184 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092450582 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072069831 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174787828 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.079201453 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092182836 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.10765717 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131301518 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131361616 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.088334136 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.076490518 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204959263 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088610909 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089490396 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.945376988 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.174947443 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.087486141 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071999562 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330603141 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.110519828 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073684725 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09012056 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.254085664 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.121205572 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.090127817 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074181666 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075803065 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.093964953 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389599466 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073291124 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.023615933 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074940295 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082921931 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091564872 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073704176 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097256287 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080211242 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.109742819 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072946658 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.092223551 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073397044 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.088894581 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.075311013 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108151076 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.078518679 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.089309194 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142467736 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.07242564 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.110796661 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120514241 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.077637912 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073231434 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124985705 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092239461 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073742174 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.128675511 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.075751428 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108688719 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.089538677 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.121222388 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089394117 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.146198183 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073473842 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120801585 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07823919 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.116933117 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122584682 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085820903 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092089521 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078917481 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.070395778 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.089697416 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07126417 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155098364 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.074014046 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.073975302 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.091689752 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085231397 seconds)
  done (took 21.734883492 seconds)
done (took 39.053578679 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.328409245 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105007037 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104063485 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103199892 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101593389 seconds)
  done (took 1.508861079 seconds)
done (took 2.252258884 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.158329518 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109702067 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088243166 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10417929 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091038318 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108985974 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124085269 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.104889546 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108624515 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087550946 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105176424 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087418044 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071112391 seconds)
  done (took 2.11574656 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089177947 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092791195 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093942657 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088509535 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087269746 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08776122 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103166829 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093861178 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102869932 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079369926 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070375785 seconds)
  done (took 1.725416651 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087879193 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090378837 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094446064 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087141116 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0870215 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086998364 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103467253 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092993482 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10420153 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079886634 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070248218 seconds)
  done (took 1.723694123 seconds)
done (took 6.298414793 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.088410829 seconds)
  done (took 0.819545715 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.849899805 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.950999589 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113285804 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.157689858 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.231013069 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.201913351 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.563680813 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108509602 seconds)
  done (took 15.101838298 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.121926454 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.096485433 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075595247 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09270137 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078207237 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096891518 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074278597 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.075251501 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090028104 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076379332 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094089123 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075504332 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092108672 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075050047 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09308738 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07706765 seconds)
  done (took 2.184504318 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111774167 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109280485 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098290932 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083134399 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096729943 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078013243 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098169589 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080087293 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094484879 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07853363 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099571589 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.081408271 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097595043 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.076670658 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097278055 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.083484812 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094067638 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.080933168 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.097568693 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.081289694 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.100597229 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.07876411 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.097118411 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098422203 seconds)
  done (took 3.036271173 seconds)
done (took 21.880479046 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.144909456 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078885203 seconds)
  done (took 0.965385009 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094468139 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112100154 seconds)
  done (took 0.957361208 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099887656 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09212939 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.126186225 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.090980827 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093276655 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076305918 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122912438 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07662355 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092393037 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.076607992 seconds)
  done (took 1.697507621 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.079425058 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080250295 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099898594 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.112384515 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.085876968 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095119593 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081622641 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09627563 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081530793 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091194632 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.083458269 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.108502034 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08225594 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.109819529 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.080861689 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098095774 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101067129 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.079559907 seconds)
  done (took 2.399644147 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.075696233 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.077864443 seconds)
  done (took 0.905539678 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.078289497 seconds)
    (2/7) benchmarking "second"...
    done (took 0.073977884 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093757886 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094098695 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.074418553 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.073956036 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.090759252 seconds)
  done (took 1.330077626 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.474837117 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120020321 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.275609951 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079072828 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.115706506 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.319905771 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073502953 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.098102364 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078359137 seconds)
  done (took 2.421834927 seconds)
done (took 11.422636397 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085007085 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.095711753 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.122362414 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.442063134 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110121993 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.073164547 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.139481366 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.24051964 seconds)
done (took 2.065313751 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.140027852 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.597213732 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.420265718 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.220905588 seconds)
  done (took 1.995650922 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.399738638 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.100750596 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086171085 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074776468 seconds)
  done (took 1.423719779 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.072965068 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077529329 seconds)
  done (took 0.911381331 seconds)
done (took 5.227928081 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073123729 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.124000758 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071468428 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.075742113 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093215044 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.070389268 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.092504231 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.071119032 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.071389775 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09156057 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07339982 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.090297026 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.073053999 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073797729 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089158181 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070930893 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089920896 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.070995348 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.182814064 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08773879 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071105359 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073416139 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08857361 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070868305 seconds)
  done (took 2.831909085 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102345529 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09216223 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079221633 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097320318 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077162238 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.097470294 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.078598282 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091418367 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.079232485 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093252346 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076836925 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094476867 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075520766 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094443971 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076058534 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095838186 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.079001068 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09177003 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076040951 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09484516 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.079392702 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091807895 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.077320149 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096719282 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.077667792 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094403571 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.075633305 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091553305 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078690013 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09352417 seconds)
  done (took 3.362775512 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.0783387 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.070655955 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089358851 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.077916709 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088947411 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.075531731 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.071514964 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088901519 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072507832 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088760544 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.072555683 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.071460705 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089767469 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.071924082 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.08983994 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.076020402 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106157658 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072233954 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07141784 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089866299 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074292783 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089915355 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.073949549 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.071013142 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089039814 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07055695 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.072601473 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08892327 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.072608821 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089412972 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07519848 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074816866 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088562385 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078195195 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092485848 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.071255883 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.075092578 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.087545463 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.072835741 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088801665 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071507243 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.071461782 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088454731 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.079059357 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092585591 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073289904 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071696078 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090648005 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.072500115 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092134164 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070816144 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071883387 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091535003 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.073346209 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09348738 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072151898 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091082874 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.072070125 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.073122615 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089184579 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.07167743 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.089803846 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.074048054 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.072104351 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104813388 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.077935372 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089664817 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.073525994 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.075723582 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.09114686 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.072955629 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.103531529 seconds)
  done (took 6.573947299 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076316901 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099694616 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073750702 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073254865 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087474211 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072663858 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09583434 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07150974 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091283158 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088714225 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090091322 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072784734 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073946435 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092782907 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072333801 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090947563 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081144081 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086815613 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071790698 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09261253 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072155429 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078380202 seconds)
  done (took 2.574092998 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.203121566 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097293072 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.116201561 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10474358 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107754506 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08716507 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096292835 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078969226 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096488333 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08168812 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098741761 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078480985 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105947286 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099644589 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081662034 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098897747 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078899009 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099153942 seconds)
  done (took 2.583689548 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.086633706 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092711392 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095831399 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092368803 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.074949132 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077532998 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098329211 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108302035 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076543502 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093292055 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.084175701 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095801356 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.07683131 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074137928 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094472475 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075236686 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094676513 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075013051 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102418989 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080709757 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097643229 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101987297 seconds)
  done (took 2.722641027 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089692045 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0947053 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093681607 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095527907 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.073348312 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.093788 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08140351 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.075241983 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.099285288 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07673143 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093404872 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.075419415 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.097833088 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074622375 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097968722 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074670528 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094171041 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074415056 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094158904 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.073777239 seconds)
  done (took 2.497145365 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114431494 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10888696 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089592909 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117026953 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09071245 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107898034 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118250627 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089977601 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107039167 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102286027 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107635649 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08969985 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118288537 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.096367921 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107361594 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119472879 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10009712 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116955519 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090615869 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107247513 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12355478 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090595271 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120193533 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090505327 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107354619 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089788814 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107472554 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096217595 seconds)
  done (took 3.703584856 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07514849 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075329931 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090991665 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.072213912 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.071991351 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090490814 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072572162 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090457983 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074739673 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072206347 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.093192504 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074228403 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093196143 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074492355 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075068282 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09277102 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075222163 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.090992727 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072238039 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072187026 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092682123 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074728393 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093076996 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072509416 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07244187 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09345595 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072539249 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072322899 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092894889 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072236739 seconds)
  done (took 3.189536557 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.082428398 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098212521 seconds)
  done (took 0.961943921 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072251662 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10874018 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072675774 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079337295 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099307058 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075024661 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.103032461 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080833119 seconds)
  done (took 1.470779191 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.093067396 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112365977 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082018021 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107750285 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095066919 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.111852841 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134231747 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101151655 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.082517195 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094309291 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.093047364 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095492529 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.082809277 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.076959746 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.101763562 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083635852 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096697091 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088139399 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102751872 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079511892 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082740896 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104285749 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.079099645 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097882537 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07854322 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.106080073 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087116422 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104250395 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08013283 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105103264 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.082527369 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089326519 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.0804096 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083116551 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095364638 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094253012 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107017622 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080441614 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.103404726 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082505372 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103816483 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.074986879 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.100366698 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.082554839 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106015391 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08021012 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100721943 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074079425 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.073443977 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.097054219 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.074656381 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094760843 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.070235337 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102632849 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.081109564 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107567915 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.077871584 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.077082158 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.097140655 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.078486515 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.100205839 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.077640425 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096596045 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.07895387 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101404734 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079179095 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082895935 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092030156 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.069409716 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095589652 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.083754152 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117339699 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.084358722 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099134856 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.080307207 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095633258 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078459667 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101152654 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081819873 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.101641113 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080470758 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082964892 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101561685 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075368973 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.096368457 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.082738995 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095320139 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.078682793 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.073561189 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108133077 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.078660378 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094055385 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.073307251 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.1041374 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.079068938 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098576247 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.072450038 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084510327 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087897925 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.081590657 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100886587 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07661596 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.105292785 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08078148 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100418554 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.083140021 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105577114 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076960661 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081241666 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092999412 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082979855 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.096003799 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085063441 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09124178 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080322115 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.079709747 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101166969 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.085643421 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097145675 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081424391 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103267639 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.083545408 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096966877 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.072810833 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.097010812 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.079258049 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08366201 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.101058661 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078270985 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09251553 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.074086438 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.097702898 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.080025958 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.099034683 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081245331 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09729604 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.070772683 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.077769476 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.101081316 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.084203842 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.095829031 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.076168892 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.099887981 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07716718 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.079472088 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.101212845 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07769415 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.094885904 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.080530948 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.097303633 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.074923299 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10270677 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.078382123 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078657481 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.098701504 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084922447 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.096663342 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.081267175 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098061617 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080697021 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101320776 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.074755112 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07526459 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098109523 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.085831913 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.096411378 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.073977028 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092477638 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.082000741 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.073375399 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097892119 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.075507836 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.097823132 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.081263184 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096418278 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.07938838 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.077559969 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109117825 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088778486 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099833499 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.081450053 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.104642049 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.079233973 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.096682672 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.079501142 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099788671 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.0806974 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.10198045 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.081090893 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09964912 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.077823638 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.073044439 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100885875 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084163924 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.093248781 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.07671337 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.093698544 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.079929514 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.083015845 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098585624 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.080900833 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096304978 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076679977 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102444499 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.078857533 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098173604 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.075069659 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.080132541 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099167913 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.081685202 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099837232 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.085923202 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097590105 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.074031037 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102507039 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077444039 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.081913886 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092211244 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.074360205 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.094094459 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082104536 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097894806 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.078965952 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.070143986 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102102518 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084226801 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.094438899 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07496154 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100592245 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085739312 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.097912043 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07921259 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.080185791 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.100580469 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107798774 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07490753 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.079608354 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.104168172 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081040729 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.089407026 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082108831 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097921721 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.07604433 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.079056693 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096439808 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079633996 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101505395 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.084610656 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.08869568 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.078503103 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079341204 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.093693793 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.075715244 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.101806425 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.079931473 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.096248085 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.085276687 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100871106 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.081326828 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09869302 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.079901128 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.081798828 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099673547 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079476936 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100790896 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.078717506 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.093970894 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.079133947 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.094058793 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077230536 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.077894569 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100211347 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.077091079 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100808564 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.079522406 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095566205 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.078762229 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.081459806 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096128459 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.077315443 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.095459358 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0801553 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096617611 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.076734373 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.079220364 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093349968 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084110347 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099091768 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084190855 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.09477296 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.072350357 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10002467 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.079146651 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.081882216 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.09977636 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.081935231 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.096263268 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.079894305 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.097627495 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084970784 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.093611396 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.085557455 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103712088 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078301268 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089990881 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.098431569 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08080463 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.097065288 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.080482101 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104152611 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.079002959 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08227529 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.102228154 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081700406 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.097240142 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077950555 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100549313 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.076793918 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08200854 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090026859 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.076699686 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.096346563 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.081629346 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104828685 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083188259 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.096837878 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.079271119 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082449335 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09847399 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.073378302 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103456887 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083750405 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100052078 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.085172924 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.095131249 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.077565824 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085587619 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.088947615 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.078435709 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096215664 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.073711259 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103443496 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.081871244 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.083976947 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.095630732 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.076049443 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09254043 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.081314268 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098272412 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.072073096 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.078219538 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098185612 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.076439215 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097758257 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.081954838 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.09814561 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081760185 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102446237 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.079789135 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.078712441 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100320291 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.07393215 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.093737054 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.075904791 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.079278616 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100294085 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.074302964 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.092712125 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.080292466 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097883654 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.076800481 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.079984141 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.096122517 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083339432 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099691288 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.079906427 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104131874 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07157613 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.098111579 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.080473589 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.080630276 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.095005295 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.080613344 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098722476 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082531544 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.102519396 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081571883 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095416262 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081511211 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.077098727 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100018558 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.080354085 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10047206 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.075522389 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100923582 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085202908 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096458554 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.078539825 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.076152398 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.096111009 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.081546145 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100681714 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.078986938 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102633929 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.077246736 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.078447651 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.101726889 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.08139679 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09894893 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08304755 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.096609458 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082758673 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09476878 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.085785039 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.095804164 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.081994085 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.078106159 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.093422296 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080511248 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099606516 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079873604 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.101067476 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.081921926 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.075889056 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.095572949 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.0775961 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.096778547 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084928102 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103259375 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.079982915 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098895924 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.075538428 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.073885797 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10153059 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.074790641 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.098144104 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.079819181 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102344137 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.079539257 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.076941719 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098736185 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.084439954 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101832517 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08182519 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09344963 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.082262042 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10105951 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.079225447 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.09714345 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.077496237 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082226191 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.100965645 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.078789595 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.095765175 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085403898 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.099891142 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083189838 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.098536897 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.077877925 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.077357212 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.094477566 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083208345 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.099140319 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08378536 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.098459025 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081083295 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105214454 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.074907541 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.077157573 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105261034 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081572624 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.103763024 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.075413863 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.09744915 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082776848 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101305758 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.075897384 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.076198667 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.093956354 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.079554559 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.095494919 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.075680668 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105926259 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.084461716 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09812727 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079147111 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079490204 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.094432221 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.075455538 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096109338 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082731589 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.098087796 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.086278557 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.076218339 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.095196518 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.075443574 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100707937 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080083581 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.099105544 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.074222989 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.075835806 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.09521408 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.079860005 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.102958252 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079989363 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100547565 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080478589 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.078669266 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.097226069 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086003328 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.093356473 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.080984506 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106882798 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.082540909 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097629071 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.082103232 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104066451 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.082290175 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.074808971 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102059953 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.079177595 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.096389233 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.082836696 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102015041 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092005471 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099659917 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.076680449 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100369626 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.079843198 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.076733588 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10367768 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082740805 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101578924 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.082090453 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.098486295 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083466046 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09913976 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082882502 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.098895512 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07982227 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.079289344 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097450529 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.079304267 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.097325511 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.083040749 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101927366 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080661837 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.083935744 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.095969562 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087723802 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.104545247 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.079257199 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.092821037 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.077149902 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.077239293 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.094895331 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08232945 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.094845264 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.079555503 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099667827 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.079794983 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.077168852 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102879631 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.079417538 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102735631 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.08113354 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.090450876 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.079398289 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.078824615 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098281238 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.074088297 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102531924 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.083341777 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.103154057 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086451649 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.094950363 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.079840725 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.079296949 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098018786 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.076398506 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.102923428 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080526287 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.099472902 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.077641868 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081858404 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102064762 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082381121 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102915523 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083738416 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.099225903 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.083578536 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104522046 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.076161604 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.075311948 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.10447184 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.078864127 seconds)
  done (took 53.532022814 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121391762 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103450536 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072838595 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094542405 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117953766 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077455956 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073152751 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097435907 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077440164 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10699103 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073715177 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093460985 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092852845 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118733979 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116286174 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106513437 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07269424 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098295732 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073362676 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077036678 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113520465 seconds)
  done (took 2.806992808 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099021937 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111159995 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08914758 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113172734 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103899269 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089735831 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108399547 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10973588 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093364938 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104085029 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092205993 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1104292 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104610025 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.084737768 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104561109 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087962794 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113123734 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102971274 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091207006 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1082721 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087297779 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108766948 seconds)
  done (took 3.043697372 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086733642 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081245861 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.103670125 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.073025392 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101720234 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.072767559 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.085417538 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.09531544 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086066233 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.096231572 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.076678551 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.096226389 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.082248984 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.073829748 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.097902787 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.07523069 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.148752595 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105690557 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081707794 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10358362 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.075557507 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.079401115 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.095902746 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.07686501 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.096130781 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089666906 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102510755 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.083114913 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.081238151 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.096224184 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.081306252 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.094473201 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.078914963 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.077064369 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.096379014 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.076650087 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101633172 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.080918647 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07528448 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.098442562 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.078835345 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.096162842 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083145167 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.098848005 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.078493407 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.075666301 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.098494453 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.081646452 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.092582361 seconds)
  done (took 5.176454192 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.109177527 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.147243287 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100031401 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142325168 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.094419938 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110064495 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.081244894 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.118592818 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.097225597 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08031115 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.117659003 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11483017 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08111827 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106453951 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.085255599 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10111607 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083092769 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096810227 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.085694242 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.096729955 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.086065818 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.104395716 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114877412 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.092809419 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104128 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080531389 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.096959829 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.086362684 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112041099 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.106280753 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.085769477 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107409992 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.094829612 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099283439 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.076923046 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104151975 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.116816402 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.081898962 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.082841143 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.096486258 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.083111442 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106476922 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.084259124 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.117566371 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101240274 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.082878999 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100958308 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075467504 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112654464 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.084438056 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110867551 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113774642 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086203267 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102107355 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086783401 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.115458573 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.081266859 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100127854 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.084972419 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.112609063 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096038945 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0854483 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114103283 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.083149385 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109718561 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114070472 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.083202425 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105910808 seconds)
  done (took 7.683869112 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110007539 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107006297 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096487798 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117109653 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106832813 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.086253104 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105822279 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08675653 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.106171202 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092656732 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104844704 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.15316243 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.084209522 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111215042 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086623285 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106312013 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.086872011 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106193495 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0868139 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106267259 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.08555011 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116961059 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106594831 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096045082 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119120433 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103219655 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086756591 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106876047 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0965729 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106020272 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119131943 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.086567468 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105963486 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.096336099 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119473026 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106976143 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08101537 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10635381 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.086408665 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105689398 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084160623 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116032666 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086475394 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104501924 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086853867 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.106367064 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117642922 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.099079957 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111269724 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112252511 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.086189036 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.115978458 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08659806 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106854834 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095988421 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12362735 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116931728 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117282901 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087636582 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11636084 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11807539 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.103318055 seconds)
  done (took 7.225247941 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10862884 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.111591679 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118767963 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.073598257 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075684889 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107149619 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07580053 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.096739981 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090850636 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.113154257 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113519373 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086236974 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10948738 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114681682 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086419666 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109311408 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085628568 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106355557 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111626524 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086028509 seconds)
  done (took 2.8270969 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.086830777 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121670328 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.078965837 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106410319 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.081595402 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10550956 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081311036 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102282678 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079660964 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081097636 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111762983 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110163688 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079180689 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105690443 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09022054 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105497294 seconds)
  done (took 2.375412643 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099452489 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118411436 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.102054908 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104560923 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07652317 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103596374 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081772823 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.09593065 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.074748943 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.115704015 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084840299 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105031934 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08136534 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.076485872 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100636661 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.084332402 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.09524135 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082984392 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102049825 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103659395 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.104460173 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.081346415 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.102935096 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081045538 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10256136 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.084299364 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105818843 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076631059 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097507262 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082926019 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102348488 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.086751694 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.095683819 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084140175 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097266232 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.076423251 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.081110886 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102500553 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.084744734 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102060999 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077859806 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.101489953 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081222777 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.099900869 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.0751494 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102514304 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.07451507 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.084377211 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101565355 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08217108 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101421934 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087121345 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106379943 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.090015402 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109009425 seconds)
  done (took 5.943424743 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09409105 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103105591 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074074666 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.076269285 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102337982 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.081568443 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103933434 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.080407679 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100967981 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077024316 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080265461 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103033303 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080539046 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103258822 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081079748 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103423162 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074433357 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100487461 seconds)
  done (took 2.470352793 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085071389 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079052179 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107062292 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07915213 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099856077 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081167722 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095312058 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.077386217 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076700003 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099625456 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079011139 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101695774 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0770987 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.101446656 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079269568 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078365582 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.101078256 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077324604 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099288909 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07499716 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100792049 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077000916 seconds)
  done (took 2.777994892 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.111209245 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.115362318 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.085427925 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.197875767 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.095499281 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.124594374 seconds)
  done (took 1.584278697 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103159163 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135259543 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080652123 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1026336 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090487239 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104744399 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08388111 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103466716 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094495577 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117107195 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104099651 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095661615 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115570907 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115049762 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091021164 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111570876 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083413846 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103611054 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080098797 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123953117 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103687529 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095197886 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10424171 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083486957 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105057644 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114854289 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09529075 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116385818 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104177279 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095163463 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111401487 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084932128 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115810089 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11735715 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083174526 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115742953 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084021834 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123788477 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111604579 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094921462 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101836145 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090663411 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11574859 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11031154 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095025753 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10356228 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09020343 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105411962 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104678077 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109187587 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110920709 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114300702 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090475908 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115728731 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116430734 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129700316 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096630191 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114660766 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11089675 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097395137 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114628549 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111600254 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093873201 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11683846 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112320501 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094604473 seconds)
  done (took 7.723848216 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11744555 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101455037 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084018134 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118596986 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115206221 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084332041 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104829032 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084232295 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104218304 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080727512 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147827489 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104937427 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093723144 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11504913 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104138472 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084039073 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104532765 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094100436 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101380974 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13085729 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084103611 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115301414 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114530669 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093621174 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118657574 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112315205 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084894715 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104703028 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084478193 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105360148 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090663847 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10550703 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116127745 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.080847497 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115020947 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084049813 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104873719 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090824968 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104713938 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111788241 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094438901 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123745785 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10474772 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084410487 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117321753 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084195217 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104614495 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081311016 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104722887 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081212368 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117839521 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11779266 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117810152 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095058245 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104608444 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083597659 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103964243 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084403641 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105179119 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091756797 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114325359 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105312935 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130877562 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084436364 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104893858 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094267813 seconds)
  done (took 7.597395265 seconds)
done (took 146.002520035 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211479889 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198642353 seconds)
  done (took 1.264804806 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.094125587 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.132343015 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.091836999 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.163249405 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.079458328 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.112724774 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.133927335 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.094501921 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.100624825 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079854405 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.078930875 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.102246822 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.14566685 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101081691 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.080233317 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10221516 seconds)
  done (took 2.555273027 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.111813074 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.241275605 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.117918863 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.077750541 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105190337 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079041695 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.077787331 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.109403207 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.081123839 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.099901005 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079461931 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.101054439 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.078394086 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.079951513 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.101889573 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079732415 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.099973975 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079949326 seconds)
  done (took 2.665673453 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106541719 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144516145 seconds)
  done (took 1.11908627 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241553665 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.154098431 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.221691092 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.360887458 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.179165902 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.327757787 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172802264 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.172487315 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167001125 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.154954185 seconds)
  done (took 3.014890459 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.113387373 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169922811 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.288785839 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.147879518 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118355337 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093842031 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148539284 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.121370319 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.100912247 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122766937 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122154911 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.086521324 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.132158187 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.110026912 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.088162159 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.085725544 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.355439106 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.10725083 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.087797039 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.108892643 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.111130079 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.100131312 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.089051369 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.107686999 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.100006911 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121660649 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.078560471 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100626207 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.086979195 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109286278 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.086211332 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113499025 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.12082687 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.142240331 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092040238 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.143945329 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107621892 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085346288 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.108707895 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086132281 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.110708312 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.089788848 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.114321029 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.087148954 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10019782 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.087184623 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.09989884 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.079498384 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107783387 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.087446818 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108446739 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.085445876 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.14289442 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109073126 seconds)
  done (took 7.081529858 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.786977673 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150155779 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.083968127 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.867152873 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1364645 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119010118 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.760144216 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129917774 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226629783 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.768140723 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123595599 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091426183 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.219216188 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.22713629 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.953658674 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.300733968 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.665200693 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09868107 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.133093845 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.139570749 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089113964 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128959079 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100285636 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.419383425 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.10635718 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083482026 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109324801 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.091812385 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14870229 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106477968 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.086144786 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.187368982 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.236537377 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.172990236 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105213351 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083532276 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.081845975 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.178453508 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234534078 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.204165026 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.166797155 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081112596 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.081778078 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114333112 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122489623 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.080533638 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.152730451 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.161661054 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.160204492 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107725242 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092011973 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112508953 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112780413 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.151999496 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081800768 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309034107 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289443595 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10511301 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090099137 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120957949 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.251139267 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082925455 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.213645627 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107863915 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.202170746 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08344636 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768135905 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.156605878 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.082811445 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110957365 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.088462485 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109729839 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.112946123 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.135050561 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.396646469 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116703842 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.085765709 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104316268 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196762773 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083369081 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104927625 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.153983629 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.083831279 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112229698 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116251539 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.094819334 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.158248852 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.221266072 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.115547909 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110491996 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.087295092 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115698362 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.085300199 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.201062493 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.207911229 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.149047444 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.20036694 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.113914961 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.153109418 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.154965226 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090790048 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18109847 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089515522 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118302122 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093515641 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.206553586 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.131776633 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083776336 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107456763 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.089549836 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.135774152 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086520838 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111569601 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.159019288 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.448462266 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.153600756 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.102363115 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087379201 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111352496 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15142185 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088618183 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.251953171 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091012307 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.176941452 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089476839 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.079840855 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11158539 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.152294258 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11607217 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.089817969 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11529348 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.088928566 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245013145 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186232556 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116152606 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209636806 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.170484545 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.089115098 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181903202 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.090393536 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.157918069 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112537425 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091315405 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106823321 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.737412541 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115419642 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110572879 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.086402518 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17588082 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.083002449 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10523902 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083396218 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.080031744 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782840246 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085228467 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103532719 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083864032 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111822644 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.089773589 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110121984 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.086310888 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.149291874 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219610979 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113296024 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088857052 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104438039 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.150621067 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.085094711 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104866906 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084229489 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.083192702 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112644715 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.085910844 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107719125 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.161931599 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.149263634 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.207721484 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.557245632 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105145686 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084146534 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218007602 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083776994 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.282861273 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.088890089 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.214611574 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155431555 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102871082 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.286297159 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.156138771 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.177724934 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10655229 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.159543645 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.081045322 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109912528 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.150894786 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.083950625 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110603021 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.149246776 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.095135705 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115446291 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.994147699 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08362599 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.21711779 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.101817575 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.158262143 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085800186 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112729225 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.263097825 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105149968 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.098928268 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.172405298 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.086606906 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083517043 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.861674182 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084654219 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114370538 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09070999 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211249996 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.15519897 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111578541 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089635655 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114384124 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.15286164 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.201730203 seconds)
  done (took 41.154844263 seconds)
done (took 59.720668647 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.254270334 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208988035 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.238380838 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.186422554 seconds)
  done (took 1.884068957 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173584861 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.120457455 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.139562956 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.078569801 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.146817292 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100931767 seconds)
  done (took 1.655971364 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.337771776 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.287502223 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211531675 seconds)
  done (took 1.734076859 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.23933475 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236178716 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.459522823 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.315112628 seconds)
  done (took 2.247063049 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.197706787 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096878744 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.117690221 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110321535 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.162231517 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.199109054 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.114037673 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.167546646 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.101752864 seconds)
  done (took 2.204068216 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.157549748 seconds)
done (took 10.787455974 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.127964917 seconds)
    (2/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.174555819 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.311853419 seconds)
    (4/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.230627337 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.182571373 seconds)
    (6/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090605895 seconds)
    (7/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.215513096 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.168374222 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.123427971 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091963258 seconds)
    (11/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.267978484 seconds)
    (12/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.196047054 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.094780612 seconds)
    (14/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.168718312 seconds)
    (15/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.228733909 seconds)
    (16/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.264919386 seconds)
    (17/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113425301 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.090232877 seconds)
    (19/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.216018863 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.143620048 seconds)
    (21/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.153477545 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116293618 seconds)
    (23/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.082529344 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.161161978 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.129114146 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.092310606 seconds)
    (27/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.161798562 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078953399 seconds)
    (29/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.157163386 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.266195103 seconds)
    (31/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079292954 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.188794535 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110351269 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.244871227 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.164381071 seconds)
    (36/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085747101 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07962126 seconds)
    (38/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.090877853 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.087927608 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.114878112 seconds)
    (41/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066740598 seconds)
    (42/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.154891061 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.16549282 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.195409471 seconds)
    (45/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115139489 seconds)
    (46/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.090137503 seconds)
    (47/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131242482 seconds)
    (48/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.078031344 seconds)
    (49/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.082034142 seconds)
    (50/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.194866467 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.128956504 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.088327307 seconds)
    (53/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.211042534 seconds)
    (54/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.214004611 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087095716 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.228310601 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.160338071 seconds)
    (58/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.18335617 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.234523745 seconds)
    (60/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085224786 seconds)
    (61/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.127796436 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110135791 seconds)
    (63/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.107305819 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.078678062 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079999373 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102746711 seconds)
    (67/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08030038 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.191666088 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.070696006 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.118476805 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109535818 seconds)
    (72/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.1735604 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.190530168 seconds)
    (74/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084116429 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.181827282 seconds)
    (76/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.160146761 seconds)
    (77/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.137616501 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.133817129 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08047726 seconds)
    (80/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.226951656 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110465586 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068510088 seconds)
    (83/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.172631547 seconds)
    (84/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.083473306 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109903854 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.240484323 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.174711228 seconds)
    (88/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.148984525 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.193432189 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.080044719 seconds)
    (91/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111075607 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.079628217 seconds)
    (93/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.078940895 seconds)
    (94/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119360182 seconds)
    (95/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.068178262 seconds)
    (96/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.236349514 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.118159557 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.106833324 seconds)
    (99/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.093618013 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.080469977 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.129106709 seconds)
    (102/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.148774757 seconds)
    (103/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.185357708 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067657314 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103671834 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068728042 seconds)
    (107/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.093913368 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.109287721 seconds)
    (109/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.101363745 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.198799238 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.110907604 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087859534 seconds)
    (113/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.0952606 seconds)
    (114/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.161625783 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.157528464 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.174041909 seconds)
    (117/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084811256 seconds)
    (118/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.171927622 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194906861 seconds)
    (120/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.079172773 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.199361925 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119991338 seconds)
    (123/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.091466099 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122927123 seconds)
    (125/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.114866166 seconds)
    (126/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.088448272 seconds)
    (127/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172625973 seconds)
    (128/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.092582003 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174877913 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.180531969 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.090354594 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.111272168 seconds)
    (133/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.083604564 seconds)
    (134/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.130849718 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.102739083 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.109202347 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.087529705 seconds)
    (138/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111629758 seconds)
    (139/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082244583 seconds)
    (140/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173958178 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.080097324 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.13207243 seconds)
    (143/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067703361 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.089045898 seconds)
    (145/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.113608485 seconds)
    (146/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.186973127 seconds)
    (147/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.0975834 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091925607 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.079917396 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.087566501 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.125709741 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069111922 seconds)
    (153/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.116589416 seconds)
    (154/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.071508866 seconds)
    (155/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11091881 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.103599985 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068566846 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104549833 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068194918 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103746483 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.091121204 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.164369334 seconds)
    (163/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.089192273 seconds)
    (164/309) benchmarking ("sort", Float32, false)...
    done (took 0.173328472 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.114564385 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.079467529 seconds)
    (167/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.081733162 seconds)
    (168/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.090912039 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.108469077 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 0.172064457 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068834649 seconds)
    (172/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.108128177 seconds)
    (173/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.097762097 seconds)
    (174/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.111974758 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.107010034 seconds)
    (176/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.114195615 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.142029981 seconds)
    (178/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.160186098 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110213824 seconds)
    (180/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091977609 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.083965395 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.130158855 seconds)
    (183/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.123938212 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.131105328 seconds)
    (185/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.068706284 seconds)
    (186/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.106377611 seconds)
    (187/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081503724 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.193854378 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.081146763 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.190940193 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.126692474 seconds)
    (192/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070812852 seconds)
    (193/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068561596 seconds)
    (194/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.129207881 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.088367512 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.187612635 seconds)
    (197/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.199178924 seconds)
    (198/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.093948278 seconds)
    (199/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.10527 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.091781113 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133880588 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.081181915 seconds)
    (203/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.156967629 seconds)
    (204/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.08962022 seconds)
    (205/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067702864 seconds)
    (206/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.09201941 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.080727902 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.102079851 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.147895981 seconds)
    (210/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.150197196 seconds)
    (211/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.106529852 seconds)
    (212/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.092535565 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115674554 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.092590349 seconds)
    (215/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067656027 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.133371916 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.087306686 seconds)
    (218/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068258919 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.113517602 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.088612019 seconds)
    (221/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.172498739 seconds)
    (222/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094870196 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.093199353 seconds)
    (224/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06857984 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.106582744 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067939981 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.226030723 seconds)
    (228/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067610178 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.103071415 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.092102432 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078784782 seconds)
    (232/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.106525879 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115789556 seconds)
    (234/309) benchmarking ("sort", Int8, false)...
    done (took 0.188927368 seconds)
    (235/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.09268467 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.0808711 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189047025 seconds)
    (238/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.08676511 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.105592749 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094079966 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.093998424 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.070746545 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.198431113 seconds)
    (244/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.077997358 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.104391119 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.082755184 seconds)
    (247/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067695187 seconds)
    (248/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.093211655 seconds)
    (249/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069021579 seconds)
    (250/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.086815083 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.094064744 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.080447716 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130494856 seconds)
    (254/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069801944 seconds)
    (255/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068663202 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.157861318 seconds)
    (257/309) benchmarking ("sort", BigInt, false)...
    done (took 0.220220011 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11120944 seconds)
    (259/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.077176623 seconds)
    (260/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068401973 seconds)
    (261/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.093344617 seconds)
    (262/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.083029146 seconds)
    (263/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.080412434 seconds)
    (264/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.108340613 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.088789948 seconds)
    (266/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092649398 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.089119256 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.103161112 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110660349 seconds)
    (270/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082465222 seconds)
    (271/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.091126983 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070086863 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.139884873 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07985345 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.081947911 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.092753137 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.091462472 seconds)
    (278/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.10704963 seconds)
    (279/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.081840813 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.081653755 seconds)
    (281/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.094630919 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.080532371 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.112279156 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.079561445 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.126775629 seconds)
    (286/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.082070665 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079204125 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.107520915 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.089335623 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108484858 seconds)
    (291/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.077622213 seconds)
    (292/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.069271266 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.163432772 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079783086 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.126183196 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068530317 seconds)
    (297/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.092118556 seconds)
    (298/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.081590484 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.081540242 seconds)
    (300/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.092466372 seconds)
    (301/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.083483283 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.15593508 seconds)
    (303/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.236223235 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079292515 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.171588745 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.09900216 seconds)
    (307/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093497086 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.223498409 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.081429535 seconds)
  done (took 38.359884043 seconds)
done (took 39.261570738 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.093007656 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.132714709 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.091122118 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.108287301 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.117597525 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094564366 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.113332023 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.093026418 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.117936991 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.094969892 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.116147423 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070685575 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.115050658 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.091700226 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.114830012 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108788695 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118231694 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.087917531 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.084080724 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.10356189 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.084498419 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.104658533 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.082889027 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071263521 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.115891234 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.088647466 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.110641087 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.091831332 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08003686 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.104903986 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.080207466 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.112606673 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.080548976 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119157992 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.087341359 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.084243731 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.116243789 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.090549193 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.10675034 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.081336871 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.088817345 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104965441 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.087846058 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.112055636 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.082864914 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.079876709 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.108174626 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.093883022 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.132836967 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.082845832 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.113816145 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.091258444 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.115299146 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.087916062 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.079867222 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.108549327 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.08019912 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.133169913 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.084662961 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1073947 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.088982312 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.113215122 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.079526646 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.084072211 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108495267 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.09049885 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.115878107 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080728859 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.114753433 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.086576933 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.080698027 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.108155106 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.079837182 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.104406444 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09019884 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.091669055 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.103691923 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.083022874 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11176381 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.085909978 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.080351566 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.106884356 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.082870636 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.106507576 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.082509862 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071750412 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.103740223 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087473218 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.079949496 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.107963073 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.087289998 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.111206642 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.082780051 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.116098494 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.080812747 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.080197954 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.104973296 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.081251802 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.106252716 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.080324255 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.080775554 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.107362024 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.090318496 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.106594071 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.082666316 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.092950875 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10508234 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.08819038 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.104269366 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.081013769 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.096703372 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.114888872 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.081203725 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10747033 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.080424813 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.082457477 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.104234443 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.080981597 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.104727598 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081159901 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.08252692 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.105073748 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083780926 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.107357859 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.094706157 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.080501674 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.104418381 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.083451872 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.104775513 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.086731389 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.081730539 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.105421703 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.083079153 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.10301862 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083579147 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.081364565 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.106862533 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083126879 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.111554918 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.082235697 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.084024268 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.111757782 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.083149307 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.106709392 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.079974779 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075177656 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107334388 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100159474 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.106589066 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.080489392 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.08239056 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.105049916 seconds)
done (took 15.497827577 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.081298937 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.177120504 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.140684582 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.114313589 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.126256161 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.081608888 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117041856 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.112627925 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.107826078 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.112357954 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.127502562 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.1248759 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120365927 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.104538228 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.081634401 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.084933493 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.107838663 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.097217599 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144127657 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.10281847 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139054898 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.104579518 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.110106668 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.128967869 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09142465 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.132181123 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.0825471 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.109302902 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085444188 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.121789626 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.101470057 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.085189009 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.106369101 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102547028 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123071354 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089503663 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.106055413 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08826465 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105761568 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.08152407 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.127402062 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103454838 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111345941 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087287617 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.084876808 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.108323517 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08282197 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.114696183 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092116228 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109582357 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.096199021 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134935569 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.084495112 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.115849926 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.080499632 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116825301 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.091602392 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.108465851 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.081999583 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.084201583 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106477688 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.085093911 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.121172769 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129924527 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.085915578 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.090298409 seconds)
  done (took 7.955781727 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.098426879 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135124926 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.099174586 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.124014546 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.081758304 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.082286899 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.106744412 seconds)
  done (took 1.700435147 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.082767483 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.107094906 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.132374633 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10715029 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.128705896 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.100155606 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117079869 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.082446375 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.126493669 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.083825717 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132344039 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122131487 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.108581703 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.090879432 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135065651 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.082804114 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.133822529 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.082365527 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11034514 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108868115 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.110114592 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.108337091 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.109407813 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.082457246 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.100637632 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.107664611 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.131130313 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112039562 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084076749 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.110754633 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.080879044 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.14509728 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.099511986 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118185466 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083147991 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124706716 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.100345482 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105038979 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.098439226 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.087639055 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.124672482 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.082701488 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.10812272 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.081247693 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.111434591 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.096030713 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.086745873 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.108387522 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.085972527 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130928498 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.08399016 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124446024 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.083106021 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.086803846 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.109899342 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088493168 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.117254445 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.084399427 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13222683 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083928537 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.102526956 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.127126142 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.099598381 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.128229777 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084943571 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.125472711 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.099798061 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.110980806 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085172898 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.085516178 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.1272817 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.080503499 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.109698227 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.096780564 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109756747 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.109524299 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.133852371 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.084177533 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.11819513 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.082691146 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.08327745 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.108373935 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.1092757 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111998439 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08324068 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111649062 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085838734 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.081031908 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108357391 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.086693976 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.080699861 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.109476064 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.086122979 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.109090241 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086255498 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12830524 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.084186567 seconds)
  done (took 11.017932502 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.083953335 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.084165981 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.11156704 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.084555408 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.109640713 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.084617898 seconds)
  done (took 1.543313492 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.111516644 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.109888072 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.097222507 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.112542017 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.124010233 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.133524979 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107899216 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117640667 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.099859571 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.120237324 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.106743552 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.134529511 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112562407 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.114160298 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.108750911 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.113292321 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.107394722 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114597316 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.094211084 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114555938 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.099501099 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.114959489 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088786688 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.128008347 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.092899405 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.113846233 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.089609363 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.120246191 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.094419546 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.11749214 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.08867784 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.09308142 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.114591746 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.09155803 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.13438283 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.087855222 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113743874 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.094737066 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115250326 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.091933444 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.134952185 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088771549 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.120226183 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094303392 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.117788204 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.088867437 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.11990243 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.088793601 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.132804558 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093826138 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120685261 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.08830132 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118153257 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095054569 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.11476212 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092148598 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120065733 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108548136 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.115501029 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.08906876 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.110749621 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09297925 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117703083 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.092766536 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.117159911 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095115227 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.08910309 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114307761 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088692782 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.113868669 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.094466616 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11178043 seconds)
  done (took 8.709520074 seconds)
done (took 31.889914027 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.677043346 seconds)
  done (took 1.655414627 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.674641719 seconds)
  done (took 1.65532294 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.93831946 seconds)
  done (took 17.923689971 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.456268912 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.546924178 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.813983168 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155587623 seconds)
  done (took 2.952763503 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.955029562 seconds)
  done (took 1.955098821 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236281755 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222932451 seconds)
  done (took 1.446800517 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.758273761 seconds)
  done (took 1.752164894 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.426542851 seconds)
  done (took 2.417845509 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320486546 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.150823227 seconds)
  done (took 1.4761275 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.559107934 seconds)
  done (took 1.56227719 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.73428617 seconds)
  done (took 7.73605958 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236681975 seconds)
  done (took 1.246532251 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282395088 seconds)
  done (took 1.282337409 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.522195524 seconds)
  done (took 4.52151923 seconds)
done (took 50.571482495 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.093005068 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.095837653 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.12081785 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.092843928 seconds)
  done (took 1.396687184 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.098352358 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.08858472 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.123207049 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.088525799 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124560412 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.088893205 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.117391439 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099290335 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114600506 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.091288742 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.115116316 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.088891951 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.117100849 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.091274374 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.086641849 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.118982201 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.095730325 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11588314 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.093155964 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.115444604 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.086951661 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.117320604 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.092772811 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.113445021 seconds)
  done (took 3.490362018 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.093555841 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.088732848 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.115512538 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.087578571 seconds)
  done (took 1.386829932 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.093619934 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.099523088 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.125502958 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.093244598 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.126366696 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.101643056 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.111918101 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.085344415 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.113271425 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.093478465 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.083171588 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.132573504 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.126481049 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09355254 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.095017845 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.108360051 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085026419 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.12573942 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.094082903 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.120348461 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087195882 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.092230297 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.109891842 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.100701428 seconds)
  done (took 3.507578248 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.164963125 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.122341388 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.106523726 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.115271803 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.128149561 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.135822296 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.081542847 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.134587689 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08169213 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.123101469 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.086839783 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.153197156 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.095199417 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.107479853 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083044446 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08181054 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.119498139 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.094647599 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.111124622 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096388515 seconds)
  done (took 3.234109865 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.091919959 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.085855818 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107675166 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.085304442 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118464956 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.089593609 seconds)
  done (took 1.593198319 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090646671 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.08391684 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.113220323 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.0854123 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11398103 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083070112 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.081548167 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110464865 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.083625135 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.107241848 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085700123 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.08250745 seconds)
  done (took 2.135109533 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.494332143 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.084619111 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.10990663 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.106218175 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093394135 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.082029589 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.125109038 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.083837647 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.136595279 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.081945206 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.109812068 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.086115438 seconds)
  done (took 2.609645157 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201350393 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092902331 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252566223 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20229257 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127698915 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159974534 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143997393 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159133223 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.177886043 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106376466 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211824916 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125852436 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148942066 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172004349 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134839093 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.125598216 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168997197 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193616442 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143604944 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196309347 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156518891 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162157955 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173597487 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146424222 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106631807 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151930698 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.114716092 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097681198 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165249787 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162549344 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166435809 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142405038 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106603497 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217020442 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200181339 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169453192 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180586413 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127794331 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148616009 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.157360601 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242788071 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109089986 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212224148 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122520015 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124336872 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174682734 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149103287 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.172016979 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100116909 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135448446 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17323674 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170040317 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171767068 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130403146 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133407548 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144925454 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139384526 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112727816 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177525143 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178271655 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158209676 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.114776685 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110604957 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174024374 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171057095 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139267806 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159217111 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09293103 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16558067 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18660291 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16916211 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15585476 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.204326612 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102313781 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15730044 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16290753 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146101411 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171625201 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153118541 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.089917544 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144240436 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105498613 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124407957 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.161011436 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118673433 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195098602 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13104692 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.111060229 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153300815 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151303137 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154534941 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13015727 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158065156 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142782097 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084695868 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140204996 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.146656422 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149716428 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100352658 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150406145 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136484914 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.094475391 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145701316 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.090489229 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154010126 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.122857245 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129760052 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161027196 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.120043489 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157109566 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116966766 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.146379434 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163232664 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178376969 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100253963 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128634616 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185241785 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151947929 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101781335 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168399013 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178074678 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.149561398 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132476428 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160402379 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184668276 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109799139 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180017526 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134933675 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12836244 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10745172 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153434575 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151028808 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152494723 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098035591 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.147007583 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182921631 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09122884 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132610125 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167543702 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094591345 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125003688 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135195911 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103263558 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.131525388 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.108969797 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131289267 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148262831 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153390437 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120496644 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148018353 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136876669 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182736431 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126923037 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.118056004 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142727462 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.087109375 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168621517 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176988536 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124742596 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188103306 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159615784 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146474306 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157066689 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09910654 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171685211 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09579274 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.114823587 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156953841 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153655979 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12782208 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.173656615 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146815997 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.159763457 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.146498581 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114559641 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157459109 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.158740386 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149051446 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.103583681 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155653788 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153001409 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117052013 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09184518 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.122485213 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113767172 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127057253 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099941324 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198974001 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127789401 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139960429 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155370134 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107964223 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174134609 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122436727 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158438415 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.163658328 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105511239 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.174991514 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172317383 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160744921 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138058974 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171422668 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.086685026 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11910802 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.099926058 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158076274 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128265024 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101723048 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138615966 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174910896 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165049126 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143391479 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125454085 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159650079 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18430103 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117162911 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.134114679 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160940356 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152279337 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.169911096 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103680746 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.14475284 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170391125 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108131611 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206924447 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126182165 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160489662 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215484303 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.117428141 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126069248 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115718085 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158315419 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136121727 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159142413 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111836722 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131787062 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145505456 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.094285166 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121378283 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165271879 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110245111 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193735312 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113532941 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161357905 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121784849 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109368914 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155978067 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140539005 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082998351 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158626804 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175305075 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138408645 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150181463 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16516268 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097733553 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.171654311 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181062682 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174477808 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132055162 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108646168 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156529288 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154863269 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154797447 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173120612 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1415432 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143484657 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153322196 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.129965277 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102203245 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142330805 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143977079 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.106707671 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128348535 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146113308 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.103007424 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168223847 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13673967 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152330279 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156593116 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.116738346 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.139355253 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109135803 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189932347 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151893866 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169727116 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.14434118 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.156592017 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18971056 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091560976 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123789633 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.094328034 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172466009 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12792807 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123680359 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.138552066 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148511814 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155626375 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130173396 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133503969 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.085820055 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152771744 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14347013 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153945156 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109543616 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.130843919 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178062416 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.138331203 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098287923 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157140891 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144673079 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11371667 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166048422 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080068057 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140915444 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092403473 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127099698 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153707726 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163798515 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.102647445 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.169232837 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157454068 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109416861 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154628633 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131932637 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111652788 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15464572 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161555113 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164981225 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.098639915 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151780614 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154987312 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168760847 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142312712 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104047228 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157456212 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174963402 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179252554 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.127649584 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126562696 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155424236 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15353125 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161624325 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128334428 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189382343 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098499447 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160888525 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135210217 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090008416 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151356935 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.139163059 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100746521 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163778687 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152168167 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12723783 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094377422 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145232279 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150793346 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108344628 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.120965417 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165066665 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.090922792 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157723828 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172198967 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097206025 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150546599 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139953223 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102522116 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138534919 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139526218 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103056097 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.157732555 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173385818 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.0963593 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168472952 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166812131 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155683887 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151749269 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13853324 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634398922 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.123535955 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17244188 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112920437 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175796516 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143879793 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162157008 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153571475 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11510677 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159913453 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144063167 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.224065958 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157397952 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.122530657 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126598897 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139232849 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108812461 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.127268356 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145875493 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126006773 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135887099 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129736352 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.122311873 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139530502 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.128600923 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10595182 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175992349 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141740809 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168901102 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173964557 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104945885 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15971847 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161401428 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125149523 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153735617 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135536081 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136716171 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143830302 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.097327264 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.129899241 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173266563 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.091256284 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154675321 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154651348 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154570234 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126801377 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.128538767 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152927924 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136134515 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125594595 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1255016 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.145608544 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122802148 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127244779 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.121965013 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120826874 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147246314 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.143661456 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093418195 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.157332853 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145878187 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.117457081 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099249611 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151406611 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15212355 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184075237 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136733656 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102311002 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137060887 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111499571 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145903398 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153246564 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.094508733 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127792673 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.124498587 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.135394649 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136198396 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149368248 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117106645 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150464488 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189811902 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131740633 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.245169977 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134076911 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149168872 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090561775 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.124428213 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108401106 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130497163 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137939264 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113648737 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174332599 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.140152783 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.100897246 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120797636 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.091575104 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128956166 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127400474 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148047589 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152040189 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136894516 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082755649 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138402675 seconds)
  done (took 69.679253242 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.141940562 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.128002846 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.141852011 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.195977637 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161414429 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246540675 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.203914913 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232008582 seconds)
  done (took 2.542953179 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.08743717 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.137408524 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.121992244 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.130311237 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.110368509 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.087586861 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.316307693 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.127285105 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.084799434 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.140105567 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.12580827 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.11076587 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.523305517 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.084678434 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.110942543 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080885839 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.109970178 seconds)
  done (took 3.576697865 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.460305818 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.705338746 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.466195993 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.117925873 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.094947023 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.1282064 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.702119503 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.187122935 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.110416471 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.47184027 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.74561599 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.178785715 seconds)
  done (took 18.456089508 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.117073345 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.110401211 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.15644224 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.155288313 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.115025202 seconds)
  done (took 1.752206 seconds)
done (took 116.356985843 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.097297908 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.408729096 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072496585 seconds)
  done (took 1.610196156 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.104601701 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135113584 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.105941518 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.133753811 seconds)
  done (took 1.582186482 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.092274616 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.093082884 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.133492327 seconds)
  done (took 1.414386074 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.306342872 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.158171137 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.141200482 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.100475148 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095521392 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.124561845 seconds)
  done (took 1.421996049 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.091592008 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.093825394 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.119591433 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.095460963 seconds)
  done (took 1.497436218 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.097970628 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.079189272 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102556781 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075674843 seconds)
  done (took 1.457366305 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.108020633 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.124963963 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.099196651 seconds)
  done (took 1.435718169 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.12232269 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.133697437 seconds)
  done (took 1.359638885 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.097381614 seconds)
  done (took 1.196409689 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.110941786 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.162009106 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.169457021 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114163716 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.168477543 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.14533472 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086915248 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086619532 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.115439957 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086963467 seconds)
  done (took 2.350247299 seconds)
done (took 17.128255063 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100269542 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.514191613 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384324308 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138267742 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691655989 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.403842965 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034564064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139855236 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161697511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.086429767 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130690065 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667390913 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.015169512 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.43664758 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97322159 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.368318145 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.66844167 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114527958 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.086072943 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.085187606 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.046491771 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.085507667 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114559509 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.085621335 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.697650008 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.390976301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11499629 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.339843606 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08599215 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122379899 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373000386 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115184303 seconds)
  done (took 16.865514229 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.092737346 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171896352 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097253653 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13079449 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.093906442 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.08822236 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119147484 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086869256 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17682887 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114832382 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104325912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.085438412 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119204479 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086625138 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134900478 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.085796777 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115326916 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086275436 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.085659957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115824501 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.105033162 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114754549 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0870514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115267868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.086850918 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.127637693 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087747473 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.085808032 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115328289 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09459117 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117791863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088072222 seconds)
  done (took 4.522261752 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13765585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180899379 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097505498 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149664162 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.165615318 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088906266 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.192785804 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14005904 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150082075 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115856104 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.103772055 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.114818371 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.120443713 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.116406984 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.106420882 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11421658 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.087817409 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.086372994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115091148 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.08687454 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134593886 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086102768 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115745706 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086555202 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11504636 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.104423384 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087099012 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.115203262 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086316613 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123724059 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090519412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11566071 seconds)
  done (took 4.845074832 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.090886035 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.09285131 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.130394616 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.102390706 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.11713561 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.090490208 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.11917873 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.088373928 seconds)
  done (took 1.938819071 seconds)
done (took 29.277460796 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.096848806 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.088608909 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.12068313 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099851406 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.12032098 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.099325431 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120154247 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.094536058 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.092902635 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.120594764 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.094623287 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.114133649 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089890878 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.085881422 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.122006547 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.086949005 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.128383676 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.090767244 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.129190756 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.100365737 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.087512624 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.123402076 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.092546374 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.129116073 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.100257312 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.128919138 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.098225554 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121622749 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.089102463 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.088842777 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.128587392 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10869167 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116591558 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.100361175 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.115946345 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.087250357 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.114673871 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.089796125 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.100494179 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.122977552 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.089397428 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.123345852 seconds)
  done (took 5.55434814 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112513654 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.150729004 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.108245378 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08763661 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118531323 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081852687 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.141889715 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080803685 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112078123 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111841315 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.1051373 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078775935 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079494809 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103315082 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077867375 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075835485 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110183907 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076589693 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077727397 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107378451 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081048647 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.10302848 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079866272 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078858414 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105218079 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082310367 seconds)
  done (took 3.644393092 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.093356887 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.101827721 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136419413 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.168791557 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.119421172 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.124352863 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.096077757 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.103745653 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.132702497 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.085846139 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.11785386 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.114675659 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13424193 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.093342165 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.118440165 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.101949724 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.100300748 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.11752173 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.091548344 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.136743008 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.102440909 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.126179048 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.107667968 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.126728502 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.086566982 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087566108 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120777813 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.096701259 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122614429 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.095079524 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.121609974 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.089434852 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.087509639 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.127303347 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.092860325 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.117181757 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.106242977 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125423014 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.095930473 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.0871991 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119616082 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.08940428 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137977295 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13289065 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.116856007 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.102616057 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123027452 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.095563103 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.117839864 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104605358 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124789988 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.087462272 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.089840834 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117214374 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.0884348 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131301914 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.088357902 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.088025246 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127815777 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.089056075 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.128562964 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.09172084 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129880068 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.087482538 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.09197364 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.117578369 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087240412 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.114346246 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.109074414 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121504462 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128329343 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.116553442 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.088219359 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.094415363 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123205603 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093554175 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.117038633 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101285784 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132010454 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.090742519 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.097134869 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.118909273 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.089444326 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.134311828 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.089138968 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.08787025 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.117306635 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.093488932 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118922922 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.087805944 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129894909 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.087181634 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.08923121 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129497214 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.087163839 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117545981 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.09332241 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.119564142 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.085668335 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.129979321 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.092313257 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.086295362 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.125974223 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.087151684 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119213775 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.096857622 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.120816985 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.08634419 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.09096755 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.123409308 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.087925344 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119541093 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.090190015 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.089059946 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.125432078 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.093080213 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119791541 seconds)
  done (took 13.733380331 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.22310031 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212860082 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.08879788 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.20521156 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128829122 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.103010984 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.206859167 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.151774086 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.088816203 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.086175672 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.118744146 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.128272842 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.15345047 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.162779308 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.100724072 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115296894 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.106190682 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.162395076 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.209761427 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.20336627 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.106626308 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.126423591 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.089336017 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.118968088 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.089078174 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.096514133 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.133326489 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127437805 seconds)
  done (took 4.972140411 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.103172806 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.1484084 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.092816853 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.138531972 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.112213174 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.116906011 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.091290089 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11745921 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.10008728 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131188797 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.086569977 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.092853495 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.123910555 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.095584333 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.118148853 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.095842463 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.126136381 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.089509256 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.089100112 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.120388681 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.092803326 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.1342563 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.090420635 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.115462912 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.095582683 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115934411 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087774291 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137633985 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.086840145 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.138909411 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.08475424 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.122886257 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.09666199 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.117179749 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.087186274 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.089078006 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.119698877 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.089214859 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.117864396 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.085968621 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.085319194 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.10940989 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.087102046 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132185209 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.094228406 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109684291 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.093876683 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.092736197 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.118302683 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085551385 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.119635102 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.091363501 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.089585341 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.124783669 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.091609604 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.117489403 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.090980631 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.086686612 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.125259389 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.092609559 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.114973118 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.086089523 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.091114639 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.120610824 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.095718115 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.122552383 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.085890865 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.119474602 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.091798189 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.094040405 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.119371264 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.090476546 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.115039564 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.089110645 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.089357309 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.122124474 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.090544363 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.116186635 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.087303529 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.087454048 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.106249121 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.087752573 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.105483063 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.091176248 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.085290894 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.115961227 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.08964712 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123014583 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.103687691 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.118125568 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.095583839 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.11777456 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.086863871 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.090222858 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114233743 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.090323409 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.132656037 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.106350449 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.11727887 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.085800666 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.130907099 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.090312428 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.086170356 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107980853 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.094952843 seconds)
  done (took 12.07351932 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.110384886 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.142928842 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.089782858 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.100689132 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.14366103 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.109644682 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124709826 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.094429374 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.119838493 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.105216213 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.118786661 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.096976047 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.091216677 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127927402 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.110340725 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126729197 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.089835589 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.127730514 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.09586896 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.152458919 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.102256827 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.101876099 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.12892088 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.088430136 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122921662 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.100734775 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.14396251 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.097859832 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.127092304 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.102706353 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.098093987 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.143892378 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.102960658 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.12268359 seconds)
  done (took 5.010462983 seconds)
done (took 46.101703772 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.232611163 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.423911033 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.199674905 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.039149483 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.258812707 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.210962879 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.210173551 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.214549615 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.792360858 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.203234353 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.455530709 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.810678761 seconds)
done (took 60.182935513 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.26183532 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.368668232 seconds)
    (2/2) benchmarking "String"...
    done (took 1.520046304 seconds)
  done (took 4.022449412 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.863258809 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.151766565 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.45894295 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.200245502 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.201232287 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.489973234 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.886675809 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.596382785 seconds)
  done (took 28.118101115 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.210701997 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.598909884 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.960697757 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.966672854 seconds)
  done (took 18.870606921 seconds)
done (took 61.271129359 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.222160324 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.213507131 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.234178711 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.18948138 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.316245473 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.235477709 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.574087771 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.257031084 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.218561791 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.189396875 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.232775706 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.202064294 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.204052278 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.551296344 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.208758323 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.212315088 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.26979016 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.702853753 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.609842893 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.20467185 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.235944378 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.26411815 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.223049632 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.205478758 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.259499196 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.202728238 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.202167261 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.213226803 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.781872049 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.204239728 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.217384166 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.741490501 seconds)
  done (took 190.934742313 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.203126651 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.216018325 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.297675598 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.24817647 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.642680771 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.405886415 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.354369332 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.73997877 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.224101306 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.211072412 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.573142943 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.204125485 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.626415842 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.175975254 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.210469847 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.2673638 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.497718528 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.591208165 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.218907571 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.480222115 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.232110069 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.448504187 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.356238978 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.491822395 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.227535432 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.231113754 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.228722269 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.241238733 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.399380201 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.425889022 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.267530574 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.248503387 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.839918415 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.065930315 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.20451029 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.247064932 seconds)
  done (took 150.680378741 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.508212245 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.204054652 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.204811125 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204731931 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.238186327 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.204063586 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.795630784 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.801107796 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.735167569 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.334485037 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.622219808 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.503883962 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.21047521 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300898437 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.219377468 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.211352503 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.206816174 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.222059561 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.232210418 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.209991742 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205986444 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797938874 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.222617722 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.252925875 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.380264884 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.220457366 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237780284 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603013463 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.203384668 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203013684 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.236398972 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537550333 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.252447195 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203386483 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.60658487 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.869690718 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318403063 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207002732 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237142686 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.205248599 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.485162671 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204645266 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.205170191 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208052281 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.910627348 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.208587987 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.795785939 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.209226431 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.185962806 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.209507578 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204800924 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.308970292 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.928351787 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.20995796 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.205461303 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.20744045 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.20518091 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205246056 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.238273107 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.275063658 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.305787246 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.206980295 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208900576 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238452656 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.205974071 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.213406265 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205990033 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.781712969 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.26266355 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.316011841 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.799572626 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211810477 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305311753 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327179313 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.205318993 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.205249189 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206681702 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206762265 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.31739515 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.205789241 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.628377536 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.384442321 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.223911859 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.632482329 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.308956922 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.206562951 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.618897507 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.211242439 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.206239217 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.965919238 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304049297 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.205395208 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.206463218 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206379566 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.630030471 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799516746 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.488591921 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.21232827 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.735355194 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.210827288 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.643178515 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.770016596 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.2067189 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.895125344 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.213315327 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321649177 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.384942219 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.228891389 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.208977143 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.207987345 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.624556832 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.213320365 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263358715 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.214021562 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.607861939 seconds)
  done (took 366.745492208 seconds)
done (took 711.004160889 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.84344157 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.833487916 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.934827689 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.821494718 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.780420105 seconds)
  done (took 10.355974601 seconds)
done (took 11.497441265 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.396180518 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.396526997 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269258639 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.398825281 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238420148 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.414376502 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.376977685 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.228738144 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.311020809 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.291461166 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.310579383 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.261508328 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236313253 seconds)
  done (took 18.272767146 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.51751942 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.540628237 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27244585 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.523865409 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248883381 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.535351115 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413626331 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.427497474 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412370759 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.223044071 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223526091 seconds)
  done (took 16.481633437 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.522146737 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.553985156 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277307483 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.527554266 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25135856 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.527578573 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.410704731 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.433779127 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.407264264 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.226713492 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224004349 seconds)
  done (took 16.50556382 seconds)
done (took 52.400814453 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.217205384 seconds)
  done (took 2.360208027 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.255236515 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.423539855 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.239611064 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.225742023 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.219670285 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.219783077 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.226092112 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.220368553 seconds)
  done (took 11.173850317 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.217178117 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.218676117 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.21631701 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.216937264 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.22022218 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.219811979 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.216087619 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.217580956 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.217942521 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.217570328 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.673553901 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.218185074 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.217606953 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.216097607 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.219344817 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.219605931 seconds)
  done (took 21.087737043 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.219446705 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.218132453 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.215978474 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.218643871 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218092736 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.218851165 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.219092753 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.217879232 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.217037468 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.217091806 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.217825068 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.217720041 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.219457128 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.219120932 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.217209583 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.219335713 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218297995 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.218945419 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.221851491 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.21812885 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.218771675 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.219535817 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.218031309 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.219491804 seconds)
  done (took 30.390637102 seconds)
done (took 66.155704125 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.485681448 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.015753383 seconds)
  done (took 9.646426212 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.280848447 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.281372965 seconds)
  done (took 3.709583788 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.222657459 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.220945335 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.223034818 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.222224785 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.221479278 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.220908495 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.221421526 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.221288302 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.221964648 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.220969784 seconds)
  done (took 13.362975627 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.221756329 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.220987914 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.218476732 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.222624296 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.222090898 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.221655682 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.221877552 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.221283513 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222138248 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.219846219 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.222051062 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.218489562 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.222273416 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.220330098 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.222842621 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.220708396 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.21922782 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.21934041 seconds)
  done (took 23.125270689 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.235703718 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.244324659 seconds)
  done (took 3.627626466 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.349242533 seconds)
    (2/7) benchmarking "second"...
    done (took 1.261758214 seconds)
    (3/7) benchmarking "month"...
    done (took 1.330526019 seconds)
    (4/7) benchmarking "year"...
    done (took 1.317787395 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.262261879 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.24207134 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.261409732 seconds)
  done (took 10.171982813 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.223316275 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.405353796 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.508827403 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.823011276 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.225170365 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.227641977 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.134546741 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.227828814 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.229701464 seconds)
  done (took 14.154821023 seconds)
done (took 78.944233334 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.24406972 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.217188746 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.517420257 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.232555759 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.231573176 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.512808869 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.244858421 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.343834054 seconds)
done (took 37.692587273 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.234023567 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.007457017 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.017653344 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.217478309 seconds)
  done (took 11.392825143 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.209761167 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.190921414 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.216368 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.338452309 seconds)
  done (took 18.105442505 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.297444577 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552511378 seconds)
  done (took 4.99924928 seconds)
done (took 41.88067219 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225168062 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.222429973 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.221889498 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.225505697 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.225019554 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.223011132 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.224768263 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.223955888 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.223346304 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.226274995 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.22555321 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.223337741 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.224386733 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225639402 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223253071 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221926339 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226579388 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.22252991 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.225464348 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222983676 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222903923 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226312468 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.223640781 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.223525477 seconds)
  done (took 30.530934729 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.226355623 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.223587476 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.225692644 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.225456889 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.225668939 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.226048033 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.226476202 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.22388363 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.227710495 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.227808961 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225011823 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.223172532 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.226784322 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.224696815 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227319112 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.224632258 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.226969776 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223451353 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227984048 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.224558425 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.227047527 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224226383 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.223756282 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226817783 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.225986834 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224164343 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.226713786 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.225737663 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227762389 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.225933724 seconds)
  done (took 37.923868993 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.232771696 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.234877776 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.228739017 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.227751001 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.226951302 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.227071535 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.227685893 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.227408682 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.227808151 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.22936242 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.228032976 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.227389734 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.227177614 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.228991558 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.228848284 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.229353635 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.227949129 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.229143132 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.229032363 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228969966 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.230035982 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.22914994 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.228834881 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.228645378 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.229243899 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.228885982 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.230315258 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.229363088 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.229321934 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.229526319 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.229794138 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.231062645 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.229879847 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.230053075 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.230815215 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.229289972 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.234818958 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.237873865 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.23037495 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.229583854 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.229780746 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.22903834 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.229939412 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.230434485 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.229856676 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.229582444 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.230930636 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.229358554 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.231081089 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.229728001 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.230954402 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.22916175 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.229287066 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.230506452 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.230189344 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.230232962 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.230610876 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.230475229 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.230216985 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.231889596 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.230690943 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.231083057 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.231517117 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.231041469 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.232737944 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.231398415 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.232140283 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.23231218 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.231680267 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.230822717 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.231150762 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.232178016 seconds)
  done (took 89.719592992 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.231429727 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228937657 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.229478944 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229506303 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228594819 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.231184676 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.228807139 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232690913 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229966531 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.232011467 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232304141 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.230838528 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228771489 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.23311228 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232545797 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.229980153 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.23161919 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230774266 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.233187825 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.233713448 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234186573 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.231697371 seconds)
  done (took 28.241904729 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233789518 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234856294 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.230954205 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234485725 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231892573 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234337492 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.233719026 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234605222 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233306079 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232689704 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2314267 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233343394 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232515423 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23175927 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232642037 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231793266 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23605308 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.2335132 seconds)
  done (took 23.354987632 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.231712644 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.233046881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.234723959 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231828479 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.233435409 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234960444 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233736669 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236789017 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.236386307 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.232676641 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.234955634 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234197087 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.236102065 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231721694 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234923415 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.233398823 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.235264195 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232860822 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235769736 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232101179 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233556372 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235877094 seconds)
  done (took 28.308894601 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235599569 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.235267903 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.233507919 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233665093 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233332995 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.235754048 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.236470637 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.23408337 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.237711706 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.236027816 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234234628 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.236606701 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.234720442 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23537472 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.235068319 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234960129 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.237325825 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.236326 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23741932 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.234297866 seconds)
  done (took 25.869398324 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238669765 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238595103 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.237430003 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.237847633 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.238159068 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.238733673 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238609854 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.237451799 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238375401 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.239247422 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237788027 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238350359 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238972051 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.239463912 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23907861 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241898316 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239829111 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238732492 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.240669827 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240263268 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.240392916 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23948353 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.239784418 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24029221 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.238834226 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238920797 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239742769 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.24000906 seconds)
  done (took 35.858194483 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23965253 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.239741354 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.238110119 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.238086698 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237764457 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.236746565 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.238432616 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.238118266 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240621875 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237591714 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.240625508 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.240966743 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240817935 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.240246238 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240087088 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.241817545 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241033994 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.23830743 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239607881 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239266249 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.242374009 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240641065 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.242036467 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239717517 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238003036 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.241024767 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239539354 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.239625127 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241837459 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239527526 seconds)
  done (took 38.355694857 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.287025817 seconds)
    (2/2) benchmarking "in"...
    done (took 1.287203866 seconds)
  done (took 3.739837438 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.238766956 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240716482 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.242440147 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.240388663 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.238985272 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.242040902 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241393097 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239564911 seconds)
  done (took 11.09031828 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.241876211 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.241788805 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.243156147 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.241554234 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.243044641 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.241898318 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249404007 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.261843166 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.245338645 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.244380575 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.251657038 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.252391544 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.245953269 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243843842 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.243869096 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246100368 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.243278453 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.243856686 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.244462209 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.245558584 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244053769 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246237549 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247660748 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.241805859 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.244516891 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255064949 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.249554318 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.244458263 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243871718 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24826035 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.24443547 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.242408998 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.244722546 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.244792149 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.244513711 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.24534612 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252760809 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26444008 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.251798728 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24495342 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246025475 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.242776414 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.246234781 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.246689605 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24595339 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.244170252 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.246150959 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.242263345 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.245205765 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.248977362 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251458531 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245353575 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.243544416 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248989665 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.247219484 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253155008 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.265661544 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.249430585 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.255404335 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.257232849 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.259552619 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.25525647 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248245895 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.246409789 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257512482 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.271744925 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254134818 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.264728821 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.245627636 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.246737285 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.253468625 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259977739 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.274381172 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247575485 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246606004 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.247175752 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247714265 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.246231808 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254927342 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.267872528 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.246654798 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248557397 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257501294 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270147119 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.248233952 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.248089457 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.247800325 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.247793746 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.249336439 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259259587 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.267126058 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.2490106 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.248043507 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.249269152 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.25009991 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.248406365 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.249495593 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250056582 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.246514338 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.249444756 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247934788 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252869355 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.257916547 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248502807 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248417201 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.254987805 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.248797616 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248940508 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.255736688 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.249804601 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248781952 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.250533802 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.25571371 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.247418939 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253056951 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.25909684 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.249011582 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.249430958 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.249773801 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.251343889 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260189312 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.277624388 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.250397198 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.250657692 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.255926296 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.262177927 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250598966 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.252974691 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.251384378 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.247542106 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.248193688 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.251532697 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.251020768 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.252654794 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250608417 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250536481 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.248791793 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.251571937 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.251569886 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.252397299 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.252021218 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.251978016 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.253742252 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.254563755 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251272463 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.253828516 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.25839471 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.251225473 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.252692723 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.252375746 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.249679327 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2536125 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.25221033 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.251431923 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.250846351 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251275699 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.252045947 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.252823913 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251935539 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.252499391 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252776496 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.252851247 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257112268 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.251748496 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.255686547 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252061188 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.250244155 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.25225204 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.251886461 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.252504193 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.252611081 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.252180006 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.257194183 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.262447714 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.253145917 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.252328306 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.255617563 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252504607 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25227077 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252049314 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.256381584 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.260575915 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.253328749 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.259517499 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.2526276 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.25358004 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.254388004 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.253597736 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.253265325 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254591529 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.257523767 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.262057233 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266088091 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279341425 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.25549772 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.258340928 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.256210345 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.257576749 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.257889466 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.254361498 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.255432427 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25432308 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255114493 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254435346 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.256430647 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.253960682 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.254337548 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.255650858 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.254870499 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.255162801 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255745893 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.255274524 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256316684 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.253812075 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257851148 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254958846 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.254027928 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.252836382 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.253843883 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.25512821 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.255606185 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.255179775 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.262382741 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.254342797 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.258629645 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256917189 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.255916364 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.255541743 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.257278776 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258072791 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.256103811 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261983983 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.275456859 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.25727364 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262399292 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.275510865 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.255573908 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.259168351 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.256808343 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.254509549 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.260139998 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.264688545 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.257447463 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.2570528 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.25761761 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25757624 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257118431 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.262665577 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.255103334 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.257269317 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.257030007 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.258456534 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.254168368 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.259076578 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.258699131 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.25875989 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259843064 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258564872 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.258928723 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.258831287 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.25787506 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.257928833 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.257506957 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261629485 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.266566438 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.263530295 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.258147133 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.260118471 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.26011539 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.262832391 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.259465903 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.259393023 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.258819408 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271604475 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.284014446 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265643967 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.261320679 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.260323181 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264777465 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.261638057 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.262885194 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25952135 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260687912 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.259566195 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.260205748 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.25734953 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259680028 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.260244233 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260720041 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.26219482 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.264980908 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.260886732 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.259063889 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.261564505 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.259357202 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.259926441 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.259957533 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.261871927 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.261719833 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262132907 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.259678885 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.26198389 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26627963 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279927062 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.261571356 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.261054976 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.26104059 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.261487345 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.261154328 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.261186491 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26495556 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.268565645 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.264445525 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.270305552 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.264032343 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27116812 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.262038316 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.265273584 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.269334865 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.258690262 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.261289569 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.262794223 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.262225869 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268745858 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.281189219 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.263729264 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.266415211 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261917416 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.26293128 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.262745741 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.262279797 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263446585 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.262876169 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27028329 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.283211564 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.267505267 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264479065 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.260344295 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.262710732 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.263545624 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.262073916 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265781225 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.262967607 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.264140176 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.262757002 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.263436206 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.263824886 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.263095996 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.264410064 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.260595603 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.263991279 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270263506 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.28383689 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267982071 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.264224298 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.270485491 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264710585 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271254377 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.284373542 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.2656067 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.264712707 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.264625625 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266283372 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.263793863 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.266745225 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.264116297 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.265497067 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.269495485 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.265780493 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.265460935 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.264923418 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.265208216 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.265042391 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276088194 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.289001309 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.266884529 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271376544 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.264054912 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.267543717 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.269485701 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.266399701 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.264543648 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.268588309 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.277587112 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274597112 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.265712348 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.26582284 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266731156 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266170022 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.266477699 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.266043477 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.265685178 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.266898591 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.26670075 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.26683626 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268936072 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.267488399 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.267175539 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.267209398 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.268601988 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.276126633 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.2667471 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.266971752 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266515998 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.267921556 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.267299096 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.267613245 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.268248484 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266980914 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268142688 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.267756728 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27393627 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.274726683 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.269937676 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.26713146 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.268013009 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.267592858 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.268868901 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268098046 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.267406485 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268603927 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.268611077 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.268095221 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.269061041 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.267304667 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.268408926 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.268971089 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269198495 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271482758 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.275489547 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268874388 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.26665626 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.269241841 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.269162077 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.26707343 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.269092913 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.275631591 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272938522 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.280811202 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.278702691 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.272705212 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.269711895 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274089485 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.277981585 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.268230206 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.270415314 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.269966955 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26945653 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.271134278 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.272592437 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270273674 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.275814792 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.269901518 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.269831393 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2780903 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.290514992 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.27031985 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.271836982 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.275110969 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.271191931 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.268799798 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.272340472 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.271111502 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278817136 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.291263056 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.271351033 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272363657 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.270028654 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.273214224 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274642362 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270487914 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.273703357 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.269419288 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.272657154 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.271545106 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272240651 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.268625678 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.271257823 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.271018538 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.275230718 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.279407343 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.270539871 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273467123 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.271791716 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.272451869 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271530045 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273194787 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.269639272 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.269591675 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.272306539 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.2728684 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.272798806 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.275462316 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.273189214 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.274488698 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.274660085 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272846074 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276872691 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.283115634 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.282331543 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.27099169 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.273618587 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.273605865 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.274839523 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273491881 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.272918643 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27382327 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.273876637 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.273976562 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273929722 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.274233917 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.277991957 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289567899 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.293895825 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274398156 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.275223404 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276497352 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.273802768 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.272190406 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.274060894 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276272745 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.27929672 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.282442791 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.274977173 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281025913 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.29504301 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.277390273 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.279807161 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.277332869 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.28265168 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.277299554 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275731519 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.275817779 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.280758857 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.291766071 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27563953 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286235561 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.305699598 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.29542813 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.276856353 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.276184234 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275159695 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.276562335 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.27780038 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.275978642 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275908864 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276275664 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.276734333 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.277986986 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281230484 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.276939231 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.277532759 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.277170537 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.275923575 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.27769028 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.274227913 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.276725088 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.277915317 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.27717707 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.275854768 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.276761021 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.276766442 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290041936 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.304745569 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.277021938 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.278000673 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.274209892 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.281192213 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.28049272 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288595459 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.286442929 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.277403063 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.27749814 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.278472933 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277779478 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.275646617 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.278087733 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.278685548 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277926576 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.275652423 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.290154256 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287548099 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281622577 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.279046777 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278723967 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.278445414 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278374997 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279689877 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279903412 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.279291302 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.281089199 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283398688 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.280108479 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.27933041 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.283327796 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.288837813 seconds)
  done (took 754.116155526 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.277869953 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277906577 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277597882 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278453494 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278870416 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277521236 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277914927 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279189916 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276883601 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278246575 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278157231 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2784073 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278926338 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.277579967 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27774062 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278327405 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278835761 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278764431 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27790484 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2782125 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.277852883 seconds)
  done (took 28.041991053 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.280272631 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.27823722 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.278394779 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28072323 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278813542 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.281033449 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.279661373 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281665766 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281391887 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278717145 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282685678 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282224827 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.279651384 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.279192904 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27845943 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281819609 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.282193621 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.279249375 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.281429166 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.279747661 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281931816 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.279060059 seconds)
  done (took 29.368450722 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.282524031 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.282119737 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.282748218 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.280487793 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.283690074 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.281309046 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.28227341 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.282802571 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.283462767 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.283272436 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.282154911 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.28390369 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.290289577 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.287970444 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.284460976 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.283153841 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.427658468 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.282951102 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.283824381 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.284307219 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.281327512 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.288702999 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.281348578 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.280952504 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.282624446 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.283550781 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.284456808 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.284377065 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.284499211 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.2853065 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.288334864 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.285156633 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.282674904 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.285310862 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.281992226 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.284120982 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.287484212 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.28201348 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.280645668 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.282754659 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.293289224 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.305153651 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.282388194 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.288555066 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.283611513 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.28276824 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.286779254 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.290293424 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.282045744 seconds)
  done (took 64.292612425 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.28345728 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.284369488 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.28046974 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284270461 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283243513 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.284189556 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.28349903 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282679993 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.2819729 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.280721124 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.283433043 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.281456506 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281264391 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.284508757 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.283836651 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281308289 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282054282 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281702945 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.281431143 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281844994 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.281935526 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.284180221 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.2846854 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.282763984 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284478034 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282711296 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282554626 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285708926 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.282629601 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.282198393 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.285601611 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285517776 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.285563124 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283024871 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283058984 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.285332169 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.285138322 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.282945806 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284558472 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.28240627 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.285825592 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.285376562 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.28495421 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.286712196 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284273478 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.283775115 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282766391 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.284525783 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.285315256 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.285415544 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.28628653 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.283644214 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.28574951 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.283369357 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286347228 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286532003 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.284308937 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.285034659 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.28711798 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283648047 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.283922653 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.287544088 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.285254439 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287322716 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.287063423 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284869668 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.285604117 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288490906 seconds)
  done (took 88.52547229 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288433843 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.288056572 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287205503 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289132738 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.28835126 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.288281029 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287522315 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.288055287 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287561117 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.287842589 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287940951 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287899322 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.289168624 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288396149 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287095357 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287642232 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.288825458 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28905867 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288847615 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288415522 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.288435252 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289731809 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.289315077 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.28894133 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289046234 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289358495 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288477296 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289128236 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288626198 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288512614 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289685691 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.289676939 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289178869 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.288375865 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.28988291 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.28988888 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290406028 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28907372 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.290581468 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.289288168 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289658642 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290978811 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289730712 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.290421959 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290400294 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290566004 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290125835 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.290558092 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.291015128 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290752969 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.290632777 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291323386 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29044506 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290135163 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291127392 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.290606253 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291579044 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290659209 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289665137 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290927408 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290940538 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.290911176 seconds)
  done (took 81.153789151 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.291169657 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291354611 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.289928775 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.28917223 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.291035773 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289183149 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.291746882 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292126974 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.291802822 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.292450832 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293521491 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2898134 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290903995 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292339832 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.290233663 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291007536 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289853459 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.291180076 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292827807 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.290143675 seconds)
  done (took 27.033260799 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.288707644 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.292632912 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.289730605 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.289391663 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.292605215 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289930106 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.293283789 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292341163 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290325681 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293246068 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293689953 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293660899 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290014056 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290779798 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.293448148 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29150991 seconds)
  done (took 21.877442645 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.292264299 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.293725061 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.292389387 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.293153445 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.289977243 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.292777432 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.293873223 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.291352537 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.292053869 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.294330998 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.293654251 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294708052 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.294074449 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.294703109 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.291291026 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.293956596 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.291904668 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.293406296 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.293053418 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.293893997 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.291230405 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.291701168 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.293652188 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.293713857 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.291287881 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.29319985 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.291488321 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.291472753 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.291026484 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.294006149 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.292811565 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.291497751 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.291401715 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.293890352 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.292496515 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.290226274 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.292001637 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.29228684 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.293050799 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.29258268 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.292981148 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.290467082 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.292260177 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.292828029 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.29067612 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.293044041 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.291282009 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.291577965 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.292190643 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.290930832 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.294003998 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.292928673 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.293423276 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.293851906 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.292839559 seconds)
  done (took 72.306031328 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293504364 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293527083 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.291047911 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.292472553 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293072335 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.290526233 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.29273192 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.289784166 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291626623 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.291636009 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.290441662 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292804685 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290970796 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293242506 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29079886 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292954923 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.291065846 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28947031 seconds)
  done (took 24.465259249 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.289703842 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290782019 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.292729757 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29006245 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.290691835 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292557661 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290600324 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.29248967 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293822157 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.290606306 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29221975 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.293409518 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293665735 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.2927714 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290702604 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290799514 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.293430226 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292597123 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.290096955 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289744833 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.293619125 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293279121 seconds)
  done (took 29.632074886 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.29236775 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.291544929 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.292009989 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.309513201 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.31274697 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.316571086 seconds)
  done (took 9.02636142 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299794824 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294158915 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291652238 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294590689 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294063214 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291256821 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291879114 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291570917 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294827225 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292775661 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291630784 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293842193 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295598999 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292369488 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294600704 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294795808 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292768363 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29301719 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293547482 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294931043 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291860314 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295783356 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291814629 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292003451 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293774875 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2943763 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295253431 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292950725 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293289357 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297085475 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295065738 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293748715 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295120303 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294989367 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297005237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295817394 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295415005 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296819803 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295966466 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294255226 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29647427 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296544887 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296494722 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294071636 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296479721 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29454989 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294879446 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292679514 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294768804 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296545765 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296876028 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294657334 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296026486 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297370604 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296551554 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29749483 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295332296 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294248089 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297583837 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295630726 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295404445 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296816605 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295855722 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295508417 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29734021 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295844734 seconds)
  done (took 86.696705061 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295388014 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295873612 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296687287 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29761108 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29583842 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294801843 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296533215 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295737611 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295356357 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297225508 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298700736 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296212598 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296679085 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296150947 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296839733 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296794328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298193769 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297874721 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296814451 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299421393 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296886955 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296301179 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297535686 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296893523 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296589738 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299159644 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298129773 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297290793 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297322877 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296734791 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297268632 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296566905 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297742233 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297439961 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298793333 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29711073 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297691825 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298247706 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297516521 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300247688 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297419764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300362916 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298314162 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299234537 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298729593 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298044676 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298239504 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299925122 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299657152 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298424934 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29942192 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299537748 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298436975 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29988548 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299292563 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299325098 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299448659 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299701546 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29837792 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301110001 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299074439 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298948461 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303129776 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298136689 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30032298 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300632608 seconds)
  done (took 86.888170804 seconds)
done (took 1757.567526865 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.322947475 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.362705904 seconds)
  done (took 13.905499284 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.463249241 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.417518552 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.299738862 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.330122507 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.300024479 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.311089186 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.298796569 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.299150958 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.30054913 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.299680055 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301735793 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.48708044 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.298551046 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.300924335 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.300853863 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.394179701 seconds)
  done (took 42.626330793 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.328913989 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.306199903 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.422905749 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.322311748 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.329208309 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.497188097 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.359030177 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.304388362 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.481329053 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.348032836 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.931359297 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.327756651 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.304365207 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.456264225 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.322941391 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496948479 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.556524572 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.932600896 seconds)
  done (took 30.248180118 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.782006144 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.330854515 seconds)
  done (took 9.331679148 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.352675542 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.332158644 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.332355786 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.313581726 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.341123685 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.331195143 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.336744518 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.32436542 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.335084508 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.323262082 seconds)
  done (took 64.544261034 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.324195402 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.304011026 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.305530897 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.302697891 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.295482143 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.294875573 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.303241066 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.301442547 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.124799813 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.433720112 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.305478583 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.313494065 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.323878599 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.3047364 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.30157315 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.340257864 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.450852646 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.302857048 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.300153367 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.308862027 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.304863065 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.401054906 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.346693712 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.302151957 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.431639279 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.096628741 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.306597207 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.311085938 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.42649222 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.303706281 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.302308169 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.304011721 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.304996325 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.924435707 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.747634525 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.316928622 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.329232198 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.311419886 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.300786258 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.438818838 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.304688473 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.309697458 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.296378702 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.746801302 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.448478291 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.419722239 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.50947159 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.304695263 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.306484226 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.36587578 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.303197533 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.305141639 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.335293479 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.075925246 seconds)
  done (took 110.007478157 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.324811402 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.683233617 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.465741647 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.316584088 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.991536202 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.969230713 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.31188882 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.585761693 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.360931028 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297782029 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.589363604 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.806883731 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.319572076 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.345017374 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.612436291 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.354481165 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.297298805 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.134032073 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.312668783 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.301075502 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794779179 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.297242927 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.295410331 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.485304237 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.334587188 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.751493679 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.735124115 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.839710851 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.314214005 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.29575431 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.761828761 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.311784026 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.302455779 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.297487043 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.554459086 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.645060025 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.619903667 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.294912368 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.318113141 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.29682458 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.308518727 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.735656614 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.628094024 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.294665952 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.295660064 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.75476338 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.294251151 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.299667159 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.301561691 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.499609841 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.248617781 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.293612566 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.69183602 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.293742196 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.558199277 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.316093296 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.369399801 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.759327197 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291077156 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.44716611 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.311418438 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.291412254 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.291463506 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.293637856 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.290609976 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.620848366 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.402515335 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.29476325 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.616662143 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.7369423 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.305242977 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.811371811 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.09856756 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.313141927 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.393375092 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.296583707 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.912879933 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.755992559 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.317067902 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.288130546 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.598770719 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.291615519 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.555654927 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.302995351 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.288692152 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.794593701 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.290605884 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.332604357 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.30176086 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.288465227 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.990028584 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.291789788 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.558114434 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.323642581 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.288437127 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.287926039 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.292100137 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.288164993 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.303468369 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.291785177 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.789999513 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.311927995 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.241345103 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.304828805 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292692836 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.288849577 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.292781199 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.290200046 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.510533936 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.674594303 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.295940856 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.289640016 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.289204524 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.297795185 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.465749777 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.292845483 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.576223626 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.297417695 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289647574 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.308229881 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.953579535 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.362978401 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28972874 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.29316905 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.161722187 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.490674354 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.306837732 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.290073837 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.289810995 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.296262122 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.473881183 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307273924 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.334467846 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.291821036 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.970828917 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.315143497 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.308001331 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.885156275 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.291566827 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.052311034 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.315511488 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.291475838 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.572049597 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.5439087 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.322047225 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.29306278 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.290569883 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.956271691 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.33956192 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.435670455 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307066121 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.294168137 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.484502562 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.60250658 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.291382388 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.869299056 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.291574678 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.507912165 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.304108478 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.584709692 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.756567413 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.306935416 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.300505372 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.966969182 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.974117889 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.142999281 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.292511952 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.554148188 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.238160521 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.773009344 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.291276524 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.291005594 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.816664572 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.292676883 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.297505857 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.292359212 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.293584683 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.348193256 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.462213593 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.670054904 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.296742159 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.716277372 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.367002453 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292225136 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.32072544 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.295644745 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.636265963 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.387230879 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.294513041 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.305225553 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.292385714 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.293472411 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.735029462 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.086220858 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.294594581 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.444261573 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.898488098 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.309106096 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.294938106 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.842238765 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.855939653 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.819461097 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.304135681 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.576243529 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.300944662 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.330794873 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.914556714 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.339166525 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.783590657 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296200888 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.295725169 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.860964332 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.311037652 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.651143137 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.294349111 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.309690729 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.798504853 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.309824962 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.300335375 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.484684354 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.310831534 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561391432 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.29509137 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.299654162 seconds)
  done (took 1101.072408665 seconds)
done (took 1372.955141779 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.297203005 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.29822142 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.291551032 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.306420712 seconds)
  done (took 26.413981843 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.308655573 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.305709849 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.305615104 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.30435911 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.306542368 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.304127001 seconds)
  done (took 9.059195972 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.34078754 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.298581786 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.303986659 seconds)
  done (took 19.166930219 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.495099655 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.512777473 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.619301274 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.399086266 seconds)
  done (took 10.249842168 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.306161066 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.305967071 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.30597555 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.307132879 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.311706457 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.312127938 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.307366562 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.308961947 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.310343693 seconds)
  done (took 12.999499905 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.031541491 seconds)
done (took 84.140987985 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.386454815 seconds)
    (2/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.00644962 seconds)
    (3/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.940870497 seconds)
    (4/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.309807037 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.707241212 seconds)
    (6/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.316797288 seconds)
    (7/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.716027801 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.314815586 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.551490413 seconds)
    (10/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.319800838 seconds)
    (11/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.31909757 seconds)
    (12/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.288833328 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.342564714 seconds)
    (14/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.301886622 seconds)
    (15/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.308589175 seconds)
    (16/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.553589479 seconds)
    (17/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.332904797 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.327962425 seconds)
    (19/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.291023214 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.179689783 seconds)
    (21/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.302826043 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.335063718 seconds)
    (23/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.43116806 seconds)
    (24/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.026501593 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.875586365 seconds)
    (26/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.427092838 seconds)
    (27/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.371870173 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.666152835 seconds)
    (29/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.562725564 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.308289504 seconds)
    (31/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.328693265 seconds)
    (32/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.319099907 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.640353763 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.391859073 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.571025362 seconds)
    (36/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.019314117 seconds)
    (37/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.016803255 seconds)
    (38/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.958641098 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.352203066 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.412036615 seconds)
    (41/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.288848341 seconds)
    (42/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.781127666 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.320443072 seconds)
    (44/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.304275777 seconds)
    (45/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.424500606 seconds)
    (46/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.388083417 seconds)
    (47/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.320789787 seconds)
    (48/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.882019693 seconds)
    (49/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.453136982 seconds)
    (50/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.683079427 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.855869708 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.414027599 seconds)
    (53/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.532974284 seconds)
    (54/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.688589453 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.58808127 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.328247959 seconds)
    (57/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.291921795 seconds)
    (58/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.0978431 seconds)
    (59/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.310486876 seconds)
    (60/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.540546667 seconds)
    (61/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.379602067 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.30525134 seconds)
    (63/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.375563827 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.360859843 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.702707202 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.82740401 seconds)
    (67/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.621169506 seconds)
    (68/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.538687092 seconds)
    (69/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.298385543 seconds)
    (70/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.415020412 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.311018336 seconds)
    (72/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.505444755 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.414766427 seconds)
    (74/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.778107814 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.420258925 seconds)
    (76/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.291306634 seconds)
    (77/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.659913754 seconds)
    (78/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.001701846 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.327646071 seconds)
    (80/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.559276847 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.114249912 seconds)
    (82/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.771743854 seconds)
    (83/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.331654065 seconds)
    (84/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.391276946 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.750281836 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.80867124 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.29465366 seconds)
    (88/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.293417374 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.339462664 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.477431213 seconds)
    (91/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.437898316 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.925952075 seconds)
    (93/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.389256836 seconds)
    (94/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.330880647 seconds)
    (95/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.925141245 seconds)
    (96/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.311881677 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.311547001 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.668014941 seconds)
    (99/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.301660647 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.127932341 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.700227722 seconds)
    (102/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.504771964 seconds)
    (103/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.308652061 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.295910627 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.913618315 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.29654783 seconds)
    (107/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.295579701 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.136443145 seconds)
    (109/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.666894178 seconds)
    (110/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.332616915 seconds)
    (111/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.338362799 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.519518501 seconds)
    (113/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.295602735 seconds)
    (114/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.314508865 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.407879237 seconds)
    (116/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.493093109 seconds)
    (117/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.292980738 seconds)
    (118/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.693579361 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.304180276 seconds)
    (120/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.301973426 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.291976009 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.339016147 seconds)
    (123/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.275688028 seconds)
    (124/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.356202072 seconds)
    (125/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.294988954 seconds)
    (126/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.378492548 seconds)
    (127/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.262311339 seconds)
    (128/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.355280282 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.259322955 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 1.7974895 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.291571463 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.527983388 seconds)
    (133/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.77225249 seconds)
    (134/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.296665256 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.803389223 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.990228431 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.552700969 seconds)
    (138/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.293045057 seconds)
    (139/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.372199217 seconds)
    (140/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.222522504 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.676061482 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.642435191 seconds)
    (143/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.261242574 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.402417276 seconds)
    (145/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.279446457 seconds)
    (146/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.265156292 seconds)
    (147/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.571194827 seconds)
    (148/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.264840089 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.985894185 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.29412094 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.660250876 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.521420129 seconds)
    (153/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.956985104 seconds)
    (154/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.283465439 seconds)
    (155/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.295867002 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.122640149 seconds)
    (157/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.260440605 seconds)
    (158/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.271838835 seconds)
    (159/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.276077051 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.264892099 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.292160661 seconds)
    (162/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.254592703 seconds)
    (163/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.281626121 seconds)
    (164/309) benchmarking ("sort", Float32, false)...
    done (took 5.243741272 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.349665018 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.33834729 seconds)
    (167/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.353921867 seconds)
    (168/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.076929776 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.10615495 seconds)
    (170/309) benchmarking ("sort", Float64, false)...
    done (took 5.530608463 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.64633918 seconds)
    (172/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.295366265 seconds)
    (173/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.547249136 seconds)
    (174/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.287732241 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.493919501 seconds)
    (176/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.27357253 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.246079606 seconds)
    (178/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.473645883 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.307906238 seconds)
    (180/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.242263167 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.361339752 seconds)
    (182/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.255984924 seconds)
    (183/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.453811212 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.081177622 seconds)
    (185/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.841213182 seconds)
    (186/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.262167989 seconds)
    (187/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.295665753 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.258262731 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.14078165 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.262669009 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.631161269 seconds)
    (192/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.248956103 seconds)
    (193/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.181294661 seconds)
    (194/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.27751082 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.281333256 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.24214192 seconds)
    (197/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.755021382 seconds)
    (198/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.385486747 seconds)
    (199/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.369653627 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.297741687 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.144961234 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.855645952 seconds)
    (203/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.603256406 seconds)
    (204/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.374855711 seconds)
    (205/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.182528256 seconds)
    (206/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.92518621 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.705360803 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.31911177 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.242967031 seconds)
    (210/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.632124124 seconds)
    (211/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.344696056 seconds)
    (212/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.253548381 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.315408543 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.243931115 seconds)
    (215/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.052571725 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.684995132 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.28995545 seconds)
    (218/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.812123312 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.208590685 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.499536648 seconds)
    (221/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.012299593 seconds)
    (222/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.266085359 seconds)
    (223/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.244301755 seconds)
    (224/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.884524708 seconds)
    (225/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.289155769 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.46004838 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.264036543 seconds)
    (228/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.077898309 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.298419504 seconds)
    (230/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.259023384 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.358546278 seconds)
    (232/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.989503915 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.252845692 seconds)
    (234/309) benchmarking ("sort", Int8, false)...
    done (took 4.306181906 seconds)
    (235/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.840594374 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.269898229 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.261032256 seconds)
    (238/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.296094583 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.592250562 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.279860996 seconds)
    (241/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.250102554 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.24203279 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.265282068 seconds)
    (244/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.975141378 seconds)
    (245/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.25297685 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.252875129 seconds)
    (247/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.051481217 seconds)
    (248/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.686982323 seconds)
    (249/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.709312537 seconds)
    (250/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.27850633 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.248944656 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.450509315 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.718989149 seconds)
    (254/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.236146867 seconds)
    (255/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.24010441 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.326549422 seconds)
    (257/309) benchmarking ("sort", BigInt, false)...
    done (took 6.245517488 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.287641704 seconds)
    (259/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.591619461 seconds)
    (260/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.087222731 seconds)
    (261/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.743461552 seconds)
    (262/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.452603377 seconds)
    (263/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.074364065 seconds)
    (264/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.308712875 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.628357939 seconds)
    (266/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.717989658 seconds)
    (267/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.329157217 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.11481965 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.017421516 seconds)
    (270/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.259371253 seconds)
    (271/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.412652999 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.24158153 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.245032805 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.370507674 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.246669567 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.237340557 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.369275248 seconds)
    (278/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.258142714 seconds)
    (279/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.354465381 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.247991022 seconds)
    (281/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.252036925 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.147689358 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.338093767 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.330092463 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.317606524 seconds)
    (286/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.321419876 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.367229142 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.272746396 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.020813144 seconds)
    (290/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.03964926 seconds)
    (291/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.59168257 seconds)
    (292/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.053950267 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.275400908 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.289328933 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.618946718 seconds)
    (296/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.466151051 seconds)
    (297/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.264468234 seconds)
    (298/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.337298157 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.248711169 seconds)
    (300/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.442040011 seconds)
    (301/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.313592209 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.32489596 seconds)
    (303/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.250749957 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.276568109 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.358096223 seconds)
    (306/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.528935516 seconds)
    (307/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.448690344 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.255935279 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.164152184 seconds)
  done (took 1012.644441683 seconds)
done (took 1013.871146222 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.283079651 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.278157297 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.262308541 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.282447441 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.374744605 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.4376307 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.271499273 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.263684496 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.30965711 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.311614087 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.26170433 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.437002999 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.264212405 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.262714001 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.261812848 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.276341739 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.240806369 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.263442245 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.278626823 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.271687579 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.281583499 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.261850107 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.31129602 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.437790053 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.265939597 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.26589861 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.266152223 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.283614305 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.374959583 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.2663185 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.266284952 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.273990894 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.246474293 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.26803901 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.258300259 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.282912025 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.274592611 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.273573215 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.267339969 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.29570435 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.623869368 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.270060944 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.265529157 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.264133364 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.2639313 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.268633063 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.265329578 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.271262382 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.2770014 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.278281864 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.630182922 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.286775115 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.26827075 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.265652324 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.275649825 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.265112732 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.267168067 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.281102365 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.284266119 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280137273 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.246284416 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.274525354 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.267368005 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.280915349 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.273280965 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.654195936 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.265335686 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.267914915 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.621634792 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.270547973 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.649248859 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.273203198 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.267874103 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.279050549 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.298429748 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.262199958 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.267557911 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.265003385 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.274335892 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.264797559 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.276001026 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27941714 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.270695113 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.267619242 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280629846 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.442181072 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.278405495 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.267912273 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.275985757 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.2868765 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.274850295 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.278080133 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.271485976 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.262792229 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.277540836 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.270992107 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.270145442 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.271045894 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.27167557 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.277503737 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.623047036 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.284133158 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.263374644 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.26409877 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.266608612 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.281668551 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.625580225 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.267948902 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.289244495 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.315216014 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.268976894 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.253435368 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.278807146 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.283603797 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.276715481 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.271015371 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.263767608 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.255605751 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.624764001 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.28332374 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.271238127 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.267484421 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.285511261 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.269692509 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.264840208 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.268245042 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.277905731 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.283290939 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.390140906 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.279074268 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.301689756 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.267789014 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.272839768 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.298983993 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.284654343 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.30136356 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.271264772 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285440807 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.285945919 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.266044371 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.281006085 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.279761591 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.270901756 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.277170487 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.264518637 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.302817771 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.283535218 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.28249965 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.289849874 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.390947122 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.268362598 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.25620131 seconds)
done (took 214.813053077 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.327718334 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.261649499 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.355878884 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.265867833 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.364452297 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.364969914 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.264010927 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.263898276 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.264382654 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.644832254 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.263977621 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.26388877 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.268123993 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.264310783 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.348672573 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.267161855 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.265648049 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.607613971 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.266757611 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.33755199 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.266180036 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.265802353 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.267356535 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.645146154 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.260860678 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.262891951 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.338940198 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.268168048 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.611127231 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.268039466 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.263393478 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.613004793 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.355574456 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.284738174 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.277651435 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.274480522 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.366071571 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.283770615 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.34811284 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.348667376 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.358351995 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.3058767 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.261240926 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.266840573 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.269668869 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.267989269 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.265754424 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.296043829 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.262138418 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.266853483 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.609904682 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.279461522 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.266677277 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.26697783 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.26663514 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.299265481 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.268092961 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.269687037 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.357745177 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.270084277 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.331245239 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.648484788 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.648073854 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.270680855 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.268521033 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.268406907 seconds)
  done (took 143.998917235 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.33737414 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.343902871 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.378915596 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.275036899 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.321095716 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.384914254 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.276804058 seconds)
  done (took 10.506280892 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.2753811 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.270724843 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.320102011 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.319280133 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.269954809 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.452850855 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.271055405 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.282015835 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.268163807 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.323531722 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.271768958 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.272198608 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.277368687 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.269124784 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.318741031 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.28249721 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.385566483 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.273082846 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.271576831 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.427052596 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.269920888 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.278023156 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.322706595 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.282730049 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.272624725 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.278147066 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.093378844 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.273518618 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271442369 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.272909068 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.270612673 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.359373423 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.273058013 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.268834441 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.270032373 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389128351 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.272747107 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.271146755 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.273242321 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.26672305 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.273088111 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.273966512 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.273561801 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.270873138 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.274188995 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.295544007 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.272956493 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.274138449 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.273849269 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.274492178 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.323778806 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.274216755 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.271423102 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.271259873 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.328876308 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.28094148 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.27406378 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.271393219 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.274346737 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.27194354 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.43050955 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.32855782 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.274601745 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.323110366 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.274170764 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.274148734 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.274623895 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.27420305 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.328005603 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.274035041 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.323029132 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.272053597 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.465138606 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.29734947 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.276025193 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.278950059 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.27800375 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.276166377 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.267966123 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.280976231 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.272273021 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.275809082 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.280965604 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.283013365 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.273397345 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.459606067 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384532063 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.27347692 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.28787861 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.282358571 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.273904108 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.329248371 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.275021266 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.273142275 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328140039 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.390631902 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.32914037 seconds)
  done (took 147.767663375 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.281241195 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.284080175 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.279576832 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.300540612 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.277019998 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.276739602 seconds)
  done (took 8.894841865 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.279242292 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.276939784 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.277641771 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.276768935 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.276992449 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.277728135 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.277950183 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.277892167 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.279498676 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.277992888 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.2792617 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.280173667 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.279590956 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.277636067 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.27816259 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.278135436 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.279508872 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.275650651 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.278343117 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.278764509 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.372429825 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.278077413 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.278769401 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.280292421 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.282792831 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.280152812 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.286539129 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.279150639 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.278708214 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.285890312 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.281422519 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.28013064 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.278798253 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.284060309 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.282451371 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.2815478 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.28196414 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.282077206 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.277822852 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.280299429 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.282358924 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.279930377 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.279427565 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.280929414 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.280991943 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.283662765 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.284594116 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.286829134 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.280012454 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.281459255 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.281030202 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.281665073 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.281939132 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.28151083 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.282009183 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.298689096 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.284540145 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.280750859 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.279944724 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.280506359 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.280846742 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.28084463 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.281878056 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.283638993 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.288342187 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.282157072 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.281790252 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.285125801 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.281162637 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.2816937 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.283006875 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.279194545 seconds)
  done (took 94.517549224 seconds)
done (took 406.872482451 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.581289227 seconds)
  done (took 7.780649332 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.486149558 seconds)
  done (took 7.690317875 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.051842293 seconds)
  done (took 21.257265042 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.332603961 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.389322207 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.297490676 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.27607091 seconds)
  done (took 26.500909461 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.858163731 seconds)
  done (took 8.059348868 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.286213149 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.286151498 seconds)
  done (took 13.775615537 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.626692492 seconds)
  done (took 7.828018852 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.496945108 seconds)
  done (took 7.705854273 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.296494647 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.295942904 seconds)
  done (took 14.048083668 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.26467487 seconds)
  done (took 7.466955854 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.923388847 seconds)
  done (took 8.126288067 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.287460301 seconds)
  done (took 7.491125568 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.33962445 seconds)
  done (took 7.541920208 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.015109889 seconds)
  done (took 9.217847153 seconds)
done (took 155.689746822 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.277479272 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.285579394 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.286104073 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.284752074 seconds)
  done (took 26.336630722 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.320173407 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.318751767 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.320573059 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.330549331 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.321959845 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.318739024 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.311870651 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.311494256 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.329039859 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.321846431 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.320930724 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.322058315 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.318920482 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.311663718 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.320355972 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.320669057 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.330897366 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.321175797 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.31142045 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.323528594 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.287503884 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.330447347 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.322307141 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.287027394 seconds)
  done (took 32.848857979 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.808154805 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.356756462 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.439642031 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.339723313 seconds)
  done (took 7.148239161 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.339223382 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.340350969 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.35102262 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.39071283 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.425809675 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.349238099 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.313039421 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.308638394 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.294150904 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.341099707 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.415921443 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.356040179 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.442238094 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.287013586 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.467582675 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.287106648 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.286983801 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.339878361 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.390513918 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.409051978 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.288067014 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.339611087 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.342521181 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.35677162 seconds)
  done (took 33.668751332 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.288628245 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.306089958 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.287650592 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.285847913 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.2961216 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.287570237 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.288918661 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.289151023 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.288057266 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.293294013 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.286866758 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.301979757 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.288057708 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.288442502 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.293630941 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.288800474 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.293251021 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.288086559 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.288708563 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.294653738 seconds)
  done (took 27.030626214 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.281911364 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.136501975 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.633661779 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.538017732 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.283584552 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.288548409 seconds)
  done (took 27.369663818 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.354975512 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.488791448 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.289657927 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.62963985 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.71311131 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.296729324 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.290060279 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.519116923 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.821919658 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.813316752 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.351797184 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.355944162 seconds)
  done (took 19.140067611 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.283552233 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.290666043 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.291971233 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.306697295 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.341545803 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.299902255 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.298012592 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.282833601 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.349813612 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.354083844 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.300396012 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.343208345 seconds)
  done (took 36.95164682 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371376291 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.333046552 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.196481049 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050786202 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.00272743 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.495451582 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.067924701 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.979907657 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.288513474 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558734644 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28526271 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375943884 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.541347207 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285281351 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.293052122 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.274854237 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510498135 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756717812 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288025723 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.272615384 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318571895 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.298053361 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.305221052 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.507095834 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.506165896 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.262940479 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.547582738 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.061606545 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561487404 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30816143 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29605467 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287000533 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.560962581 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93184002 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390164274 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490681658 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.017894987 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.860036898 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.281441528 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.22313362 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.299176443 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.290511681 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299109284 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28786861 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.221931915 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29071619 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997495683 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.293521171 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.999629746 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.288115373 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536420123 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392021335 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.291366136 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.857698174 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.2883542 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.312438944 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.293376884 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29551814 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861159702 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.652610872 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.297675799 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.230300981 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.693475835 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.272989037 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888298773 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.295830697 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.293359062 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.293311953 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223584386 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.191966864 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.312824646 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435551078 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.314538192 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.937111873 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950904831 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.292712539 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.220075945 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812802623 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292240081 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.232012641 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.517227881 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06824112 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224689232 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.235623697 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.224213203 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969228955 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299216029 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.654848531 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.299063781 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.989676184 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.496206557 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315935431 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314954601 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.514843167 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.176389641 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291972253 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.303933866 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418793521 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312773562 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.994073037 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.225953207 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.296166498 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547632984 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.502831454 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294029445 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.297316271 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763382512 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.296808961 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.314077175 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.306669394 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.504192608 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.8562941 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307772392 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.667373048 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318264854 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.06948666 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011207974 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294590637 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.304752167 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.293019892 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.530576119 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.052128401 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.175603348 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360029928 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298020364 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.292619225 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.300960931 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.149632767 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.188753017 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.490046052 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330770137 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.31118469 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.294945826 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241643126 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.292391798 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294308812 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.081615622 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.516394092 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.296427885 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576668764 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228061405 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440950021 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.30393181 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.51669448 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.472614798 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.299096045 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553595708 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298717936 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.311705656 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.312210703 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31477529 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395215177 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316396218 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.300496826 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.55744306 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.299207588 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.300372773 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.325108906 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.07209042 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297198362 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.300742467 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.150092302 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853067615 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272350072 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.305106366 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185979864 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.311721851 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363597605 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.301845468 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.502706313 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.083796646 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.136533816 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.300487721 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.296207253 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519876961 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.30642825 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.217014313 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384942693 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.765555432 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.849371343 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317065145 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.230552864 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.008238572 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.989752751 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297134519 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.485292228 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.297502382 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50250671 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.319513915 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.842758767 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.855317972 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3071746 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.21626642 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.309829352 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309838696 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.303583924 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298603347 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.044383468 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.686344237 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.31991354 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.316348165 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440629023 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.311637928 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.231941799 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.814889471 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304339489 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.299444726 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.075583429 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33249386 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.225170718 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101456115 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556839183 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.016217902 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.547133396 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.393828835 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.338024784 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.30072128 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311304187 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314619164 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.311484888 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331093385 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.30958129 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.280237783 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.744749612 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867586095 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989366648 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808520676 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.561104834 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.301401844 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.216866341 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.0045565 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233961897 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.961657832 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.484156393 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011836008 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.244692607 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772263989 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.483057728 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.052357814 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550982028 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536554933 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.551726452 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.315873919 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559944855 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.520916364 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335584797 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.309014954 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.236167035 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.588134583 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849928155 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311824272 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387113716 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006418918 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300694137 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.088658176 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.30101846 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.981511545 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700927048 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.852699953 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.687751924 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.306997546 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.309765723 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105720518 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.310246144 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.82709021 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903300245 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.312159836 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.779910818 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238039148 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.508777692 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.321730202 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.306467268 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.546315437 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.300249582 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.56539297 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55612529 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238173279 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.30298277 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829042344 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.163179049 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.307941292 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303785889 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029851322 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31001627 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587534494 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.313672368 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.021181488 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319255516 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.237807478 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237122011 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.996421478 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.313428295 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.279884411 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.76525368 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.692049958 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.324878383 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333174265 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.155476574 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.559406676 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.318700036 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.864551149 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529109443 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.131810887 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328145621 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.307411438 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304575082 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.309089244 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.212455557 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.539725191 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.304781455 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.528783097 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.244795059 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.212873524 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.304314856 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.516689535 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.187385029 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.305600422 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542627398 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.024381634 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.308088573 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994678796 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331253034 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.305855349 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.316683971 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.712421251 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.31302963 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376853779 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51362318 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.326389436 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.317717178 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707499403 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308940865 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30863355 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.320006664 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399086234 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.72714735 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.032963169 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.08695812 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873921568 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.008469811 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.874559077 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560845258 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315932676 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308674601 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242255225 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456549234 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.832785594 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581466515 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438715087 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.832909163 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331268546 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320806697 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.312538648 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527327992 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583070093 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.178118139 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310171599 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.973483175 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.194132744 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.319789337 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.519949642 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774212565 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838634282 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425652644 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320232139 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.024585942 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582985938 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.399630345 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308630051 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898124482 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.310312146 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.008178631 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.314334012 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316758348 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456384561 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.561783372 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964392788 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.325806021 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.464707288 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.082537759 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.367883159 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.564602314 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.742826574 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.52084544 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883308366 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.988241925 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573195571 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380608096 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.518896252 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.422595714 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457489161 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.30958762 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.192107301 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311409613 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154566353 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.020681235 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.320975747 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88214105 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.574402162 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.315141767 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.311748647 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334029889 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.320830374 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.534541548 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003901698 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.535258483 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.321542297 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.319189522 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.301535055 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887623513 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569281004 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247900232 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.316843941 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548448486 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.556581886 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338943096 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.765139743 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.023611157 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84908976 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.285792241 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334356859 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325954449 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.004072596 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883657049 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.058136054 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7943368 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.979927479 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.318950018 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594237099 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.318298606 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.323057826 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595907174 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.317520085 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.323385755 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531813058 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.885091909 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.063451461 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.328423214 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.379567642 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.249965361 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.540206289 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977040015 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.250884707 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323830289 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.737507289 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338880977 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446851763 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32600783 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.318180065 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319497977 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.05454024 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.618327101 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.319910467 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.308369241 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.310623534 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.33175041 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329188294 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8721275 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319355599 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.988307888 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.667384843 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.569405296 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.326806224 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.309532929 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.318090877 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316207019 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.025896451 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283546796 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.861496816 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847795154 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.318256514 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.333566668 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.320001942 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.532424369 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52803287 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332246224 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.528613313 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330254327 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338919805 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.222531963 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.083482181 seconds)
  done (took 1569.34488068 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.327081229 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.331928254 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.335887829 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.318819346 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.354839438 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.352598569 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.324139754 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.336896388 seconds)
  done (took 51.920975337 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.317834902 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.474081666 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.347352493 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.319391993 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.327117988 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.320180495 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.775078596 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.326476652 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.327347568 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.327975132 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.317991472 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.326631279 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.972740261 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.327716452 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.325519023 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.306242026 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.334549801 seconds)
  done (took 65.014061584 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.331350604 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.790046625 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.416237875 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.318033555 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.243063142 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.341067792 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.920435031 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.377560092 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.330647872 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.567660813 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.975040595 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.327118522 seconds)
  done (took 84.178298914 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.328734345 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.328821789 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.330095356 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.329999027 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.329913858 seconds)
  done (took 7.887905976 seconds)
done (took 1990.050371579 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.686346826 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.008438212 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.922537732 seconds)
  done (took 5.17165296 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.470810722 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.519529594 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.640216054 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.646365646 seconds)
  done (took 7.520918523 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.619947953 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.692461328 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.522143552 seconds)
  done (took 6.0789616 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.683095242 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.350430486 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.454146934 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.321890405 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.330177317 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.328964008 seconds)
  done (took 20.225556705 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.328545733 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.330535492 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.328203389 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.33043751 seconds)
  done (took 6.563880788 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.313955989 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.031348389 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.31143714 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.334546795 seconds)
  done (took 18.235728513 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.073297895 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.087474494 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.070955667 seconds)
  done (took 7.477560337 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.324481139 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.275112088 seconds)
  done (took 9.84483979 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.620786286 seconds)
  done (took 2.866379953 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.459347815 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.65213101 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.390956509 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.26960308 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.405017853 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.995920162 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.890634691 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.511880039 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.234852192 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.416914473 seconds)
  done (took 27.472895981 seconds)
done (took 124.8726828 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.041347207 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.707383594 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.528252641 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.009225773 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.54998628 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.527454351 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.744594605 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.973370362 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.520130203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.512738045 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.05590217 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.549913957 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.477982192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.706894986 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.479020157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.325378232 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.549995915 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.076829512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.733830131 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.896502626 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.746150929 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.657618302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.89566136 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.675488417 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.548498678 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.483774158 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.250410358 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.32917302 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.910941856 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.272231185 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.482490403 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.071569123 seconds)
  done (took 188.537800684 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.326442843 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.327329519 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.326476091 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.342045035 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.326826854 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.328922014 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.344211543 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.327253745 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.327970276 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.328018909 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.327756926 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.345426365 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.34556486 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.342633087 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.326517899 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.3276748 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.327539928 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.328007315 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.327135156 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.327549077 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.343930658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.334163281 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.327503302 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.327915851 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.356013898 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.328265837 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.34338759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.339819114 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.328309088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.346296783 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.32907654 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.328094194 seconds)
  done (took 203.91212421 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.329224016 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.33725649 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.330519362 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.345156963 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.329191109 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.328851499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.347570181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.329017744 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.32957694 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.354030491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.335269492 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.329473676 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.329891573 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.329244662 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.331783301 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.329917886 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.348257732 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.348854363 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.329806551 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.329908609 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.337370372 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.342504692 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.334255845 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.330661424 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.342855259 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.330222466 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.343189937 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.334719003 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.329837917 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.347705213 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.330597121 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.329919103 seconds)
  done (took 203.987310065 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.525141262 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.337435444 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.33778572 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.29108939 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.337924615 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.338341553 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.332208423 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.53525157 seconds)
  done (took 14.286866526 seconds)
done (took 611.970801211 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.573744687 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.293872237 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.532864365 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.357865308 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.07648416 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.3768204 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.358747501 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.522711886 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.239122103 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.525170141 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.537680382 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.355852527 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.678374016 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.356484722 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.603130486 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.453575476 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.232093543 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.332771176 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.666294543 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.85128686 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.61404742 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.799497696 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.520883061 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.243394876 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.695972614 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.802506414 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.984775324 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.214703685 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.357834913 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.669497166 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.906885155 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.282229946 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.395986015 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.418580285 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.450744716 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.449260259 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.239013948 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.410684427 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.537525661 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.564649272 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.850412103 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.062213201 seconds)
  done (took 90.649685843 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.330414688 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.329933514 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.330026195 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.330368035 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.331187457 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.330178094 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.329953987 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.328981003 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.329498234 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.330138947 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.330255077 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.332184433 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.32987238 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.331419331 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.330269965 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.33057755 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.330956495 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.332965151 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.330591957 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.330438779 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.331787248 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.330217738 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.331681279 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.331266698 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.332425953 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.331824488 seconds)
  done (took 35.85533072 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.343071513 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.591547729 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.746060166 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.348748571 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.343561234 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.347866825 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.418855292 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.345271094 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.346799927 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.348033304 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.49567695 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.345026574 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.379206194 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.773837954 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.345829544 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.345512425 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.345031792 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.344112793 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.59941652 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.353485125 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.439956243 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.34623072 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.419726488 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.353872394 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.365378729 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.3451253 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.3500122 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.873786599 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.347012235 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.496542467 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.105509783 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.424725267 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.857194766 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.759715253 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.104549106 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.353493975 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.345294679 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.50115408 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.347480585 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.345826778 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.420019464 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.346148623 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.757724673 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.986537199 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.363468723 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.350434798 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.895896231 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.500317451 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.582373411 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.354308868 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.783660302 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.348283627 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.349268892 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.346946684 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.583074811 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.352633479 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.347162443 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.922923855 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.367839299 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.422048515 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.347241688 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.347316599 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.608952197 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.347371788 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.597499714 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.348201053 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.355912775 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.36627452 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.76035261 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.350444965 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.007681427 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.375032975 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.346499441 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.498470585 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.599290682 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.928585288 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.351170731 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.615135361 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.870704351 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.421600166 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.353004408 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.865787902 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.425368403 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.351753772 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.350556027 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.350384314 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.348357274 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.393930037 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.42123901 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.932279679 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.000237364 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.951060633 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.450510207 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.356128076 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.34852726 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.926320179 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.374531823 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.349936145 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.759309309 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.018894849 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.367155722 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.356894349 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.010231076 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.37699592 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.425153318 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.355664904 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.77081391 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.359548356 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.395714918 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.350198152 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.356760607 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.372658463 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.425381688 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.358907664 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.350391645 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.981339423 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.530776501 seconds)
  done (took 177.546835848 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.346434664 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.34313 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.345482072 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.34535963 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.345442449 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.351489804 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.344670372 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.345189193 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.349907791 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.344860656 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.345880003 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.34544759 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.345261604 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.344881056 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.35384633 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.351513653 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.956314193 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.344988624 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.355049353 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.344745718 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.132570387 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.353795907 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.359612189 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.345973034 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.345550626 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.347723474 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.351609578 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.34968804 seconds)
  done (took 152.401175784 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.35241557 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.895642524 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.354364059 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.48031234 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.372216356 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.350048971 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.477959993 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.407520148 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.353728886 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.350675085 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.351008757 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.647236319 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.362304216 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.848502105 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.539825464 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.487703265 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.84736315 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.370767975 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.351938924 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.350728293 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.480200588 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.368522407 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.644589954 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.898970342 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.354487842 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.898641108 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.344279088 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.353729906 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.353268796 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.906197271 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.361067346 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.647460787 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.427927379 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.410817374 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.902425113 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.850505421 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.866665014 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.498924582 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.364038559 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.352452735 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.35295681 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.345037942 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.902829315 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.355580368 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.355283742 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.898012902 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.37253203 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.355958527 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.361276552 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.353098244 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.41200359 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.413116193 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.650897256 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.908898174 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.42955865 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.366692401 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.481866638 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.748313272 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.358816953 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.851607625 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.345504623 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.90836601 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.375457502 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.34551046 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.355892839 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.360818526 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.499234943 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.481957781 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.858711056 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.373726606 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.853604585 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.516203766 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.361608905 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.354795329 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.357837349 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.906724841 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.859922218 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.525236312 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.48830211 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.549504059 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.347248303 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.355539336 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.347727162 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.432166946 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.356452332 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.908509693 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.875648153 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.383087829 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.357882703 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.357597716 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.358384925 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.528679922 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.908604668 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.43340341 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.85574372 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.677329423 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.654008492 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.359487382 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.414623223 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.372878778 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.656160919 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.35933533 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.412492055 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.805999381 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.655183972 seconds)
  done (took 161.233782288 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.592793293 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.508977366 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.446834136 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.483722812 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.941118551 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.927177256 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.56109737 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.498603188 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.46693498 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.613925184 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.491227943 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.448298729 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.522673568 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.432815165 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.069967569 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.424013164 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.449193707 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.501676256 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.451203275 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.354516098 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.959099541 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.634265863 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.522609357 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.184495002 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.449353552 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.10558608 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.91857998 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.875290233 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.531857717 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.606312829 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.876187873 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.446215229 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.291363858 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.0057646 seconds)
  done (took 64.865579473 seconds)
done (took 683.804148854 seconds)
SAVING RESULT...
DONE!
