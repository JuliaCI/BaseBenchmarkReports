cset: moving following pidspec: 11655
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.306312993 seconds)
loading group "string"... done (took 0.594581762 seconds)
loading group "linalg"... done (took 7.242598913 seconds)
loading group "parallel"... done (took 0.166848714 seconds)
loading group "find"... done (took 1.139874599 seconds)
loading group "tuple"... done (took 2.003062467 seconds)
loading group "dates"... done (took 1.279674174 seconds)
loading group "micro"... done (took 0.237850621 seconds)
loading group "io"... done (took 0.97297516 seconds)
loading group "scalar"... done (took 38.838806109 seconds)
loading group "sparse"... done (took 12.467916217 seconds)
loading group "broadcast"... done (took 0.976906757 seconds)
loading group "union"... done (took 13.39278487 seconds)
loading group "simd"... done (took 4.4881685 seconds)
loading group "random"... done (took 9.055515337 seconds)
loading group "problem"... done (took 1.984589199 seconds)
loading group "array"... done (took 21.402693555 seconds)
loading group "misc"... done (took 1.93749217 seconds)
loading group "sort"... done (took 3.238964499 seconds)
loading group "collection"... done (took 18.160042254 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.524850318 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139397607 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115749442 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.136131712 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.180433395 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.142726798 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142776542 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083983301 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.536743892 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.161165379 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137360858 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.468461209 seconds)
done (took 5.443125457 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.200582884 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085766338 seconds)
    (2/2) benchmarking "String"...
    done (took 0.093600406 seconds)
  done (took 0.793505175 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064928261 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12468974 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.078427063 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066973017 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06569044 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079205587 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065918911 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064687809 seconds)
  done (took 1.16609623 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073255756 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067062633 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082645378 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066960408 seconds)
  done (took 0.911429969 seconds)
done (took 3.766512805 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.882765966 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.234825391 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188598362 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.444794668 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.144552283 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.185073901 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.658104915 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.243574456 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.207581506 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09862227 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102603234 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.372184189 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105498894 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.659478108 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074491585 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.103777388 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.156442776 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.3443641 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.079653717 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081934026 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101632501 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.139663068 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.098875602 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07635535 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.165923675 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068322183 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144186248 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.092672993 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066973242 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.238297672 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188090099 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.675021772 seconds)
  done (took 10.081296195 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098215001 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114018478 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067888668 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137244501 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09919534 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084174219 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069188601 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.080747952 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089151835 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.154569118 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11205612 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10363844 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079236777 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068599113 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.098263103 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207952928 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106559045 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083899675 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.084754156 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075161301 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11859179 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08150815 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092203162 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077079617 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150175973 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.189586139 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108733136 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.109361756 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067881989 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078941082 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129369987 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.139414293 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064846933 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080032644 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.136959664 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107726738 seconds)
  done (took 4.380872733 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.009624182 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.156725411 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089535209 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.1486931 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.083182405 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108185866 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.080983338 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097300572 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241109602 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.05342662 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.452819936 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125463314 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099169299 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066917897 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081823704 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06748293 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.4934345 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14182454 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100116278 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101166782 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087233819 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069599852 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.353744936 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067051588 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064996354 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082849112 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058550487 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.141842651 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067122085 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.186127469 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087520658 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084754453 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099778726 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191819253 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092913316 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121622804 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064880959 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079802748 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165969004 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073246425 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064698049 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103386148 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11547156 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.102629897 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08148761 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06655241 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179551837 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065065317 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097356351 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.827188619 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.162252759 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094527521 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.080994759 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.265998534 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100904248 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065428509 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079477757 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.209120359 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.161642169 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067298763 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.064611659 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080850999 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070862333 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.370523892 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080566821 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.729979649 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070285455 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074778763 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084037579 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066708076 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078989946 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071982456 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085888214 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083887397 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.064818276 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082725353 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065647639 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079544068 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067772356 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.097072201 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201852561 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066844188 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065600377 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080060855 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063217937 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09907281 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094790994 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082708011 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065761688 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112316188 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067821443 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065989246 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.106082943 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.099853841 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082846716 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.096613504 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064589046 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082246005 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112147405 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079056772 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.090502397 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066862432 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10870735 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074910576 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111938083 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.090229237 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066839802 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.150317881 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063634323 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079908156 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066046361 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063652434 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082545779 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066865715 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095233952 seconds)
  done (took 20.339163652 seconds)
done (took 36.431670946 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.285879931 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.088484843 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.088747157 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073357154 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.089562504 seconds)
  done (took 1.321917726 seconds)
done (took 1.991240359 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118584044 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113540364 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.061954639 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109697467 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062683772 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114348795 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111129024 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079784337 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11529783 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063168873 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10999057 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063323496 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06207953 seconds)
  done (took 1.882199042 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081541243 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08298341 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082975048 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080411197 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07647929 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081216706 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079275934 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102201938 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078751896 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086056452 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063406348 seconds)
  done (took 1.562398287 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081375038 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082726353 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083592155 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080189495 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076427024 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081115826 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079032465 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100767706 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078868083 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086672101 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062845431 seconds)
  done (took 1.560089218 seconds)
done (took 5.664048292 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07681919 seconds)
  done (took 0.739272086 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.683830097 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.399766428 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081622213 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.131222197 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.217276694 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.151610791 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.431331764 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.106593848 seconds)
  done (took 10.035896937 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101385551 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086374211 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070376576 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083382474 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070441043 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.083814958 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071320449 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068956008 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.081874292 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069152209 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085041003 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068702229 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084274021 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068564134 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071219488 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.081605689 seconds)
  done (took 1.976554282 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092126061 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090914268 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.088575399 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074615366 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086849644 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071977956 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.089410406 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073505822 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.085516731 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071064254 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088710989 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07317866 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085681598 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065110737 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.087531296 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075929141 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084987107 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073663304 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089074912 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074272968 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.088420513 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064636921 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086238429 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074172922 seconds)
  done (took 2.708707477 seconds)
done (took 16.128843262 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.128238627 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074126132 seconds)
  done (took 0.8741159 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079278025 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.095671965 seconds)
  done (took 0.851849 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081434979 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.078827862 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088116898 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.091088573 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065209622 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07844604 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.099906908 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064910176 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079521258 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065202545 seconds)
  done (took 1.469334103 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067274746 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.090524877 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069452895 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094373187 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07279584 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.07777598 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071491988 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.081177346 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076693451 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076255548 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069764599 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097100124 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070551196 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.097645232 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07159747 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081375378 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.084832002 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066242107 seconds)
  done (took 2.096700265 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063899343 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066062146 seconds)
  done (took 0.809471296 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06614646 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063133981 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080176431 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065962501 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076476157 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06175328 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077007283 seconds)
  done (took 1.170754893 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390827292 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108111763 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.238164115 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084961207 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.100832117 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259226055 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.081085237 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070042934 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.085731591 seconds)
  done (took 2.135423326 seconds)
done (took 10.084311634 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079125031 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084179453 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.107390761 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.413220406 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.103726061 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065035331 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.129324928 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.213395903 seconds)
done (took 1.876434579 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128725755 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.595638836 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.391700986 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208471246 seconds)
  done (took 1.879284767 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.366969836 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090212696 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072193198 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066460804 seconds)
  done (took 1.282792825 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065303553 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068617117 seconds)
  done (took 0.820768979 seconds)
done (took 4.794533219 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06553711 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.101080574 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06523515 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064188129 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081198404 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064017146 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062958483 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081564324 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065644946 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065891262 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.079862303 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068927511 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077458513 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062428668 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066020348 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077455605 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062621955 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063041635 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080090732 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063083879 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065814484 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.077546943 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06308783 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062855223 seconds)
  done (took 2.40816683 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084121966 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08140087 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071252372 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086616069 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070088834 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085951775 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07060793 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065702385 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085311592 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069330862 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084897813 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070534678 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.082219829 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070602572 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083121657 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070100495 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085991369 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066252114 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068250702 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087538222 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070848157 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080853268 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069950421 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085599596 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069212203 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083490752 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068018311 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.080748179 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070854146 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084516933 seconds)
  done (took 2.994304252 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069349681 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062707087 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078180249 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069715835 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063628304 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079660547 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063712133 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.078307689 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064200306 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063340183 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080158158 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06403842 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063388719 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079086968 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064206248 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.081708861 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079569174 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063704945 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078644229 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064711704 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066360038 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078338967 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063580455 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078619141 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062847015 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063423076 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07901855 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062949192 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064315694 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078978241 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066314748 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066881498 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079478421 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070624572 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.081800836 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063627682 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067086622 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07763461 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063801849 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063112961 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077959368 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063131727 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062911154 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.084360182 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063772686 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.080929304 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063006023 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064041801 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078944572 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066511033 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077553002 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063334811 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064839071 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078844754 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067887165 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062970036 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079531046 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06276066 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.078899838 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062763463 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063095724 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077565888 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065284631 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064497674 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.093216572 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069979379 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.077945362 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063965187 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064608215 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080683373 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065113075 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076440915 seconds)
  done (took 5.769211502 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114551452 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089912114 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080887627 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064930381 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076851069 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063424222 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06675294 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078372638 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065210954 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084096673 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064091253 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065146691 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079547352 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076493132 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078847569 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06547685 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083628107 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061400717 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063969898 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081768889 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064450822 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081704739 seconds)
  done (took 2.349487749 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.181583578 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085845459 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108259688 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088484888 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082493724 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072542167 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069213681 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084920578 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06980716 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082896581 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068392817 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083884206 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067619522 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082876922 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067892975 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08284018 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070126025 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082998528 seconds)
  done (took 2.227632844 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076157544 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065328194 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103120428 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06551041 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.081178019 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068058368 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086261503 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074228193 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082629699 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066528353 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089069579 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068680381 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.082896641 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066274111 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068973911 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080526737 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068147372 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080456945 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074577295 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085694631 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070684784 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088316196 seconds)
  done (took 2.389994394 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079557885 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066955905 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0982966 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083377056 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061569028 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064305557 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086702902 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065599262 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086531608 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067576301 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065120677 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078522614 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070127896 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080941447 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070362867 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080642555 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067290009 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065008974 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083044047 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062190706 seconds)
  done (took 2.181418509 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086130658 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08154078 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066463849 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090008705 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067762243 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082556953 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0753464 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.082138397 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067359975 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106029081 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067284028 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084152405 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074451806 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086593454 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066792029 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090004495 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075932918 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090120817 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066589895 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082889497 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106022228 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.166693064 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089791293 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067115537 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082763429 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066861219 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066891707 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08660018 seconds)
  done (took 3.025151794 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06525049 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066300359 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078493208 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062824248 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063336429 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.078290119 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063639869 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063772184 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081547498 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063377184 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06528932 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.080837314 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066176468 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.0811203 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066161751 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066278358 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080841105 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063057985 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063996314 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078835 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066574349 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065050196 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080701558 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06373513 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078161164 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065739494 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064071186 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078503325 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066003786 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064378851 seconds)
  done (took 2.794053012 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07627722 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089280212 seconds)
  done (took 0.870206048 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063426995 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079357887 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078646369 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070100489 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085284044 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066481889 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089130998 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069264804 seconds)
  done (took 1.304359046 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079793592 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07648191 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082359266 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07700355 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.091213206 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082110847 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.151740257 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.082116459 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072595121 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080371707 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079426794 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064610065 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.087611998 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06598643 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.087025532 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072028744 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063455502 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086706334 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068497964 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080100977 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066917737 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089470917 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067904096 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062880283 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083392126 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.074844396 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.092754552 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067119097 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084129011 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073315628 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071199097 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.075452055 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066251205 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.082000135 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064623759 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.090636742 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080282608 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08445385 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073685973 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067479806 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090719617 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061262973 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085759031 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072616652 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091221935 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066298781 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066006811 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076842416 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064023718 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083348383 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061101688 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066102722 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.076234705 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072562138 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085020977 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076560025 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066426501 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.083002657 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069249946 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084505656 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072259228 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083048914 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068608629 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066341919 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090280194 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070510832 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090125127 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061251827 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060069744 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079563375 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075858653 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102896644 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07187758 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.082111491 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067068513 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078974773 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068760455 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068024553 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086962424 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072890801 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.081938221 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072715493 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088365098 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066226061 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068507698 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.088877975 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064789527 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083587977 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064257617 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097708929 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064812258 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079447907 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064315311 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076159044 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084252593 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066148372 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079599712 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072775916 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060539468 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.081739215 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067171772 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081630954 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075647175 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085687647 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07170622 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089463575 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073779262 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065713038 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084886103 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062905499 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0820502 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065072917 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072841391 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07619938 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069361324 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081695535 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066518129 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073350415 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079575775 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066210885 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088506454 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07223821 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.079796685 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062379105 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068942352 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081412871 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069664975 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.088940002 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065008477 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061202835 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.076819547 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069317357 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081884676 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069736575 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086013534 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069374613 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061159981 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.07982174 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071282838 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.089535699 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066896739 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066371352 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.087779648 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067507793 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080629601 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073040172 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084279583 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065540685 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071455393 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082734165 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062189194 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084957544 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068825057 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064179017 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.084903289 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070377432 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.083882134 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067336319 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064742642 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.086496728 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066922443 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081232637 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066575132 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080787399 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075785623 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067419147 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077456671 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063504265 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.087931476 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063762589 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065359439 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080428075 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069124581 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082133136 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064151124 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065207403 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.083308451 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075685124 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08610331 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06674715 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087063227 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076772969 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081465189 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067890073 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065437099 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082514238 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066872841 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089613537 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070984588 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085952895 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068020427 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06244751 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086387581 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07329075 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080982483 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063752316 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065635523 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084863419 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071025365 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085230747 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067693527 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07990174 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066575246 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068767681 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084842844 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065928013 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080524186 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070881339 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080519764 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072707967 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066573375 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091997176 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068876167 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077058206 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070230384 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079894972 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071528617 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061271119 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080427129 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065942115 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082387229 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065156629 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06951763 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076168475 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072257895 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088767939 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065883486 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065169241 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082327418 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073159763 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083163583 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070134499 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069523158 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08760932 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077234025 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081740994 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069949783 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.091825197 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065932639 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059867098 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08714157 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065170881 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081228715 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064809352 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063656447 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083971537 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074317733 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087470662 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061040467 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.084234763 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064720926 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065310717 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077528797 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07090412 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.084259091 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066782401 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073263091 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08273938 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067273191 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08564221 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066096374 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066227321 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083127098 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068925994 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083089777 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068930132 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065326096 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085335617 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066201985 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079909402 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067719707 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065852685 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081885588 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072603554 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.081287165 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066482925 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068282393 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083331179 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068002813 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083243983 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.0663394 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084967354 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067202964 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066921012 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084236439 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061741185 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073267667 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083009267 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073742091 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083316054 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064090863 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08694962 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068661073 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07044184 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082922643 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067233128 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083881345 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066729777 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.067992464 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088994626 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064530811 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092963528 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074740643 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083142144 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069207487 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065493238 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083462488 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065179798 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082992667 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066889757 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065967974 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081845422 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070446129 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084911386 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067259494 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067524586 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082329289 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066977322 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08305326 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061323964 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064685287 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081345723 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06583027 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090818248 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067672305 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.081520846 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064877648 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067159428 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08115107 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063009662 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.089263511 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074835816 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082721888 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073494392 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065213083 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083576299 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075541188 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076397858 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064920079 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063383242 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08071559 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073137252 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083052919 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076030751 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08186146 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065627942 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063780536 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083201834 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065027393 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060903063 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080012036 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070305805 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081386924 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064961229 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065724268 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085428533 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067494925 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091356708 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066132762 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08288683 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066453402 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062835559 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081449049 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065725957 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084353502 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066652727 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064540761 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.0798562 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065962069 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066349428 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083255506 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06633266 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.083490135 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072921076 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06534131 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085025348 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069893736 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080146714 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069525308 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081930436 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065571653 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065533857 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086290577 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069952617 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083208221 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074668339 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065713921 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082872462 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067135202 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080623876 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065934721 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065643115 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082236003 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065614495 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.083933854 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074594518 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063316438 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085175705 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066300452 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082461661 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072664643 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.082962849 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069407356 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088858138 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065975589 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068175464 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09022504 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06985403 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085298079 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067158139 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066850479 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088131011 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065470533 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088447462 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066759498 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.082306189 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067591503 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064830356 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082301854 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066171668 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065147734 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088208694 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06717068 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081893459 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065538337 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063544184 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082780911 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069250214 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089538288 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069203154 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085050193 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061588228 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063513355 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083212152 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065360739 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084187577 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069744933 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07198357 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085397201 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066933827 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081019657 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074889443 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071525783 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086923359 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064660236 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086024191 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068292512 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084355628 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067356073 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066253406 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083635239 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070788816 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.083722751 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06572492 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072735243 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085953328 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0671516 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084208342 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067093523 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066177968 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078614237 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067467555 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.083922365 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071505834 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068427957 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082869176 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076016369 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080821913 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066861978 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085104914 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065598525 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070608498 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077785332 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067931713 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083273997 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067920262 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06159362 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08285294 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065178496 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.084522367 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065846919 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06180781 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091998046 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074816813 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084948482 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06551395 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064306982 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077969419 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062473018 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081564306 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067330041 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067994385 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092336094 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066561621 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081694852 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061373228 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067113734 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085423321 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069767844 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.07977551 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061502413 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064685261 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086146893 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071677835 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081618586 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066597866 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068672687 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.084987373 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064434057 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085720325 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063461406 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069003365 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095073457 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066618931 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08341075 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072329876 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089879864 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067307191 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.077810063 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06691737 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069201307 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.082942966 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067611659 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.083880978 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081106785 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085955293 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065073519 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065575258 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.084659269 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065848986 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090869592 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067364389 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066144303 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.086427341 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06764468 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090264838 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06887314 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089323315 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069456212 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085403214 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065414165 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066366641 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.08044334 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065720239 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066447631 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08418326 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070240377 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.090514306 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066220205 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092777977 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.0752933 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.08411715 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062957666 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065293399 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081752405 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062123858 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08274947 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064842473 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065321447 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080808181 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065715677 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067191421 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089078009 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06767498 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083286827 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066931254 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060167756 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.084770336 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069084693 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083211177 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063505374 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066111249 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084289636 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069803141 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085699058 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063996195 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067620132 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084956842 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066527335 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078320712 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072777814 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064386035 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085390858 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065796901 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082630995 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066891165 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06890071 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087865265 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066767684 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084314679 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075020369 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08459824 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064117704 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063152309 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.08753985 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064369646 seconds)
  done (took 45.255320728 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105444989 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080169659 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061681001 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078955285 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073907962 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079329642 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061606187 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062669514 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079231499 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065083578 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077965549 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06181799 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.0874215 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084698109 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091112227 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065363077 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078293358 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062907615 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078218956 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062869324 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087279145 seconds)
  done (took 2.336053735 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073638546 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.087458486 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072786309 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092461386 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067580343 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087741844 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072335766 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087357595 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092852118 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06639081 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.092722563 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069920762 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.083102539 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067279365 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083865463 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071063979 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.092634242 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067544066 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.086618461 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073230661 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087072075 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07278197 seconds)
  done (took 2.495214526 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066027028 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.0657349 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084016503 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061564511 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066237048 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.07862121 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069530205 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081345541 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069610054 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064391007 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08244157 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.072833388 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.084043244 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061832042 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06615041 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080391274 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.129014227 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069915879 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064556286 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.084790815 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061420957 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085146892 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061837813 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061691243 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.08143854 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069537702 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.083738553 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064481567 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064946291 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081766953 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065945323 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080219627 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067616236 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065925282 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081112566 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064910885 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064594087 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082079732 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061648222 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.080158524 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066403006 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061807932 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082539574 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06738252 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062972893 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.080267781 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067172698 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082608451 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060752008 seconds)
  done (took 4.317538464 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083314655 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.125743202 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084817166 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089029155 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.099039553 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.090287967 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070167183 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107780401 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063308541 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081649548 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082923718 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.100313301 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083134253 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070614892 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.089054546 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065158783 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065912574 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08194141 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06909842 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082985775 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069043331 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089246046 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.097413137 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07998918 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086339814 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065159759 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082469748 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070726988 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.095493376 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07115788 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.086645948 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071272326 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.098082277 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067611909 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082512961 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068353352 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.099208196 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065159341 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.084463364 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063253817 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.084615282 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070412657 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.089018744 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08208118 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082861445 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070499081 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083095814 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062730212 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.096274477 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067909015 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091510469 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.097059957 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070472351 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.082337141 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070508599 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.097789492 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065823144 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080994696 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068442984 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096185908 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064506755 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.085782102 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07967382 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08454495 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072604196 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.097278141 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07152017 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08630084 seconds)
  done (took 6.406776183 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074662668 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089689922 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080844676 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097728258 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088957969 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072858044 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.089384048 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07274358 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088323336 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077795745 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089146884 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110228702 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067777344 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091889684 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072724032 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088936983 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072421505 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090013582 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071888305 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0900171 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.089221729 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080921043 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089467593 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097438048 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101643209 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084020977 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072328599 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088717546 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080032131 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089433606 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100730941 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07291587 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089293059 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097643439 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084220153 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.089677069 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066014985 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089171418 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072873338 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.088917283 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068651622 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097581842 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071268406 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.084496848 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071677636 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089629742 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.097471532 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084246197 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091947821 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093773981 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072591971 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09807713 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071699137 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089665242 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097361432 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105678058 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097879295 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097296053 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072456021 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.097802675 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096495155 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.104783749 seconds)
  done (took 6.113414834 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086193207 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091962554 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094688842 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061267062 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063879797 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087191807 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064512827 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.080658393 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075489799 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.091468031 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076766918 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085820544 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072717546 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094031448 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085679351 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072725359 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085941385 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069412705 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091329486 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069144642 seconds)
  done (took 2.360483184 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074170668 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100570604 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066434134 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070921126 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086628126 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071418635 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.086568957 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068639864 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083981219 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069619056 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092140826 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076585169 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083618042 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072324905 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092946861 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071314285 seconds)
  done (took 2.031181797 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077948042 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.09383808 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081396802 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084242521 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064189215 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08066139 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066373131 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062109473 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.079998222 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079938064 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084434314 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069634285 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.083622945 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064532214 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062122337 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08711128 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062677143 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081298282 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067084252 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.097342479 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077147362 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.082181397 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066738002 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067149284 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.084793213 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070228406 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.084374936 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063507733 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08225263 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066767912 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.083159971 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073780956 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080490081 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065085551 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064170138 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080382448 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066278461 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083327313 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069098798 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064583805 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08239434 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06535274 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.083648834 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067219356 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079682405 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066832225 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062091309 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089696808 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063825746 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.082838109 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065987784 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085165855 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066956731 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075088919 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087509105 seconds)
  done (took 4.896541519 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079407306 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068986859 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079591 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064243006 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0863076 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067684378 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068508192 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.085783003 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067324471 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081197461 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067652749 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.085783034 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067881791 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06900523 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084859773 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070252781 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078910978 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067245228 seconds)
  done (took 2.108797505 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071205032 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065627465 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.090114974 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066364911 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.082718849 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068352757 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062509084 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08220288 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064545205 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082733834 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065849759 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067837447 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082224052 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068274054 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082848276 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065955996 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067842072 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081367295 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066063411 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078961171 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068570823 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064367528 seconds)
  done (took 2.366334933 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071174838 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092368965 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.158331765 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.103727843 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081540497 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.096413425 seconds)
  done (took 1.373714362 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089003766 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096715976 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066353934 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10385046 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074461993 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085861528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068558071 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08468542 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07636285 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099417209 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067380077 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095110389 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093345811 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077200159 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090879969 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073456003 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085360664 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06677991 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08395599 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103381497 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06834776 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093437446 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067686903 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085011933 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067837074 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09293506 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0765677 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098975451 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084941832 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076088818 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091012302 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06861535 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094394863 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098572002 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06922866 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093564554 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067553771 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102536743 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073362119 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094072707 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068828946 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091721696 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094246663 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072477154 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093544146 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068003275 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090680585 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067807153 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086779825 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110224714 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074073831 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094212792 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091106079 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077661625 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094766349 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110312493 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080613874 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093470865 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090884693 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082148465 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094213231 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073031368 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093937737 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099264434 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074117597 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09379207 seconds)
  done (took 6.376281561 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083101402 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103152049 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068766226 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099404562 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094383002 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068782366 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085401016 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068040198 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085345466 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068344084 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126834499 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068005416 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094009806 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094023256 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068305152 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085691237 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06859018 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093331982 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068836809 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111287738 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085887738 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075967738 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093832106 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093845405 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082109756 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091243581 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068376004 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085793808 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068357621 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085987361 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073424103 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086909646 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093979357 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067743845 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092901653 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068746105 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086414738 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07361235 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086683026 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074884282 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093839151 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102768235 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068214294 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085359981 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0818327 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086313708 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067671766 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085632185 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067476091 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085302235 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081229659 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100380163 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099133292 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093822231 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068480496 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085740046 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068628724 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086064757 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068568475 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091914919 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076714289 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08550082 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110687247 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068459818 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086221434 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076761639 seconds)
  done (took 6.283165958 seconds)
done (took 123.721010825 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181645879 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.160788053 seconds)
  done (took 1.109135299 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067865215 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094189872 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095336286 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.123068488 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084106473 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.097414026 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.113557545 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078642993 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065675851 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084312608 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066768562 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085866202 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.126928208 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065758435 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.084031421 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068596706 seconds)
  done (took 2.175095955 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101559061 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.192251418 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106197856 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065252445 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096853113 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078502413 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.082672828 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076783431 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.091754028 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065275071 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077522824 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094208767 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06422913 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094360571 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074443885 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095694067 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064806579 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095617326 seconds)
  done (took 2.394126164 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102771456 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.136819955 seconds)
  done (took 1.014384991 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.197891971 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.118988482 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.197591076 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.403181876 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.199429421 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.269803599 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.166962328 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.165518553 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.148594013 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.162139727 seconds)
  done (took 2.801946544 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098165122 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168271684 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305181741 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.134436337 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085267833 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.113103631 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.13536928 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088069194 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.099971847 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.098612724 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080946294 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094066359 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096693445 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093987877 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074095167 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094765959 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.118428519 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073960097 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.094311714 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074917343 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.114885839 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066544663 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074032102 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.091968116 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076420372 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096160313 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.0658263 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084149324 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075573764 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092425208 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078291203 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112455928 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.094618551 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.127924345 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.08138239 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.129101265 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095541624 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071696902 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.092438175 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072066324 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.095986767 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076273311 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.100520772 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075906412 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08378455 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.0762205 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.083457241 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065953571 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.0963764 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.076700047 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.096102622 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077904617 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.126630137 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.094640926 seconds)
  done (took 6.016347507 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.739556042 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109006411 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090599072 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.800702221 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088247453 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103296496 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.703959401 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114243512 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206318613 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.757408195 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088155542 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09530386 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.178577894 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.22867581 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.875476834 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.27902972 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.62852601 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102341186 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10733003 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.129824797 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137796377 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.173022875 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.148466585 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428862085 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074867496 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090527038 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.134543864 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073037386 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.156814187 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.083433008 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090756044 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.152480637 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.221964898 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.15347368 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09420423 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068937517 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088645736 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.146232543 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215196815 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188495266 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.154495546 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067600745 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08783515 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137103553 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128824981 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068050933 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.136722325 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.149116618 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.165919284 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072634416 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092589537 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.139412099 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135420257 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.140526527 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098248259 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.261300557 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.285054774 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088047091 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097481819 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100824979 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212031254 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101257405 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.195643133 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136275706 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.166509182 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087891498 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.728191198 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.144906399 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088656721 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073474509 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11662744 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091870251 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13530076 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141778741 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.34699868 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.158979889 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07314116 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087595334 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.203258433 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082036013 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088346026 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139161771 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073739979 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119587121 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.159697394 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139580954 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.146124142 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.203566404 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139348943 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136717427 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092677306 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12154835 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074354556 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188609518 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.190525216 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.138345108 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.181374662 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.155960233 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.139530226 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146512896 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07441341 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167303073 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097103604 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098271311 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135053494 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.186618855 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.120672982 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082104217 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0917579 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.137894896 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.123136125 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083911669 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13560771 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165855261 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.454213674 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.144397212 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065847286 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105482144 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136882751 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.137740545 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093398171 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210139852 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119553462 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.143614774 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118309049 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086216456 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117617776 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.139329467 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07708386 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120069413 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13480841 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09445471 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.211953289 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186784957 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076708024 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191131826 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.15854888 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.09298089 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.146634727 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.116874935 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143634293 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075974655 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.153276487 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075628547 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759649725 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142205926 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118391331 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073414337 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171551627 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068650713 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100594384 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100361725 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067776856 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759906726 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084816818 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097592248 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082561611 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092120662 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118838799 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13482189 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073371434 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135369985 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198213448 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092969947 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096872077 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102517502 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.137384457 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.093021399 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082657577 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101494473 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081744229 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120125888 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091352431 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081601362 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143779469 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.157090445 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.170958923 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.5641766 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070400095 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101948246 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.177565193 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088868786 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.239664604 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.152980226 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.17493156 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.138638464 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099488351 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287224552 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.140894804 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170245424 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084614913 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148793304 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087048039 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135817797 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.141461071 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069039285 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094808033 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.138272322 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141165598 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.159738505 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.9008821 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088667017 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.201421536 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068008193 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.147488254 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093420275 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075468074 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.257078441 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069208173 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.162193304 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.141928071 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073160327 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100493187 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.674256217 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101025075 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13681777 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072915789 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.19144154 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.139764214 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134077032 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134105655 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09439045 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.135619277 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.183083434 seconds)
  done (took 39.642085247 seconds)
done (took 55.926445136 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.251226523 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173683408 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.234506278 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.13964979 seconds)
  done (took 1.669538044 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.139471482 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102265245 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.114344724 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.083419835 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101303376 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083453925 seconds)
  done (took 1.422704692 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.39136665 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258011345 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.224254726 seconds)
  done (took 1.674901416 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.255748261 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.207734474 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.440052575 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291077838 seconds)
  done (took 2.11741817 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.171629326 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.110320313 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066139696 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103128348 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.154580445 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246789005 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123713592 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.181818809 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07771007 seconds)
  done (took 2.081339186 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.192463565 seconds)
done (took 9.9586971 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.235803612 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.097117978 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.143938983 seconds)
    (4/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.235317435 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102515338 seconds)
    (6/309) benchmarking ("sort", BigInt, false)...
    done (took 0.212970894 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078241462 seconds)
    (8/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091134698 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09149735 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092700031 seconds)
    (11/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.209725596 seconds)
    (12/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.0899182 seconds)
    (13/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136480636 seconds)
    (14/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102394102 seconds)
    (15/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.082458352 seconds)
    (16/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.120518419 seconds)
    (17/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.251283283 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.186079517 seconds)
    (19/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066694796 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.206955882 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097523238 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.095349712 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.205976096 seconds)
    (24/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.0847951 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.1676173 seconds)
    (26/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163321197 seconds)
    (27/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.238927644 seconds)
    (28/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072925071 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075115633 seconds)
    (30/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.162750622 seconds)
    (31/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098152074 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064548322 seconds)
    (33/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089363431 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.107623124 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076072836 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092184238 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.158793402 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.141859262 seconds)
    (39/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.166665212 seconds)
    (40/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.061553173 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.152978709 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.167026953 seconds)
    (43/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.133090598 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093235819 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140576311 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114541131 seconds)
    (47/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06475397 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.200812286 seconds)
    (49/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.08181176 seconds)
    (50/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052614268 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092170129 seconds)
    (52/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.129120233 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071730808 seconds)
    (54/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.163286942 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.110507589 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099324749 seconds)
    (57/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.165684619 seconds)
    (58/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097254842 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.105278899 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.123225777 seconds)
    (61/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092414885 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.086745368 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.178421302 seconds)
    (64/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.145789517 seconds)
    (65/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090027657 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.134630284 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.231240758 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085753031 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074602806 seconds)
    (70/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.118344504 seconds)
    (71/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.148289582 seconds)
    (72/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.137282428 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072859953 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.080396849 seconds)
    (75/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.098559622 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087306652 seconds)
    (77/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.166807983 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.115883771 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.176816924 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.146866302 seconds)
    (81/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.071668852 seconds)
    (82/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052990053 seconds)
    (83/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050330535 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.117099847 seconds)
    (85/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050538669 seconds)
    (86/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090889756 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073339615 seconds)
    (88/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.096162577 seconds)
    (89/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.197306543 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.085588901 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067021155 seconds)
    (92/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07447781 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.121585447 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.154519108 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13425281 seconds)
    (96/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.071123631 seconds)
    (97/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.16494228 seconds)
    (98/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.101945579 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066486372 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.085788296 seconds)
    (101/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073385438 seconds)
    (102/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065046205 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.070657395 seconds)
    (104/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.177173446 seconds)
    (105/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.155060189 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051484147 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050399562 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095481294 seconds)
    (109/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.0914429 seconds)
    (110/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.072545991 seconds)
    (111/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068841076 seconds)
    (112/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06850559 seconds)
    (113/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093218187 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052830191 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.186186919 seconds)
    (116/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.135477422 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.093187648 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072847132 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.154431812 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086790203 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.166455942 seconds)
    (122/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.087235108 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074645354 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06532374 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.08502037 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072897545 seconds)
    (127/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.103416666 seconds)
    (128/309) benchmarking ("sort", Int8, false)...
    done (took 0.161631599 seconds)
    (129/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087762025 seconds)
    (130/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077256536 seconds)
    (131/309) benchmarking ("sort", Float32, false)...
    done (took 0.148339192 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.155024111 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074142356 seconds)
    (134/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06058265 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09351237 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066693513 seconds)
    (137/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.072027587 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052436205 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070754687 seconds)
    (140/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10125587 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072767947 seconds)
    (142/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063622867 seconds)
    (143/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.088420177 seconds)
    (144/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077589416 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.071262567 seconds)
    (146/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071071572 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072854859 seconds)
    (148/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100695714 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071250036 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.187710949 seconds)
    (151/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051437641 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085146277 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168328246 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.166957697 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065219914 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.179185456 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072407409 seconds)
    (158/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.188144654 seconds)
    (159/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192753181 seconds)
    (160/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074317451 seconds)
    (161/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08896488 seconds)
    (162/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.160988559 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087263092 seconds)
    (164/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05186151 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07181965 seconds)
    (166/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.109710573 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.165124082 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074094998 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066110524 seconds)
    (170/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.093080951 seconds)
    (171/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080459007 seconds)
    (172/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06219896 seconds)
    (173/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.091414892 seconds)
    (174/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.099403524 seconds)
    (175/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.081140948 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091263089 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051613472 seconds)
    (178/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.070498037 seconds)
    (179/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097037594 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.195955515 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093023516 seconds)
    (182/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097354012 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.05188852 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053443098 seconds)
    (185/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087195172 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065801976 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.108355412 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052461288 seconds)
    (189/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.05226762 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092698073 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108062237 seconds)
    (192/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.115303114 seconds)
    (193/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073936613 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099268474 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086368632 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071769109 seconds)
    (197/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051171123 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.073895427 seconds)
    (199/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072485431 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096311409 seconds)
    (201/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119270202 seconds)
    (202/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060626195 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070765094 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089281535 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.344347483 seconds)
    (206/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060772426 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.111956354 seconds)
    (208/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076876545 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133317239 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126460325 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.092396403 seconds)
    (212/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078875726 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.127463878 seconds)
    (214/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069543997 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.191050416 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065302059 seconds)
    (217/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087191812 seconds)
    (218/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051134241 seconds)
    (219/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068473269 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109613605 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074684647 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072180884 seconds)
    (223/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.091633146 seconds)
    (224/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051984575 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06452414 seconds)
    (226/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.07161546 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076508216 seconds)
    (228/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050369796 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120694283 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072532607 seconds)
    (231/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.095612414 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.164809938 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070551816 seconds)
    (234/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051405623 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.129506736 seconds)
    (236/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.158176688 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066397948 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064113125 seconds)
    (239/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.072302119 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051574428 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.153926231 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051734295 seconds)
    (243/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065894504 seconds)
    (244/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108480386 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137914045 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08573557 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09255005 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.07278663 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175622008 seconds)
    (250/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097650182 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074111767 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110906284 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066187628 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 0.145150495 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094530562 seconds)
    (256/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093083117 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067176447 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112716057 seconds)
    (259/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089792464 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064450633 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.109140004 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065141433 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08477018 seconds)
    (264/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071928748 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.160019833 seconds)
    (266/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073208586 seconds)
    (267/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050900753 seconds)
    (268/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.087274402 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052166433 seconds)
    (270/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061994159 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092060285 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065126792 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066155688 seconds)
    (274/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.088916111 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093152396 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121192385 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073671499 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.185301121 seconds)
    (279/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05237123 seconds)
    (280/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051665226 seconds)
    (281/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.07191092 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053776874 seconds)
    (283/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051007944 seconds)
    (284/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.082217774 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052137176 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073113751 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.109490884 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068572994 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.089372146 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06419657 seconds)
    (291/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066488143 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086122821 seconds)
    (293/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06713536 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063436791 seconds)
    (295/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.087183076 seconds)
    (296/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051328262 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072263567 seconds)
    (298/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100908761 seconds)
    (299/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.188339867 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050924259 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052567311 seconds)
    (302/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08445405 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070400328 seconds)
    (304/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061052145 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050467245 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086220576 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070985284 seconds)
    (308/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052244735 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07307386 seconds)
  done (took 32.324961044 seconds)
done (took 33.135528092 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.080266764 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11130834 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074137882 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.11197377 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080447227 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097545015 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072317139 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077831533 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.100940019 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080918822 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09934957 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054600244 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.093990637 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074835931 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.094382169 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091192831 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.098717131 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072160404 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072750457 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08456227 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073614666 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085077556 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066995163 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054529945 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.098769243 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072307765 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071819882 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.095498986 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065381583 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.085231517 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068893885 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072327115 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085353435 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078896072 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091362575 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073609275 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074771895 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.096187268 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067723365 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084912438 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073916974 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06546472 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.092381752 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073410763 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071406415 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09070881 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073870306 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099662164 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09253577 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087972872 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073892511 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.096214165 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076346517 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071282816 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.08972729 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074525378 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090020421 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091434904 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094437163 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067664197 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07334034 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093886502 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070879383 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093967864 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073696441 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07550012 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.095674822 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071042045 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094687354 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070181906 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065035474 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.093083908 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068585485 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064383214 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095548776 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076435806 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084263275 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071572783 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072335823 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091804265 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064650987 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086613517 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06673497 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071860575 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086720454 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054422597 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06961208 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.090879208 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064715087 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073338129 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.092163029 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07185384 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.08684659 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075636146 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064823864 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091116151 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065513249 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06568023 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.087600565 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069418952 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064918621 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08792048 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074410077 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08670539 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070973064 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078817172 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.085628805 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071911577 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.084673273 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064316882 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080987678 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.095261204 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066167263 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087625182 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064771637 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07244585 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085250436 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065074341 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065509568 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.085421375 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071314398 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065880379 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087932117 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072484573 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.098507719 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065461335 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069138255 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087652557 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065304179 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070522047 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.086250488 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065985586 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066540354 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.083802195 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068750876 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.085488145 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072192068 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067229368 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.093739626 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067413296 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094545123 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070173314 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071794715 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091144471 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064657161 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058925429 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08805031 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067254198 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067772789 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08644626 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066994541 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065281397 seconds)
done (took 12.835295287 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065493723 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.164308871 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.122585575 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094535705 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106733885 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066176091 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.096778528 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100924684 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.088530231 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123441436 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08579641 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.104738937 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112696898 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085033496 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065979478 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06931446 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.087135675 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087723195 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.121128249 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084843188 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.136963948 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085463852 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.117460862 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088969288 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.108333127 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093206832 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.086711301 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07016581 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068596676 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.122582366 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.10587157 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069424322 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066365833 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.118488482 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.114025879 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08410206 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.085622926 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084064005 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086643482 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065897141 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111037229 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098725139 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.102329483 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081217806 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092844519 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068772104 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.087316316 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084518428 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110394475 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079715072 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108006575 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.129819594 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068626566 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.101504534 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064855905 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.10636293 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080941646 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.088665427 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066708169 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.088176091 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065223964 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069269531 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108009611 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11268152 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069417094 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10130365 seconds)
  done (took 6.996809013 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083749328 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.113337373 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083047633 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.104529488 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06584679 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066264043 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.087295557 seconds)
  done (took 1.470164955 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066962479 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087762494 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109258053 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089065227 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.105882779 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086983348 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097047178 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067299951 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.104054932 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067764719 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086411745 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124099143 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067182749 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.094370826 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090576344 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087631384 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090477656 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087125042 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069610899 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11034173 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069720385 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.085835192 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089875706 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066652038 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101806278 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067355121 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135930052 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071032636 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088251672 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070030175 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065487451 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.136712495 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101034308 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076882778 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066566826 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102733307 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081714446 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085299515 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082408193 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092158965 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080957913 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067350957 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.088751894 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064732314 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070520893 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098551902 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068171327 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.088326991 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069772642 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085589957 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088506555 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080838695 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087589341 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.070401565 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067807821 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093678535 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076571605 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.087918604 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085972743 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068106929 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.103800037 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082761806 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.101938696 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082687855 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09070488 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080795641 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101396465 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069674959 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068926901 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.091336351 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083523821 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.085327302 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.0685223 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078126558 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.089136371 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090370843 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.110692709 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068051978 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.09870718 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066746603 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067486655 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.087606867 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089905501 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091462729 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066497349 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070954252 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091149261 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065376802 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065997195 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.091872974 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065310555 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067379066 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09073749 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067444048 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089813452 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084234047 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066989251 seconds)
  done (took 9.021763838 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068074222 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068080347 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090070241 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067735263 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06800412 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088970764 seconds)
  done (took 1.334189407 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097071049 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.089677508 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081318074 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.093458444 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105394572 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101864546 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082294539 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.102863322 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084493733 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.099554767 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082913298 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.102866264 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087867541 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.094048568 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081535583 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.092675799 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083162285 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.096229342 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078841103 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.093871751 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087002139 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.094360651 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07246471 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082585216 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.091316135 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072370541 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.097520522 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07887076 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.099479754 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08248854 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.093509124 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070902158 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.092756674 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081820547 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.102321593 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072354541 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092564291 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071596158 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096985359 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070286098 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.102751539 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072987064 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077884015 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09273397 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.103281019 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071376902 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071734436 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097595347 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080990974 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.091941525 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071651906 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.092971742 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070681291 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092586457 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072045147 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103637502 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070931467 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.103863314 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07216171 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072317911 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090982407 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07090678 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10271494 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07046673 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.101227558 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072142103 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.092760652 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073577868 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09440186 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072850004 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071242648 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.090171112 seconds)
  done (took 7.106879503 seconds)
done (took 26.792633428 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.639235534 seconds)
  done (took 1.516320405 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.738295042 seconds)
  done (took 1.616794415 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.415007867 seconds)
  done (took 15.296165545 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.59601677 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.737653122 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.779583117 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150960737 seconds)
  done (took 3.140296782 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.863319176 seconds)
  done (took 1.763646814 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231887777 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.21996835 seconds)
  done (took 1.335093517 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.695764297 seconds)
  done (took 1.585969458 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.279306577 seconds)
  done (took 2.163330032 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.312939419 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180222767 seconds)
  done (took 1.385177793 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.512638567 seconds)
  done (took 1.404044955 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.307634555 seconds)
  done (took 7.202665859 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224294706 seconds)
  done (took 1.128407529 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.264408091 seconds)
  done (took 1.160168187 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.050715927 seconds)
  done (took 3.947357064 seconds)
done (took 45.528338368 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.076987287 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081219315 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101874192 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078297732 seconds)
  done (took 1.230574493 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.0765123 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072701889 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09754837 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072340756 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.098780026 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072998141 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.096592611 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077228251 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072260815 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.094768344 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072702458 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093295138 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075199723 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.09662398 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070634543 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075658399 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.097644072 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073638891 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.097676264 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074530851 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070802256 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.095592059 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076241032 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09343246 seconds)
  done (took 2.898531857 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076730473 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073822374 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095809999 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072000137 seconds)
  done (took 1.219591936 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076391535 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.113883463 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088720455 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077463852 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.114421498 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.108397847 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06922991 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069460731 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.091887349 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07803089 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089659363 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097875217 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.108857019 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076832568 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.100707487 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06563906 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068089821 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.108210645 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078085154 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.099235211 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06992906 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078907659 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09014513 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090474309 seconds)
  done (took 3.017171848 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07590114 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125445325 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078068163 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.111680048 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09119167 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06478485 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.097562221 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.113257102 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123985631 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.08730545 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069072147 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065348508 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.093470291 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064794321 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075339812 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.130349585 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.132860798 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068785198 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.118626514 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065072233 seconds)
  done (took 2.762255014 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073968409 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069695061 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08702251 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067703101 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075020059 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.093752305 seconds)
  done (took 1.377807597 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066707709 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067241577 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.088596985 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066831602 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071280032 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.088367936 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066326685 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066938351 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088628997 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067309266 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065952504 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.086630009 seconds)
  done (took 1.797859539 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.37348045 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09008989 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068637046 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.086334576 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071485575 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088291588 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080631454 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067456468 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.111993597 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066938346 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.088705424 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068661846 seconds)
  done (took 2.173242515 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254874575 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076999224 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314743762 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165524421 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136649228 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15099071 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104665552 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137383083 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.193013309 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135520203 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197530764 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219431582 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130889485 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165015993 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112578802 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.129848527 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182557865 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217411013 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104649295 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220410205 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203247758 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153869082 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177161267 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12596032 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132056826 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147939857 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071913442 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102590513 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228334288 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159441088 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196736284 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136535554 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096457268 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226534682 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220721873 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191813192 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159433868 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084829454 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.151672499 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.160078354 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250020044 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111822859 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190281355 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131471034 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102893448 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168434378 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14267807 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.144631142 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134010954 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112804701 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170294878 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235344755 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.161789052 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109204395 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134681702 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139006387 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.140718846 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103829215 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260256077 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190672379 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155634863 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093154663 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098852214 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205217107 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155662077 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.138424805 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.150966116 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115679893 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163227933 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205434543 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142887309 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171123142 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.174507421 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088051197 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142959166 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188096195 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153688153 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221882462 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15156153 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072992039 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149096772 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126295883 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103651283 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143252412 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098126446 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202374272 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121648552 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134323767 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137142929 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133186632 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133666494 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191298407 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196259184 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126798311 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066126341 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127521141 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.146049265 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172470068 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110571029 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131798548 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144420954 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078786216 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186311272 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075008853 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150330187 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.10098615 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149472391 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160473785 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075353813 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173989249 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101991968 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125437038 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161300036 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212657061 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113625878 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082454077 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221055237 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153138243 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.129457833 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171925348 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208849192 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101356 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125524329 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199330841 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236841657 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090357929 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216985923 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131198105 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083577259 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.110896558 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150938406 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137008608 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.145851667 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106000609 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151470841 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219053932 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074167386 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118880071 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161662589 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081626736 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105856256 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137476889 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124226082 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095200715 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.124735719 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131480099 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165532845 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17511058 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107669729 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173109572 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098916575 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221370545 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112732475 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.127833418 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104775493 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093820993 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.161713086 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212592587 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079290126 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220118437 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.151614057 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128383102 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14526486 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083889341 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19033727 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078572581 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071111279 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194800447 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134871039 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134389286 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179715901 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127903246 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.152209379 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149351058 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159595499 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180919882 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.158563916 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129572468 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08747336 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137052468 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149517553 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096359779 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.117538379 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082587556 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128290202 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119302343 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082917502 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192968304 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153559488 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124357839 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113136345 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120257417 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199708972 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077907734 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156977383 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.143120133 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118007025 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.206740425 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183384256 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162389188 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124218926 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196376275 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07101826 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07370909 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.114351727 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151581135 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105952202 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082944108 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165074802 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176755054 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154485115 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163014428 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13462707 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146874541 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20673059 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070818851 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.140461941 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175559525 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15075015 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.149000136 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111002196 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099238396 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194144416 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109295192 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262388222 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14015623 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148434897 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177954072 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.127639048 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07936903 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129218645 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18760861 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130212311 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177860173 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123246275 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11187374 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110762611 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.104676937 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128220913 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152020464 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145219211 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184106192 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.139137191 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15718594 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077507183 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141455276 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169926678 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146896303 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064598575 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144850811 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214881253 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094800925 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165763867 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183574787 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102507998 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125938703 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230198472 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195404199 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083875544 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133474678 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145605382 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181567417 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144701511 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165637595 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134769461 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159734658 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134066551 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084370517 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110751527 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121984583 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131343384 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094953576 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.136455103 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.141344953 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.118146238 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156562527 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135688637 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134507561 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142813477 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121648414 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091400278 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120863389 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228955291 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147957504 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2270868 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101152798 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.199948571 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220733846 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07564948 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103161359 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080948898 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164723838 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107820397 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158644204 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.122189106 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129239098 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152352869 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169169411 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119742308 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068705332 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13445781 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159783027 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135251528 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121516464 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.129785442 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217463247 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103388487 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102263495 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14969763 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104828109 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125524498 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228260494 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083799255 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097467542 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099505756 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080798986 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154026346 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210672274 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.106622738 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.125428755 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141344536 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145415141 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154856227 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124680922 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123388833 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137900174 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17674816 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177668552 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090718154 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136464547 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15439323 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208246624 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130025707 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.119371487 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201524909 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205379077 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.215364768 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089255285 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140240079 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139654751 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133360241 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189436824 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083853206 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219647199 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106394401 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164253017 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128826313 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116847376 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154330151 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.122048988 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089135944 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200727938 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146447056 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098162856 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104067106 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142576988 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147184214 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131565989 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074470924 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188766816 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073226946 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162183615 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224448855 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105879024 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106271657 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119907831 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10513048 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132296649 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12776132 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086636002 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138078935 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224819558 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.0911616 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201889702 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166651577 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138728542 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187234933 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123622002 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.659818847 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078544672 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207246589 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145843612 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231877239 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097440185 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143474412 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133540758 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148126488 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195737393 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129756645 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.201912165 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158842312 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.146578885 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079053894 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127126087 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135095089 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.114914001 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131473337 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139110745 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141435529 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.124289626 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.146635468 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153295518 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081451013 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118910557 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210318655 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142282693 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170633787 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165579032 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108595004 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144821969 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189143116 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081165792 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.148168068 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208543716 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132246827 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121746056 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082343133 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.130811017 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225435613 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073081242 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215600477 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149672433 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134918654 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139063476 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.143905957 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157435514 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13224799 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174701317 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096477667 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.136247884 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140551099 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108971032 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077882225 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130739784 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137136439 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.123761682 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127026989 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.117710909 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201207558 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071086855 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121404075 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127042095 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170354138 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233996267 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.112907084 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083130771 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143907942 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138337467 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.140963432 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150874262 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.105571857 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106456312 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082610716 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131905647 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110535935 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139718304 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128266187 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135586213 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220538627 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083223802 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249003561 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119300962 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130698184 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069790263 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.102747538 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097126253 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121920812 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13215207 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123434912 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202359205 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.120788073 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.113579667 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093527128 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.096873528 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083829654 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178635381 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135605453 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147247507 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098054838 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.087429137 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133384047 seconds)
  done (took 69.606403934 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129716889 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.100839617 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.114278548 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.166112592 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.142615682 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233947028 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.174729609 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.219485136 seconds)
  done (took 2.267435536 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068540535 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.113944861 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101211821 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.113313383 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.086939451 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06778161 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.287139226 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.106574171 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066178887 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.111273306 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.115376594 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.089162441 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.457893082 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065065563 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.090993519 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080977306 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.0669369 seconds)
  done (took 3.066553298 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.416863442 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.609832081 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.440363505 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073904198 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.754354797 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.104808382 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.243309845 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.156501366 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.088925423 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.415980087 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.728812865 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.143705409 seconds)
  done (took 17.165067019 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073122243 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068491644 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106246238 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082566815 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.09661575 seconds)
  done (took 1.415479418 seconds)
done (took 110.891199118 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078366304 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.335780676 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052389219 seconds)
  done (took 1.407952902 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082291024 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084226687 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108915108 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081987529 seconds)
  done (took 1.352061429 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073800991 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07619852 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108086969 seconds)
  done (took 1.250748294 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.271743111 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163069603 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085964353 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081049897 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.0763574 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.101229601 seconds)
  done (took 1.252206316 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071448612 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074163681 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096804923 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076690333 seconds)
  done (took 1.307742883 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074815443 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052167049 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054480754 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.078671599 seconds)
  done (took 1.253305128 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088943518 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.103658107 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079937106 seconds)
  done (took 1.264153167 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105330387 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.109456602 seconds)
  done (took 1.20865112 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080221734 seconds)
  done (took 1.069836149 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093321845 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.136165946 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.152770907 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.133718609 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.162031235 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.133742455 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.110101321 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087764663 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.101737327 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.112813582 seconds)
  done (took 2.218947755 seconds)
done (took 15.169015312 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07728231 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.19732741 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.352326887 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11455993 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.649216082 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.348731396 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.92007125 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11574982 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119426693 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.091578166 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082717782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654378173 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.848030219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.155100007 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.835345629 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.130621062 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654527574 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067077798 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090926629 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067185716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.871862994 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091474798 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068045814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067837084 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654336439 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.362678081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.091899193 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.131561212 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067557829 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09306717 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.346921688 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.092150745 seconds)
  done (took 14.498421671 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069501446 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.141190262 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072467419 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082965321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.094764917 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069168073 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.095710218 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068558453 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.149932317 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067411474 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.108716175 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067280864 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.095400909 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068691762 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085882396 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092007452 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068074054 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068310615 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091618791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068440982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110264166 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067518693 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068079298 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092155195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067312429 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.104059773 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068603219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066935083 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092247119 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069193407 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.095465026 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068075931 seconds)
  done (took 3.693105489 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113800147 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149617059 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073223306 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125974826 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112688113 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094162054 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.16736139 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092113025 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151715836 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067772252 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10805789 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067218217 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124525116 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06855798 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.110822283 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067373021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06896213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092354356 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068375468 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092518058 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086213223 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091872593 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067931903 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068703728 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092588873 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080167308 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092063287 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068010652 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067676074 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093782618 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070758453 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09237655 seconds)
  done (took 3.992549809 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071348537 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074185121 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.106057736 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082286578 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.093046314 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072091165 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072705969 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.093418158 seconds)
  done (took 1.664118385 seconds)
done (took 24.837692414 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07789809 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06947285 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.096720469 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079683436 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.097069118 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077701131 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06689566 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.098178356 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076377506 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072176695 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.099142621 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066603506 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.09479056 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066794411 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073388962 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.091639277 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079525691 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.095848855 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078662782 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078289318 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094368185 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075997385 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098587518 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079846943 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103260095 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078763822 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082717415 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.096874663 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069126532 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094722438 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076175268 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082533526 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.093041158 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07886107 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.091603588 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066806167 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066677452 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.091397373 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078909588 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.097831274 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069328966 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.098324514 seconds)
  done (took 4.499053131 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086246001 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089633743 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.108928651 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064301989 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094567299 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064399481 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.111907388 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061515309 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058380471 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112044393 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054957308 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058096938 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.086956533 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053436433 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.057833712 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055512801 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.085371742 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055500622 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058132998 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.083056541 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.056468638 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.052887825 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083970302 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061726 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.054849643 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.085257817 seconds)
  done (took 2.900699368 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073441637 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082124575 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.110968365 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12590826 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.128482885 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075709875 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.101366222 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.085996552 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109633702 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066039969 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070563011 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.119090246 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086724767 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.09775688 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067087508 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.110761119 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080738179 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068760517 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.098402839 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089604633 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.108580173 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077105891 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.116559188 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080153094 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067065491 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094035667 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070130286 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.104936118 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071946895 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076321186 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096217483 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071091978 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.093733358 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077746926 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070770446 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093479349 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089159095 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.1027296 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077540836 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067355391 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095715108 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067957046 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11221069 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.110273223 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091388714 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073429737 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074072498 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.101349221 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066716415 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110648003 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0754597 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066089286 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.094094408 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066534364 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.091598708 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079773801 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068714649 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094026642 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076096431 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094413632 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079359976 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070546204 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107508586 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06626113 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099455156 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065593319 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067661317 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.09098446 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.089175223 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068479449 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.132707392 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06819013 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09315683 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075245076 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.099389965 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073135084 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068414587 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106564734 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077021155 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.095092541 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075213724 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069673356 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094355851 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086952705 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093822853 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068931162 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067593693 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.097385856 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069506524 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093242135 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080063632 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067099742 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.095190008 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08420594 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.091474191 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06890325 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073521039 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.097065676 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066526596 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103964787 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072703671 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067715129 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101058388 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06689178 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095100579 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077079523 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071132766 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09091956 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071588346 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098583481 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067339773 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06819856 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.094385448 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068753028 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.100914141 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072810547 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071707068 seconds)
  done (took 10.97118385 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.187368965 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.180525044 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068849566 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.173719675 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075433219 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.104413566 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.174417301 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104427445 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.092893484 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068354781 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068695827 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.12654975 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.121219353 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102279712 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.103700554 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066432181 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.1112057 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.103929126 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.17815482 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.171738187 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.1123917 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075430331 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069254309 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.094338833 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069704618 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102966136 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082036578 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.099882836 seconds)
  done (took 4.111412703 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080203223 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.126481189 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072675885 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087582954 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.116197191 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068250354 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.097774218 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06926783 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.104784869 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078563646 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092228809 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073030267 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07442526 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.102960554 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06802079 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103086559 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077361969 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068256485 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.095793742 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072096592 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.102105674 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.07941613 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.09609675 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066986872 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07333859 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.091841881 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063785594 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.10963111 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067036439 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11378059 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065316194 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07302625 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.105528014 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06830508 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.092185893 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069813564 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070008084 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096236463 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069526707 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065694694 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.091363733 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056722947 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066774079 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.104727861 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073358392 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.084870873 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072590411 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072160603 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.097256843 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065021484 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095247215 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069830605 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070905637 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.101834364 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071791886 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072861283 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096847362 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065290171 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100070734 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071110252 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063433517 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.091125174 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071814262 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066214907 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100742924 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071127346 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091378971 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071016234 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072123431 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.099603048 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070841254 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069317674 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090342612 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069211894 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097192084 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071204842 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070736616 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091456133 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067175778 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06750225 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.08037071 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067522204 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053001202 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.096527396 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06600992 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065509301 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095185306 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072995763 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.105477767 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067918257 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.098029245 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068370806 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066385248 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095887404 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.062403593 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069508211 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108528046 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.108736155 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067822388 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064931937 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10726043 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071905818 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067035207 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081445356 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073570357 seconds)
  done (took 9.536155111 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094942896 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090854422 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.09440703 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081794675 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.11992511 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091778251 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099835947 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073615231 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068626745 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.109541673 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067411717 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10143652 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066983717 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075728923 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.121067625 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074809237 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.095218878 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075905061 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07144047 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.131932051 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082614055 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.106546475 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.079841497 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093604858 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.071690638 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079056853 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.121270457 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078521745 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103657227 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.083606148 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078861506 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.119380503 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085207448 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.096517153 seconds)
  done (took 4.120976028 seconds)
done (took 37.137816827 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.10355922 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.288335575 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.07697125 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.933772728 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.124667402 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.092918208 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.088066871 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.086990488 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.737405956 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.081125785 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.342081112 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.626848596 seconds)
done (took 58.607446263 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.103957719 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.218350562 seconds)
    (2/2) benchmarking "String"...
    done (took 1.34657213 seconds)
  done (took 3.587965722 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.482056334 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 4.946528303 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.335518239 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.07673995 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.078611858 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.376763638 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.586462743 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.855767754 seconds)
  done (took 26.280177489 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.078799514 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.42680907 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.358976544 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.364812673 seconds)
  done (took 17.253302184 seconds)
done (took 56.732315369 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.103905353 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.100002387 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.083831293 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.078087694 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.182358189 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.104486222 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.314550905 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.934632157 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.077374808 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.064822664 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.078494242 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.07854406 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.111498325 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.275465576 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.086326255 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.076860247 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.102558978 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.236931976 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.448747107 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.08251694 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.085852959 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.121894559 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.079409453 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.081478119 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.138624243 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.086719686 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.077886968 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.080616684 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.250581797 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.084120885 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.166438051 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.471450173 seconds)
  done (took 186.371328158 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.078746754 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.084813288 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.173962685 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.098636027 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.483213078 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.282199312 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.215982853 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.548425603 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.096813002 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.092654163 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.364494553 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.077939464 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.420353328 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.12952575 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.08755025 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.170822227 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.259629427 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.392107391 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.095265666 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.358174634 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.097263177 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.257310009 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.170443306 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.288582389 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.114137008 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.09006138 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.101333146 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.107589144 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.268521557 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.198276342 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.10711088 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.119028137 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.638632959 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.939853661 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.09955575 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.110137145 seconds)
  done (took 145.244875194 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.331024103 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.080742356 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.07918283 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.081014375 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.109470897 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.079885084 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.595778677 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.596590574 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.579479637 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.506182885 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.140950023 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.225749843 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.080350566 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.170065905 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.092445534 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.081195179 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.094217945 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.105701364 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.082345339 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.081457305 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.602102799 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.094045173 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.163459691 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.08574198 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.080391886 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.108783997 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.472904336 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.081320061 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.108657878 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.39223532 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.123236847 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.080720512 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.257375384 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.085595258 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.187321012 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.082703779 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.10963841 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.081419524 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.345802236 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.080897966 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.081226959 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.083873776 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.588241589 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.081079848 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.60311702 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.082934196 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.929195117 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.082023267 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.081975844 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.927873408 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.413404021 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.081040989 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.08129123 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.083935694 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.081144596 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.082030999 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.111332916 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.002780257 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.177986178 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.081984255 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.085041203 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.110919519 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.082058628 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.209073944 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.081925324 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.969876119 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.135025723 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.186657177 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.603037752 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.085289196 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.083610633 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.170083417 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.199402865 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.082731499 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.082001803 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.083294411 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.082925511 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.188038655 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.083662853 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.441582539 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.089143391 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.084174103 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.140347779 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.17539857 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.082694557 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.082984148 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.276650757 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.083603508 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.083197992 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.732667284 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.169564357 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.083015907 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.083203985 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.083264659 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.084356111 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.439930583 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.083021136 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.602798214 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.211259631 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.086254574 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.992511566 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.086527815 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.44991752 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.584411691 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.626846973 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.08496407 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.189268606 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.087680259 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.085755336 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.084980102 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.113997063 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.085293191 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.138727946 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.084990651 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.47913082 seconds)
  done (took 332.237999794 seconds)
done (took 666.209839475 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.767637347 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.751301192 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.860307969 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.751842628 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.732154721 seconds)
  done (took 9.894484004 seconds)
done (took 10.924871022 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.261855686 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.264276646 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.144664791 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.264164558 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.114416395 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.280038304 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.24350711 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.10768692 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.182323877 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.160934061 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.182898642 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.133605774 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.110720884 seconds)
  done (took 16.482989635 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.690997533 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.605153486 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.1478231 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.578398964 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.124812459 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.555363208 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.350277399 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.346522594 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.315853336 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.09990864 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.098803649 seconds)
  done (took 15.946083259 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.705490922 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.647053872 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.150879673 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.585894871 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.126249115 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.551875133 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.352090171 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.343409762 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.310996678 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.099529675 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.099566105 seconds)
  done (took 16.005563496 seconds)
done (took 49.466112556 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.094765207 seconds)
  done (took 2.12701577 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.126784978 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.289954595 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.110653217 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.098272423 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.095111488 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.096283884 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.09822439 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.094653967 seconds)
  done (took 10.043555114 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.094183866 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.094519644 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.094823135 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.091361891 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.094041609 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.092086497 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.094661122 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.092233859 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.091780124 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.093454723 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.095578399 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.09298425 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.094354183 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.092412583 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.095134693 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.092728166 seconds)
  done (took 18.530066594 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.0951356 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.092859044 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.092923479 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.09321687 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.092862242 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.094151658 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.092860541 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.092555844 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.092524469 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.092624729 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.094020639 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.093195289 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.093690039 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.092683318 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.093124989 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.094840351 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.093237042 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.09380644 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.097959222 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.092973297 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.094607098 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.093655983 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.09410416 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.094008963 seconds)
  done (took 27.283983086 seconds)
done (took 59.016106598 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.9010761 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.512773643 seconds)
  done (took 8.448698681 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.096167622 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.096679104 seconds)
  done (took 3.230449886 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.096056675 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.096052699 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.095834844 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.095709207 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.095797951 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.096184986 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.096343385 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.095767613 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.096076725 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.096585586 seconds)
  done (took 11.995448004 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.096006352 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.096670586 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.094319467 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.097284997 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.096773629 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.094454919 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.096859302 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.097325355 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.097417535 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.094348362 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.097764869 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.094606032 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.097197012 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.094797804 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.096621166 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.095110143 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.094337161 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.094528575 seconds)
  done (took 20.76233551 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.096695949 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.097159736 seconds)
  done (took 3.229911707 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.094610043 seconds)
    (2/7) benchmarking "second"...
    done (took 1.094149801 seconds)
    (3/7) benchmarking "month"...
    done (took 1.095020362 seconds)
    (4/7) benchmarking "year"...
    done (took 1.095043142 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.094907881 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.09567092 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.094380181 seconds)
  done (took 8.699849637 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.098769499 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.268434939 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.346345659 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.690979038 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.099078074 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.101333865 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.954108445 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.101506011 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.103477588 seconds)
  done (took 12.801136882 seconds)
done (took 70.202429154 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.075458289 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.095556219 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.845673213 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.107163962 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.112013227 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.392430561 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.11195627 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.214034194 seconds)
done (took 35.991678353 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.094355179 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.849083019 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.889818793 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.088156307 seconds)
  done (took 10.86482004 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.084502464 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.203001331 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.079946131 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.051732958 seconds)
  done (took 17.453923971 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.67025236 seconds)
    (2/2) benchmarking "read"...
    done (took 1.422024708 seconds)
  done (took 4.126317021 seconds)
done (took 39.576176825 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.095357063 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.095627452 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.095715937 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.092808166 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.095372538 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.092444999 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.093825734 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.095908186 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.096485401 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.095945583 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.096227769 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.096339637 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.093396975 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.095104395 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.095840504 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.093562967 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.093575027 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.093749468 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.095988618 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.094336581 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.096507253 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.094586796 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.094711043 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.093558759 seconds)
  done (took 27.31248953 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.096255695 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.094900972 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.096859035 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.097232187 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.095211657 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.096966805 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.097763953 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.094425508 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.098012075 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.097101619 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.093785224 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.095226905 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.097381145 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.094898772 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.097114671 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.095426672 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.097722009 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.095435325 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.097147887 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.094949566 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.098194121 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.095179151 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.095790506 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.098746828 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.095989487 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.095808081 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.0980049 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.096494957 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.098111387 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.096446435 seconds)
  done (took 33.929559925 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.102646259 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.105038886 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.09810232 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.098122963 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.098046432 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.098213334 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.098425061 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.098834895 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.098022327 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.099326858 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.098568675 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.098783609 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.098702893 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.09860436 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.099231178 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.099186244 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.098412419 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.098861063 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.098786358 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.09921238 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.098690367 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.098761103 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.098932299 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.099090134 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.099106749 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.099433003 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.099472128 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.09934933 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.099293009 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.099549061 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.100028712 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.099670604 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.100488357 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.100380402 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.099662372 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.100003388 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.104740649 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.106027584 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.099200754 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.099905963 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.099342978 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.099520938 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.100786717 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.100114308 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.09991714 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.100386444 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.100334583 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.099867277 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.099804484 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.09986367 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.100576152 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.099865698 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.099730956 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.100217143 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.100257357 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.100565489 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.101172894 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.100986184 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.100733253 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.100763369 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.100856713 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.101696806 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.100433767 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.100638771 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.101128715 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.101114458 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.101221126 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.101183004 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.1011294 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.101844119 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.101079385 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.10201916 seconds)
  done (took 80.244005801 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.10117616 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.09904749 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.099090015 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.098666286 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.098711391 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.101617925 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.099133455 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.101978558 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.098553869 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.101818531 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.102514589 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.099840783 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.099618497 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.102648902 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.101039264 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.099355989 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.101837793 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.099477536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.102406427 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.102998796 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.101571868 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.099448861 seconds)
  done (took 25.25311036 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.102227678 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.102537101 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.099798756 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.102252309 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.099862025 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.102357393 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.102859074 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.102079447 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.102551671 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.10017891 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.100079978 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.102522662 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.100598671 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.099903722 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.100113235 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.100178057 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.10377658 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.10099961 seconds)
  done (took 20.866088211 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.100799466 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.100977103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.10352167 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.100140847 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.101015955 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.103353755 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.100527391 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.103433277 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.103110348 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.101148181 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.10401583 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.10354949 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.103852914 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.101096836 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.103682779 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.10153972 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.102894706 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.101560434 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.104196391 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.101063408 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.101664616 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.104142251 seconds)
  done (took 25.293186915 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.103337382 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.104327021 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.101705197 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.101697742 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.102158831 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.104870245 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.10397264 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.101859177 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.104862378 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.104800597 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.102466364 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.104226557 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.101990892 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.103111287 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.10361043 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.10195973 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.104697366 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.104688805 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.104663261 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.102217793 seconds)
  done (took 23.110742233 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.10551727 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.10675289 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.106373995 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.106701222 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.105993332 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.106827779 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.106273928 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.106620987 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.106425468 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.106226057 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.106388114 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.108315907 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.107305507 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.106881588 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.107157979 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.106727528 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.107063223 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.106635088 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.106881367 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.107134775 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.107454874 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.107643147 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.107691833 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.107481821 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.10736088 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.10722054 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.10779937 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.10737168 seconds)
  done (took 32.038810236 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.106290934 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.105694245 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.104686485 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.103855895 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.10418503 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.104001264 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.104144853 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.104703839 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.106855227 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.103808538 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.106642252 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.107254009 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.10702827 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.107628078 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.107153123 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.107479067 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.108152219 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.105318795 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.105193372 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.104135103 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.108161091 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.107516439 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.107385374 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.104653441 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.104335773 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.108053335 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.105115012 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.105371806 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.108113081 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.105512415 seconds)
  done (took 34.225235931 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.126001881 seconds)
    (2/2) benchmarking "in"...
    done (took 1.12641129 seconds)
  done (took 3.298759338 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.105219321 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.108187648 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.107331845 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.105973631 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.106453859 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.108432555 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.108175071 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.104977276 seconds)
  done (took 9.901680248 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.107615076 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.108817734 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.108297863 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.107965538 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.109788877 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.109244435 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.117635399 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.124770307 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.111696982 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.109460978 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.114814578 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.116917755 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.113273847 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.109887854 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.109401026 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.111727841 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.109242234 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.110797501 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.109805957 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.109539497 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.110683384 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.112524852 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.112922484 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.106713849 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.111230154 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.123783626 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.11784354 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.109902856 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.109963855 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.116962958 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.110458323 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.107331814 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.111502967 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.110048427 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.110838139 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.111106388 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.121800026 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.127474199 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.119967825 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.111259394 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.110802642 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.107222085 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.112985619 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.113488938 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.112697604 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.110654142 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.110904884 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.108797998 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.110532559 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.113322787 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.114725255 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.110803485 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.107971113 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.118360455 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.11400345 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.120418184 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.128551195 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.113754909 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.119183161 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.123945818 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.126828124 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.119370716 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.114773494 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.111589125 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.121770918 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.137435954 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.121040812 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.125395015 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.108832072 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.11224502 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.122452696 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.126301207 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.122281842 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.112018705 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.113053641 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.111601827 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.113185346 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.111987026 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.122229506 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.133237417 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.113153042 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.113321192 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.122033139 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.132996682 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.111751817 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.112953628 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.113574686 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.113157709 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.113922293 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.125700078 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.12972422 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.112360548 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.113190654 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.113344138 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.116440201 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.1136055 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.113430689 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.114953886 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.111114744 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.11390259 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.114206885 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.117932416 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.122647716 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.114316411 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.114565492 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.12396552 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.114172722 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.113864406 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.125728477 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.114171973 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.114678516 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.115605396 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.122570185 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.111559247 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.117604719 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.123339825 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.11575775 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.11714993 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.114574012 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.114660414 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.125386136 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.141237312 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.114560813 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.115147217 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.119973869 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.125751923 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.115080255 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.119328398 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.114825821 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.112427258 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.112738471 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.117900072 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.114965767 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.1170101 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.115657007 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.118057023 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.112311873 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.115418379 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.115855248 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.116844686 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.118626969 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.116584156 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.117785923 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.119408652 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.116767093 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.118556717 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.124832106 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.117305785 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.118404277 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.117789139 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.113483131 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.11587203 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.118564062 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.11669608 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.117693706 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.116816576 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.115601583 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.116638667 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.116599917 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.11628658 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.116288789 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.117206803 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.120181329 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.117306207 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.123522363 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.1165812 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.114148349 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.117022686 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.117214121 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.11746395 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.116278072 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.1168252 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.119923848 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.124148151 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.117060351 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.117141568 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.12159466 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.117671491 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.117828173 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.118279155 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.120269872 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.124912407 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.118415915 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.127100259 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.11831907 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.118169939 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.118198057 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.119636883 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.117885981 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.117781492 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.121205791 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.124661809 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.132261821 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.128136842 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.12030086 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.121050973 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.119943473 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.122167117 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.125276307 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.11928 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.118629273 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.119115593 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.118355593 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.119353258 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.121146133 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.119301783 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.118907627 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.118662218 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.119367698 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.119677728 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.119706891 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.120666722 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.122089142 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.116276067 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.11972874 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.119698069 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.118536591 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.117239461 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.118640201 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.119215444 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.118880442 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.120537933 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.130737918 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.117321665 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.121257085 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.122122547 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.120779211 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.118305432 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.119876134 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.123801264 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.120496244 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.128758551 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.137669246 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.121538261 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.128880081 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.137130571 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.120352153 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.124956228 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.120080875 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.117968572 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.123364562 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.126957019 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.120438716 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.12192752 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.120520136 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.121097957 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.120549871 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.130248348 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.119015396 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.121171076 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.121059371 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.124269918 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.118232552 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.123824584 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.122922038 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.123191607 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.124788741 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.12145428 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.122164603 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.123706113 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.121574652 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.12184446 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.122106581 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.123998149 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.12835268 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.129420682 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.123118026 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.126196494 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.12335188 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.125340613 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.12395175 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.122846086 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.122084648 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.13602803 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.130462688 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.130761571 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.125971912 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.12278616 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.130293637 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.124816168 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.127584006 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.123390276 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.123783737 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.123374448 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.121777542 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.120215002 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.125369746 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.122560147 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.12460103 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.124330891 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.126470531 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.123558399 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.122642655 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.122998407 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.123517381 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.123331149 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.123780947 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.123400188 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.127944322 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.12573819 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.123425627 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.12499686 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.13202175 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.141248192 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.126518303 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.123397939 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.124628815 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.123617737 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.125880216 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.124716539 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.128191371 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.130795629 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.126845668 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.134405239 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.125359919 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.135989546 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.124188449 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.127639206 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.131791578 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.121519101 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.12342582 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.125792461 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.124243472 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.133366028 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.14088768 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.125573243 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.128038254 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.124872713 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.125041314 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.125089784 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.124945243 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.124493275 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.125067543 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.135953482 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.142834794 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.128760983 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.127524994 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.122474349 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.125938521 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.124760823 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.124577996 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.13203841 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.125124927 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.126945001 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.125549629 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.126313089 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.12499227 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.125684967 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.125174488 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.123230732 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.125828151 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.134505535 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.1427965 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.129833212 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.126399166 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.138889882 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.126631161 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.135559185 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.143128374 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.127199473 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.126865392 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.126119512 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.13027126 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.126240401 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.128472051 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.126762831 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.127311854 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.130210648 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.126645541 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.131271272 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.128339956 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.128253792 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.127602109 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.136817954 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.148579838 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.129040964 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.130315288 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.124282567 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.128765994 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.131444155 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.128063514 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.126698677 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.130241596 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.136491353 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.134305215 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.128657391 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.128173214 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.12839032 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.128575223 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.127464352 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.127573584 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.127850529 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.127325367 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.130122779 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.127774034 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.135067933 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.127947259 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.129847756 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.130641131 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.129336968 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.140049235 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.129029087 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.130761196 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.128779224 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.127727817 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.129882068 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.12894492 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.128584266 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.130217982 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.128173253 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.130423083 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.134857582 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.134101851 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.13367279 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.128532192 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.128255632 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.13054705 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.130836303 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.129699798 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.128808241 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.128887625 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.130780415 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.129114389 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.131708177 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.127880295 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.128860204 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.130173095 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.129186911 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.131730036 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.135565931 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.130131587 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.126790967 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.128995996 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.129412831 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.12905108 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.130547023 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.142486377 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.133161281 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.139637174 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.137705874 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.133569335 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.131035279 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.132674631 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.138882992 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.129585535 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.131210169 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.130671786 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.133888799 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.13106526 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.134281871 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.130947278 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.140808812 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.13192847 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.131847428 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.14164391 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.149130165 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.130936564 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.132496751 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.135015773 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.131755828 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.128791001 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.131118841 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.131254867 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.140417433 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.151142795 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.131869111 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.134654431 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.130283575 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.133119416 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.135995127 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.131879493 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.133843147 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.12913702 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.133027893 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.132665128 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.131478657 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.129819098 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.131669866 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.132282209 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.135044665 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.139192855 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.12953555 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.135415048 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.133909771 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.133725948 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.133910324 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.131451311 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.130582451 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.129898276 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.133537466 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.133028829 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.133695117 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.136806302 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.133035512 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.133693062 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.134140375 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.133114644 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.135835623 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.141843226 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.139303411 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.131002338 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.132726186 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.133997474 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.13776184 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.13338029 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.132961123 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.134641338 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.13665008 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.13303519 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.133952272 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.134087343 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.13639113 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.15195696 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.150820097 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.134768056 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.135688571 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.140835231 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.134591271 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.131284173 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.133643479 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.138741561 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.137457682 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.141353669 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.134299971 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.143502928 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.150964691 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.135770343 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.138006794 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.137159048 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.143087028 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.139198063 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.134605783 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.134731575 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.139124432 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.152102702 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.134701298 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.145294838 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.164536499 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.152942813 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.137591384 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.135680055 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.134815368 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.135412914 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.137910391 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.135809982 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.134858643 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.135405865 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.135907343 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.136810304 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.142545895 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.137917109 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.136111656 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.135709102 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.136835762 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.139243802 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.133484461 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.13612729 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.136075338 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.136133782 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.136130302 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.136610989 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.137656856 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.149942266 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.147670104 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.136500564 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.136804392 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.133833772 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.14211524 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.139546408 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.146934815 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.14360848 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.136533292 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.136488084 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.13941452 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.137023099 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.133555853 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.137664961 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.136978288 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.13634451 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.133851748 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.151768681 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.145269213 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.144108114 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.138560533 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.137342208 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.137347126 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.139666065 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.136884079 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.137492282 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.141190329 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.13733173 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.14083799 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.137109313 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.137286873 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.140864914 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.144431158 seconds)
  done (took 672.216551406 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.135456357 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.135139109 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.134780165 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.134931596 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.135056957 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.135043783 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.135129157 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.135163435 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.13482563 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.13550977 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.135255245 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.134752385 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.135194453 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.136617222 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.135712575 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.135395878 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.135524241 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.136379207 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.136139295 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.135374702 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.135670665 seconds)
  done (took 24.919142305 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.138137228 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.136357999 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.136210478 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.138052614 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.136296369 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.138419695 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.136338076 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139084091 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.1390707 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.136107852 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.139318896 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.138986361 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.136213207 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.136249046 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.136130886 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.138952569 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.138412117 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.137202536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.138698146 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.136870071 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.139926389 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.136929722 seconds)
  done (took 26.104981923 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.13965457 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.140583085 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.139518489 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.137140739 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.14023187 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.137423536 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.140388002 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.13954771 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.140857123 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.142124448 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.139741976 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.141019418 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.14793293 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.144922621 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.143443099 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.139714651 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.283673974 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.141495329 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.140698879 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.140442157 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.138205422 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.147208081 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.138105005 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.13829029 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.140075301 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.141424152 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.141050454 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.14076834 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.141252619 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.14258767 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.145025308 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.141209946 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.141560505 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.144235989 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.141573193 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.141971004 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.14497976 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.142156552 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.139061815 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.142008842 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.151735696 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.160897539 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.142498743 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.150178251 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.141886102 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.141651574 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.145445795 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.14886561 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.138908392 seconds)
  done (took 57.193961754 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.141636713 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.14233253 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.13991642 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.142154283 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.142532287 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.142837274 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.142515286 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.142191094 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.14000173 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.139512413 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.142353652 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.140805009 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.140113635 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.142187292 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.142893712 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.139546998 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.140437006 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.139841339 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.140143476 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.139695423 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.140194525 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.14276003 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.143158989 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.140952233 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.142672638 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.140822315 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.140490407 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.143261188 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.141470487 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.140788277 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.143436628 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.14309101 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.143461246 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.141425908 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.141901741 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.144035327 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.144081802 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.141422266 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.14353861 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.141860441 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.143951461 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.143978967 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.143797208 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.143977257 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.141417548 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.141613938 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.141921656 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.141294468 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.142240862 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.144511944 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.144461942 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.142379669 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.144751173 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.142093488 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.144484819 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.145028718 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.142154636 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.142098301 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.144792252 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.142399972 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.142191513 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.144989568 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.141832638 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.145071078 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.144567246 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.142993123 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.143083875 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.14526907 seconds)
  done (took 78.763843546 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.14529268 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.145305844 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.145813859 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.145959772 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.14574611 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.14590606 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.145367374 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.14550913 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.145455971 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.145204271 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.146106499 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.145427501 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.145879238 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.145081887 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.145739921 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.146052523 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.146354643 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.14643473 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.14652573 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.146562286 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.146653147 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.145875463 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.146297437 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.146173755 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.147283666 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.14668005 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.146754964 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.14752277 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.146872426 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.14775303 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.146946024 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.146806206 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.147128699 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.146857327 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.147666398 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.146631577 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.146956649 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.14649694 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.146694131 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.146959283 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.147352421 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.14712404 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.147437562 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.147701417 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.148197649 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.14797887 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.147615684 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.148809843 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.147994538 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.147653031 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.14762255 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.148363132 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.148111953 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.147574247 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.14793479 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.14816773 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.14850515 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.148257345 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.148610354 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.149527201 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.148505215 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.148626207 seconds)
  done (took 72.19577658 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.147738616 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.14838152 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.146344376 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.145874448 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.148222767 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.146021072 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.148632096 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.14872213 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.148493875 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.148545622 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.148905304 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.146283592 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.146819008 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.149183352 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.146333509 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.146700252 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.147096522 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.145568751 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.148540472 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.146282408 seconds)
  done (took 24.034581251 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.1466331 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.149763594 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.146747209 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.146794715 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.149205064 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.146878007 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.149556741 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.149608429 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.147221047 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.149375747 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.149696636 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.149465947 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.147184406 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.147158641 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.149574983 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.14779647 seconds)
  done (took 19.458959186 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.146953632 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.149922629 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.149761597 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.150008367 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.146760662 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.147279262 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.149303046 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.147820829 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.147146607 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.150398558 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.150407232 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.15015581 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.150643826 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.150916532 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.147584969 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.15075166 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.147979341 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.147670848 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.150107556 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.151226738 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.148689001 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.148033212 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.151472895 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.15043545 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.148563788 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.149319631 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.1480395 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.148231143 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.14802408 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.150920167 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.148380337 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.148681478 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.148628519 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.148706113 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.151552762 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.148816853 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.151431086 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.151530487 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.151532172 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.151625084 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.152032524 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.149411019 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.152107004 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.151687474 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.14915378 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.151614012 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.149619383 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.150946597 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.149694372 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.149794361 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.152290234 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.152747203 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.151914594 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.152493199 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.152723389 seconds)
  done (took 64.332473962 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.15291645 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.152519008 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.150293807 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.152416315 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.152932931 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.149969959 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.152607436 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.150058912 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.150329018 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.152353813 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.15114411 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.152211127 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.150488424 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.152961719 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.151279842 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.152975424 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.149963849 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.150803883 seconds)
  done (took 21.817599631 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.151423682 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.151402019 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.152997212 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.150895572 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.150490702 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.153415934 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.150570138 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.153684761 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.153508848 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.150851017 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.151204284 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.15330004 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153515409 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.15421664 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.151913793 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.151771414 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.153796247 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.153755834 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.151999187 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.151409251 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.154669733 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.15432916 seconds)
  done (took 26.446220126 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.154097312 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.153106943 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.170782472 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.195467503 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.181937979 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.153203766 seconds)
  done (took 8.100350532 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.152320033 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.154855989 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.152182105 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.154896018 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.154687198 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.151400891 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.152085567 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.152125099 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.154493732 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.152782226 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.15165417 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.154669686 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.154578374 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.152998774 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.154504805 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.154509953 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.152506855 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.152731525 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.153492736 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.156185237 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.15359333 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.155377873 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.153115481 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.152664248 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.152933145 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.153660408 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.155443056 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.153794757 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.153471047 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.156464357 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.156416844 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.153413855 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.15637853 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.154335503 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.157115992 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.156665274 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.153405676 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.156780185 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.156588128 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.153598051 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.157325698 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.156791318 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.156362502 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.154577522 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.156275126 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.154139775 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.154867025 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.154875695 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.154267709 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.15699318 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.156525778 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.15414832 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.15668615 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.15679315 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.156657643 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.157603185 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.15440817 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.154376552 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.157374464 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.155695342 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.154118739 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.157298712 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.154578232 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.155715623 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.157452034 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.154646334 seconds)
  done (took 77.309293859 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.154700065 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.155309742 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.155475454 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.155988092 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.155117523 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.1556708 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.154994535 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.155598014 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.156045162 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.155030805 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.157817095 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.155726624 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.155762299 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.155520952 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.155021851 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.155663061 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.156165563 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.155706394 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.155092418 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.158698017 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.155714738 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.156201165 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.155697125 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.155624627 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.156187977 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.158557751 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.155741702 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.156225047 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.156194994 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.156502153 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.15551135 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.156069374 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.156739722 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.156773843 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.156330038 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.156450649 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.15706917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.15713902 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.156923481 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.159849305 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.157470634 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.159821554 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.157234204 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.157056978 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.15683755 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.157497179 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.157255367 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.157425795 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.15744622 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.15746582 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.159333895 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.157370348 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.158708284 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.15785046 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.158014102 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.157500993 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.158208024 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.158002467 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.157403344 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.160323381 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.157947237 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.157959119 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.161190927 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.158048493 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.15901425 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.158584985 seconds)
  done (took 77.454724436 seconds)
done (took 1566.856092368 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.138809975 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.23530168 seconds)
  done (took 13.471501776 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.318505539 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.271716926 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.159070315 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.194055266 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.159558402 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.158175911 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.181325072 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.159997228 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.159102264 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.159378315 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.158991947 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.342138881 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.189247141 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.159854132 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.159975038 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.251962112 seconds)
  done (took 40.282328283 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.187336157 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.167522311 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.274264987 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.180721474 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.186822628 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.343860519 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.21805527 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.163790744 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.331018985 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.206426252 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.675137708 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.187740042 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.164612431 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.233115569 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.181877823 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.343302084 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.401659377 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.68161999 seconds)
  done (took 27.227590271 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.603182633 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.186550995 seconds)
  done (took 8.889066577 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.182355849 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.214766921 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.171457673 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.161755653 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.212538689 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.220332681 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.202330175 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.179205072 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.306302578 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.324187385 seconds)
  done (took 63.275719216 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.306662231 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.288911714 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.287568291 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.285277202 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.277428323 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.278705041 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.283651101 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.279723222 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.824919433 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.410165073 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.30179901 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.292751422 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.285145843 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.285171819 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.281809061 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.321729019 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.431865575 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.281404936 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.281346729 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.290852145 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.283432755 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.37685741 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.323758895 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.281047601 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.406680753 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.79629795 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.288371046 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.289924977 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.40677263 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.282620671 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.2852932 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.283153462 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.285375026 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.851507049 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.770109795 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.29198912 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.306946153 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.292841522 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.2801866 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.428848893 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.283916302 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.29074857 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.276015259 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.744086466 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.435913901 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.392166731 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.50421762 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.283626112 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.28505067 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.346155973 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.284182248 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.284626007 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.313812395 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.026837174 seconds)
  done (took 108.360871276 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.321785971 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.775229393 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.445879905 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.293613148 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.905812864 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.960472354 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.279850366 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.556561703 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.288121609 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.277153265 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.549630579 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.771937765 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.282896755 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.35317668 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.919919942 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.339332559 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.276971537 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.044155154 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.277922282 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.280189028 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.685854619 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293368306 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.293082999 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.542260749 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.316782538 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.736908083 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.674280686 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.716983195 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.282524943 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.278448856 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.728321252 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.286791055 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.326280729 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.279581493 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.545274259 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.620250906 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.596891809 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.283744234 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.276910283 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.277901673 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.300652413 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.724796075 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.608426457 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.277653004 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.278428074 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.73117079 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.278080619 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.282898119 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.282984093 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.478408216 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.207552996 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.279032777 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.67769405 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.279077288 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.545470546 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.324570131 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.319151697 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.757582268 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.278234321 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.332113048 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.312361948 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.279074314 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.283389258 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.278964968 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.280971675 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.614347647 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.562263989 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.286669952 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.616304062 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.725130188 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.280299649 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.788571535 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.142123272 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.288260305 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.3326647 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.281764718 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.849626446 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.756022329 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.291833497 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.279701793 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.599183633 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.283216697 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.556364949 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.293760733 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.279439323 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.697725189 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.302770602 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.331341855 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.280478878 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.28101299 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.901581651 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.282602857 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.543144617 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.321508086 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.279990554 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.281219479 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.328059982 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.281776303 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.281222376 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.28405072 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.792234513 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.287668778 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.419592663 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.300974291 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28154875 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.281181806 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.281229273 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.280759962 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.498432049 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.767366085 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.286501985 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.282898014 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.282179718 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.288111836 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.51370273 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.287994705 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.576185899 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.283908122 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.284761669 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.30151801 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.99401046 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.317576289 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.281923435 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.28596923 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.134904302 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.489502522 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.299465596 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.283246216 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.284374591 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.302353697 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.644219684 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.283770511 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.367870721 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.284518566 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976947017 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.325291934 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.287175794 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.866426665 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.290443844 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.282663314 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.291940826 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.283041087 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.585498484 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.552888727 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.490261067 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.286952898 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.283033837 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954165947 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.317978414 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.43268688 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.302435497 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.270756663 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.480305162 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.522667598 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.284340395 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.85135265 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.283134169 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.49532712 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.283343551 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.614933731 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.759193472 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.284288365 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.287953832 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.97287433 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.944383038 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.102463802 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.285157942 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.556159096 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.29331238 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.729240796 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.285157718 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.28464338 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.729460041 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.28453031 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.290835473 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.285868313 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.285533551 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.428061629 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.459807914 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.484242554 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.285455449 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.73232278 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.284550737 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.285033191 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.287878456 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.284711974 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.640675808 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.36879552 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.287691429 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.326101782 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.285466997 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.290705937 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.74510903 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.183568567 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.284990336 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.440705835 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.907194294 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.288436953 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.286460679 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.939150314 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.547414943 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.821418485 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.318514624 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.584433298 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.295241568 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.325928742 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.852546481 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.340544363 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.746616736 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.288262693 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.290765097 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871791771 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.288055055 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.409595095 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.286104148 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.286320514 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.800021319 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.287162003 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.291613518 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.658876705 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.289078917 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.532944643 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.286173027 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.319903033 seconds)
  done (took 1099.152034992 seconds)
done (took 1361.75614776 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.28900644 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.291118273 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.277886794 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.292075258 seconds)
  done (took 26.377670332 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.297089035 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.294787761 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.296663472 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.29484069 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.297446385 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.296290459 seconds)
  done (took 9.007684761 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.395847135 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.292644864 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.291536193 seconds)
  done (took 19.209354376 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.507049266 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.526050145 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.653645379 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.404070946 seconds)
  done (took 10.321470456 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.295760288 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.295789344 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.296613735 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.296770319 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.297934 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.299778651 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.297241311 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.297513841 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.300292201 seconds)
  done (took 12.907976903 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.170081921 seconds)
done (took 84.222795883 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.181542286 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.376956254 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.388179391 seconds)
    (4/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.279868484 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.542995248 seconds)
    (6/309) benchmarking ("sort", BigInt, false)...
    done (took 6.304550644 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.347267359 seconds)
    (8/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.35476397 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.687574577 seconds)
    (10/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.334780532 seconds)
    (11/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.278447196 seconds)
    (12/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.373468207 seconds)
    (13/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.28981946 seconds)
    (14/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.65122683 seconds)
    (15/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.497106096 seconds)
    (16/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.540866016 seconds)
    (17/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.57962442 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.152087723 seconds)
    (19/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.418104477 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.425731171 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.300563553 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.924709611 seconds)
    (23/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.277364079 seconds)
    (24/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.656990453 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.277491499 seconds)
    (26/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.177232835 seconds)
    (27/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.878039732 seconds)
    (28/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.293328504 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.345415437 seconds)
    (30/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.873283082 seconds)
    (31/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.536294546 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.188591167 seconds)
    (33/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.308753605 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.763267166 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.294218613 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.395586187 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.541359504 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.401630716 seconds)
    (39/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.64993938 seconds)
    (40/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.650865384 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.614577038 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.405712322 seconds)
    (43/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.860663358 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.377080534 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.399419159 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.196123259 seconds)
    (47/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.305836005 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.109084729 seconds)
    (49/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.155232154 seconds)
    (50/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.364234208 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.72603636 seconds)
    (52/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.551025019 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.401897341 seconds)
    (54/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.663850343 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.574426527 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.293584134 seconds)
    (57/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.863419763 seconds)
    (58/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.379358255 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.36667946 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.766891729 seconds)
    (61/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.277901825 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.353473263 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.291552371 seconds)
    (64/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.597961159 seconds)
    (65/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.35730039 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.554868488 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.077398533 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.88774654 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.320218324 seconds)
    (70/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.89451085 seconds)
    (71/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.036820593 seconds)
    (72/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.562526634 seconds)
    (73/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.302410812 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.696916585 seconds)
    (75/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.896715212 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.270089867 seconds)
    (77/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.81507555 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.858145624 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.520632804 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.279364412 seconds)
    (81/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.66666997 seconds)
    (82/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.841938273 seconds)
    (83/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.454558905 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.308625826 seconds)
    (85/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.871639385 seconds)
    (86/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.379535145 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.113242582 seconds)
    (88/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.098959912 seconds)
    (89/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.281964148 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.489817129 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.296391567 seconds)
    (92/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.295496948 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.520622286 seconds)
    (94/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.597450524 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.298005042 seconds)
    (96/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.788678475 seconds)
    (97/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.6375984 seconds)
    (98/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.719070502 seconds)
    (99/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.297812137 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.717607631 seconds)
    (101/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.337329676 seconds)
    (102/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.549859211 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.796333352 seconds)
    (104/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.280690545 seconds)
    (105/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.874697855 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.137304339 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.565747304 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.710943936 seconds)
    (109/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.041728277 seconds)
    (110/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.926441374 seconds)
    (111/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.359508084 seconds)
    (112/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.314475632 seconds)
    (113/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.321955127 seconds)
    (114/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.61208877 seconds)
    (115/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.280641319 seconds)
    (116/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.111934689 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.501104131 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.321653906 seconds)
    (119/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.292473297 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.750033473 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.298714226 seconds)
    (122/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.412795785 seconds)
    (123/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.354972198 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.281141733 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.927693838 seconds)
    (126/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.322222918 seconds)
    (127/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.440391874 seconds)
    (128/309) benchmarking ("sort", Int8, false)...
    done (took 4.326413879 seconds)
    (129/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.401012122 seconds)
    (130/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.382887422 seconds)
    (131/309) benchmarking ("sort", Float32, false)...
    done (took 5.295461709 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.803028971 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.319578811 seconds)
    (134/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.548812298 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.574668488 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.296801785 seconds)
    (137/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.917178585 seconds)
    (138/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.284882947 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.07407296 seconds)
    (140/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.024482659 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.572947362 seconds)
    (142/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.421226814 seconds)
    (143/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.896019577 seconds)
    (144/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.299223402 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.292721981 seconds)
    (146/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.324011939 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.404760247 seconds)
    (148/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.731156966 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.317907102 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.144486295 seconds)
    (151/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.496183992 seconds)
    (152/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.083053722 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.36553903 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.314745003 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.04191927 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.640353631 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.324188566 seconds)
    (158/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.15022199 seconds)
    (159/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.303422633 seconds)
    (160/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.326174724 seconds)
    (161/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.36191275 seconds)
    (162/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.641039902 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.29994345 seconds)
    (164/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.90364262 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.791466796 seconds)
    (166/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.380957928 seconds)
    (167/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.615754208 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.322064851 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.199252677 seconds)
    (170/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.418677502 seconds)
    (171/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.423036149 seconds)
    (172/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.629281759 seconds)
    (173/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.4064874 seconds)
    (174/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.669929874 seconds)
    (175/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.045664519 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.660143206 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.070996142 seconds)
    (178/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.054333105 seconds)
    (179/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.485982116 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.302174322 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.151822775 seconds)
    (182/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.317161209 seconds)
    (183/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.073612364 seconds)
    (184/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.610643842 seconds)
    (185/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.354566238 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.215698996 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.795372103 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.299375891 seconds)
    (189/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.487910026 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.326325273 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.728060368 seconds)
    (192/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.50623868 seconds)
    (193/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.406196828 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.349652534 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.382939515 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.050189756 seconds)
    (197/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.511912532 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.954804184 seconds)
    (199/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.421448024 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.34257037 seconds)
    (201/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.303772633 seconds)
    (202/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.658187542 seconds)
    (203/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.726109095 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.684788821 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.416563063 seconds)
    (206/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.664184777 seconds)
    (207/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.347609274 seconds)
    (208/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.309367399 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.377263307 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.324652741 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.028447566 seconds)
    (212/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.38565194 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.296298958 seconds)
    (214/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.38599226 seconds)
    (215/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.300887635 seconds)
    (216/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.357747703 seconds)
    (217/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.31326805 seconds)
    (218/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.877767858 seconds)
    (219/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.470693393 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.015909373 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.846512231 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.510717742 seconds)
    (223/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.326488528 seconds)
    (224/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.930313055 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.933327591 seconds)
    (226/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.292375629 seconds)
    (227/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.379008791 seconds)
    (228/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.503479393 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.286277731 seconds)
    (230/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.355130482 seconds)
    (231/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.423116617 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.301129452 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.324576052 seconds)
    (234/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.535946493 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.289142305 seconds)
    (236/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.907218302 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.319586937 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.346081284 seconds)
    (239/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.438652975 seconds)
    (240/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.737482726 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.302825712 seconds)
    (242/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.285624663 seconds)
    (243/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.416586485 seconds)
    (244/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.31705537 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.301948043 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.747024207 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.678732342 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.140246322 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.315013517 seconds)
    (250/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.325998544 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.302738933 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.352651111 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.048032655 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 5.575613182 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.351924182 seconds)
    (256/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.327100537 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.335618278 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.815510977 seconds)
    (259/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.343227447 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.117904304 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.309619824 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.174946117 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.511235583 seconds)
    (264/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.34289664 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.32513916 seconds)
    (266/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.312121459 seconds)
    (267/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.544544957 seconds)
    (268/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.41045192 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.305073278 seconds)
    (270/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.746415607 seconds)
    (271/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.343621299 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.952161575 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.65857672 seconds)
    (274/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.383325739 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.476027616 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.379586203 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.694164649 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.303347746 seconds)
    (279/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.142895678 seconds)
    (280/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.87306892 seconds)
    (281/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.96702451 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.291021074 seconds)
    (283/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.6523501 seconds)
    (284/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.612171139 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.298733137 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.397076894 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.151447317 seconds)
    (288/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.321910015 seconds)
    (289/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.488328368 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.388918066 seconds)
    (291/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.303766804 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.76836054 seconds)
    (293/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.454623878 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.422230239 seconds)
    (295/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.298376635 seconds)
    (296/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.826218746 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.545190412 seconds)
    (298/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.689082185 seconds)
    (299/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.304528766 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.8309493 seconds)
    (301/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.401171124 seconds)
    (302/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.089391578 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.347031187 seconds)
    (304/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.72753875 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.671314459 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.657934228 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.342388404 seconds)
    (308/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.314223766 seconds)
    (309/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.77328192 seconds)
  done (took 913.853290586 seconds)
done (took 915.085255542 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.342386874 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.332713463 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.319077204 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.341751005 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.428714111 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.351635348 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.330511028 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.322568946 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.368098678 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.369419203 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.316086396 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.351611752 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.318172852 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.317252382 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.319674094 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.331174941 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.350201167 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.32045034 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.33447312 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.329064437 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.334521831 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.317225474 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.371199369 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.352229789 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.325807236 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.324254067 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.321243352 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.337072602 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.430034662 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.321438156 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.324278874 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.328888966 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.352969153 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.321868817 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.316251014 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.338380097 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.329763842 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.330952916 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.325064873 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.350330624 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.714474119 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.317807621 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.320701609 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.321879868 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.322985496 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.32706256 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.319612977 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.329221051 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.331669567 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.332446899 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.703529392 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.333830257 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.322305028 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.323228608 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.334038803 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.319699637 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.325975173 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.335256145 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.338107267 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.335466383 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.349428254 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.329535385 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.324929992 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.336283572 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.326962458 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.743756152 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.318537732 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.327880836 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.717365611 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.32853898 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.746451227 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.329176468 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.324516695 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.334074834 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.352372339 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.358572973 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.320273424 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.323470223 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.328976385 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.319157176 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.333774318 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.333102124 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.328528782 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.324891072 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.33442405 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.355555343 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.334561129 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.322967574 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.333361025 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.343033069 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.329922574 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.333203576 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.327860697 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.321255602 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.334831718 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.328614965 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.325877826 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.32520777 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.329171422 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.336474705 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.719717889 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.33965389 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.321846477 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.32253745 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.32457826 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.33562233 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.722345113 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.324404272 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.347193737 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.373716813 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.327445818 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.348900795 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.326953076 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338047291 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.334497854 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.328953794 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.323082627 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.315049958 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.71512406 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.337476474 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.327267239 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.322414502 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339242225 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.328534866 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.322317011 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.326724748 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.327167857 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.336962433 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.444109316 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.336992861 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.355822163 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.322121102 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.32991181 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.35472508 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.339397308 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.355012159 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.329171691 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.339019842 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.339131038 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.324010015 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.335453912 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.337928435 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.328757105 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.333067234 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.322134095 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.354687878 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.336296224 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.336849795 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.348559034 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.44489514 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.325032384 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.317082199 seconds)
done (took 223.338271222 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.384482268 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.318237118 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.408077596 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.321665141 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.422877497 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.421996747 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.31907398 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.320323931 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.320006638 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.705328216 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.319740094 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.321023726 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.322010368 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.321144058 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.406418935 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.322440518 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.319973256 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.666564929 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.322878888 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.393317107 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.317693204 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.320724314 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.323610275 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.705405985 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.315248877 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.320204966 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.39363337 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.322327367 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.672692236 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.315847596 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.31924244 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.669955269 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.413377399 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.33955709 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.334161575 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.330555732 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.423855458 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.340743376 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.404544735 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.404856539 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.409731434 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.360853598 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.316715641 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.315431938 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.325247699 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.324605026 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.322031445 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.360162948 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.321342151 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.32249169 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.672036694 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.333014704 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.331540243 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.321648412 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.322668533 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.345546501 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.324533891 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.325889163 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.416166586 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.325869186 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.38766516 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.708931765 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.705934278 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.324081379 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.325276519 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.322152255 seconds)
  done (took 147.774279081 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.394107438 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.39962686 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.436281747 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.325710242 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.378594722 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.441292008 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.326034445 seconds)
  done (took 10.958947658 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.331306938 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.325061714 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.37615775 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.376159699 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.325784751 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.473533548 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.325996422 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.337327527 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.32284583 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.378992363 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.326936978 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.32614146 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.332448195 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.317455321 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.37510986 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.338219585 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.441410445 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.327053958 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.327628357 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.482446666 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.331767426 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.322967832 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.378061611 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.338239245 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.327341135 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.33239398 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.892863344 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.327329976 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32463968 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.327833822 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.325141646 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.365155764 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.327220807 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.323718067 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32490407 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.445348128 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.327792491 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.324848517 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.327876976 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.323877978 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.327823844 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.327769342 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.328772909 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.325619107 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.326974888 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.351765107 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.328351531 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.327895289 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.328823567 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.329402163 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.379614242 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.327800573 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.325344618 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.325588985 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.384955672 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.33621854 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.329264239 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.326086129 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.328557775 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.32613906 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.486142867 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.378302057 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.329144263 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.378454826 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328221631 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.329411239 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.329076578 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.329724679 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.38574824 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.328572768 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.378746902 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.32714259 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.484136388 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.352449144 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.329619431 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.332685473 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.332128657 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.32921734 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.325056022 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.336121545 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.326087746 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.330673152 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.336314406 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327658109 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327633434 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.432693396 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.439902928 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.326924889 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.343406258 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.33759457 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.326388946 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.3837939 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.330210218 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.32785002 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384836403 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.444097938 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.383854773 seconds)
  done (took 152.681438185 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.335429567 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.338547208 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.331997177 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.347050485 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.331225321 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.330755305 seconds)
  done (took 9.278678244 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.333789397 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.331856279 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.331733618 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.330145607 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.332539007 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.33191095 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.333446528 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.333367999 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.335094232 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.332391512 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.331510076 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.332839635 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.332450643 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.332768118 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.331731672 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.331655421 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.33238016 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.329070231 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.331145954 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333095835 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.43637803 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.332144902 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.332075423 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.333934015 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.336335486 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.33195932 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.339926161 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.332034902 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.332722088 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.34130802 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.335066569 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.332455938 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.334582926 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.338516361 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.337064059 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.334714416 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.336949468 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.334739902 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.329393907 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.333713594 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.334696652 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.334057571 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.33285741 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.335181079 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.336510712 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.339774431 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.339396591 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.341046185 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.333673772 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.334131066 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.336069056 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.334999207 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.334714614 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.335569297 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.339019225 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.338665634 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.339070153 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.334772985 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.333429013 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.33582792 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.336475807 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.335850616 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.336589721 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.338795965 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.332974669 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.336055096 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.337676819 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.339652738 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335501767 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.335145707 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.337728398 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.333020516 seconds)
  done (took 98.466491443 seconds)
done (took 420.413648463 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.66690903 seconds)
  done (took 7.93428163 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.396883319 seconds)
  done (took 7.66576926 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.818713253 seconds)
  done (took 22.091171515 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.366321516 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.441384534 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.33885525 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.334944324 seconds)
  done (took 26.752747898 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.759501292 seconds)
  done (took 8.027340525 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.328396841 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.333351557 seconds)
  done (took 13.931408336 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.333332368 seconds)
  done (took 7.602258326 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.767565747 seconds)
  done (took 8.040614133 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.344069077 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.342517357 seconds)
  done (took 14.22275203 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.313305916 seconds)
  done (took 7.582243154 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.339228549 seconds)
  done (took 8.608771042 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.331619947 seconds)
  done (took 7.601299585 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.385596954 seconds)
  done (took 7.653855099 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.185884462 seconds)
  done (took 9.454333113 seconds)
done (took 158.436846374 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.329022311 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.332009474 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.33436493 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.331774985 seconds)
  done (took 26.595019821 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.371032384 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.370204159 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.371838424 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.381382762 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.373904178 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.374292317 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.362731472 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.362670419 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.382284326 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.373320015 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.371767146 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.374026598 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.370220016 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.363676825 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.373431742 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.372950591 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.382899162 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.372454445 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.362464259 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.375273452 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.339103232 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.381995732 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.374964418 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.338103378 seconds)
  done (took 34.148954943 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.537556405 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.411248509 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.492394638 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.407203447 seconds)
  done (took 7.118148322 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.389746498 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.391382146 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.402421115 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.442385306 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.508690307 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.401066117 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.361787308 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.359883048 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.346546741 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.391404019 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.46686069 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.408069256 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.47594594 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.337887005 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.521394917 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.338270647 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.338119834 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.390472403 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.442542219 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.456091476 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.339085435 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.390980175 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.395646225 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.409637664 seconds)
  done (took 34.977056991 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.336956891 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.346082061 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.344633117 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.338165258 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.33834238 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.339439084 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.343791729 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.338855671 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.360189747 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.34002132 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.337372457 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.338352262 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.337628647 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.338834478 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.338451131 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.351612134 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.352647675 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.338891271 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.342615723 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.34507959 seconds)
  done (took 28.120428463 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.332346992 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.187765353 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.684960968 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.590540373 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.33315068 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.333299533 seconds)
  done (took 27.73460697 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.41154111 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.540443453 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.340783346 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.705485517 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.78800821 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.34246926 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.340628128 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.573536898 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.890973926 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.8912311 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.399389204 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.406555967 seconds)
  done (took 19.904430771 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.337728203 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.336060353 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.346314001 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.35215709 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.395125954 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.345103726 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.347240987 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.333973242 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.398532808 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.40022628 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.344685357 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.396680136 seconds)
  done (took 37.608007808 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42281317 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.38503217 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.353186533 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.165331806 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.721922477 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548393755 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.213884147 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.785279583 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.34325453 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609378665 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336058441 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428715533 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594082768 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336051694 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.33760672 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.365019934 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563986457 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835742581 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338914234 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.342059884 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365689601 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.33601398 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.437307002 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.367004989 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.549954252 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.471273705 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.597222141 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337049815 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.620748527 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348344398 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347856099 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336263229 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611305283 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009090317 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429532769 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34747553 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.198164328 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.05868267 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.33106555 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.351106282 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.326957049 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342098007 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348134907 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337621401 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.272857037 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347319904 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79593237 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.346367161 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.04926824 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.338680791 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349176484 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432579346 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.34305988 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.156948592 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396625306 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339067627 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.335561446 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344535722 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90952301 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.854999637 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345383554 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.279071466 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.505271424 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.349446186 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953900185 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.442719348 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.343548052 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342748433 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.273372322 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.424372162 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361371103 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478315032 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.360965999 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.002964223 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082117883 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.356990298 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.271232276 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898433188 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344351603 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.277066089 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.569880923 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339775102 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28119728 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.284461086 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.276890647 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057544691 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349596311 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.749034272 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348121146 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.787348211 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.35425908 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357632157 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36427105 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.566075861 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.226510811 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339216995 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.354086024 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481293526 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36287899 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.781600723 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281561925 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.345994825 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597643011 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.553360908 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340847445 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.358612867 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549071931 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359859349 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.360724701 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.341979361 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.356215385 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.926791697 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357175033 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.88906789 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362185821 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341719387 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107694121 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342825152 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.464151806 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.351453704 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591567404 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.13468301 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343766971 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424970704 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345563634 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342129991 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.456511777 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.86769338 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.343886225 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.346097525 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351745792 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.356127949 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.34343639 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301835736 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.344801613 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345429086 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.344779013 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.568128037 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357510945 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.621170772 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278482997 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51768644 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.447512178 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.568035781 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.533431562 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.342346848 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604909697 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346943254 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35481372 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357351181 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36262631 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44162675 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365365454 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.343691566 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.60617849 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.347800036 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.347624209 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.44842211 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349168293 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806419286 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.349411383 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.238318757 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936690526 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322412981 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353638788 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.238135898 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.358799615 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409052514 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350062645 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.356312192 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.187415567 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308312016 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.351678141 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.346108778 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571227379 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.355964991 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.401705983 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426840559 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.544538815 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937224065 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360962768 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.279191369 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.056428465 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.038054274 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343775474 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.281094066 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345118113 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352954702 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355751369 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.665148987 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.930976233 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349715578 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.332247958 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.353570318 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356092453 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.350907393 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345089732 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.151141852 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.87008931 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354269425 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.359494723 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488199289 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.359642724 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.281292781 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.349165593 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350259211 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.344782865 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.346122514 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378130118 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.358507511 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836926164 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607559334 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.224699765 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357953624 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.521484935 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.379697317 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.347441669 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359687597 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349685706 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.367472516 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356219716 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.35768335 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.398479799 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.019981705 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913775131 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105408473 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900579575 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301251792 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.348495685 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.348563408 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.795136698 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285384211 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.908131353 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.537431131 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.79926007 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307851326 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552931869 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.532941265 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123184581 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361199734 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57836255 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.290571133 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.354636858 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361975959 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.560236718 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382488535 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350082329 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.279476208 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.873825626 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581382721 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349768973 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42783554 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802738225 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.354704738 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351215537 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.347759119 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.726093156 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527054236 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.065283929 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.528107237 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346927061 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365053396 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834549236 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358825543 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.579888469 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978395854 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360221206 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.555666398 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295119686 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.359980706 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.360064112 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.351262996 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.6859579 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.359818766 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.608408424 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360580878 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284167958 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363368551 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893539482 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.208146265 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.356503267 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348866569 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104606344 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358730105 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636020482 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.350930383 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.162913283 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358161456 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.284986808 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285635998 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.044044422 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.357436342 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320774989 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852846207 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.46090108 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.392011169 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375860173 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204378376 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.608516461 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.365358404 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944624897 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581403676 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.287670399 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374500091 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.451348826 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362519192 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.339603544 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.350569892 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.587739134 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237745571 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.578391644 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.397452408 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.264535282 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350526697 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567827551 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352316925 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360404143 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602843113 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.064822523 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.359600768 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106062785 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38076149 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360120898 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.278220842 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.517602969 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358923451 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431719794 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363817551 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.363707828 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.362241878 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529721239 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371783506 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357555197 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.367015543 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447280074 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.920970045 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.14738429 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.355787937 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952032771 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136619462 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.951280688 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372167716 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35346921 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351709395 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288808841 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502837405 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.585782993 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627181613 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473017103 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.566751503 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375367929 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366349939 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371535976 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569475688 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629009887 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.255021179 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353962336 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386020152 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.354410541 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365024396 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.566086397 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86641075 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912793173 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478302108 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367594733 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.797627957 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63039459 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35462998 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354603451 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.951925027 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.37019458 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.746910663 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.35992596 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366376333 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505890888 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364659947 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037256685 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.363722719 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.511467397 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.128104604 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.374301816 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.615218309 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.824901556 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.367075883 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952621465 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.068577862 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622947225 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421702345 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366404194 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.475503952 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506948809 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.353159724 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35968295 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355765464 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204596061 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.066317123 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.367396538 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954380954 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627807659 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.354725795 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.354938325 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382866562 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.368050413 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.582663256 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105683666 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583021245 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367848564 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363571622 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.176182421 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954562655 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374442844 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.291812631 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.361694231 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598321957 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594484313 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377311498 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.811586156 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.069424463 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924648271 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.333524264 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379998867 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358328255 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.068791099 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947468925 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.156770165 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861917992 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928523694 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360099833 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636356878 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.363627462 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364043437 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636752493 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.361627191 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372147542 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37410991 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.954027895 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143686771 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.3760215 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.397146416 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.299039695 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.707914056 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.053806492 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300948773 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369100763 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.548985017 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.364593646 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478907223 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371236508 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.363637821 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374369193 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.118664849 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.641334811 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.364552077 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.345043752 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.365227351 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.364415422 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368677559 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598352977 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369222436 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.035204473 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.712742566 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617825795 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.359692215 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.347019721 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.363792058 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361153809 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.359930932 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.567979186 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.682426217 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921945948 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.375907621 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.374691157 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364666179 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.578840314 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573423041 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.361862663 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.37362932 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373118549 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381764359 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.269409217 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.870031997 seconds)
  done (took 1603.943521445 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.408292152 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.368965312 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.374224583 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.425191931 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.380800428 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.46904452 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.374387077 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.463687645 seconds)
  done (took 52.562804826 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.373769049 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.58760034 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.392104475 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.368795128 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.374770792 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.363701978 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.809307399 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.371204998 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.374527332 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.370851384 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.370485028 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.37249552 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.026305296 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.370153212 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.361025807 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.364767977 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.36993658 seconds)
  done (took 65.927966284 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.362252827 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.435555321 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.471573258 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.362491168 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.525320074 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.380693683 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.448621582 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.384670295 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.392284815 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.378600666 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.038565004 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.366138794 seconds)
  done (took 79.847306782 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.369655231 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.369734849 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.370434505 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.370847779 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.369998165 seconds)
  done (took 8.151677807 seconds)
done (took 2027.909120068 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.74242164 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.083070213 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.064332736 seconds)
  done (took 5.448010078 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.51434351 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.56057728 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.683812434 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.708235126 seconds)
  done (took 7.769676818 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.640153081 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.733108659 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.5547709 seconds)
  done (took 6.228920769 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.795563633 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.371315552 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.43809433 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.362209882 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.365560705 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.368122538 seconds)
  done (took 20.398331662 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.367984463 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.371037655 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.367722649 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.370508108 seconds)
  done (took 6.781191359 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.348678663 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.106728586 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.352394828 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.368582002 seconds)
  done (took 18.478778671 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.113451051 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.125969505 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.111944168 seconds)
  done (took 7.652924597 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.370071162 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.211382124 seconds)
  done (took 9.884116581 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.720284759 seconds)
  done (took 3.023596721 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.499109944 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.632428864 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.401524497 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.337647561 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.422633101 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.291202786 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.050013484 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.597744499 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.324488579 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.595837296 seconds)
  done (took 28.4558226 seconds)
done (took 127.769368331 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.193332018 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.389408136 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.571352136 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.170325644 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.599119682 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.570966343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.867943262 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.139605657 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.677218336 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.667998324 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.172254004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.598733813 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.592458912 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.387730033 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.592970585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.38196025 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.600226122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.232518916 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.899894676 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.062606379 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.868175869 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.802297944 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.003655815 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.822250261 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.598962867 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.522441055 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.398090268 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.384266649 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.073926953 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.411934251 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.52264714 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.232066893 seconds)
  done (took 191.313613476 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.366634306 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.367019474 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.367069036 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.366924407 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.382143617 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.369525494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.368716191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.373995092 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.377225219 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.366870322 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.366350352 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.367165642 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.382798245 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.366360447 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.371282595 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.367011581 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.367629721 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.367139636 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.383230718 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.368354692 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.368944006 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.392068077 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.368084755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.367358148 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.38792749 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.367692067 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.366812517 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.379595499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.367261214 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.38984191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.368203942 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.367527713 seconds)
  done (took 205.211043671 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.367720932 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.369269206 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.385201062 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.368116904 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.376219619 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.370507034 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.368471491 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.388063745 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.376222852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.369907682 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.36739358 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.369017677 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.370372082 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.381655203 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.371210738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.378850755 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.372095929 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.369358337 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.369053924 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.400614631 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.372506927 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.394424948 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.369281663 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.368547939 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.368637985 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.370524955 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.382714965 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.383840424 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.375228946 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.369443425 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.370900967 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.385326204 seconds)
  done (took 205.308956676 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.573472445 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.376980296 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.37816486 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.334457977 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.377971607 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.378173403 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.37511304 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.56989218 seconds)
  done (took 14.672244071 seconds)
done (took 617.812553635 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.354786044 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.980725244 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.57970259 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.398289496 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.887218024 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.399541255 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.398223045 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.567007663 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.303090572 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.571599187 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.635453839 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.396951212 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.778341154 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.395315046 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.644696267 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.493011218 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.256620596 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.371228118 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.70686798 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.559255952 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.654454053 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.879784474 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.570576237 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.312346259 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.770841221 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.873636546 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.142124796 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.269293589 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.400310281 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.710838507 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.881070967 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.387873255 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.45645792 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.43911392 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.494203553 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.475518766 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.355273303 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.435988536 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.581694089 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.636143129 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.561434917 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.116522995 seconds)
  done (took 97.393722562 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.368156089 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.367922947 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.366622733 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.368449642 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.369714952 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.369058285 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.367762697 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.367568276 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.369582511 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.367488234 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.368556935 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.369667165 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.367749312 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.369570971 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.367730627 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.368638462 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.369494102 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.370944769 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.368800341 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.367623366 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.36956257 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.368453362 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.369989264 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.368937411 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.36923378 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.368847978 seconds)
  done (took 36.897775123 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.381540621 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.617266758 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.804435617 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.390216076 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.380855711 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.385776947 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.459794782 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.384236119 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.384535843 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.385114854 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.534061463 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.385605244 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.419607773 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.812582588 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.387018387 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.382269905 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.382376642 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.383063204 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.622102732 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.392247141 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.462654023 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.382991573 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.460276059 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.394289339 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.38646489 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.384915609 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.386667207 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.886026183 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.386421437 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.536381371 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.170651528 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.463073589 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.842309554 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.82102178 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.176129371 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.38843175 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.38436305 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.540613115 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.386190149 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.383349881 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.460998747 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.385808967 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.819718179 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.020637531 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.402487619 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.383418244 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.909901789 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.540337759 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.637822233 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.395838533 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.84090243 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.388745554 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.383984424 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.384210515 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.636622672 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.393032673 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.382638658 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.925773497 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.389196518 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.46141014 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.385279035 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.38366559 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.631658594 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.38393439 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.618639712 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.384051257 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.390984325 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.383895304 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.820338494 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.388652306 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.041726778 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.402724161 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.38217079 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.53741015 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.619790945 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.937673995 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.38972265 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.634970639 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.852826644 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.461506169 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.389552598 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.874239623 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.466907095 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.388146343 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.386311136 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.387435675 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.383714381 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.427420488 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.459569037 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.964363465 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.030583071 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.940499907 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.467457261 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.39860694 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.385731118 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.927759113 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.404616683 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.385108095 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.813749801 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.043679757 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.403676882 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.393872851 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.02749395 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.408828234 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.466899388 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.395776862 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.828038008 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.390797532 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.429594633 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.385782993 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.394008413 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.390185836 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.465466376 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.392671068 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.38628969 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.009490259 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.559111341 seconds)
  done (took 181.64400005 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.377997897 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.378967988 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.377660498 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.378006558 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.379388152 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.385490537 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.379632584 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.387898043 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.386022727 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.379582033 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.380777728 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.381918075 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.380100202 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.384060095 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.389463679 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.387077451 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.993906917 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.380338187 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.380680224 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.379871962 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.177916717 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.384370222 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.38061942 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.379175631 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.379395378 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.379371771 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.386374466 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.382576596 seconds)
  done (took 153.417362867 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.387558539 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.951671906 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.389499255 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.521617256 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.412702023 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.385315459 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.517620895 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.446239117 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.393460602 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.385852172 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.385096077 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.689460333 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.389880773 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.902661444 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.579805377 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.522115839 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.90208449 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.390179153 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.387007129 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.386808362 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.522122804 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.397168277 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.691440046 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.95399868 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.388844428 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.954921525 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.378785504 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.387989419 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.387858716 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.982712569 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.389077803 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.695053641 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.465927724 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.449704633 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.984405223 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.906929634 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.903949981 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.535077385 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.388820614 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.387427202 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.388913644 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.378296219 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.985829086 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.392786558 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.389992259 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.979168214 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.408619948 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.391033851 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.398769254 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.386993991 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.451191178 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.454581372 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.714917645 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.992826774 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.468544599 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.410612444 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.522349114 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.02330802 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.393385006 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.903920558 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.378550011 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.986926075 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.397334019 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.37888433 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.390813223 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.394797206 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.538795254 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.521750976 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.90514181 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.39251695 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.90645115 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.539905105 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.388563012 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.388873753 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.391890254 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.98628963 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.921510911 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.54340227 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.52393996 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.58674194 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.384081871 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.390747464 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.380444113 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.467801451 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.390081953 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.985349987 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.930262931 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.395616987 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.39290052 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.392712664 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.392249937 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.570101116 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.991123804 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.471073246 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.925228084 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.731588892 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.713215564 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.394207828 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.450136761 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.391079365 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.7154005 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.394842728 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.448409998 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.094469243 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.716125712 seconds)
  done (took 166.210060052 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.63475903 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.62573681 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.484358074 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.504349961 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.944922837 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.955566805 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.616479917 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.51935646 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.503883409 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.634795648 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.560850766 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.481691519 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.575275891 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.467491208 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.322591779 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.459606037 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.483898004 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.512966127 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.501918908 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.462927382 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.169853361 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.687034624 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.56251016 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.483573197 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.487689275 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.15966365 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.941622391 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.90552969 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.559238924 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.675764039 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.130034556 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.538920512 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.426069559 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.058106845 seconds)
  done (took 67.368662816 seconds)
done (took 704.239268726 seconds)
SAVING RESULT...
DONE!
