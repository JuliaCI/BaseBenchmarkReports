cset: moving following pidspec: 352
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.289000498 seconds)
loading group "string"... done (took 0.5863079 seconds)
loading group "linalg"... done (took 7.185387088 seconds)
loading group "parallel"... done (took 0.170135229 seconds)
loading group "find"... done (took 1.139572842 seconds)
loading group "tuple"... done (took 1.993800512 seconds)
loading group "dates"... done (took 1.29463052 seconds)
loading group "micro"... done (took 0.239655257 seconds)
loading group "io"... done (took 0.966803829 seconds)
loading group "scalar"... done (took 38.66885059 seconds)
loading group "sparse"... done (took 12.358195104 seconds)
loading group "broadcast"... done (took 0.965235724 seconds)
loading group "union"... done (took 13.160775355 seconds)
loading group "simd"... done (took 4.432725804 seconds)
loading group "random"... done (took 8.973627021 seconds)
loading group "problem"... done (took 1.955784882 seconds)
loading group "array"... done (took 21.09967147 seconds)
loading group "misc"... done (took 1.918035412 seconds)
loading group "sort"... done (took 3.198426875 seconds)
loading group "collection"... done (took 18.032347991 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.530197816 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140542291 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116549665 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.137512523 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183225698 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.130784878 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143569697 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084446584 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.066628421 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163936344 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137945956 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.477006557 seconds)
done (took 5.067797431 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.201862256 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086181483 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095134768 seconds)
  done (took 0.884653078 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066082462 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125821915 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080158653 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067484325 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065826823 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080169297 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066602958 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065394386 seconds)
  done (took 1.263011357 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073255126 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06775082 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083418207 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067433527 seconds)
  done (took 1.003487368 seconds)
done (took 4.141029376 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.893355172 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.231998484 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187550684 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.451766498 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147982509 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.186625569 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675588484 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.304946422 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.208782104 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100382283 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104233795 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.377352447 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106116321 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670676929 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074916175 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.104555802 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.163130501 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.405220876 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080935162 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08229741 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102557129 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140337936 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100283308 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076470448 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167731754 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068466788 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147153001 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094767617 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067732327 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.241556129 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189431663 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.700282935 seconds)
  done (took 10.401389427 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099366662 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115167548 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068483929 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138209853 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100293511 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084964263 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070698606 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.081628926 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090043629 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.156127436 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11277629 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.103851103 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080035464 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068511946 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099081363 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210304666 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.105166083 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084540757 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085450564 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074528175 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119685666 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080954639 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092475097 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077297476 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.149646599 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194027383 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111329188 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110576873 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068031452 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079039094 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130341564 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13924878 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064567281 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079848891 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.137797282 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.108660085 seconds)
  done (took 4.494951375 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.019628888 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1577699 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089918422 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150748183 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084410143 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083857741 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.125833406 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.079866023 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097732216 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.230575114 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.069402873 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.112567041 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.467066088 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110815813 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099930648 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066689257 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083722476 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063541559 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065217701 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.525530689 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108958947 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134923317 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082959168 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090368678 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083815886 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.696681033 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081861529 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065573019 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083476117 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058689482 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.142987396 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067568647 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.206758053 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087971267 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086443363 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100626289 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192028809 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094135965 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122579022 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065445004 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080856217 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167368353 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074485223 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065006288 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104837757 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117892853 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104206982 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082941397 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067010664 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179934157 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066623255 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097667137 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.863480115 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164958697 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076077677 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066356788 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284977828 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083664506 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083585121 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064098065 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.246537549 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.151328459 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06634635 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086815131 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066663889 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066663983 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381216955 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067252667 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.781731335 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070900008 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075806189 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084263483 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066479243 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087592219 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071466494 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100079136 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064611933 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065432901 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08405665 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065889531 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079792733 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06853602 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.098927031 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202179759 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066675488 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065279778 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081000954 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085218899 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111187978 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069499376 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080325731 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099418189 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082154461 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06662862 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117904796 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066165573 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.100273942 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08373788 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113521246 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080703814 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.1094882 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067589478 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111071933 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.075609557 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113356921 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09265413 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0671412 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152110629 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064145711 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080483504 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.06686611 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064379395 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.0836689 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067759646 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096513289 seconds)
  done (took 21.063112176 seconds)
done (took 37.690617258 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.289232581 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08981302 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.090500456 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073752259 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090738019 seconds)
  done (took 1.418746789 seconds)
done (took 2.178318609 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118464364 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115674635 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063457141 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111275347 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06329223 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115461084 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112441742 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080141137 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114167422 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066404034 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110348014 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064042445 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063210318 seconds)
  done (took 1.983242001 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081765507 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084053707 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08406447 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081615151 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0774705 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081616528 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07916918 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102930728 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.078606325 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087170986 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063189319 seconds)
  done (took 1.656948161 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081052436 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082987813 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084267306 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080438519 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077711953 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081382975 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080085348 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101001598 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0806413 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087838512 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063481186 seconds)
  done (took 1.658398542 seconds)
done (took 6.048374453 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077496746 seconds)
  done (took 0.826551859 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.692860862 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.463542859 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081807829 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133163184 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.219849897 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153874453 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.433970216 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.108225665 seconds)
  done (took 10.209153412 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.101447004 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.084987937 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.0706212 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087679713 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071539722 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085779148 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067796075 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068439129 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.082790597 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07074662 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085461854 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.06852083 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085894426 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069530291 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071265959 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083704714 seconds)
  done (took 2.075732671 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092107421 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091897884 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09063621 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074445293 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088683955 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072062345 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.089965227 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072827995 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086218506 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072340964 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090799164 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073765839 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.086844855 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065156773 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089700112 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076660515 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086205441 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075369934 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090793142 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075445441 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089852622 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064869238 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087141316 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074700445 seconds)
  done (took 2.819532768 seconds)
done (took 16.688003975 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.130155355 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074908315 seconds)
  done (took 0.962421278 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080370294 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.096941488 seconds)
  done (took 0.942694056 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082118345 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.079400966 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088842538 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.091842464 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065829204 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080428462 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.102300952 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065071513 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079907344 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065610686 seconds)
  done (took 1.565981062 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06748024 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092358524 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070025828 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096580319 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073169365 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079449379 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07247721 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082878522 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077417621 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077393019 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071049941 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097885852 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070284388 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099217535 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071458998 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083167231 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085111963 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066956499 seconds)
  done (took 2.201583035 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065339169 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066108485 seconds)
  done (took 0.898927106 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065820778 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063564056 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08107669 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066649594 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078226144 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063165455 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078561202 seconds)
  done (took 1.264668504 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396512201 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108019447 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.240524123 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086499433 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102380281 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259670112 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082211184 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070465909 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086752625 seconds)
  done (took 2.237698921 seconds)
done (took 10.83921376 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078904273 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084984537 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109324886 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415553771 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104909168 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065564291 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.130538288 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.216689431 seconds)
done (took 1.97666493 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.123407068 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.601602414 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.395013186 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209970317 seconds)
  done (took 1.982238539 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.366761669 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090317939 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072894015 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.0660367 seconds)
  done (took 1.375233152 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064946027 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06891452 seconds)
  done (took 0.912409374 seconds)
done (took 5.168286407 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06616189 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.101475935 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065425074 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063963686 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083020053 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062975158 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063124704 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.0825091 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063208043 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065737267 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080170803 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068461616 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078488081 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.065567087 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065199542 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078479563 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062701201 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065324197 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078292282 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063031585 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063195254 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081337837 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064020437 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063267817 seconds)
  done (took 2.505656578 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084760806 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.081965213 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071526592 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086617232 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070190025 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08684612 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070352063 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066378946 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.08630094 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068329872 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085782028 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069256991 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083199997 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070204804 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083314768 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069434869 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087226724 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06917175 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068862927 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.084873541 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070856558 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081285073 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070300883 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086942926 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069776445 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084907132 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068018807 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.081860899 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071029508 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085527833 seconds)
  done (took 3.097044234 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069495554 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063245038 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079227529 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070286021 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063662875 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080153649 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063435453 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079187214 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064631112 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063369388 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080563672 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06303345 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063106641 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.079844392 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064671729 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082448449 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.07927535 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063344375 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.078847136 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063553861 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065909437 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078305225 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063501278 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079260648 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062963714 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062804992 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079317673 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063511876 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064271237 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07965417 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066566806 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066659377 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079035535 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069650314 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082832222 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063383813 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067065704 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078339696 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064775388 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062445266 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078360098 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062510491 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062801903 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085619582 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063876896 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081877029 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063638716 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064961231 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079302273 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066066545 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079655072 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062805869 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06517702 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080806068 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067058072 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064531619 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08030098 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063561396 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079664068 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062848482 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063103337 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078657129 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0657046 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063966035 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094114816 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070417588 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.078828621 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065044854 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064795567 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081571668 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066026938 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077431083 seconds)
  done (took 5.883552869 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116037941 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090995274 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082253872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06493948 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078184809 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064121024 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067773719 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079208882 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065401971 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085486393 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064093562 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065160912 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081064592 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076178486 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079679168 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065679575 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085324056 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061952881 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064039508 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.08301113 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064732178 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083008796 seconds)
  done (took 2.45567732 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.183781656 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086982518 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10879813 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089209966 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083743097 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072875902 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069294899 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085318759 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069999994 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083116778 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06876811 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08566149 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067318935 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083417599 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068117115 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084267919 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070070494 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083970393 seconds)
  done (took 2.331129959 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077322913 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065654679 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105091239 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066215484 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082945929 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069197553 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087076836 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074775326 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084991811 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066105061 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090185968 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068672716 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083838642 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065965648 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068773559 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081888614 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068257927 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081586702 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074518782 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086602206 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071193585 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090037114 seconds)
  done (took 2.49904982 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080288377 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067994429 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099873996 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084479804 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061846332 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064537375 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088630647 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066416994 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087806154 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067528846 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066437653 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081127915 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070497928 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081838784 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070180938 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081948472 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068333474 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066052462 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083442124 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062001599 seconds)
  done (took 2.290745764 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086812762 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082851953 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066629989 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091350191 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066688024 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08356681 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075127114 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083368102 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067196543 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106450377 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067408919 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085229178 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075192846 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087574747 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067555207 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090499375 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074579785 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091808389 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067022462 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083320816 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.215776165 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067338417 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091700112 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067824747 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082977388 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067322381 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06695571 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087574493 seconds)
  done (took 3.1418095 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066269854 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066052662 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079917023 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063805495 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063471538 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080274854 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063842239 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064105831 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082517966 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063499783 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065888042 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.081355094 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066085918 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08258157 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066050421 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066214677 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081830699 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064414993 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064540275 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079928534 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066121209 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065544873 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081610146 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06447292 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079848005 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065878836 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064108514 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079271023 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066378949 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063601776 seconds)
  done (took 2.904903803 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076077061 seconds)
    (2/2) benchmarking "in"...
    done (took 0.089847666 seconds)
  done (took 0.963398352 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063428022 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08014996 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079417024 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069442847 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086475903 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067221532 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089876305 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070129909 seconds)
  done (took 1.400067435 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081296167 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076532846 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083394303 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077689191 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093024663 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082411109 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.151928273 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083762327 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072129765 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081190976 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079618817 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065180039 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089364158 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066560859 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088274578 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072346555 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06491518 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088094523 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069070615 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081147284 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06814537 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090740217 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068531978 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063064118 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085050901 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.074788654 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093791757 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06787179 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08566634 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074123362 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071726916 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077465413 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067013465 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083815797 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064900694 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093044373 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080743493 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085674455 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074918843 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0677503 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092744478 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061765078 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087450299 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072593634 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093193804 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066781015 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06730127 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078096823 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065644196 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085305712 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062524309 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06712852 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077706551 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073493138 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.086897977 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076690606 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067494558 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085230482 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070042436 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086355245 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072829255 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084703735 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069425281 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067472199 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091890741 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071292529 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091326067 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062476118 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060641823 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080522794 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07576918 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104618268 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072705197 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083673237 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06727669 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080715339 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069663699 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068370099 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08774599 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073398631 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083719791 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072486105 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090182298 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067431639 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06892938 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.090646553 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064744209 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08527442 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066027176 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098839029 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066076112 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081246952 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065386606 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077206728 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086535862 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067123309 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081524749 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072842431 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061349526 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083353083 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068272787 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083964289 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076721921 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088124357 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072165631 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091509432 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074225913 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067246835 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086579844 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064293486 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084253355 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065697866 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073369529 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077086013 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069374784 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084054012 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068167893 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074477357 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081296318 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066339917 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090210012 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072703217 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081359159 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06317903 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06938229 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08265533 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069636906 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090172543 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065179601 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061724635 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078278237 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070371975 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082728959 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070010414 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087469386 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069654828 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061246391 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081176973 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07118038 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091389334 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067405167 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067015095 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089456583 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068265411 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082264024 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073026407 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085611079 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065688943 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072811412 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083502042 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062420158 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086327893 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069199633 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065192642 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086760501 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069938881 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085436194 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067847911 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064666744 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087957446 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067191846 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082193444 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066923238 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081424521 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076299051 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068490035 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078873138 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064113863 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090007006 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065010125 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065543848 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082078594 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069536243 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084159901 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06503458 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065908101 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085214717 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076839259 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087780284 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067964648 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088290746 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077166539 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082751984 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068555685 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066258034 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084222804 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06812328 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091536725 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072261436 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087873698 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06913387 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063651645 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087639103 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073543506 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08252509 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063999405 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065555315 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085816295 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071883169 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086200973 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067521199 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081570306 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067590468 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069297258 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086089077 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06630404 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082132331 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070582078 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081406538 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072713885 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067255122 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093250868 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0694048 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.07862588 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070156362 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081516429 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072106641 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061801557 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081124422 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06570166 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08405704 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065725156 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06905837 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.07743493 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07330019 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090104929 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067282702 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065786262 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082767362 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073306267 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085168505 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070767229 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069320525 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089196991 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077093604 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08295465 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070398234 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094237337 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066918879 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061340696 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088295776 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06562464 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083050582 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065592074 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064646129 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086249382 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074815272 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089455811 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06150604 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085387416 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064762778 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065691532 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079020804 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07088152 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.085563038 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066882993 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073447185 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084204431 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067173117 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086949225 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066665257 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067240343 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084930663 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069377007 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083335637 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069688298 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065237932 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086062589 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066704399 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08096664 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067956448 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065954325 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082571804 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07253176 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083001025 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06651052 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06870588 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084111909 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067734586 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083323292 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066235912 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086273307 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066571463 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067098418 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085991402 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061730052 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072395756 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08322403 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073427637 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083967414 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063875813 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088529149 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068974796 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071516295 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084051414 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067497018 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085504591 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066891861 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085349636 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07355514 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064748198 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093856041 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07392069 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083981969 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070155917 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066223364 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085916649 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066114504 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084405646 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067539337 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06636328 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083150969 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071285478 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086344253 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066391543 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068002914 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084313912 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066837878 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084656611 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061144058 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065964865 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083013841 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06708286 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092597379 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067740817 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082885409 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065774075 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067602555 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082615678 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063860873 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091114932 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074462641 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084147021 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073506192 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065127479 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085489954 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076854642 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078219639 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065000044 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063680588 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081911772 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073904129 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083907277 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075869005 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.08293643 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.0653611 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063858872 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083998727 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065245927 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061149313 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080796497 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070695358 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082039021 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06517873 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06609928 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086251144 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067468474 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092764096 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066536273 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084355993 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067206116 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064179397 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082181043 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066277598 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086387199 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067127175 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064264035 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080383841 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066351102 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067143306 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084948493 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067818373 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084777749 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073694677 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06601788 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086486662 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070341981 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.0811411 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068947958 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083042327 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06609645 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066184357 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086493377 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070518419 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08481935 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074898067 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065770465 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084188781 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066183415 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081605216 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066357412 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06593326 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083854945 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065676354 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084775646 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074550771 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064660282 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087026324 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066373062 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083395418 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073020653 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08501829 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069066626 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090159287 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067006699 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068563116 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091009276 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070235256 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0865377 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06766109 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06747163 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089017653 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065971054 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089674132 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066688004 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083835781 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067744488 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064255445 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083633279 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066859198 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064880848 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089915071 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067138848 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083223569 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066137707 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063578294 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084545034 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070150778 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091308279 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069525019 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086098716 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061990094 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063652337 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084070728 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065321315 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085524308 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070120372 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072103779 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085944275 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066992541 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082795512 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075785425 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072239469 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08775828 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065178254 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087888744 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068122003 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085723669 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067684331 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067144181 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085265667 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071019462 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085553219 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066464524 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07434417 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086872016 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067221168 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085188097 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067287436 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066695472 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079092476 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068004119 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085477276 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071776123 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068891602 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084152314 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076200959 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081241292 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067185527 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087217931 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066797411 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071144892 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079213727 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068407762 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084717101 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067233132 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061843306 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082680856 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064597406 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085736674 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065809928 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062584128 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093955478 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075614682 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086712 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065899436 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065655487 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079398911 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062722884 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08298215 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067724373 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068685418 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09395799 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065693377 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082630967 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062048049 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066929304 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087094117 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.0695348 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081509226 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061745849 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065415066 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086658429 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072443631 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082392489 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066603614 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070058464 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08588652 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064854841 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087179663 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.0636221 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07040733 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096499363 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06755516 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084428126 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07261215 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091401781 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067409647 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079082662 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06706344 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070121859 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083890517 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068251933 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084734835 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081111101 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086804554 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066534699 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065970218 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087254347 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065979541 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092343222 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06749288 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06669357 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088431042 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068124612 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092576227 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069436754 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09120313 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070160919 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086826339 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.0657343 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067128184 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082277244 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066317007 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066815844 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085170122 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070352471 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.090966083 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065811055 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093906446 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075339105 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085596078 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063831056 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065753433 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083228658 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06285927 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085208065 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06450564 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064664404 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082539337 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065668125 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067214585 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089469254 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068228311 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084690525 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067202493 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060481872 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086501974 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069305927 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084846044 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063959033 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067225014 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084535356 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070467069 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087263182 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.0649535 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067917587 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085806678 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067796758 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080065029 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073205017 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065633148 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087074438 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066421793 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084497252 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06854617 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069507019 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08930833 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067531874 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086646756 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074985904 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086476958 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064951709 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063509928 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089113885 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064711512 seconds)
  done (took 45.855252678 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106271678 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081401545 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062528186 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080118004 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075222272 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081738334 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062590104 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062045501 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080965412 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065944663 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079301716 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062313765 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087977374 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085097408 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092056112 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06676141 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079348567 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063219423 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0797728 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063245128 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088604995 seconds)
  done (took 2.450753121 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074109137 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.089120186 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073677893 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094369271 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067472086 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088849661 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072401927 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088831523 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093897304 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06737774 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094205748 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071030133 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.08468232 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06742865 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084873624 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070963711 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.093908956 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067592023 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.087752019 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073452469 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087817376 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073736818 seconds)
  done (took 2.608170025 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066676054 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066025358 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084989915 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061757127 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065660017 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.078477936 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070084873 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081759515 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069827737 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064621962 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08273237 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073153191 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085500005 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.0610302 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066331952 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081521658 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130331327 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069143363 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064865651 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085438999 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061568687 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085940643 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061802675 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061512434 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.082138666 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070338566 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084640679 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064477069 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064874841 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082362856 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066939496 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081526757 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067320889 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067021458 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083197948 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065392909 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065207038 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083388727 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062321507 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.081628099 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066651807 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061703161 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084107083 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067432873 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063647209 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.082276911 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067509283 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08379558 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061748804 seconds)
  done (took 4.439338365 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083320142 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.12868948 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086299158 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089901166 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.100257058 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09186099 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069304695 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109898806 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063472831 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082847228 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082574809 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.101532466 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084249084 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070728833 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.0905858 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066296328 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066413449 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083374312 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070242657 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083593176 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070029557 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090374848 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098580102 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.0803816 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088310677 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066135027 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083409851 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070851894 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097476522 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071037182 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.088547125 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07113733 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.099618232 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068651697 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083556594 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068687868 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101027109 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065807511 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086533027 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064081422 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086384935 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071001169 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090951331 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082678297 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084577866 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072193786 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084080581 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063448685 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097447139 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069008398 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092114662 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099904807 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070532441 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084452741 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071091662 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.09930943 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066891791 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082947275 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069665823 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096143301 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063788932 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087572227 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080691614 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085038366 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073359466 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098672299 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071131171 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087453927 seconds)
  done (took 6.569830152 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075079932 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090416951 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081332566 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099095087 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090674159 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073667606 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090911376 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072833491 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090660086 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077794664 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090706903 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111957076 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068258595 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093288956 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073590872 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091437869 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072904633 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09103211 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072186182 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091400457 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090471084 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.08101652 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090495998 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.099199082 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102738446 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085887353 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072920217 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090634253 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080982799 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090937835 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101392348 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073568152 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090849255 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099062156 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.084454389 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0908264 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06531943 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090360924 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073503309 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090718543 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067814475 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098453804 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072073807 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08588644 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072777697 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090731805 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098953712 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084016324 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094013604 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095503822 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072638576 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099026776 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071525539 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09097012 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.099207122 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106034483 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098890245 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098435665 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073065436 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098788843 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098773119 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.105725378 seconds)
  done (took 6.269365286 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087285554 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093853933 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096229318 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061768751 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063869357 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089172122 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064521289 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082602712 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075575591 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093663362 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077042012 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088603279 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073283121 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095038053 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088006792 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073533351 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088158057 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07050284 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092791564 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070093709 seconds)
  done (took 2.478649629 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075295086 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102206657 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066680133 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071486247 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.088164575 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071269529 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.086636474 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069548657 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085544777 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069358226 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094202616 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07667612 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085151151 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072501264 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09480626 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072614122 seconds)
  done (took 2.140329507 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.078145288 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.095646413 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081479722 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085827992 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.0643868 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081399731 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066362899 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062196416 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081771081 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080528888 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085510603 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068517913 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085029137 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065121618 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062764275 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08791515 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063193537 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083101677 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06608775 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.098898366 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07760429 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083011914 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06690714 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066979158 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.08528367 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071967622 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085658271 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063953847 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084075867 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067217991 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085595999 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07487094 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.081949488 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065493653 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06480488 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082306813 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066831497 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085168087 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06914846 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065604061 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083459499 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065612318 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085120173 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06718313 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080632309 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066795219 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062709547 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090698096 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064885785 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084594499 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066939378 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086312282 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067627274 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07538149 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088786591 seconds)
  done (took 5.035245201 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079555087 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069426828 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081110991 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064166948 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087670219 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068042248 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068914425 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086959949 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06827907 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082430945 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068440571 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087301683 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068001157 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069350073 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087387486 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069090229 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080672184 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06814439 seconds)
  done (took 2.217055034 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071979785 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065587865 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091990845 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066621528 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084449416 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069196962 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062654618 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083608415 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065352231 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084450207 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066594113 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068957679 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083081808 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068097728 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084861808 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066201519 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067893249 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083359844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067078926 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080250517 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068713656 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064230739 seconds)
  done (took 2.478724274 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072163811 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092258672 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16049357 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106273093 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082574247 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.09896928 seconds)
  done (took 1.477309061 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090659625 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097825743 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066947488 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106052128 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074176585 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08733922 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068334992 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086061902 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077793262 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10029681 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068023473 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095226724 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095091895 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076296144 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093242581 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073772504 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086926587 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069233509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085389435 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104746535 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069423768 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094611565 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068988793 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08634073 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06798382 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095161521 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076550261 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100530731 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086668251 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076903809 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091672628 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067789148 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095390231 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099848241 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069878763 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095649658 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068699026 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104815622 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074189614 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095250345 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068827822 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093737079 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095614357 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073540747 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094944619 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068176933 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092226719 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068355323 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087125939 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111205929 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074648941 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094232388 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092846703 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077492487 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094821254 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111477354 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081661192 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095080186 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092901331 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08172117 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09461107 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073570192 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095821569 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1005278 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073707358 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095618207 seconds)
  done (took 6.539134483 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084486414 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104667522 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06840968 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100897191 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095793138 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068338427 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086225655 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068490705 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086247047 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068010465 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128664629 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069397685 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095543803 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095580905 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069406672 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087066334 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068986772 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094898882 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06851574 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111043494 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086754734 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077410413 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095635444 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095803872 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08169524 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092727304 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068598889 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086759185 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068180112 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087106882 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073232745 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087935594 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095269833 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068992817 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095123424 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068782308 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086640152 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074011739 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086310838 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074341963 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095682648 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104599264 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069213116 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087251549 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081365466 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088184476 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068534096 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088305125 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068502986 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086649213 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081968732 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102316013 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100355725 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095872934 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070054153 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087145096 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069183632 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087840279 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069256391 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093257036 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076867017 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086517575 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112245589 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06930608 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087442934 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07635498 seconds)
  done (took 6.445559541 seconds)
done (took 127.257006856 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201259327 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184492656 seconds)
  done (took 1.250162559 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069085694 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09458904 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096793333 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127996118 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085985619 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100394588 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118086923 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078897918 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066082657 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085323823 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067040356 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086966759 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130896905 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066817886 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086008165 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068739252 seconds)
  done (took 2.30196565 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102459175 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195349261 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108506596 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06571144 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098543995 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078948613 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085267068 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076235664 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09369687 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066092298 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078264123 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09494099 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065194859 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095484946 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074209419 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096949539 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065177417 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096266397 seconds)
  done (took 2.513788359 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103996854 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140530372 seconds)
  done (took 1.117912987 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203094085 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.121969095 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200059049 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.410131076 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.204785502 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.273939708 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172052921 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.169955418 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.152466148 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168042987 seconds)
  done (took 2.946108807 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098291517 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169509975 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309160679 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.13627339 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.086136889 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114801574 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.136827813 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088750816 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.100961459 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100009043 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079853407 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096381556 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097136468 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094592305 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073683846 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096664602 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120012874 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075079318 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096096641 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075660431 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117511665 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066571723 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074377389 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094194257 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077142361 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097214564 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066057464 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085212897 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075826648 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093764111 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07927329 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113691963 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096233152 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129272412 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081909698 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130027591 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096528193 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07189417 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094038987 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072793581 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097073178 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077330199 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102802899 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076790816 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085787166 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077426285 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085549376 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066988252 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098812147 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077425864 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098339419 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078435949 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129622098 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096116246 seconds)
  done (took 6.179916474 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.742764711 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108827946 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093169464 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.800148947 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08820441 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104622282 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.712008916 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116524585 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209938755 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764326668 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0886256 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09705925 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179909526 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23227423 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.874733997 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.281682067 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.636178438 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104815199 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108347377 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131154851 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138894774 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175185015 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149624311 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.4090067 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074890785 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091685084 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137747374 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073991565 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159609845 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084323199 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092518971 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155157837 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.224031126 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.156116603 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096273937 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070046269 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090907037 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148206895 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.21647626 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19032405 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158129246 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067515801 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090542201 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139403569 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129850656 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067979677 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139044837 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172828402 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148848735 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073167801 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094462346 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142193767 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137179675 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141927526 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100530991 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.262013328 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.28842622 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089825114 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097963658 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102323682 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212363366 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102698919 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.198914197 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138797887 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.166903628 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090404146 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.730292233 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146895063 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09078903 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073861283 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118095432 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09363315 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1371889 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145249515 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.363397588 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.16122639 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07349954 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089284731 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.182877972 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082736785 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091034304 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140587355 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074670184 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120590534 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164131582 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141820935 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.14750822 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.208157608 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141582195 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.158032348 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075096112 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123901557 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074991077 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.191589383 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192922997 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139562125 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.18522222 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.158531378 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.142420001 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146677921 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07522453 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.169736329 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097860056 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100112937 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136506819 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189826977 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122101191 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082093793 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093169471 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.140676332 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.125510428 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085234343 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138601105 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.16910678 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.432368043 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.14629162 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067464853 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107179583 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139421356 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140053109 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095660788 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214777466 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121703618 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.145817149 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120805807 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088861571 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120224291 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.139728825 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078211471 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121234134 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136369817 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097113614 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.21284394 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189142508 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07777594 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193552216 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161961472 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095239791 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.148531923 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118101918 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146311466 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075772705 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.157571032 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074960444 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.744868434 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.145060008 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120852787 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072687864 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.164919957 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068743537 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103478515 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103046003 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067991077 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776931381 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085790233 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099399755 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083661483 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093809472 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120273174 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1357297 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073194044 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137220348 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203121079 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094731741 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09610325 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.103880418 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.138230066 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094653309 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.083359248 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103809013 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.083484187 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121441823 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093512152 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082345014 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14482854 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161601702 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.171523455 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.571782433 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070536116 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102977895 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179855294 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090964299 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.241061335 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.157453971 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.176712441 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140030018 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100562229 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.291086586 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142464654 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.164338365 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.085463274 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149898293 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088443762 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138324903 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.142898722 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069488162 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096260151 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.140810623 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.14338738 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.162483633 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.913913861 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090564183 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204169012 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069146485 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.148578017 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096386291 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076712778 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259199997 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069813729 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.165872147 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142389292 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073243071 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102646701 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.821668159 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103887737 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140236392 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074559169 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.193319604 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141541201 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.134393344 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135884451 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097224709 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138129209 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.186853343 seconds)
  done (took 40.252890524 seconds)
done (took 57.436632265 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.255534906 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176634315 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.240906333 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142657084 seconds)
  done (took 1.785680227 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142127673 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103450737 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.116131196 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.084730215 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102405863 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085056816 seconds)
  done (took 1.53177057 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.39884448 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263772883 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229220723 seconds)
  done (took 1.792284864 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.259494251 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210354238 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.443907474 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.29527219 seconds)
  done (took 2.236092582 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.173994948 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.111924837 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066952965 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104664914 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158497967 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250318823 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126386871 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.184741662 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078678051 seconds)
  done (took 2.20280485 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195347595 seconds)
done (took 10.64692283 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102133901 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.261251773 seconds)
    (3/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.11968647 seconds)
    (4/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.210491302 seconds)
    (5/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10338468 seconds)
    (6/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091863452 seconds)
    (7/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.102531219 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.168870205 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.145001379 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071439856 seconds)
    (11/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.198065704 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099730433 seconds)
    (13/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083704686 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.097545803 seconds)
    (15/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.243433268 seconds)
    (16/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07639819 seconds)
    (17/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09986531 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.096654969 seconds)
    (19/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099716148 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.088574183 seconds)
    (21/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.126355736 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.117607779 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.152130736 seconds)
    (24/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.105339045 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.130473548 seconds)
    (26/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.173079838 seconds)
    (27/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.198975181 seconds)
    (28/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.178910936 seconds)
    (29/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077998763 seconds)
    (30/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.138081597 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088282199 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093146681 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070293198 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.130432727 seconds)
    (35/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.196518599 seconds)
    (36/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112925757 seconds)
    (37/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071917689 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.187196776 seconds)
    (39/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.200377811 seconds)
    (40/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093570377 seconds)
    (41/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.07517141 seconds)
    (42/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.155682064 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.08857857 seconds)
    (44/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074649969 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.099204984 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078934133 seconds)
    (47/309) benchmarking ("sort", Float64, false)...
    done (took 0.145829975 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07294328 seconds)
    (49/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075862253 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.186843529 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167377071 seconds)
    (52/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.167072228 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072069203 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.126036977 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.209745865 seconds)
    (56/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076112599 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086235507 seconds)
    (58/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.159509614 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088426167 seconds)
    (60/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.135771844 seconds)
    (61/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.22662577 seconds)
    (62/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.072878993 seconds)
    (63/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.177564127 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.108832414 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094012868 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.095204271 seconds)
    (67/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.099131519 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104740044 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157923314 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.1307263 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065933241 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191505995 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066280869 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053484867 seconds)
    (75/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.18498135 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052172698 seconds)
    (77/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097706352 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.154054613 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.138065584 seconds)
    (80/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.166903528 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.065502014 seconds)
    (82/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.188176654 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193742287 seconds)
    (84/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075079691 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.180718819 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.198072903 seconds)
    (87/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081079463 seconds)
    (88/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075408137 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066262168 seconds)
    (90/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070470759 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.094916638 seconds)
    (92/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064278251 seconds)
    (93/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.12024411 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090558675 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139700361 seconds)
    (96/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112570893 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.18923601 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071958005 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.155592773 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070886079 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086711932 seconds)
    (102/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053755388 seconds)
    (103/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071068135 seconds)
    (104/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097075024 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073909769 seconds)
    (106/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.095398109 seconds)
    (107/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066127076 seconds)
    (108/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066856954 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.167136326 seconds)
    (110/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066388512 seconds)
    (111/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084260892 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07425086 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051013778 seconds)
    (114/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.166413293 seconds)
    (115/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050912812 seconds)
    (116/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.123916195 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065427107 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094244832 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07162474 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.10910457 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.134971502 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096064241 seconds)
    (123/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070038919 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093981286 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090609504 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092369978 seconds)
    (127/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.139162918 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.0940828 seconds)
    (129/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069673757 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.135611082 seconds)
    (131/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.073479571 seconds)
    (132/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077582869 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.135531517 seconds)
    (134/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092524228 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095321614 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066599277 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116308961 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088937676 seconds)
    (139/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050678454 seconds)
    (140/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.072406802 seconds)
    (141/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080112214 seconds)
    (142/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.073199374 seconds)
    (143/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.061636434 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066825671 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086867339 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072908794 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.180910679 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095188832 seconds)
    (149/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.159999909 seconds)
    (150/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071400416 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.158004862 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051656105 seconds)
    (153/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052830022 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088774738 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074431138 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051395936 seconds)
    (157/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08696046 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.168351411 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077432017 seconds)
    (160/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107606972 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116178101 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.183431223 seconds)
    (163/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109124118 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.111720166 seconds)
    (165/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068878976 seconds)
    (166/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.130416682 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091065066 seconds)
    (168/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052708885 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.119786349 seconds)
    (170/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209611077 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.087895993 seconds)
    (172/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.147077378 seconds)
    (173/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094281583 seconds)
    (174/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065697697 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096580139 seconds)
    (176/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112188004 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.144479648 seconds)
    (178/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073864423 seconds)
    (179/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074388279 seconds)
    (180/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101869525 seconds)
    (181/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069291432 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.121592089 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.116181751 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053707472 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074511909 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136176996 seconds)
    (187/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07083969 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.139984012 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053071603 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064389851 seconds)
    (191/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.171228156 seconds)
    (192/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095900378 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052613309 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051931202 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089437567 seconds)
    (196/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.135766992 seconds)
    (197/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.076536059 seconds)
    (198/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.161599491 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075200975 seconds)
    (200/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069305993 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052245492 seconds)
    (202/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095025897 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073765105 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.290488753 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095792261 seconds)
    (206/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054354031 seconds)
    (207/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062144033 seconds)
    (208/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.073775876 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075974003 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053292528 seconds)
    (211/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085740318 seconds)
    (212/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064821557 seconds)
    (213/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067609376 seconds)
    (214/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095050114 seconds)
    (215/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06971961 seconds)
    (216/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071528681 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.182540354 seconds)
    (218/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066999978 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.163557574 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063973283 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.072997736 seconds)
    (222/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05188557 seconds)
    (223/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136421984 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051190817 seconds)
    (225/309) benchmarking ("sort", Int8, false)...
    done (took 0.163135057 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066197837 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.160817481 seconds)
    (228/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052789753 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086844298 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066068359 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089610447 seconds)
    (232/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.154165463 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06577689 seconds)
    (234/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07424585 seconds)
    (235/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067315394 seconds)
    (236/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052269671 seconds)
    (237/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.073888396 seconds)
    (238/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082889585 seconds)
    (239/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.189091327 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051809945 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109182905 seconds)
    (242/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073122327 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193974548 seconds)
    (244/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066959234 seconds)
    (245/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087305828 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067382835 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.168140649 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051405938 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198667942 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065921727 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051019317 seconds)
    (252/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.073691177 seconds)
    (253/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072761355 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051689183 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.095206706 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072612968 seconds)
    (257/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070384625 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15614419 seconds)
    (259/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053186686 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088617718 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065954282 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074245621 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094522867 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140918145 seconds)
    (265/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087096233 seconds)
    (266/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061520163 seconds)
    (267/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050854065 seconds)
    (268/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.072604949 seconds)
    (269/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078934457 seconds)
    (270/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067644096 seconds)
    (271/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.129429135 seconds)
    (272/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192737892 seconds)
    (273/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051654763 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052872811 seconds)
    (275/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.07400826 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091464391 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06724923 seconds)
    (278/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.075304842 seconds)
    (279/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051839189 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073478234 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.074405379 seconds)
    (282/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051243269 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064408636 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.162036391 seconds)
    (285/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071334502 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086130078 seconds)
    (287/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052694325 seconds)
    (288/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05308075 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118827898 seconds)
    (290/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068750872 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095165383 seconds)
    (292/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071877034 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071252249 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.108935718 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067317719 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126136551 seconds)
    (297/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066806873 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.113231335 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067669532 seconds)
    (300/309) benchmarking ("sort", Float32, false)...
    done (took 0.150556901 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06743026 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072010869 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092701421 seconds)
    (304/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052580345 seconds)
    (305/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062119693 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.074013674 seconds)
    (307/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071835404 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088614638 seconds)
    (309/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.077559372 seconds)
  done (took 32.870911582 seconds)
done (took 33.78328933 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081363034 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113809219 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074604308 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114153319 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081370147 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099049558 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073086434 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077703177 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102916659 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082087356 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100782041 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055051156 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096610352 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075384837 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095992058 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091255521 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100678965 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073179594 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073954986 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086422826 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073705603 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087235355 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06686498 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055948107 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099815256 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07280741 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072418649 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097467756 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066183858 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08749703 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068394381 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073241199 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087067357 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079078946 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093564647 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074205867 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075449354 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097826617 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067967391 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08699923 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073617482 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066084736 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.09449983 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073994918 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071268261 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092556848 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074817856 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101310179 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092176237 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089801266 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074126051 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098768836 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077280896 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071490163 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091456029 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074074021 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092180922 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091445011 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096654665 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067529128 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073482218 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096111715 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071188263 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095324283 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073849774 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075518327 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097237222 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071181421 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096895236 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070508614 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065640977 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.094991888 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069150583 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065068448 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097055031 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07639493 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086261165 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071559011 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072809871 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093200879 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066003126 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08865055 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067677052 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072539295 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089456193 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054816145 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069782282 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093520669 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065025968 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074569591 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09316623 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072854604 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088947921 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076248525 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066003049 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092493006 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066000187 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065800337 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089332777 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069905542 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065133931 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089859512 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075018441 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089331931 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071640552 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080432996 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087046894 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072616759 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086719785 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064990029 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081932595 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.09764519 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066293497 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090554761 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065268337 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073293262 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086756649 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065575511 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065686782 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087757653 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071420129 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065877521 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090265463 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072840778 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101053249 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066086854 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069352014 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089306569 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065417312 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070934488 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088285999 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066086812 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067081796 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.085393141 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068108624 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087437819 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072983252 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068183101 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095901967 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068363198 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096024084 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070450731 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072485657 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092402436 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064779084 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059447148 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090259312 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06785271 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067997812 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087879028 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067271819 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06567316 seconds)
done (took 13.09659886 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066864451 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167867125 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124076531 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095853123 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109557733 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06634169 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.098969635 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102893881 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.08974099 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125727916 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087167749 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.106540601 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114255412 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086983851 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065787968 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069905888 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.089928108 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088604643 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.123865427 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086778903 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139119512 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087252666 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119825667 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090681796 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.110415081 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103673795 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088469348 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070384925 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07034177 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115123425 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107807933 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070361812 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066592401 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.121675815 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116628036 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086188301 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087418033 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084490672 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087945551 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066639954 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113013276 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100421574 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.103718572 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083059341 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094330523 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069456206 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089106835 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085492001 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.111892571 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081425908 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109988119 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132672712 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068900083 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104024902 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065646069 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109503477 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.082409913 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090935191 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066910203 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090141673 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065640027 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070053961 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11014525 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114199612 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06992049 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10436991 seconds)
  done (took 7.20666981 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084211896 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.11576149 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083928848 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106335747 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066025516 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06724116 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.088757729 seconds)
  done (took 1.58134359 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067219131 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088810901 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111425464 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089121611 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108045873 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087503693 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098527976 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067256957 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106491353 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06765094 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08800867 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127394892 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068296922 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096177445 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091288512 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08996906 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090891108 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089157002 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070895281 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11256525 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069147494 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.086516287 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091481858 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06786539 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10380763 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067531377 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137427871 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071329065 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090339112 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070897659 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066106946 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.139486955 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104044355 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078201617 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066955843 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104202331 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081714002 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087897131 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082924812 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094811791 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081580776 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068118755 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09053786 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065766692 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071447593 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100002467 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068636715 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090102446 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070268979 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08755052 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090376687 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081474924 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089223143 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071127798 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068651747 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095847161 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077540512 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090033654 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088789104 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068394403 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106121759 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083592867 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.10389322 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083540641 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092354387 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081431169 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10391053 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07003978 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069060855 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092761532 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08417681 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087163006 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068839619 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078628226 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091508505 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090670745 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.112747403 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069651986 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100294536 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067269669 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067929424 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090560156 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090573651 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093568542 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067235661 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071442536 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092821179 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065420666 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066087538 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093325328 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065736821 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068270425 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.093045587 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06796798 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091627063 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083949506 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067693235 seconds)
  done (took 9.242511282 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068188679 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068464343 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091716556 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067956195 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068306246 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090332752 seconds)
  done (took 1.442338461 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098714651 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091555412 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08118299 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095279771 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106758701 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104534232 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082402115 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10531525 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085341193 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102097574 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082504393 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104626132 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087926246 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.095550289 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082512829 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095440616 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082618804 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.0995144 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079077967 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096460097 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088292491 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.096198205 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0738032 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083324481 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093421812 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072876908 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099431047 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079969974 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101193533 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083183365 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095489769 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070921432 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094578386 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08269608 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104584727 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072080848 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095157492 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072746507 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099489174 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070500162 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10611644 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073835992 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078584969 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094967367 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.104980737 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072997854 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071680724 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099790969 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082028628 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094493597 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071600578 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095334929 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.070930635 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094052469 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072452239 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105653642 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071434137 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105693008 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072805211 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072519996 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093201973 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071007283 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105112043 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071608498 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103160321 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07169125 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094402968 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074369286 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096577044 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073072773 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071955285 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092536532 seconds)
  done (took 7.304940358 seconds)
done (took 27.746215171 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.650703375 seconds)
  done (took 1.632061127 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.760515917 seconds)
  done (took 1.743781979 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.575669997 seconds)
  done (took 15.564194371 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.610796517 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.75136511 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.805798501 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133643976 seconds)
  done (took 3.284367634 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.885199535 seconds)
  done (took 1.894928355 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.2336228 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222491971 seconds)
  done (took 1.445158968 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.72917797 seconds)
  done (took 1.728330188 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.274047211 seconds)
  done (took 2.262557433 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.317775817 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179582356 seconds)
  done (took 1.493716255 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.519117545 seconds)
  done (took 1.515399548 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.841949258 seconds)
  done (took 7.843360229 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228589976 seconds)
  done (took 1.240226528 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.266678882 seconds)
  done (took 1.265964897 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.107747639 seconds)
  done (took 4.108942061 seconds)
done (took 48.014146311 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07797714 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081609293 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103753989 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079107619 seconds)
  done (took 1.339149508 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077334498 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073336247 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099375673 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07319204 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100306835 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073776201 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098232273 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077541497 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072751866 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097736677 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07381306 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.095660831 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075168919 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098400416 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07012151 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07548061 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099383415 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073187505 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.098880713 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073070533 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071032896 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097509145 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076206451 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095001238 seconds)
  done (took 3.025447561 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076848345 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073728589 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097052196 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072065374 seconds)
  done (took 1.32323839 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07771136 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.115640658 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087926019 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076944719 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.115571837 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109842206 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068928893 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06931147 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094320747 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07736089 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090827634 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.097651674 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110995093 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077375083 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103228865 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066893273 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069723608 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110622333 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078061661 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100721016 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07011497 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079877734 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091170537 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090705223 seconds)
  done (took 3.140958675 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076726749 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127755761 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078950727 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.113810298 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091855662 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06583704 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.09953068 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.115180319 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124859038 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089674415 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070394504 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066050715 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.09567154 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065696551 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076360088 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132049315 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135449731 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068065425 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12074566 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065809654 seconds)
  done (took 2.894730899 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075568921 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071016456 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088950942 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069159115 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076843351 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.095840556 seconds)
  done (took 1.49232914 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068254535 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067651491 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090915502 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066009931 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071846662 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090102398 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06619602 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068348207 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09019172 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066807962 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066678089 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088582778 seconds)
  done (took 1.91085431 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.380174821 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.091527223 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068536935 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.087104948 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070639165 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089960096 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079600561 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06819524 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113581772 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066836978 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090223761 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067756212 seconds)
  done (took 2.288495295 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258441656 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077560365 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321486207 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167315355 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140836747 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154651437 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106218324 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140361518 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197230069 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137372426 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199569456 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223813046 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134619541 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166766511 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114563562 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132904618 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185733842 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221499602 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129830635 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199615787 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20601778 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156712366 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179255829 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126967753 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133724019 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149864944 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071961991 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104563608 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231317374 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160290336 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200015344 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138601186 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097431255 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229256233 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224735104 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194989673 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161736762 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084557411 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156801629 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163299795 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25448065 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113652454 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194498766 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133401036 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105291841 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172145285 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145385802 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146329539 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.1361826 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115011669 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173560443 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238474114 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165222806 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112449568 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136569077 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140874007 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143866045 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104396348 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26882902 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195399156 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159366751 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095624419 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099878499 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209585325 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158043879 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140620714 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152993973 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11856149 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168125156 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209552534 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145566887 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197072178 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.154009191 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114083997 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146941716 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169142042 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154674483 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226910703 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154358007 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073527089 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152185028 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129626046 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106421309 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145076478 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100865103 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233953397 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099391061 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.138822091 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138990473 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134659785 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136161683 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194947198 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201084264 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12924078 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06645309 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13044219 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.14884337 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174045377 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113541891 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134894278 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146968195 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.103589806 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16620977 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.076106205 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152214167 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103582026 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151934091 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16226503 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101426064 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155568987 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102495623 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127556136 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162464971 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217820692 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115416943 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083805041 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22516218 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155481632 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132002119 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173796495 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213586874 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102343878 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128880277 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204209291 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242383868 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090846338 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220967401 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134462578 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108239565 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.08805958 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155236232 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139601374 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148677646 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107384085 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.154308359 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225420503 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075199774 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121448294 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166000875 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107002506 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082012817 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139969682 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126952928 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.121357106 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101451548 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133228551 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19540339 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155624194 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134703584 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153400275 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124566308 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226592756 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090598868 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.130567061 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129105426 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070330965 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.16364634 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216942524 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079720999 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225022275 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154019282 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131787656 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14685636 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108303164 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169289359 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079133328 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096270959 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17390231 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13819645 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136387413 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183076258 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129731314 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154084093 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.151167299 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186736969 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160945136 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161288419 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132569982 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088212284 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13866321 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17924586 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074257174 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119776345 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083114385 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130114943 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122659347 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084598228 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195775307 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155179379 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126427356 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140415555 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098271123 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203305793 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077943623 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184324146 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147814399 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096256543 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20932539 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186293302 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190760236 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101113032 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201543631 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071910354 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099568594 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091778821 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179780202 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084505896 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109634241 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144564071 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178651663 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15580666 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192374586 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111855459 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14831627 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212088765 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071733883 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143748617 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178684984 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177387611 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.131679261 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111663667 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100578214 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198749919 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135393095 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245477767 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14314678 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151754003 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180919197 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130027511 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105648644 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106854915 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190993669 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133983434 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18005934 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126244899 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114196601 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137300695 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.081471929 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129716167 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1563749 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147082445 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187502281 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143465242 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160832048 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102825838 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144260969 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15135136 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150067926 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064942796 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148290663 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221205367 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121382736 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146028303 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184699169 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106100087 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152915065 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237333733 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175454779 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109869431 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142211022 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149722117 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15819723 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146288952 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16895582 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137919964 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16402409 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137527727 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.110349261 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088673723 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124312157 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133681488 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095939671 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.163541987 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145605097 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095912931 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18667515 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138696925 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11297906 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145187129 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124200007 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091256363 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123163965 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233455875 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149440163 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234315838 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126425998 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179430323 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226209433 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075917616 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105545467 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106516259 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169427464 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08484176 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188587504 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097545864 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130953526 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154455588 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171714465 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120651717 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069167077 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136255782 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189516771 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11314969 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123782334 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.131876958 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220991666 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130346501 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080136732 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152654665 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131449945 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102673299 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232118371 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.087206071 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099186107 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101325098 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083846054 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182793653 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187410602 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108251722 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.133105712 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143340114 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173176389 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15809935 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12832595 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100694771 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141375273 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205756724 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156712845 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090885054 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138914797 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184680195 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188388119 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13267871 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121329296 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230353688 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185762521 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.220936862 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11505582 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144055599 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14238886 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111555156 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196641188 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084136921 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224695202 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108444184 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165701938 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131549324 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11887461 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158394296 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125135562 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089099243 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204664185 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148281416 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125017497 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080735963 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146690691 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150916493 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134209562 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100747187 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169148745 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073115503 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191940807 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201779907 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10755832 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133002144 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09770318 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107981468 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135873734 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129785119 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111969343 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.118583701 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229234744 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.117249389 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181407095 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197226694 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14184159 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165937569 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126560705 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663110417 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079552615 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211864567 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147709358 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237491987 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124344394 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14738506 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138219662 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152264443 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174432984 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131323384 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204664839 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161249997 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.147778086 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105447808 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130510785 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138999645 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091711832 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134192239 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141196436 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144179376 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127972916 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.149702921 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155730525 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108418957 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096973027 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215415302 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145166045 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172939016 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196203365 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085866099 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146689084 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195868341 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080538612 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.14968079 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214065224 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135873364 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125691115 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082352893 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132976286 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231658518 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073473061 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219497462 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152242867 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138893748 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141968816 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146382644 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187970035 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135821509 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154941853 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123133811 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140411473 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143895968 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085393162 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104853246 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134373648 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14142137 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100100447 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129792963 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143238447 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184391867 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.097348135 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097279195 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130644867 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174569354 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237190378 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115860544 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083633218 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146580438 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166320653 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.145072315 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154442718 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082754165 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110617222 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082409779 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.138069001 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136559854 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142664029 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105188439 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136915484 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22531341 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111137048 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.225215968 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121830595 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133629557 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069950104 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105651708 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123998659 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099059498 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135398338 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127498939 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230399999 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098242856 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116979331 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119751743 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073736009 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109563364 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158233292 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13812982 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150080132 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125389093 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063685887 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137626955 seconds)
  done (took 71.068228715 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.131910641 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.103270971 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.116724436 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.171739273 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14441144 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.237801794 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.181771451 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222241837 seconds)
  done (took 2.404975757 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068678509 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116113365 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101770353 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.114290444 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.088964265 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068355496 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.292702611 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.109064546 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066237105 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.11286166 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.11749236 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.091542187 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.466402789 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066134312 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09291814 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084742898 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067022929 seconds)
  done (took 3.21060095 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.4241365 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.627444983 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.446517382 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072825893 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.915171581 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.1057634 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.36284344 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.161340477 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090701312 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.429576405 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.72721302 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.147624807 seconds)
  done (took 17.607665539 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073833979 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.0688081 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108730219 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082949833 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097980157 seconds)
  done (took 1.527591361 seconds)
done (took 114.232007774 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079042148 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.340907226 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052952907 seconds)
  done (took 1.521565229 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082940646 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084206893 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110298869 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083112838 seconds)
  done (took 1.46260382 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074785085 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076793132 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110669934 seconds)
  done (took 1.362386645 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.276956938 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164221297 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087150039 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08242289 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078010503 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103952763 seconds)
  done (took 1.36699026 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072429619 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074825517 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099159697 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076693954 seconds)
  done (took 1.419528751 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075859928 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052562012 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054653926 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.080931689 seconds)
  done (took 1.36691688 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08944922 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105175311 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080172012 seconds)
  done (took 1.374038322 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106828377 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.112837333 seconds)
  done (took 1.323390894 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0810086 seconds)
  done (took 1.179187501 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094068366 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.137722706 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.154402614 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.135982735 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.167059112 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136281594 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.113195139 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087761988 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104507749 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.11523776 seconds)
  done (took 2.350261289 seconds)
done (took 16.427465005 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077454692 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.484898661 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359991237 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116791901 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666145023 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355963212 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.011999951 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118685605 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12062783 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094091226 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083531142 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672789817 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975978175 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.441876398 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963308657 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325025118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67433322 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068127705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092667146 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067071951 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969588951 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093270658 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067947298 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068275829 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673780923 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370202757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094471725 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319287439 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067537292 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095246745 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354561461 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094767842 seconds)
  done (took 16.1341103 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069267881 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143566841 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072842496 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082913734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096209161 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069549364 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098363147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069096749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151561934 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067295801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110347455 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067470814 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.09781103 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068730729 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086241955 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09449424 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06809603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06888073 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093392761 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068398159 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111999669 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067504114 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067970274 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094748936 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067331105 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106453769 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067876386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068446338 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093343853 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070024431 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096998161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068346058 seconds)
  done (took 3.82814511 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114346883 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15128405 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073612623 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127822887 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113170792 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096656345 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.168902054 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092342429 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154294048 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067703078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109847859 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068408288 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127575095 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06904853 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113457066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067827101 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06949517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093862745 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06807697 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094745632 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086409446 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093476788 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068686415 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068598998 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094991321 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081030604 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09423891 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068058363 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068065414 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096575293 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070665733 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094092959 seconds)
  done (took 4.138084265 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071883124 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074606315 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108536084 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083094824 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095832188 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071716221 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072859278 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096411026 seconds)
  done (took 1.780855103 seconds)
done (took 26.980848662 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078218426 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07006435 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098763152 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080312062 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.099710542 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078718492 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066783712 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101189644 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077191586 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073344411 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.10128824 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067413222 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097365079 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067367285 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074804817 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093518913 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079410279 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098597073 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078687207 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079667371 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096024227 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076674145 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100989268 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079317866 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105446237 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079418422 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082638177 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099090143 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069353934 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096444243 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076197845 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083896895 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.095630722 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079665796 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094234447 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067453476 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068155799 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093877031 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079821062 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100956912 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071107797 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.10075227 seconds)
  done (took 4.662260206 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087937253 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091474129 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111984343 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06544746 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097390858 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064513805 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115367288 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063098219 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059052349 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114759296 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055967708 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058860772 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.08961423 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054065611 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058839966 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056390284 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088534318 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056242233 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059384272 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085668542 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057664196 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053747411 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086804664 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062762146 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055924757 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08779465 seconds)
  done (took 3.053029535 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074877338 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084397265 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113611294 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127524973 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132106719 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076963205 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.104531172 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087761306 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11258133 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066822314 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071371376 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121585904 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087508154 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100702061 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067750559 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113623186 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081863564 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069330818 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100681832 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090189135 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111071214 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078984451 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.11890253 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08102759 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067001324 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09681198 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071781811 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107639972 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072632691 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077400192 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098207493 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07127428 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096749148 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078905608 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072485907 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095246732 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089734128 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10365893 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077697188 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068428525 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.0975196 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069170634 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114069576 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111432374 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094124129 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074299615 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074952691 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103263721 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06761246 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112587191 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07660884 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067725205 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097023461 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066525515 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.093819932 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081029532 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.06942725 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.096468888 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076567741 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097306367 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079460268 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071081525 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110483659 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067294627 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101695317 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066520834 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068474994 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093233458 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090386567 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068506946 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135091274 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068935689 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.095741616 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076266682 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101571346 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073698047 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068177998 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109504804 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077420885 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098062319 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076170722 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071662751 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097373043 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087871087 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096650926 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069619757 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068417798 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100647041 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070357543 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095077299 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08051547 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068349849 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.09732917 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084065827 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093801719 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068734506 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073621362 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099340246 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066826321 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106338589 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072241941 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06886236 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103030129 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068224133 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097099651 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076835337 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071928295 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092564437 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072640366 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101306846 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068107977 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068893849 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09729954 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069055323 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103239898 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073873133 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07231673 seconds)
  done (took 11.251843965 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.190400289 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.191995099 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069938966 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.177315271 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07593017 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.107020366 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.178302387 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095801255 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.095825704 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068805368 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069103375 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.128514374 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.124035216 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.104625056 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105795274 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068464142 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113490204 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.103881481 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.1794187 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.172961428 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114579821 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076166576 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069173841 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.095711995 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069928441 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.105232848 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084251101 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102829335 seconds)
  done (took 4.272393288 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082110897 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128299658 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073537298 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088676903 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118492078 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068369857 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.100737878 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069607294 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107631856 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079844052 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094944406 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073928504 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074324145 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104817416 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068649949 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10495524 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077847079 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06969535 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098348097 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072967052 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104468965 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080095336 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07190046 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.093649715 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073679039 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.093775203 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06401802 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.112158243 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067490201 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11698244 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065987339 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073902898 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108000119 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068635295 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094605757 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070804711 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070896979 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098095636 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06974245 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066979363 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094010934 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057414213 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067014669 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.107481608 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074462619 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08680502 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07342265 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072894839 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099796312 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065229537 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097788058 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070908728 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070493669 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103664674 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072349339 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07263019 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099222501 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066221869 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102798451 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071326031 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063922474 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093616153 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0721029 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066725251 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102412492 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072209874 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093750156 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070798236 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073667416 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.100814676 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070353334 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070277686 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09251244 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069927157 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.100283854 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072698977 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072113815 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093904192 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06737669 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067826081 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082617208 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067115303 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054139994 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098663071 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066100427 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066275671 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097594507 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073951452 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108384958 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06891034 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.100935737 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068740896 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066982994 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098371497 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06385176 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070417296 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.110033655 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.111934822 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.0677776 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066062891 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109571468 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072568508 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067367898 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083771187 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074374434 seconds)
  done (took 9.785188773 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095089036 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092533532 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096953834 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083429519 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122871932 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093150212 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102698876 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073942291 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069870101 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.112165413 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068137065 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.103660464 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06929365 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076613004 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123611515 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075262982 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097068154 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076581698 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072838436 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134736001 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083094331 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.109609152 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080274104 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095583691 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072443523 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079620453 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124259178 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.07959892 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.105869179 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084689462 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079877807 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122305084 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085138711 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098690176 seconds)
  done (took 4.28536529 seconds)
done (took 38.417108009 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.195131205 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.40050618 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.186845183 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.070241438 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.228837572 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.190125118 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.202438594 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.189004848 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.45104546 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.191381737 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.440268914 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.88893678 seconds)
done (took 58.768821369 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.236879708 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.330096197 seconds)
    (2/2) benchmarking "String"...
    done (took 1.46153083 seconds)
  done (took 3.92603227 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.53203547 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.074358271 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.44812993 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.189988649 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.191868422 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.487904644 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.785975875 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.000733075 seconds)
  done (took 27.313701493 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.192756392 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.551642853 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.503348742 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.502627682 seconds)
  done (took 17.886483332 seconds)
done (took 59.02984297 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.183722824 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.207898059 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.197281787 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.175257398 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.293698401 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.208231351 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.458990952 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.429812091 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.191772823 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.19069315 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.191990301 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.189475115 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.204039654 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.516542713 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.188576179 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.188944845 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.246103459 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.689265077 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.566658933 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.208110748 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.207380751 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.218182203 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.193076035 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.19189402 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.219152108 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.190134486 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.193089058 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.194976912 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.387871823 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.192453098 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.281099962 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.612983787 seconds)
  done (took 190.944408838 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.191743108 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.156301129 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.24224108 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.214073158 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.588421134 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.390238512 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.319166213 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.672993851 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.207801912 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.21883864 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.514638899 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.19288681 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.560322888 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.156434828 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.200372497 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.291798998 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.429843748 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.514597736 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.208175626 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.468186244 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.194610191 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.403917059 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.322447601 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.430775932 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.221837074 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.215341145 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.216073169 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.205177676 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.383840895 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.362328413 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.196144132 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.216674287 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.756110768 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051568655 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.213420264 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.207526192 seconds)
  done (took 149.473884672 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.454751767 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.191857622 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.190843961 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.191508072 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.220021613 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.1915105 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.192197897 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.704497758 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.706190691 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.690206658 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.269752893 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.19276134 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.250144951 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.378478384 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.192408116 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283576441 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.204036394 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.191654647 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.192969768 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.20696345 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.217999999 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.19634347 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19292179 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.71303784 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.206081813 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.287384362 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.199898881 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.19363989 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221950294 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.586676699 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.192297876 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.221348072 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.507863742 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.236418472 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193618729 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.477603399 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.107395318 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300233837 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194270106 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222190685 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.193363948 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.461266787 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194547331 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.19406445 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.196181334 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.762667495 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.194765581 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.710990653 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.195562389 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.057080864 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.19304629 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194505004 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.565971993 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.58815074 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.193702197 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.193504236 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.197235977 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.193900008 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.194139397 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.22370393 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.719411994 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.289849896 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.195109396 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.197944579 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223513286 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.194533181 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.254899216 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197421166 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.528143593 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.251592435 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.298413321 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.718737611 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.197469478 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286962064 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312514976 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.194394279 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.194372485 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.194983244 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.193746384 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.194101474 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.300184923 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.194317705 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.585682006 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.200524023 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.196756005 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.254294572 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.287738054 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.195345271 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.495037329 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.197926814 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.195590874 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.878787316 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286999098 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.19533998 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.195713084 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195553982 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.588361937 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.710718453 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.351526767 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.197883499 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.560154515 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.198400151 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.602955801 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.701565209 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.7574238 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.198826876 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303063459 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.200851129 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.19814581 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.197058892 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225762225 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.197420028 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.254449773 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.197353881 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.591696378 seconds)
  done (took 343.281892495 seconds)
done (took 686.291008984 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.885556931 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.866799666 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.971331252 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.865694992 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.847681304 seconds)
  done (took 10.578587117 seconds)
done (took 11.720650839 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.375387812 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.374451551 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.256956412 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.376188618 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.225023541 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.393561062 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.356269871 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.219295757 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.295574099 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.26964997 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.296484447 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244570677 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.223996994 seconds)
  done (took 18.051018729 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.506532635 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.494543295 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.262330723 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509799521 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240508679 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.53122028 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.391512234 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.39873331 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385296421 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215465908 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.21369628 seconds)
  done (took 16.294456997 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.514616772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.496685457 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265966731 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.51054399 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240465419 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.504465063 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.391566116 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.399589281 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.389280209 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215267967 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.212736725 seconds)
  done (took 16.287766202 seconds)
done (took 51.775728653 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.209237738 seconds)
  done (took 2.353399697 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.241047953 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.404071155 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.222022264 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.212124954 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.209539398 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.208876369 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.21278165 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210277657 seconds)
  done (took 11.069679345 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.208293982 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.205804251 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.209058946 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.20804924 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.208304219 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.206566682 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.206610505 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208255207 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.205564303 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.207844833 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.208726779 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.206367456 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.209029256 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.206180919 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.208717985 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208765784 seconds)
  done (took 20.468549447 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.209232798 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.207033341 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.206082914 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.207622829 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.205338489 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.206943093 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.209652535 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.207422968 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.206568533 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.207562658 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.206986735 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.2077682 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.208060897 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.207330564 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.207260555 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.20783294 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.20662861 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.206628742 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.21156493 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.206790295 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.207959917 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.207689639 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.20788336 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.207839568 seconds)
  done (took 30.130437796 seconds)
done (took 65.166305109 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.2349999 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.865295769 seconds)
  done (took 9.247253613 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.209250209 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.210433502 seconds)
  done (took 3.569493275 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.210417196 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.210625776 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.209993779 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.209296214 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.210563084 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211026887 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.209430982 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.2109662 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.211633575 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.210475749 seconds)
  done (took 13.251581875 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.210555429 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210974292 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.209074705 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.212137482 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.211138083 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.209300904 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.209979004 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.211819379 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.211434751 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.208562712 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.2128146 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209468535 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.212387343 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.20875384 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.211772859 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209832893 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.209108684 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.209428655 seconds)
  done (took 22.936167662 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.21172138 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.212487335 seconds)
  done (took 3.572237104 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.209538804 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209357113 seconds)
    (3/7) benchmarking "month"...
    done (took 1.210441884 seconds)
    (4/7) benchmarking "year"...
    done (took 1.210004316 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.210183124 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.210752146 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.209996366 seconds)
  done (took 9.619371775 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.213538683 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.39083473 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.468296197 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.783901124 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.215016574 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.217302771 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.05690211 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.217187336 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.2183536 seconds)
  done (took 13.930095692 seconds)
done (took 77.273317202 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.214622565 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.20608753 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.032899615 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.224267925 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.224835447 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.54724991 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.208842883 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.327237118 seconds)
done (took 37.135745775 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.220876789 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.929350157 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.934506021 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.209638296 seconds)
  done (took 11.223531334 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.201402513 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.110012821 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.203678827 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.203299345 seconds)
  done (took 17.871097202 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.818069774 seconds)
    (2/2) benchmarking "read"...
    done (took 1.541190399 seconds)
  done (took 4.509813177 seconds)
done (took 40.975092249 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.214744181 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.214440689 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.214950743 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.212879529 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.214053021 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.211819288 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.210841738 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.214825665 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.212346939 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.215703547 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.215085817 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.215748111 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.212536162 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.213925748 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215411049 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212037633 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212014972 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214362669 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.21193693 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212709923 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.212089759 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.215440445 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.211827971 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.212186434 seconds)
  done (took 30.275225047 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.215162558 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.213789507 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.214927238 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.214818152 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.212700865 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.215196447 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.215439037 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.211975887 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.215315699 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.216084115 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213870023 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.212512038 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.215366981 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.212923191 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216147967 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.213696644 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.216643896 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214369126 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216213828 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.213585169 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.216554379 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213770643 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.213993003 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216586736 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.214900209 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214711561 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.217102097 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.214512573 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21617391 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.213421588 seconds)
  done (took 37.59401547 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.220631068 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.223531853 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.217316537 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.217816271 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.217137822 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.216973723 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.217435088 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.215858178 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.219003362 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.217104897 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.216767099 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.21911218 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.217595121 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.217375024 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.217846521 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.21766696 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.217732717 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.216937412 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.218157259 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.219504402 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.218489897 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.218291312 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.217410986 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.21801735 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.217720082 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.2184806 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.218413288 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.21888734 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.218252734 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.218759543 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.219384867 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.218640641 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.218942646 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.218194533 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.219103685 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.217860776 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.223222902 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.225900725 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.218813893 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.219268598 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.218249877 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.219828042 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.218486373 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.218205332 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.219009502 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.218944794 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.219063757 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.219825973 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.21890284 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.218704033 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.219284674 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.219995554 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.219455097 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.219723294 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.21969585 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.220438462 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.219082312 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.218884088 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22021726 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.220219906 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.218872299 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.220015039 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.219852143 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.220344294 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.221042519 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.219557311 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.21955972 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.221028578 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.220174375 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.219412293 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.220731626 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.220426252 seconds)
  done (took 88.925183234 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.219933584 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.217459291 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217810603 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.218246906 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217278323 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.220311386 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.217791508 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220512492 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218467933 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.220848331 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.220367127 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21831181 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218491207 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.222331716 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220790399 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.217158491 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.221171599 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218773623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.221447718 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.220989536 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221024398 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.219113444 seconds)
  done (took 27.985173201 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221349712 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220578621 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.221102721 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221983753 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219165315 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221383734 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220528599 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222188115 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22183258 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218933241 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2190241 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222037941 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219571618 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219484223 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218968836 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219582218 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222005857 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219666541 seconds)
  done (took 23.127839791 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.220618035 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.219437017 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.22188435 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219710401 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.219998801 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222048666 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220762083 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222442304 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.221709684 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.22128198 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.222842321 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222692315 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.222473103 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220438248 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222349568 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220625123 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.222555941 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220182929 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22321495 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220539761 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220755916 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223245416 seconds)
  done (took 28.031021835 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222859167 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.22342512 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.220882046 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.221354246 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.220964941 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223889247 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.223876053 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.220710851 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.223610449 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.223652786 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220692766 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.223282872 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.221133118 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.222331498 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.220246794 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220795214 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.224051286 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.222258923 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22378612 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.221358912 seconds)
  done (took 25.605373601 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.224144368 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225316953 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.224453329 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.224904391 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2251443 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.224925079 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.224898545 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.223850696 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226083713 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.224454393 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.225502239 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.227101782 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225445858 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.225582722 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225356104 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22527406 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225828979 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.224921564 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.226193322 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225353797 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.226351203 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.225166846 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226274446 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.225938394 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.226072115 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.226564064 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225702512 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.226414486 seconds)
  done (took 35.473692211 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.225353773 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225800689 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.22280386 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.223379002 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.223861748 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.223732091 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.223650771 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.224116379 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226265575 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223153212 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.226390089 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.226135832 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.225679536 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.227124261 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.226416061 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.226045926 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226135201 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.224528431 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223929145 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22415173 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.225723651 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226846718 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.227200699 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.223418616 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.223573613 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.226657453 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224358145 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.224503642 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227012909 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.224140565 seconds)
  done (took 37.915792854 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.244765959 seconds)
    (2/2) benchmarking "in"...
    done (took 1.246217582 seconds)
  done (took 3.654068315 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.224485703 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22733426 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.226673848 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.224986198 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.224760301 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227657152 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.228117544 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226006378 seconds)
  done (took 10.973833576 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.226264874 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.227917485 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.227882015 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.226973299 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.227359971 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.228374225 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236927421 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.245152359 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.23009283 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.227747508 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.233298695 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.234971341 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.231899714 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228033453 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.227967117 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.230689481 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.228979255 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.228002119 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.227943084 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.229133416 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.229101858 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.231809047 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231384599 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.226324415 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.22905311 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.242494276 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.236373364 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.22922692 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.228293103 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.234513027 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.227803962 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.226905687 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.228870952 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.229426627 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.22876585 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.230233451 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240107498 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246052248 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.237779386 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230919319 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229280567 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.22714066 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.231063252 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.233680717 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.231163284 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.229937712 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.23025059 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.227679056 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.228388578 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.231592555 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.234779299 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228879513 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.228066204 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23701355 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.232457833 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238924154 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246848275 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.232871952 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.238362364 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.242999326 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.245295224 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.237052618 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232428323 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.230157807 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239299932 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.252796968 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240948942 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245421657 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.229320747 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.23158178 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.24065463 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245773097 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.24034031 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.230735315 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231277956 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.230478752 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232122088 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.231987 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241070748 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.252565402 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.231314322 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.231373014 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.242303504 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252467216 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.22997867 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.23118007 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.23265885 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.232246929 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.232555981 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2440087 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.248592723 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.232410988 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.231842075 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.232013838 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.2350372 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.231973142 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.231582783 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.233586136 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.230011117 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.233146698 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232601708 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.235909369 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.240630833 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.232536888 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.23305989 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.242106454 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.233004652 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232260657 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.244247429 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.234026727 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233370322 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.2340745 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.241592189 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.231299387 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236501557 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.242263967 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.233046612 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.234309331 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.233739512 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.234269073 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242940122 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.259858454 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.23415894 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.234217432 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.238916286 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.244630406 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233566928 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.238410781 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.234141874 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.232383576 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.231808326 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.236160509 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.234951497 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.236111954 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233443958 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236382585 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.231795044 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.234619839 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.234401362 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.235905291 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.237498525 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.234829955 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.236427022 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.238378687 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.235747675 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.236994633 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.243185849 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.236406687 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.237060134 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.237037174 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.23339502 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235518021 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.238257495 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.235496636 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.235931706 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236667601 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.235001764 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.234967125 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236370289 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.235812419 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.236720251 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.23605842 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240085558 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.23700689 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.242459435 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.23520963 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.234731178 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.237036021 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236735904 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235510531 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.237481491 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.235094617 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.238672491 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.243697927 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.236700458 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.236308451 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.241882547 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236135411 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23646642 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236824007 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.239500305 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.24327638 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.236841712 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.245898138 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.237633579 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2357267 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.238230089 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.238754036 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.236120551 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237178543 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.240413806 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.244550753 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252907179 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246359628 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.238933614 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.242023968 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.238739809 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.241238746 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.244852584 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.237960219 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.239671831 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237643507 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237737094 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238206541 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.241108509 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.236941448 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.238308324 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.238916925 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.238965156 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.237583889 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239130689 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.239542727 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24094118 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.236619876 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239595505 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238771374 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.237663067 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.236041149 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.238238878 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.237826181 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.239909077 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239130501 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.250745747 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.238402814 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240804146 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240341077 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.239204888 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.237943705 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.240023367 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242666309 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.240025238 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248191355 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.256161478 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.24039183 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247732885 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.255903133 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.238978138 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.243048803 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.240104525 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.238182913 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.242612246 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.248008966 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.240664191 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.240296799 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.239701915 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240092806 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239993541 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.249279937 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.238539722 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.240098433 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.240851611 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.243917678 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.239945383 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.242069171 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.241388161 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.241485284 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24357233 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24131651 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.241714116 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242652609 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.241664281 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.241220603 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.241027757 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244401146 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.248096624 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.248805693 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.242454593 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.243159824 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.243418255 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.245419206 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.24182155 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.241174952 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.240175362 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256324281 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.249570573 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249819156 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.246502628 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.243407967 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248636579 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.243023312 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.245484257 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241514523 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242289922 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.242218132 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.240461028 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.240022736 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244352413 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.242149996 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244617735 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.24406802 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.24658004 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.243843946 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.241373485 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.242489678 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.242484865 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.243521597 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.242578561 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.243598523 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.246446879 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245271665 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.242278547 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.243242599 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252290448 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259651994 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.244265947 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.241613498 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.24314433 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.243012067 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.244197662 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.243746137 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.245852411 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.250495493 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.245954491 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.252703651 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.245271538 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254122154 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.244183345 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.246321024 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.250510637 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.241166965 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.24173442 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.245058812 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.243055263 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25245631 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.260440663 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.245388792 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.246826288 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243870161 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.244543711 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.244636302 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.244341223 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244543609 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.244419858 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256212345 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.261632056 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.247137984 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246888861 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.243150531 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.245027841 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.245056942 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.244020494 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249973089 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.244022685 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.246022251 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.244550783 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.246618887 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.246044577 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.244553144 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.246168432 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.243056646 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.246448158 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255283318 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.262113359 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249027052 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.246587077 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.257770166 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245055266 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254711088 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.262913272 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.245964559 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.246206232 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.246663829 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.248687757 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.245872609 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.248636045 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.246125709 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.247160335 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.250102303 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.246403885 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.250030041 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.247000155 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.24708012 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.247841444 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255735538 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268272259 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.247590211 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250952978 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.243699967 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.247561348 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.249679563 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.248243293 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.243623021 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.247715955 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.254477063 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252331552 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.245266071 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.244648121 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246678138 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246659538 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.243596796 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.244144214 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.244055014 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.244022346 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.24752706 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.244235065 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.250325109 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.246222511 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.245239276 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246396058 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.244409084 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.256717371 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.245224113 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.245859565 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243480235 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.247068611 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.244349956 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.243899172 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.244331847 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245396556 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245372936 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.245739538 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250054161 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.253012651 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.246666719 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.243466513 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.243284158 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.244370726 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.245430459 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.244337175 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.244605731 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.247795882 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.245566575 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.24377147 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.246383568 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.24263729 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.244610089 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.244802458 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244536361 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249064048 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.250153801 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244936703 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.241432748 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.244612133 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244663767 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.242577438 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.245243447 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.256561493 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247426959 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.2535816 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.252412507 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.247671298 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.245028194 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247041433 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.252635552 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.243718943 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.246024631 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.244569485 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.247227227 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.244648471 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.248742102 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.24438166 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.255255598 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.246389729 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.244674316 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256452823 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.262564088 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244464174 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.246298545 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.248229698 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.245691804 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.24317904 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.246075017 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.244295731 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255251266 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.264039385 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244987079 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247392996 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.243750592 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.24665949 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25041419 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247091069 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.246474026 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.244223772 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.247581539 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245128131 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.246691604 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.245094756 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.245401933 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.247217997 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.248084696 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.25225283 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.244223771 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248518846 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.246471898 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.246388455 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24722381 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247977118 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.244742336 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.245561689 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.247260165 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.24611072 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.247611169 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.249711414 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.246945003 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.247694895 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.247306705 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.246710876 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249332518 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.256320212 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.254691092 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.246008797 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.246702381 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.248416054 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.250296949 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247184973 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.24700615 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.247633117 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.250128532 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.249382471 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247638152 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.24802905 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.250225631 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.266488961 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.264773391 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249318737 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.248063598 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254247882 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.249058398 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.24718939 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.248075518 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.252302985 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.251594192 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.25493026 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.247762062 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.257733837 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265117336 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.249151897 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.252222883 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.25179127 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.256164577 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.251862123 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247681563 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.250889757 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.253818035 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.266051002 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250110724 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259241313 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279970334 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.266326611 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.250451017 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.252286699 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247263672 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.248315003 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.252161567 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.249953328 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.250235893 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.249054763 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.249561003 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.251290463 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255797853 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.250423648 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.249934284 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.250229929 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.249398545 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.251975499 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.248248849 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.250197032 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.250278067 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.249973327 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.249810328 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.249701501 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.250036442 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.264910363 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.262590354 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.251258639 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.251069947 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.246479774 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.254898251 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.252555544 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259424648 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.256936837 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.249454856 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.25232848 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.251377949 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249508891 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.247757945 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.250453448 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.24957657 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248632089 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.248287562 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.26720241 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.257052939 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.257374699 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.249674684 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.250208595 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.250512592 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25157356 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249662365 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251364268 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.252002224 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.249225172 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252864943 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.24958109 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.249148765 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.253196057 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.25665737 seconds)
  done (took 742.269138856 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246944583 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247135607 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.247021645 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247898566 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247322339 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247869712 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247308561 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.24989187 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.248227814 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.248029249 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.248144514 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247542808 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.248392102 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.247974539 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24797997 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250004229 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249228086 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2475889 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.247511652 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247430524 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.248286347 seconds)
  done (took 27.395945139 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.249688875 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.248422296 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.248399524 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.251607906 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247946203 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.251104456 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.247988715 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250966038 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.251271412 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249453498 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.251407176 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25135391 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.248400227 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.248606197 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249022735 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251447449 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.25124623 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250139102 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.250793578 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.24887852 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251460165 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.248481498 seconds)
  done (took 28.684450413 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.250847495 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.252008901 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.250059957 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.249039995 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.251780626 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.249432983 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.251898081 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.252071532 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.252822633 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.253385762 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.250164298 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.253243251 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.258777949 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.256151724 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.256302645 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.251674471 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.395892332 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.252072191 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.252388216 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.251901355 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.249539311 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.259808288 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.251078493 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.249020044 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.249815518 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.252870897 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.253481278 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.252322736 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.253123688 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.253284139 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.255799804 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.253222355 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.253224185 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.255359383 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.255076469 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.254321469 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.257212479 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.252864363 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.251815499 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.253425988 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.263852639 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.273700696 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.25484586 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.260839463 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.252980436 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.253641636 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.256065663 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.259368101 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.250630216 seconds)
  done (took 62.773559001 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.256356753 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.253226253 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.250054262 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.254733051 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.253048451 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.255110707 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.253703408 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.2530102 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.254072625 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.255389794 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.256306584 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.251185939 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.252407054 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.257672687 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.252254051 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.254797065 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.255849867 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.252228056 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.252612605 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.25160026 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.252873762 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.254109045 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.256079505 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.253896758 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.258872584 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.255156871 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.253616517 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.255940604 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.25238049 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.251276815 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.256561129 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.25744486 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.256239218 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.254150276 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.257048454 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.257746476 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.258618514 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.256439202 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.257112806 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.254662358 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.259482399 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.257810775 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.258724772 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.258446875 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.257637223 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.254136016 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.254955731 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.254685391 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.255612842 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.258856138 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.255810133 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.255856621 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.255667554 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.255781878 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.258628521 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.257565884 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.256226834 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.257022348 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.259289584 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.258806931 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.25590837 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.260086505 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.257909486 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.260307101 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.258223735 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.258448593 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.259197687 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.260605082 seconds)
  done (took 86.588147161 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257050071 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.255992306 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258977696 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258738317 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259527738 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.258462233 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257253595 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.259948851 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.258046506 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257790205 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260483132 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.264098666 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.259646128 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.258909739 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.25626652 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.257913023 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.259090268 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256078872 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259925553 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259243782 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.258681453 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.257044595 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.258826475 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.257235501 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258954309 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.258741061 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.259286944 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.257560563 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258298482 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.259774012 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.25948191 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.258873893 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.258036168 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.258754549 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.260906382 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.260202299 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.259871036 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259463477 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.260019482 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.25775495 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259671428 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259714586 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.258888913 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.259484241 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260340803 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.26004905 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.258793062 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.260685723 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26045925 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261764575 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.260174673 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260355093 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258702756 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.259942627 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.261272037 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.260786356 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.261290095 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.259826614 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259831518 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.259417074 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260261698 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.260398264 seconds)
  done (took 79.267896058 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261531803 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.263690094 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.25852175 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.258917105 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.262358987 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.258573832 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.260945675 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.262138522 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261023971 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.26355451 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260573613 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258075008 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258635625 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.261904445 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.259797247 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.25983772 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.258557656 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.259405361 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.261696319 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.259858269 seconds)
  done (took 26.402169679 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.259193621 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.262699688 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.2590401 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259320549 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.262298785 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.260363071 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.262026835 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261684471 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259982274 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262204582 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.262196817 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26142205 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.26009322 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.260641681 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.262057487 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.259771547 seconds)
  done (took 21.369760449 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.26056258 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.262425158 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.26066434 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.261692932 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.258970758 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.259748914 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.264350863 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.260497247 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.25944103 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.262268704 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.262661312 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.263444911 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.262773285 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.262241388 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.259597221 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.263324248 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.261779137 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.259376062 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.263024201 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.26292993 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.260441133 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.261348131 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.261791563 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.261771098 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.260362146 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.260274891 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.259970721 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.26051798 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.259963822 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.264655512 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.258833394 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.258647301 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.259811198 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.260483639 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.263101823 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.259850825 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.26407739 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.264058186 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.26334186 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.263233694 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.263256556 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.261177021 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.26460512 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.264076435 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.261560466 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.265431754 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.261389275 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.261897921 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.260586352 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.258581024 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.263493095 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.262489864 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.26325061 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.265981887 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.263474166 seconds)
  done (took 70.594650822 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.26291629 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.263065537 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.26083405 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.263078618 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.26341345 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.2630039 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.263243617 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.260536411 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.262259304 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.263661595 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.261528144 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.262810441 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259904246 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26367597 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.259522861 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.262570044 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.257284145 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.260624239 seconds)
  done (took 23.909674675 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.260812745 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.259435554 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.264175049 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.258763732 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.259971332 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262027645 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.259168981 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.262686563 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261939596 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.257796516 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261459588 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.261265023 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262427502 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.263200746 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258350376 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259490238 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.263864507 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.261737377 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.260407347 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260508701 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.261385522 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.262368306 seconds)
  done (took 28.938594958 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.259242348 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.260056585 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.27713771 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.301260248 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.288499055 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.258256214 seconds)
  done (took 8.838238288 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259145032 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.260964657 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258406648 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262714135 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261979815 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259737143 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259833546 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259439094 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26252565 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.259852246 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260873757 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26181765 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262844872 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259940104 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263549483 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26164593 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26010156 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260287013 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261228147 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261554898 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259479808 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262611267 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260314037 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261433965 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261772518 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.259533194 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263158246 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261266548 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259732276 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263504158 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26356801 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261650619 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264121894 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261761394 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263510216 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263690329 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.260691217 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264008979 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26421065 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261349854 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.263958811 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265115972 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264871237 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262675257 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264507669 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261720425 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262597993 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262769702 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261511077 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265394324 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263496163 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261453464 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264234172 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264060942 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263888957 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264273517 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261454666 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261623964 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265479542 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266051164 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263575852 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265541193 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262937102 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.261952814 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263748466 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262540112 seconds)
  done (took 84.507505584 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264628553 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26222806 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262131634 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.26235952 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262394707 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262861013 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261148585 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26184611 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263802728 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261819497 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264772164 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261460246 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262144906 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261790773 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261571835 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263645756 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263121572 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262785544 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262449295 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263763394 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262409569 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261695642 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262282753 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262438808 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.262688703 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263916275 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.261160092 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262459468 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262233013 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262170537 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263752441 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262260623 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262377042 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.262371562 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263253678 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.260705286 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261826353 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.261265299 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263021384 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264257829 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.261656991 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266562889 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.262286617 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263854023 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.262476177 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263404631 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263496318 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264325101 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.263116584 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263150412 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.264363993 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263858088 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26558623 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264004677 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264375974 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264696457 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263655457 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265466812 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262553865 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266735098 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.263443731 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.263783646 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.265841928 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.26280411 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.263253489 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263594514 seconds)
  done (took 84.563034506 seconds)
done (took 1726.814827488 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.26687539 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.332569498 seconds)
  done (took 13.797803894 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.427369909 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.379755352 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.261290786 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.290325785 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.261697326 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.256796522 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.280276862 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.261909213 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.263030051 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.263478223 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.264286868 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.453094033 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.263198898 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.26232697 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.263525953 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.357075922 seconds)
  done (took 42.010938774 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.289840371 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.26886307 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.365638996 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.283611161 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.288620738 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.426536303 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.318276988 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.269008099 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.413394879 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.303747312 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.61570623 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.289336458 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.267922106 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.229984433 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.282172616 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.427262968 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.478291555 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.619584914 seconds)
  done (took 28.637400857 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.646352604 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.284590233 seconds)
  done (took 9.129660365 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.269544516 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.306393932 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.289841591 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.282507557 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.275382738 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.276956963 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.287883674 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.290542086 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.280497407 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.324646709 seconds)
  done (took 64.086319744 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.284085501 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.269462859 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.268593837 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.267556125 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.261273661 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.272567062 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.26793856 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.264199029 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.325314518 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.374348843 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.280382475 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.275625346 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.269428918 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.26876559 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.267561654 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.302723684 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.4222863 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.267397861 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.266624377 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.276220827 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.269497093 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.34886066 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.306006169 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.267693842 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.37568882 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.344459724 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.272417698 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.277442352 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.407196918 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.268272506 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.268001456 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.268616357 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.271146292 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.817494109 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.782340954 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.27352229 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.301882181 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.278419279 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.26860633 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.390040589 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.2705056 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.276871572 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.263984314 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.765321933 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.419599983 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.370468331 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.344580351 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.270597582 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.272213465 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.328195559 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.270970098 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.271298096 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.298111182 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.990708756 seconds)
  done (took 106.425593729 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.29989143 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.74797206 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.430572745 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.278770249 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.00585127 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.914460119 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.2643397 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.506239797 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.294263301 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.263135486 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.591146052 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.717043388 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.266127894 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.273840655 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.89550368 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.315624916 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.26287088 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.998886725 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.26718693 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.263171578 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.671490635 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.276582208 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.263496513 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.431775102 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.299904291 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.68828713 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.527444463 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.678894982 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.266979276 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.262378639 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.685305449 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.265851858 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.26815544 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.265272421 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.517986653 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.577572033 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.559315081 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.271315634 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.287396147 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.265603585 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.301328579 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.685552195 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.570177185 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.265850605 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.266393163 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.69145982 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.266657547 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.275255669 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.270221728 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.460435776 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.976734369 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.264456607 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.526465306 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.265958874 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.533736357 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.324868774 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.319261488 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.71280916 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.263741069 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.309859187 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.279126121 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.266570318 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.270231868 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.266924851 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.268038872 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.57670397 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.369632524 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.271538165 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.576484559 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.679962269 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.266893841 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.744354742 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.141765963 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.2714979 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.336701281 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.26685667 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.815069174 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.717781435 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.284305028 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.265148397 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.561379756 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.266733746 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.56913781 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.277068024 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.267022533 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.681610105 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.288978371 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.325395847 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.265953876 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.266747347 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.877701487 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.275545021 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.511845632 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.290408214 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.268195976 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.267205184 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.300016917 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.266256604 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.278460943 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.266862912 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.745424983 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.266592374 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.557185413 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.284035559 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.267739755 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.280273397 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.272474309 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.270164655 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.477226124 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.729511447 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.267631315 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.2684911 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.265230792 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.270118985 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.40298417 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.273643425 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.535593687 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.26868883 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.266731225 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.272794407 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.961769034 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.30790802 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.266037542 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.268414202 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.088568001 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.472522867 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.28277287 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.28021216 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.269479725 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.280179031 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.480727704 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.269710838 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.330222953 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.268712567 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.925629158 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.271881919 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.286243071 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.636376267 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.269606778 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.202070673 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.283801356 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.269752626 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.561944356 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.523586542 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.304151721 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.268700075 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.279565157 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917724135 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.302801582 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.406129742 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.283145569 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.282022115 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.465412328 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.647013436 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.268583888 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.835583949 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.270974526 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.47649349 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.271301429 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.573981508 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.715085325 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.269318082 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.270492832 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927372338 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.948293209 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.922960231 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.270093839 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.584662902 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.264641509 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.723037511 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.269681512 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.270879723 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.690799895 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.272038148 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.278232516 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.269692928 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.268969123 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.416096878 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.443739718 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.890303293 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.274643342 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.694115179 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.285441925 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.269636608 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.272909421 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.273149493 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.623051397 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.331154631 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.278292333 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.294511472 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.272041932 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.274124336 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.703156462 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.170518298 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.271925238 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.421776453 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.856839758 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.271976589 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.27131286 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.870871553 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.460249961 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.723087303 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.28635093 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.517375212 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.254781848 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.285944448 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.923654254 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.273494505 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.715387356 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.242512481 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.244430635 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.802803999 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.242353553 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.598938958 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.237433089 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.237281356 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.715148694 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.241615143 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.240124223 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.453970547 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.239730496 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.485892412 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.238332022 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.234477127 seconds)
  done (took 1093.258155562 seconds)
done (took 1358.543673957 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.227165772 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.235454721 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.219551041 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.236367112 seconds)
  done (took 26.094531722 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.244967694 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.24194646 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.244113636 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.244242361 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.246458527 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.244374737 seconds)
  done (took 8.643987505 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.302100917 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.237156543 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.238274407 seconds)
  done (took 18.95657468 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.431873098 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.37962309 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.564854399 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.163094088 seconds)
  done (took 9.718704065 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.244750369 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.243884375 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.248653928 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.244777319 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.246629245 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.246942214 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.243269221 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.24400962 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.246812196 seconds)
  done (took 12.38952195 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.712423265 seconds)
done (took 81.692798675 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.364474147 seconds)
    (2/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.222557471 seconds)
    (3/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.347447128 seconds)
    (4/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.415913962 seconds)
    (5/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.913865716 seconds)
    (6/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.265784826 seconds)
    (7/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.562017164 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.578375744 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.463014965 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.494676084 seconds)
    (11/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.928262373 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.279330222 seconds)
    (13/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.468398275 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.265313634 seconds)
    (15/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.229809138 seconds)
    (16/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.322602764 seconds)
    (17/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.377395721 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.573700513 seconds)
    (19/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.3361003 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.253268834 seconds)
    (21/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.594137254 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.830483343 seconds)
    (23/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.731312105 seconds)
    (24/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.363522459 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.77311895 seconds)
    (26/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.362044054 seconds)
    (27/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.241119088 seconds)
    (28/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.580358504 seconds)
    (29/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.247629596 seconds)
    (30/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.419430837 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.465131997 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.337498197 seconds)
    (33/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.317079174 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.024969795 seconds)
    (35/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.221196648 seconds)
    (36/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.31096587 seconds)
    (37/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.488241199 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.337561737 seconds)
    (39/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.226513944 seconds)
    (40/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.233099951 seconds)
    (41/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.214926209 seconds)
    (42/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.525791262 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.744592955 seconds)
    (44/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.227949199 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.265242623 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.340243829 seconds)
    (47/309) benchmarking ("sort", Float64, false)...
    done (took 5.475931047 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.339113772 seconds)
    (49/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.33291574 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.22522274 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.272996307 seconds)
    (52/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.389960514 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.499419083 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.427305232 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.211654949 seconds)
    (56/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.341683066 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.619414824 seconds)
    (58/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.40310021 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.299183187 seconds)
    (60/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.483443589 seconds)
    (61/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.616301611 seconds)
    (62/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.536199786 seconds)
    (63/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.650668835 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.825787796 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.999783743 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.063246308 seconds)
    (67/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.228994851 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.307472694 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.229636413 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.221656511 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.830363676 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.230957228 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.778888003 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.222096128 seconds)
    (75/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.753333181 seconds)
    (76/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.756039668 seconds)
    (77/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.3267356 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.53817562 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.80604286 seconds)
    (80/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.355811971 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.345191208 seconds)
    (82/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.428004465 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.24906312 seconds)
    (84/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.270774801 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.812173275 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.234185083 seconds)
    (87/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.719546616 seconds)
    (88/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.22981549 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.620119611 seconds)
    (90/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.473081878 seconds)
    (91/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.34749888 seconds)
    (92/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.352188122 seconds)
    (93/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.569114718 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.9360504 seconds)
    (95/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.233038615 seconds)
    (96/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.27540323 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.052478976 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.907066012 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.257753459 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.655599783 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.62873798 seconds)
    (102/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.230449725 seconds)
    (103/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.38860333 seconds)
    (104/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.238882002 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.445311109 seconds)
    (106/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.219486691 seconds)
    (107/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.255150458 seconds)
    (108/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.212718409 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.216166742 seconds)
    (110/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.327884708 seconds)
    (111/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.053560056 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.241542242 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.499221725 seconds)
    (114/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.413646105 seconds)
    (115/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.904081192 seconds)
    (116/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.364719939 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.616580321 seconds)
    (118/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.240643332 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.299116754 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.532938212 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 1.729554452 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.237159751 seconds)
    (123/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.278399774 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.488694376 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.029656866 seconds)
    (126/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.901979812 seconds)
    (127/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.778482651 seconds)
    (128/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.496878203 seconds)
    (129/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.183682898 seconds)
    (130/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.723305334 seconds)
    (131/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.39460113 seconds)
    (132/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.225427766 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.200539197 seconds)
    (134/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.277807191 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.318172825 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.054802793 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.263077363 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.230521671 seconds)
    (139/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.608693861 seconds)
    (140/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.715202937 seconds)
    (141/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.202293221 seconds)
    (142/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.418706518 seconds)
    (143/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.424703028 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.65167779 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.891679776 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.241742049 seconds)
    (147/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.669224266 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.265844987 seconds)
    (149/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.022129529 seconds)
    (150/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.299521879 seconds)
    (151/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.714017567 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.612099922 seconds)
    (153/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.217800614 seconds)
    (154/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.321231226 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.238505881 seconds)
    (156/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.434425393 seconds)
    (157/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.219279788 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.319481799 seconds)
    (159/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.241848713 seconds)
    (160/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.495964173 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.345829876 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.733529985 seconds)
    (163/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.531696426 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.204483252 seconds)
    (165/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.378033872 seconds)
    (166/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.351210398 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.919601845 seconds)
    (168/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.996105283 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.249051202 seconds)
    (170/309) benchmarking ("sort", BigInt, false)...
    done (took 6.22186784 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.919943027 seconds)
    (172/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.196744581 seconds)
    (173/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.256212258 seconds)
    (174/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.462268037 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.265622775 seconds)
    (176/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.299180851 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.202736996 seconds)
    (178/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.229256823 seconds)
    (179/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.259293573 seconds)
    (180/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.904256134 seconds)
    (181/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.295686874 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.21913586 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.330283521 seconds)
    (184/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.515574361 seconds)
    (185/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.243552706 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.294085558 seconds)
    (187/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.281942055 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.340261974 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.202644788 seconds)
    (190/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.308708927 seconds)
    (191/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.784423256 seconds)
    (192/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.273351025 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.213340724 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.465345888 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.266486037 seconds)
    (196/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.566445924 seconds)
    (197/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.760255725 seconds)
    (198/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.5890019 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.89010335 seconds)
    (200/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.281714816 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.512814856 seconds)
    (202/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.234460896 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.426707805 seconds)
    (204/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.969536569 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.801453661 seconds)
    (206/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.233864896 seconds)
    (207/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.382927022 seconds)
    (208/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.375251719 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.269534589 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.203681163 seconds)
    (211/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.867251812 seconds)
    (212/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.3010123 seconds)
    (213/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.768690811 seconds)
    (214/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.247573612 seconds)
    (215/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.668809604 seconds)
    (216/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.242352685 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.804746424 seconds)
    (218/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.259207446 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.32614376 seconds)
    (220/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.25907729 seconds)
    (221/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.997931228 seconds)
    (222/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.21224387 seconds)
    (223/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.211686921 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.434265548 seconds)
    (225/309) benchmarking ("sort", Int8, false)...
    done (took 4.300438092 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.066001089 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.221072462 seconds)
    (228/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.731528717 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.060929959 seconds)
    (230/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.889920284 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.351190307 seconds)
    (232/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.924846013 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.997747618 seconds)
    (234/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.648234006 seconds)
    (235/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.220399838 seconds)
    (236/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.732575492 seconds)
    (237/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.330628235 seconds)
    (238/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.386704604 seconds)
    (239/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.986171882 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.439087506 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.249356613 seconds)
    (242/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.304893482 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.220430905 seconds)
    (244/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.220745353 seconds)
    (245/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.415190192 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.339104605 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.21971676 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.433616398 seconds)
    (249/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.22085231 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.412426323 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.442739098 seconds)
    (252/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.764376706 seconds)
    (253/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.233808501 seconds)
    (254/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.368687483 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.246085222 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.247148109 seconds)
    (257/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.340672865 seconds)
    (258/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.226041984 seconds)
    (259/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.206516572 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.223172432 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.607393553 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.624552817 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.248236709 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.220832759 seconds)
    (265/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.897991845 seconds)
    (266/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.5566446 seconds)
    (267/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.375255121 seconds)
    (268/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.745820357 seconds)
    (269/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.238564684 seconds)
    (270/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.34689308 seconds)
    (271/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.365205076 seconds)
    (272/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.224562174 seconds)
    (273/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.001649838 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.208690222 seconds)
    (275/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.362709483 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.596702233 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.27531633 seconds)
    (278/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.560587338 seconds)
    (279/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.620740349 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.330053678 seconds)
    (281/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.51651832 seconds)
    (282/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.683931668 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.30504031 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.243807105 seconds)
    (285/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.247538854 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.337289873 seconds)
    (287/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.671314014 seconds)
    (288/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.521868319 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.221137357 seconds)
    (290/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.308123315 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.376295706 seconds)
    (292/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.249114422 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.264340462 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.544664548 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.239556361 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.309204786 seconds)
    (297/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.230620696 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.041982667 seconds)
    (299/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.237256919 seconds)
    (300/309) benchmarking ("sort", Float32, false)...
    done (took 5.20017464 seconds)
    (301/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.284020607 seconds)
    (302/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.249490422 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.246204577 seconds)
    (304/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.769565227 seconds)
    (305/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.948317751 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.226906564 seconds)
    (307/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.263098043 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.490593537 seconds)
    (309/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.977046765 seconds)
  done (took 875.524506878 seconds)
done (took 876.706079067 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.255438603 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.249380021 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.233765085 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.255717939 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.346086183 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.268213997 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.244615659 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.236879136 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.281237206 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.284150132 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.233266624 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.266335943 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.236177897 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.234539953 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.233969906 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.249442724 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.130140372 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.235690171 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.252049994 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.244675117 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.2513877 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.233434918 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.285072533 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.267999069 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.238748058 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.237929303 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.238753905 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.254105688 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.3471354 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.238450692 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.23851412 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.24583488 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.131725591 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.233554991 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.231456468 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.254486282 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.246696241 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.2447348 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.239432509 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.267877086 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.498162598 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.237318889 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.237700357 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.236910995 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.237206691 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.239586894 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.238143674 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.242345397 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.249260395 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.251050532 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.480168539 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.251776233 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.239693651 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.237136953 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.247945978 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.237651609 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.240321472 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.252858843 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.256309357 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.252504394 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.126697667 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.240941845 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.24008699 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.254410414 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.243856598 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.518349752 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.232814942 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.241591226 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.492899557 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.241350049 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.520151931 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.24584031 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.238385754 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.251751852 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.268912407 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.134190132 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.232841492 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.236842283 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.246160437 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.236403137 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.247017446 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.251055949 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.241925577 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.23793622 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.252008844 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.270955482 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.248513186 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.239436684 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.247338605 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.257194926 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.245962494 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.249808393 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.241044258 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.23377404 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.248401116 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.242717006 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.241670986 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.241808855 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.243655184 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.249273774 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.492727374 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.255872474 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.235753303 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.235831738 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.238640237 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.253045139 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.494798179 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.240285368 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.260815246 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.286734331 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.241697006 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.132036656 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.243052402 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.255569747 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.248751917 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.243999914 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.236187689 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.133507572 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.488753922 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.255346863 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.241587929 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.238110284 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.256506333 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.242763447 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.23668334 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.140523307 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.241611303 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.254480507 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.36167812 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.25025577 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.272913701 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.239377449 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.244159444 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.269825284 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.257300254 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.272826992 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.243278309 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.256271408 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.257482998 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.23873935 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.25181246 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.251770291 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.242629757 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.247562366 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.235962463 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.269424919 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.254175681 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.253101423 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.262820118 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.363033511 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.23858955 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.135086106 seconds)
done (took 208.309457478 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.299306041 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.234558701 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.330868804 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.239105539 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.335308523 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.349346849 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.23610454 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.236015257 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.235983992 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.616818358 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.236037759 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.237328245 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.235215473 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.236682277 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.320633389 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.239181505 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.235736128 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.580329256 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.239043129 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.312962564 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.232945273 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.237063722 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.239532079 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.619562834 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.239776805 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.239931344 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.31944977 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.239062084 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.584524413 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.23967688 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.234629527 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.584618237 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.336535159 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.256289674 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.250475961 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.247385599 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.347907379 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.255523156 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.335377703 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.322241286 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.336590383 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.278180659 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.237984629 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.232657998 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.241705087 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.241758578 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.238738234 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.276947677 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.241430893 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.239393843 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.58202743 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.250207585 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.248645116 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.239455725 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.238758439 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.261153806 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.238790355 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.241559663 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.3302025 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.241573119 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.309927256 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.621375532 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.619853449 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.241327965 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.235329363 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.239337691 seconds)
  done (took 142.231591146 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.308891962 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.316262625 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.346627882 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.241531294 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.291279867 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.352540973 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.242557484 seconds)
  done (took 10.277503898 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.248432451 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.241737931 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.292366041 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.291561857 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.241732003 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.389570896 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.242688045 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.253654093 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.240340618 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.294952196 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.244006519 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.243554824 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.249464289 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.23630284 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.291452686 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.254422701 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.358090512 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.244122873 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.243538186 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.394465562 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.241537105 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.249851881 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.296036325 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.25421448 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.244730423 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.249518695 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.810743322 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.243902283 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.240969079 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.244193216 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.241303605 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.282316541 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.244331942 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.243425247 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.240725114 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.359609929 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.244403734 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.241306921 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.244548887 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.240533639 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.243566135 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.243409093 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.244481466 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.241081466 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.243815202 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.267217811 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.244423599 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.244735604 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.24489775 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.245138631 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.295630624 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.244663446 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.244132094 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.24197468 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.300139153 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.251805842 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.244936134 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.242892351 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.245527174 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.242983194 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.396689168 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.292466744 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.243887593 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.29225486 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.245894887 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.245761095 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.245686736 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.245380963 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.300399878 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.24561708 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.293855998 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.242718005 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.401340758 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.269528688 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.245924778 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.249062867 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.249063617 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.246601642 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.245040856 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.252940022 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.243822909 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.247708401 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.2524218 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.243669725 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.244769753 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.349326506 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356572962 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.244833095 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.261467834 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.253472591 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.243866873 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.299803651 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.247009838 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.24385631 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.298370961 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.36129101 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.30010314 seconds)
  done (took 144.496430216 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.251744413 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.254259908 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.248263189 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.262275592 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.24807373 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.246972918 seconds)
  done (took 8.694418775 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.249098912 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.247969547 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.247170164 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.247559035 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.246940839 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.248951136 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.248020626 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.248803844 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.249991653 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.247978571 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.249651016 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.250355488 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.249594384 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.248187873 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.248574804 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.249290287 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.248301341 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.246855369 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.248220088 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.247702367 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.35480864 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.247689412 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.248819326 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.248948081 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.251957993 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.248408427 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.256570818 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.248618578 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.247998442 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.256520204 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.251321434 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.249680911 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.250068598 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.253182036 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.251606912 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.250080202 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.252643882 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.251035194 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.248254783 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.250270398 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.250910458 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.249379969 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.249931579 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.250836471 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.251258012 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.253784124 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.25431781 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.25815683 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.250377988 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.251204569 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.252163094 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.25182989 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.251378022 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.252612121 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.255449667 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.254410558 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.254528765 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.251472813 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.251037724 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.251389893 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.251314949 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.252194562 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.251967605 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.253278319 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.248629369 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.252618394 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.252778523 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.254250033 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.250934095 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.25095181 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.252433775 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.24993385 seconds)
  done (took 92.341857719 seconds)
done (took 399.215458629 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.395699555 seconds)
  done (took 7.583520523 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.434125282 seconds)
  done (took 7.624467849 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.009068943 seconds)
  done (took 19.205390133 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.267132922 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.273431028 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.248095477 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.253709482 seconds)
  done (took 26.230417905 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.384520873 seconds)
  done (took 7.573732797 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.243848105 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.260070888 seconds)
  done (took 13.695394078 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.57960509 seconds)
  done (took 7.76860925 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.019559873 seconds)
  done (took 8.214899273 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.251770147 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.263215017 seconds)
  done (took 13.716169829 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.234824347 seconds)
  done (took 7.425204401 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.064612299 seconds)
  done (took 8.256206699 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.254498029 seconds)
  done (took 7.44723185 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.298449288 seconds)
  done (took 7.48871632 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.392732373 seconds)
  done (took 8.58252359 seconds)
done (took 152.000313481 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.247008254 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.24784333 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.247573103 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.248308773 seconds)
  done (took 26.181098656 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.287469138 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.287710795 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.289057254 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.298560346 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.292088826 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.291104398 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.291336476 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.287823383 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.298395091 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.291547132 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.290126519 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.290458461 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.288060869 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.28070679 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.290875723 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.290570648 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.298776822 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.290078409 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.280768603 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.291988002 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.254957301 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.299147596 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.29133258 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.255061104 seconds)
  done (took 32.100226657 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.453226467 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.327215275 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.408726043 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.306583028 seconds)
  done (took 6.687778599 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.306637519 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.308613311 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.320050955 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.358504983 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.393360732 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.318452738 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.282579238 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.277354667 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.26404177 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.30876577 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.384702547 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.324800429 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.416747635 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.255419568 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.442246328 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.255624929 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.256062229 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.307948396 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.35945823 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.393540202 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.256671116 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.307765281 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.310816841 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.325180758 seconds)
  done (took 32.929048151 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.255017944 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.264147529 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.261918324 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.255614995 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.25550533 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.256497205 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.262076252 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.257371145 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.277861507 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.257428294 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.254919418 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.256719602 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.255949704 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.256903793 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.255695654 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.268905691 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.270281038 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.256865125 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.260336656 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.263046337 seconds)
  done (took 26.396521804 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.250349222 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.201631465 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.602283261 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.505821158 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.249605681 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.251968242 seconds)
  done (took 28.25599981 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.318782627 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.433388516 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.257497609 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.5733707 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.648814615 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.257439351 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.259006917 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.466602774 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.732357049 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.745629686 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.306840643 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.318143382 seconds)
  done (took 18.513992465 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.255516731 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.2530334 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.259342176 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.268811635 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.306259259 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.26219393 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.264041271 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.251708253 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.308152711 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.312100434 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.264260332 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.30709717 seconds)
  done (took 36.50854228 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346327527 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372162247 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.14668875 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965872596 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.631657286 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.465265175 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.977070666 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.67221887 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.259330932 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.526469338 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.916908899 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362569656 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.508270366 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256115949 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.255668722 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.183079562 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480258818 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706839232 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256014343 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.912673616 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279722235 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.262787765 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.067727291 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.281601192 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.465563748 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.383274591 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.514918614 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.254391855 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507133841 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267475762 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266852806 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.254045725 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529272828 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905039322 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347404109 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26472904 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.932433103 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.968051639 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.243884222 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.992313035 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.675144379 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.257239906 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264510169 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255037497 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.190123985 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.264724481 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678694064 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.263855138 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.96767801 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.256117204 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.266199791 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349814172 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.259384524 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.076371694 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257267779 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.256222806 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.253923839 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262409934 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826013887 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.365646407 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.261549366 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.193060335 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361833268 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.002226839 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.834428128 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.359495326 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.260620053 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.261026677 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191602355 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.000075731 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.273402074 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403726277 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.278488697 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.905756942 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899949655 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.907783025 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.199571315 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77980255 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265050612 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.193711733 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.484428841 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257754643 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192457773 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.20203094 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.19124602 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912376773 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.266481353 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.599463649 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.265471692 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.675912479 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.271268689 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276024886 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280437762 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.480726411 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.216291014 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257571982 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.679954757 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400543317 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27971162 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.68139841 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196750065 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.262481227 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.512727481 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.469644904 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267173302 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.187153136 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.445377243 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267883325 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.275891001 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.258790068 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.28256621 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.785973062 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270820716 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.385163323 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27783927 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.25884908 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952874785 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268881369 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.361390988 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.92920227 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.499813596 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.986159263 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261467377 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342116326 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.263210184 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.260839803 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.029838462 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.775728917 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.260433298 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.262643052 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.26691557 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.271372249 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.261232637 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207406757 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.256677046 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.951141494 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.261022072 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.482026987 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267567226 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.536943407 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.1934944 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406900305 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.314968568 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.482385127 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.374491731 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.258015922 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517690388 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266212157 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.265273018 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273204363 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278152755 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358207773 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282528268 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.270662136 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.516887599 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.264257518 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.265008872 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.045106664 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.67529716 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268317187 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.264948191 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.087383674 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.78660235 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240641647 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270963956 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151413085 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.275103714 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.324799265 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.266055539 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.271323969 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.930572079 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.047009315 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.268008862 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.258961193 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484568883 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.271976287 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.062872857 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342172878 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.442544539 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.79454159 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.275632859 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.196572144 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.974924961 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.955068936 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261565476 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.196949228 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.262794814 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270768572 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.272858377 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485593049 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.795311567 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264346767 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.960166675 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.268904907 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27355043 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.268459221 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263070189 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.901191178 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.414381738 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275888998 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.27483034 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406004516 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.276252006 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.197782933 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.267269035 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.268105062 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.262781292 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.262096133 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295405164 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.968654566 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729238453 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.521882399 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.974196681 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.275834715 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.124342895 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.292531541 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.261712789 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.712725595 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282988904 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.28393515 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272313847 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.274819244 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.021359024 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.923878533 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831183647 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926856366 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750067913 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135962128 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.266318726 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.267806472 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.691758157 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201715198 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.821469729 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434561764 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.68872245 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211253433 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.449105176 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.383330199 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.961617696 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.276147895 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.492119376 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130955324 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.726066091 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.288896671 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476706438 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.299511713 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.266067563 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.19506885 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.562126101 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.483929023 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.733655654 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343456839 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685847805 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.723020065 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.280003475 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.265510944 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.563138854 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423459837 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.984029863 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.438984735 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.267560513 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.968023533 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741384613 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.275565257 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.492749221 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853548064 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.267974228 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.451929833 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204512371 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.277335154 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.278265789 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.267620892 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.401928771 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.270408165 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.520183709 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.27752243 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201970776 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.267306138 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758121629 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.127475871 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.273030811 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267003667 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960053926 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278625637 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528507064 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.272413478 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.889983344 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272921612 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.201255006 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202115814 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.962417357 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.274416975 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264075011 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721827044 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.356851766 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.264569352 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293471188 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113793418 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.522833004 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.282061656 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.802032192 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493714458 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.046823785 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.29347761 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.368356326 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.766744097 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.267414002 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.267623636 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.503784227 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.09608609 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.493069977 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.178330734 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.181030155 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.268533578 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.483192124 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268152767 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.978821309 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504320699 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.980071198 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.274847323 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91916788 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.295501404 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.991276538 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.197526753 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374659417 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.27561239 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347494857 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279696839 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.279468464 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.279962542 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426763352 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.995549297 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28388087 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.283166475 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363454072 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.423855734 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.882458952 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.274419672 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808036881 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947656286 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.809664353 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.282401815 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.270210576 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275212456 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204560188 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419157118 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.496836043 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54464675 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399794708 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.414593941 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293283112 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.777408683 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.286103604 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484543256 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545930336 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.166659426 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272299378 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284297982 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.27149069 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28161898 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.482215628 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730063971 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.792868427 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388181884 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.273996847 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.696529777 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547294265 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27147275 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271994543 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.863668259 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.285230274 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.571282579 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.27860705 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.01062318 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418454452 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.281752681 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909965806 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.283520534 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.432065051 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.044988694 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.081910141 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.527386881 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.683013707 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.28420231 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.8149852 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.939360458 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536143436 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.340222728 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.284322706 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.375241977 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420373485 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.270851187 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.273325009 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273829048 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116872433 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.983604347 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.283197034 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812620031 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.539072354 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.271337529 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.272838374 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296113288 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.284065046 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.496356313 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94068383 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498112099 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283670211 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.282039652 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.090714214 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.816647921 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28878198 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208455261 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.278493858 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496585908 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.510914446 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297574975 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.728171024 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.986538889 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796157647 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.246334764 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296651929 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.278770471 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.921196204 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814358636 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.911228317 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734577562 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.842673323 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275108978 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550978968 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.28015258 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.275149641 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569683395 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.278760167 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.275191748 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.304101436 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.810517303 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987406611 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.293731373 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.982545001 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.214607008 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616143537 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.889880282 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215140217 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.275541101 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.446116604 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.28035715 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405229211 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.287492304 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.277636041 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279873378 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.036232297 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.571736356 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.282092776 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.279224099 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.813239141 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.282320636 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285378612 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498636566 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286136834 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.964290185 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.626649993 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.531443601 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.278731465 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.263546619 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.280212476 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.278675575 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.265113903 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.476576365 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500549157 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795023281 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.281261043 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.288231751 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.2812002 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.494079702 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489274217 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.019924371 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.30412538 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290392423 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293975738 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.184570535 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.77971205 seconds)
  done (took 1543.148056046 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.297205769 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.317120708 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.307347306 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.323199264 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.335823165 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.416642643 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.296790776 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.302195821 seconds)
  done (took 51.817259383 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.287647944 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.499984507 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.307338388 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.287489826 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.2882115 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.282395255 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.687436126 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.294315042 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.288426848 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.288240364 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.291904175 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.292130419 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.853917483 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.290338867 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.279600438 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.276057942 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.28925455 seconds)
  done (took 64.311404702 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.287586593 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.490383758 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.356356076 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.296299959 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.985903914 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.282367341 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.526274477 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.331610159 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.284710462 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.305131034 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.931153439 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.327459805 seconds)
  done (took 82.627789917 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.285871809 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.285704317 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.285715506 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.286713493 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.285750369 seconds)
  done (took 7.652335544 seconds)
done (took 1958.322333107 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.670148029 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.919337884 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.891306786 seconds)
  done (took 5.032786928 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.428216134 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.475979022 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.596611015 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.603557126 seconds)
  done (took 7.326285996 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.558983526 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.662362589 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.46871589 seconds)
  done (took 5.911977301 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.585331694 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.293453405 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.357023031 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.279705255 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.284529712 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.283792164 seconds)
  done (took 20.071791239 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.284434504 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.287915162 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.286934258 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.289920764 seconds)
  done (took 6.372031278 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.265995427 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.012533821 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.267950893 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.286264891 seconds)
  done (took 18.055736093 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.030959761 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.046129856 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.028872581 seconds)
  done (took 7.329627627 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.28630659 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.125753386 seconds)
  done (took 9.636229624 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.598076014 seconds)
  done (took 2.821467459 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.415201345 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.54937012 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.229252651 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.168522829 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.25357891 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.712188722 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.73986864 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.369227088 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.159063856 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.235279021 seconds)
  done (took 26.056451107 seconds)
done (took 121.742607434 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.796767197 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.663115524 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.486381664 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.765742988 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.507725669 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.486306803 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.485178853 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.7347246 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.317627974 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.270450538 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.811719215 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.508652226 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.436061607 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.66467476 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.43431884 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.286954974 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.507892258 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.930334351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.453109169 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.651379773 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.486007503 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.407866694 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.754524046 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.473776698 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.509654998 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.441056656 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.989709472 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.285463371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.626274421 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.051916886 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.441703781 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.821226993 seconds)
  done (took 183.713290011 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.283064684 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.296123604 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.284368214 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.284870979 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.28297094 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.285976768 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.299415412 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.282931998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.283683465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.297385124 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.287985529 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.284135533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.284596887 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.28443158 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.284746322 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.283333964 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.302725401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.285273856 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.287519392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.284475681 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.284029605 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.296837523 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.283666689 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.299755057 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.286358134 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.286162852 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.298105595 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.284659544 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.285065651 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.284504766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.297633262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.294888126 seconds)
  done (took 202.458671814 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.284327376 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.285416686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.286822458 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.28630106 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.291415959 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.2873615 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.287315228 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.286785756 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.294419188 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.286823758 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.286282862 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.287837158 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.285626808 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.285801719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.286529517 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.286475091 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.286240156 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.286915124 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.287586104 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.299156551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.288947593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.292778013 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.284865 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.305332974 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.297381121 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.288943309 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.288525145 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.298648905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.288352893 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.287781276 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.288229366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.298947842 seconds)
  done (took 202.492431759 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.488245815 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.293480153 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.293843503 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.241618178 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.294472816 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.293769102 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.28796509 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.490545457 seconds)
  done (took 13.91277612 seconds)
done (took 603.801147923 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.484375574 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.220621334 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.482166344 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.315901544 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.978715658 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.315630919 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.315398471 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.468561164 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.199566661 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.475301576 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.463321182 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.310988118 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.598392454 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.311796051 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.547508467 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.402124656 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.120755399 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.230811143 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.609543052 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.780395011 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.552987964 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.710968313 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.474436016 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.178123757 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.604785293 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.70698898 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.942973904 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.123872374 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.314402352 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.612041554 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.825204881 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.192371694 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.365827057 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.34845144 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.405986723 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.38708765 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.171043586 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.347904228 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.487003576 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.478774978 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.761876669 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.009626092 seconds)
  done (took 87.865209164 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.284583824 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.28360306 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.283008345 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.28372774 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.285109217 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.284055855 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.282943404 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.282322375 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.284018872 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.283384344 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.282519014 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.285598561 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.282776564 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.284761587 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.283674817 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.283231005 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.284656099 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.286765793 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.283129521 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.283727572 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.284184861 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.283629878 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.284577924 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.283789283 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.284511686 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.284590698 seconds)
  done (took 34.615568777 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.298054569 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.518530268 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.689243584 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.304699127 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.2978768 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.300972323 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.367592851 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.298074888 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.300961356 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.300198448 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.44348132 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.301579482 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.332482651 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.69889458 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.301800231 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.298505303 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.299076285 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.299385608 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.525640801 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.307569431 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.369185279 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.301833181 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.368543168 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.30995765 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.30190482 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.299688917 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.303581736 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.782669904 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.300643662 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.446453719 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.990413509 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.368018293 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.74135769 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.703315361 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.99413359 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.303278727 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.299600865 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.450187444 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.301148767 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.300421398 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.36829544 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.300043715 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.700488457 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.908166706 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.314711052 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.29981613 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.805392905 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.448283412 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.520343139 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.309141068 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.723110127 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.305173341 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.301131573 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.302333513 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.520236516 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.306709781 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.299468563 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.808961881 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.304741316 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.368505266 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.302560618 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.301231654 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.533107475 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.301249912 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.525078653 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.303534616 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.30934992 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.302485881 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.70590086 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.305952271 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.923980075 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.316180738 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.301402665 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.445984382 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.524517507 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.834664459 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.307288209 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.539409923 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.752090193 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.369299369 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.308028971 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.775820032 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.37439638 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.30759723 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.305590411 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.304745496 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.302459555 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.345945288 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.369394644 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.85627666 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.918668384 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.826334101 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.373894233 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.315622434 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.303462857 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.814328558 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.317928122 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.302807594 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.69664547 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.933381288 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.317042845 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.311918017 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.913896834 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.319520276 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.372992448 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.3101769 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.70990194 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.304363588 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.347912883 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.303524914 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.310089534 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.306173572 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.374787853 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.307143743 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.304352952 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.902925157 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.469046714 seconds)
  done (took 170.617078257 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.296361351 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.314461307 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.308809337 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.296337625 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.296823358 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.303021665 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.296116936 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.296366691 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.303205347 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.296767746 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.296625126 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.300019827 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.299683394 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.300303959 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.307967261 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.304340048 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.90820783 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.298410556 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.298017174 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.311414698 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.077659426 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.298565495 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.296428087 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.297855997 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.299315134 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.297954773 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.318967674 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.300011369 seconds)
  done (took 151.059488522 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.306301125 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.815635802 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.308048813 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.422961935 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.325861432 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.303365581 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.421751872 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.357982534 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.309404302 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.301801637 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.303482223 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.579823937 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.309307001 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.772599343 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.474371368 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.424606552 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.773953569 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.308740787 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.303517992 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.303993739 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.424848068 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.313092895 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.578174556 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.814030453 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.307818304 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.81478223 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.295152163 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.306500023 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.305733544 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.816884053 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.304698645 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.58097312 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.376368723 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.360006601 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.81793054 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.769231459 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.77028711 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.437281991 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.305711352 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.304120368 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.30486353 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.295111532 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.81748273 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.308365427 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.30698718 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.810366297 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.320947153 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.308327404 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.316050229 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.305520642 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.359998702 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.360644122 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.583595879 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.823511798 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.375819913 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.329843834 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.424656676 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.675184461 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.309630436 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.769106652 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.294709475 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.822528422 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.30949487 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.295989698 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.308083441 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.311970506 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.441030698 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.427597043 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.772161102 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.309219473 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.771366301 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.442431267 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.309027508 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.308423169 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.309672728 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.821495739 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.772371096 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.442012311 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.431432875 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.481703698 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.299253846 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.307701906 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.297472026 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.377350163 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.307318737 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.822729225 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.774196808 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.309841821 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.310749248 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.310853161 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.3105508 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.464848293 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.824594409 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.377713024 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.765853246 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.597642048 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.584703219 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.309378861 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.362456764 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.308577818 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.58676752 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.311666592 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.361044011 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.737000778 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.587396097 seconds)
  done (took 154.77251658 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.529768543 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.40876874 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.396246843 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.412451633 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.811636379 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.860629426 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.434569943 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.4293309 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.411224785 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.540778433 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.381358623 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.399321856 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.478847042 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.379697821 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.963199666 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.370519282 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.397242995 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.427985791 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.410915144 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.277691257 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.906168034 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.588025703 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.465414623 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.288699314 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.395063867 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.046697685 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.827020787 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.802476658 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.464631541 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.467322724 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.819034779 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.380010751 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.193003815 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.925863505 seconds)
  done (took 62.538045277 seconds)
done (took 662.697180754 seconds)
SAVING RESULT...
DONE!
