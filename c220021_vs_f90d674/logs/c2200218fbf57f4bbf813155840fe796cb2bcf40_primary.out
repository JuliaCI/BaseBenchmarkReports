cset: moving following pidspec: 24177
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.971178825 seconds)
loading group "string"... done (took 0.582406134 seconds)
loading group "linalg"... done (took 9.152258057 seconds)
loading group "parallel"... done (took 0.176436849 seconds)
loading group "find"... done (took 1.462739224 seconds)
loading group "tuple"... done (took 2.176234607 seconds)
loading group "dates"... done (took 1.433469036 seconds)
loading group "micro"... done (took 0.228639921 seconds)
loading group "io"... done (took 0.616680587 seconds)
loading group "scalar"... done (took 44.780953663 seconds)
loading group "sparse"... done (took 13.952125476 seconds)
loading group "broadcast"... done (took 1.130292787 seconds)
loading group "union"... done (took 12.498438377 seconds)
loading group "simd"... done (took 2.626545649 seconds)
loading group "random"... done (took 10.567354871 seconds)
loading group "problem"... done (took 1836.497699186 seconds)
loading group "array"... done (took 26.576831351 seconds)
loading group "misc"... done (took 1.14843785 seconds)
loading group "sort"... done (took 3.93012034 seconds)
loading group "collection"... done (took 19.51644402 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/5) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.536402011 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.461875822 seconds)
    (2/2) benchmarking "String"...
    done (took 0.128218513 seconds)
  done (took 1.210078049 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07599951 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.176961453 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095460705 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.109802223 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.11103666 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10875783 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095196985 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110538607 seconds)
  done (took 1.427081429 seconds)
done (took 3.925262715 seconds)
(2/5) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.413209141 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.105509341 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086220055 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.107847359 seconds)
  done (took 1.422447646 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078431827 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101418028 seconds)
  done (took 0.800082181 seconds)
done (took 2.841871589 seconds)
(3/5) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.064208443 seconds)
  done (took 1.676297698 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.239072083 seconds)
  done (took 1.855234466 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 12.685461758 seconds)
  done (took 13.338934099 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.497192138 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.511598476 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.04160919 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.143259121 seconds)
  done (took 2.814410289 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.834799322 seconds)
  done (took 1.467028875 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.562444069 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226545801 seconds)
  done (took 1.413681992 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.902653351 seconds)
  done (took 1.540275352 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.206667395 seconds)
  done (took 2.835376942 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.387151104 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161910002 seconds)
  done (took 1.189351678 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545251742 seconds)
  done (took 1.18166689 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 27.71912143 seconds)
  done (took 28.355315581 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206255602 seconds)
  done (took 0.848602294 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.294883849 seconds)
  done (took 0.929032505 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.773256933 seconds)
  done (took 3.412663211 seconds)
done (took 63.473428986 seconds)
(4/5) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.165617659 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082967842 seconds)
  done (took 0.883205875 seconds)
done (took 1.523958234 seconds)
(5/5) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.36736278 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134707607 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148144903 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.345591487 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187427621 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155924947 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147359334 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.571657685 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.957350983 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.186582144 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141471019 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.51604557 seconds)
done (took 5.499908903 seconds)
RUNNING BENCHMARKS...
(1/5) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 1.948675986 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.233536439 seconds)
    (2/2) benchmarking "String"...
    done (took 1.002259402 seconds)
  done (took 2.890371843 seconds)
  (3/4) benchmarking "replace"...
  done (took 1.694683995 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 1.694962218 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.946154924 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 1.695276956 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 1.694527053 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 1.69419677 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 1.694679799 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.643136122 seconds)
  done (took 11.704217612 seconds)
done (took 18.883450264 seconds)
(2/5) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 1.683396484 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.686219691 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 1.69231847 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 1.532330673 seconds)
  done (took 7.233787254 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.398904941 seconds)
    (2/2) benchmarking "read"...
    done (took 1.054548821 seconds)
  done (took 3.095068679 seconds)
done (took 10.970910386 seconds)
(3/5) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.368263694 seconds)
  done (took 3.008539563 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.877148305 seconds)
  done (took 2.520321634 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 13.286505535 seconds)
  done (took 14.066181084 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 1.739060672 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 1.748348775 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.712472171 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 1.696898708 seconds)
  done (took 7.537514064 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.712217783 seconds)
  done (took 2.353004869 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 1.70034841 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 1.696132897 seconds)
  done (took 4.038810957 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.033387001 seconds)
  done (took 2.673313658 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.130894016 seconds)
  done (took 2.774151512 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 1.698628153 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 1.710829948 seconds)
  done (took 4.059010263 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 1.68759166 seconds)
  done (took 2.32887116 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 27.026364479 seconds)
  done (took 27.67002933 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 1.694755112 seconds)
  done (took 2.339927256 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 1.714279109 seconds)
  done (took 2.355276438 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 2.849871804 seconds)
  done (took 3.491027935 seconds)
done (took 81.856556988 seconds)
(4/5) benchmarking "dates"...
  (1/1) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.694868012 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.705584982 seconds)
  done (took 4.040607837 seconds)
done (took 4.682689183 seconds)
(5/5) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 1.702093999 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.867422452 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 1.696326604 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 1.695604889 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 1.725001017 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 1.717145967 seconds)
  (7/12) benchmarking "nbody"...
  done (took 1.69621755 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 1.88864137 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.098026812 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 1.684530623 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 1.693980569 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 1.694718302 seconds)
done (took 20.802010671 seconds)
SAVING RESULT...
DONE!
