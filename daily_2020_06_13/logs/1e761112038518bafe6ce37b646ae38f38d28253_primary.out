cset: moving following pidspec: 4665
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.229639299 seconds)
loading group "string"... done (took 0.564410172 seconds)
loading group "linalg"... done (took 8.231625818 seconds)
loading group "parallel"... done (took 0.182052361 seconds)
loading group "find"... done (took 1.244952171 seconds)
loading group "tuple"... done (took 1.998758765 seconds)
loading group "dates"... done (took 1.299940755 seconds)
loading group "micro"... done (took 0.201034051 seconds)
loading group "io"... done (took 0.938980777 seconds)
loading group "scalar"... done (took 39.569813416 seconds)
loading group "sparse"... done (took 11.903355048 seconds)
loading group "broadcast"... done (took 0.973446437 seconds)
loading group "union"... done (took 13.794257548 seconds)
loading group "simd"... done (took 4.792754141 seconds)
loading group "random"... done (took 9.241279197 seconds)
loading group "problem"... done (took 1.606201087 seconds)
loading group "array"... done (took 21.369902647 seconds)
loading group "misc"... done (took 1.740190455 seconds)
loading group "sort"... done (took 3.359538464 seconds)
loading group "collection"... done (took 17.982067639 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.531810822 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126292942 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137141245 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120047083 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.150183331 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117329943 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124875022 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084805527 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.874554569 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15091653 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114745681 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434064455 seconds)
done (took 5.354039913 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17438844 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090258842 seconds)
    (2/2) benchmarking "String"...
    done (took 0.07909399 seconds)
  done (took 1.232772291 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065877666 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12743157 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067206974 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067674063 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067702363 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067835732 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067586307 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067790044 seconds)
  done (took 1.596506941 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073139962 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069208876 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066505118 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068253095 seconds)
  done (took 1.341468408 seconds)
done (took 5.4842468 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.791632259 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210763459 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190517997 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.405286727 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135283171 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.179372399 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.651127317 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321677201 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.203949561 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094508991 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112261423 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.357972035 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123504678 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649389463 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080130927 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095994972 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140433921 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438655753 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071852106 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088904611 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092575109 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130240578 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089358189 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077190046 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151819953 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070435175 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143672617 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083894711 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069262844 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222052381 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175589811 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663797809 seconds)
  done (took 10.416656721 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102231193 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099585524 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068714552 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125315429 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097723444 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070417164 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075724913 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068043951 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.0901693 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128486637 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091227148 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108485472 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066207591 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070127819 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083579526 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197516608 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080297806 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08174597 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068593034 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079508822 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108258429 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080856161 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080105985 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080678437 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129601623 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.169448015 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096867634 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098347754 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073157158 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081639557 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115881037 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127479797 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066787247 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066984047 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1257518 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095317717 seconds)
  done (took 4.552414855 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.098927178 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152606251 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090246329 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140502839 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.090968558 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065153707 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112050763 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066268241 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082926667 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.236547242 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.392593881 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.626684746 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.123762328 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117091196 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104497439 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071068668 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069724029 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068282268 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.252605005 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097935235 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111557245 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083318328 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070259982 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073896759 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064923612 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071666146 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064245231 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068534746 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087679961 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076133098 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.33757055 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128496815 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069133122 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.831989666 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.166713225 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06857782 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106163832 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167215711 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093923094 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142097461 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068037447 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064890415 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.158541995 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.199359926 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072358167 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067968309 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085871367 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109948921 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120381885 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065989012 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066405058 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166839321 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065619225 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067670001 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082006098 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.245173262 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153481803 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09567659 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065592057 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.294092424 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094455947 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072245976 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065272366 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065479124 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.192009102 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118679913 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069295051 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067966619 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069312013 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068889066 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366249088 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066606004 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.207887796 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068786331 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077954813 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070913198 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072230328 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079559602 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080176322 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092954425 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06741347 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074287525 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067212247 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066579617 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067350247 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.093796064 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.391611959 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070560529 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07276588 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065762801 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094113137 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098586744 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067248114 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066487745 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102304872 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070594777 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066651849 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068413061 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118683784 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070405358 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113322792 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067554385 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192060999 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097537176 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07017588 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102218593 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.07756748 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071787216 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.466110298 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065805322 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073528549 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066501699 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068546289 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067164727 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079218953 seconds)
  done (took 22.037184608 seconds)
done (took 39.170013163 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.240217646 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083395093 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083406553 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084142305 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083536387 seconds)
  done (took 1.72096128 seconds)
done (took 2.853203725 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125871589 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101992575 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064651002 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097839863 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065535685 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101601463 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103608693 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083818726 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099875684 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065132402 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097621464 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065066233 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065232971 seconds)
  done (took 2.28664784 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082770898 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083356814 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069973119 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081794974 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06247628 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081542204 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080995376 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088277076 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081121128 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072562622 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06332873 seconds)
  done (took 1.97588267 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08266617 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083708036 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069475821 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0818714 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062725863 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081542591 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081388961 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085970386 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081597293 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073764003 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063225949 seconds)
  done (took 1.970589904 seconds)
done (took 7.355671096 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079265851 seconds)
  done (took 1.184618779 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.533513208 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.597485676 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078946604 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100045729 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192549335 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108656713 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.23858673 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083469453 seconds)
  done (took 8.214164054 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.106359688 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07014236 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068873806 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069628197 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070351651 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070631279 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07109431 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069821055 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070916427 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070738071 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069187012 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068940328 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070149382 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069893643 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07063191 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069267356 seconds)
  done (took 2.347611205 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097063181 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095303239 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073744306 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07513974 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073067943 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072148281 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074693955 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074299017 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071299735 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073401353 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075935349 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073473259 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073071572 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064364172 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074192584 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076839644 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071786046 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074876553 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075387162 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076612563 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075518264 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064534345 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073738593 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074697862 seconds)
  done (took 3.025686412 seconds)
done (took 15.88991013 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.116851408 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077702296 seconds)
  done (took 1.312686722 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.07935987 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079903403 seconds)
  done (took 1.282505794 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07790047 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063245626 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084428941 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074034135 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063766342 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063155144 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082371672 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063470065 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06341832 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063687913 seconds)
  done (took 1.822243386 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065274732 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072453194 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069192755 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079282884 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070339001 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064432977 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069577974 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065868635 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.074228346 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064137609 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069129709 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084010195 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068999857 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085499983 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069254235 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068266295 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070481737 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067753101 seconds)
  done (took 2.409379041 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064256081 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063823797 seconds)
  done (took 1.258770532 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067187844 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063636492 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066412013 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066683551 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063454593 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062996152 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064794193 seconds)
  done (took 1.5811749 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400357002 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122296675 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.321363341 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070465042 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080451979 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.251059601 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064989612 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070259923 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069790974 seconds)
  done (took 2.62025244 seconds)
done (took 13.421263983 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081256887 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08664994 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097673403 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.411711765 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093053426 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068380018 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114207111 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.180766199 seconds)
done (took 2.274050802 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217179904 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.854479779 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.471190891 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208133931 seconds)
  done (took 2.669000524 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346498105 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081190081 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077113777 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066902305 seconds)
  done (took 1.715915225 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068428293 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07062608 seconds)
  done (took 1.276250148 seconds)
done (took 7.017770677 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.180402462 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064457958 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090508038 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064436967 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064887477 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064468009 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065010942 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065076731 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064904963 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065008953 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064716922 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064751266 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064780666 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064736059 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065464132 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065529664 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064955791 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065164321 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065321024 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06534677 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065379895 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064738655 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065268634 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065312876 seconds)
  done (took 2.867949777 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082452809 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067089966 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068660363 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068522974 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069393742 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068741348 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06873524 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067574148 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068668071 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067635452 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069345732 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069241036 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067042675 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069626355 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066774818 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06922259 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068659206 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067344423 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067111426 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069245281 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068652114 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067380023 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069319506 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068569208 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069053424 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069390798 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.0669635 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06737937 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068623711 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069053308 seconds)
  done (took 3.214658498 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066477209 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061248625 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061651387 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069952735 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061343213 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062481978 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060994444 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061653019 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062442716 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061583428 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06248754 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061589106 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062084071 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062199191 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062689753 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065935638 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078899061 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061735519 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061833261 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062035993 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065685628 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061627642 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061530331 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.061255181 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061157232 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060932218 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06463001 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061062141 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061861577 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061186045 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065284765 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066019676 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061143829 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066189249 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065717276 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061753541 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.065251878 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060873343 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.062049352 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060954927 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.060978503 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061262485 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06150064 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070214037 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061569269 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062912007 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.061250324 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063281678 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061639431 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06340915 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.060987997 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061013864 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063171592 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062423838 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066264205 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.060902638 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061934434 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060801735 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061845054 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061281338 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061749312 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061612457 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064576683 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06205791 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078927121 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069852472 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.061129989 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062677617 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061668756 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064380446 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062715503 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076529139 seconds)
  done (took 5.715510126 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086348747 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087199579 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066584999 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066481947 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061963169 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061876909 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070162151 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061862673 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066864302 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080882774 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062657325 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066469465 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066523971 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066135282 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062174999 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066848877 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070498551 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062544144 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062493662 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066022966 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062415748 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070024837 seconds)
  done (took 2.65545431 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149258906 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0678578 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105174971 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072708462 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070570798 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072911518 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067820462 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068445176 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068133418 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068860527 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068556216 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068230179 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070315913 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068872007 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068523845 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068395985 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067829599 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068692066 seconds)
  done (took 2.522085762 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.0787757 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067686923 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08640271 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067929094 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067556536 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067221389 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07156583 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072221863 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067259484 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067520454 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072391317 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066978638 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067073684 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067435475 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066820574 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067500755 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06729453 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067373099 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072392265 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071097777 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071226659 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072225916 seconds)
  done (took 2.706442878 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079153355 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065872812 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08138337 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068473087 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062257239 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061957035 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077130454 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066717517 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067816477 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066243641 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067650362 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062061555 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068890187 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066705727 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069110092 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066577926 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066196349 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066692913 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066149668 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062070317 seconds)
  done (took 2.520565157 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083539858 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064979571 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065071249 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071326179 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064785871 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064869244 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071469685 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064960412 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064967469 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086149197 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065468153 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065388814 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071404389 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069274014 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065316319 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071420033 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071138182 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071254538 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068172376 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065425973 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085809395 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065423967 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071604641 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065448805 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065072305 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064964312 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064998871 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069147722 seconds)
  done (took 3.100701305 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065873481 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064301537 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064936083 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064612062 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064626101 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065029305 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064911021 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065204071 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064430647 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065582184 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064809429 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064932578 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064607955 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064656982 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064728341 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065110668 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064901984 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065370449 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065121883 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065246684 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064703011 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064938657 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064527987 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064731331 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065106269 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06468334 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06508735 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064674329 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064606297 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064954043 seconds)
  done (took 3.113705484 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076171368 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073183812 seconds)
  done (took 1.316011439 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064408918 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078238039 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061209623 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072446111 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070524376 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065253162 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071519607 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070780668 seconds)
  done (took 1.715917876 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086373966 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07497445 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06417355 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075524008 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07473409 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085049056 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.125997056 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064039249 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074132635 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065347199 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082187076 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066334155 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075195141 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069163176 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074668646 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077937873 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061819511 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068849688 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066035196 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062407455 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064658685 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077638627 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073561212 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062232986 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069466625 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091313618 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079698018 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06362411 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070921457 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076392734 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074539924 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060996576 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06369284 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064432869 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062024104 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075172458 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082213907 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070867142 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076433929 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064439986 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071949759 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061800706 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072492684 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075078733 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079957526 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.064384311 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.064300529 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061701767 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064774154 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070239792 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061841888 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068226006 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061296636 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075915694 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071532107 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078832045 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062582826 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069395127 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070477786 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070556668 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075236801 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069842464 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073424012 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063567285 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079484215 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073772057 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075629074 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062022485 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061282487 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061886648 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077457553 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09196773 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073358591 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06421647 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06431434 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061485947 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070993211 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064575099 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073272574 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074824969 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063718581 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067802653 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076055407 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067896721 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069686878 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069668928 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062718828 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.066795926 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06440197 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083375992 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062353255 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06171251 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064587143 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078287787 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070376868 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06644353 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064740056 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075167803 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06078868 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064042318 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064427287 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069555751 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077324055 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067697363 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067908169 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076808567 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072913097 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069202945 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070372659 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060758152 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06447635 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06594918 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074477566 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060198805 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069382125 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066401445 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063431347 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073891673 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061275162 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062311116 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074737929 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073794469 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.060700137 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059578979 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069011599 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062079245 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06449541 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075516384 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.060866198 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060546152 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060878931 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070273733 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.061823584 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069891228 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065867835 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069677542 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.185123175 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062706357 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068864318 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076229217 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068467474 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070995481 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074153609 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07014403 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063140999 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076389485 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07057073 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066295781 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074255884 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067972527 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061841724 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065695861 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07091491 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063059691 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071070146 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066033982 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070758799 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064130424 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063171388 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069231415 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064316388 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066003994 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068824203 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062545993 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078410911 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070250051 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06161455 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061581778 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07064537 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065313546 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06303972 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066017871 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070236465 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064212702 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061826516 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06303545 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06967857 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070885111 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066974473 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064304448 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073770723 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081599711 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063190434 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070366108 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063373886 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065293289 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064643044 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07831573 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074346408 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067887462 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071091941 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06127814 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073437911 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075790864 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06640989 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062245994 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066381361 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067471093 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075336319 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06720697 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064609047 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062414687 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069347673 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066179695 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070351667 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063399101 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066374345 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068654872 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062594994 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069595743 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064144922 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07797652 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070955257 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061813794 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065880888 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062350604 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075047308 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062065473 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065210443 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066258724 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064069466 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063178705 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070568776 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060734339 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07622324 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076215812 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069081788 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066026369 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063299668 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075926326 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069466004 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072251411 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070814633 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073031321 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079132375 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066056891 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070407815 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078357013 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063399326 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060941787 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075626011 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062596997 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062680794 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06270571 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062705873 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070918266 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070492243 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073843706 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061134759 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070292319 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062033338 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066148803 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061569762 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072322283 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070444321 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067508825 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075264462 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06338407 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.062955216 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069983217 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.061905524 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.062851259 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06315507 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069716102 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063007483 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068209694 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065067852 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068365494 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064393008 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06058979 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067922887 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062218019 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067614226 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07109803 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061599954 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068037966 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069035814 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06244735 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.196653621 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068615407 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067027205 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072090386 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070548958 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068955267 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070505093 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062095728 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076225939 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063581663 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076614255 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068615447 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06091323 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.068856246 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070715434 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.06844215 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.063961135 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064414066 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069478475 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063409876 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070171288 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075522092 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065283466 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079324633 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074713604 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069708237 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070892196 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069426401 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06985266 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066019806 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067709202 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064474633 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069170955 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063162699 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072574136 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070161739 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068539688 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070072473 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.064977359 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069201649 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064746679 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061484354 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066418375 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066775471 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063396715 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076890831 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.064228136 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066577278 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063076361 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064199209 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063136122 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06136553 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070411788 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07145705 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064370145 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074549143 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06640091 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070505263 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079178384 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061574791 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062432534 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062142562 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065482246 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076580317 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064195325 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078188418 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069076063 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066768831 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061621914 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06474784 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062642322 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06187767 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062130206 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072135221 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066324853 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062958398 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06368567 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070571654 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064788253 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076224643 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063166016 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068061576 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064010378 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061528844 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066546242 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065862095 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070601578 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064128478 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065522928 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061572684 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063346634 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067898313 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069913905 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063512471 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069490771 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075795755 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063482458 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07070572 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066364552 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061651141 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070632544 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063205984 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063516876 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066545128 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071270606 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070816961 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064289979 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07775912 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065964284 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070184457 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064252934 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061811209 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.062867076 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06348958 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063536118 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066138923 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064595316 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077104402 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062334149 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069667302 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06898331 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.0672335 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073409407 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064366691 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069147924 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067638089 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064917092 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069558081 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075581527 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065621368 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069899048 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062989273 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068118054 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072240646 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065739756 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073869043 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067710845 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062656385 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068222454 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063710242 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062677894 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062145449 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061516772 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072571344 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.062768968 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.197050785 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066804943 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062644398 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068548149 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066591039 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077593861 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070806361 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071220592 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061883497 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061375513 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065248239 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065285113 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069558113 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070850991 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073975679 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070587305 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067383201 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063112168 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07826651 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07353001 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071225648 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065454612 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071891881 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064398299 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071052333 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.0682004 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068958278 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064962852 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071763774 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06962331 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066383826 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073740176 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071446403 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06469996 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069665296 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069477777 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069685055 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062086409 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.064461767 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070357537 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072703134 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070533538 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063726524 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078866078 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065617104 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069310105 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066051112 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063278856 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072375669 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062256552 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070296999 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065221465 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064802612 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062317122 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066496166 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065811765 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071052195 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06637872 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062479139 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07955983 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078579014 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069966178 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063141845 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063427475 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062175429 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062355403 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066587302 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064845033 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070130085 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078926701 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066465304 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066437401 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062311287 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06419453 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071282115 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071590474 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061867065 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06198056 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066539302 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069660525 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075773728 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06265145 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063908624 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071683665 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07068965 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062369141 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066419482 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061409854 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071775217 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080544437 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064108611 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069475229 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073753342 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076235039 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064029531 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062552421 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064127643 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069762567 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069693454 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064371459 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.064624151 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082623134 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071110553 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066088743 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06261 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070931684 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066411591 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077519542 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065164539 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067376633 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072290113 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070156596 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070630886 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073866028 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074689741 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070350796 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070153905 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063144801 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068627978 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062992186 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06720611 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064836839 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064400224 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067754016 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.069582415 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066005057 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079841818 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077447898 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066208579 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061314716 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066160655 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065441665 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061268409 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063927138 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061835294 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.061824084 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061515285 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.077716072 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068490434 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070762323 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066493278 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062791228 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062237422 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060054787 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.207870702 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071535355 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070747379 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062326613 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064540051 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064628947 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072474261 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066541487 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065234549 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069653684 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069085482 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069476739 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062521124 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075502937 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06285392 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069893265 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066027696 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064159327 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064043875 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07106997 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067654589 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065225241 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070480966 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071178716 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065303567 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061930154 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061933463 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073262722 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062345017 seconds)
  done (took 42.324062543 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100510957 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062910258 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062580641 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062193376 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071504288 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06337389 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062285332 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063439836 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063362226 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065254051 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063020154 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062556629 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069829317 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077173746 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073098063 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066652623 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062420498 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063470737 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062353064 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06317335 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070048383 seconds)
  done (took 2.672147512 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070185879 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077567847 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074519777 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07919066 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071081385 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067712038 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074445757 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06726331 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075085641 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072389573 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075005747 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067041461 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072581332 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072524616 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072500563 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06783138 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075886081 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071398289 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067322781 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074742153 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067652718 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074717795 seconds)
  done (took 2.838726203 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064339533 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063421307 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069199957 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061422835 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062563621 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062160437 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06583958 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061226507 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065163924 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065701507 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066219992 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065324763 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069922079 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061523967 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06686506 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.061893648 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107175271 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.065397645 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063178476 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064277748 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061685739 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070574854 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062015976 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062095866 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065801553 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065853431 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063515702 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062149524 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063003067 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065751792 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06306952 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061917772 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069478041 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068807517 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065572349 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065460461 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06269846 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.063255615 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064631911 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062201518 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068994238 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062477444 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063406047 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069851391 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061498558 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061692699 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069819317 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063055006 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061544672 seconds)
  done (took 4.456573532 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07465773 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109930778 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067652701 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090573652 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076191231 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069016131 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067987972 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092250621 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063451964 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064291345 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077821914 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077644967 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065749496 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067260334 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070185341 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065363801 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066317178 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064509614 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068833386 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065015934 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068646573 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069631122 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076570183 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077139647 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066377789 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064471511 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064988939 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067041669 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076615896 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069273139 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067010955 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067578285 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076638362 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070421397 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064777491 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064815823 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077701255 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065759274 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065458651 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063772115 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064895848 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066722924 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070095349 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077901393 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065271149 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070468044 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065611408 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063003659 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076697499 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064931458 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069249951 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07774635 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066136464 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065371637 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066632388 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07665996 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065418201 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064334836 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065719495 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076534668 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063152849 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066623729 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077217325 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064514433 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068865999 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077328558 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070257552 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066247507 seconds)
  done (took 6.171701219 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073212562 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093142095 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079114555 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078859035 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072859331 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07383478 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07355804 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073624161 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072983899 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077155437 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073330876 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113847725 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069120274 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075077348 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073472645 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073736227 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073116644 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073508462 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073304687 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073781801 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073184009 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079402546 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073424988 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079131821 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076061707 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069634196 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072898149 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073384724 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079481126 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072923995 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076209305 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073014304 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073034033 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079455895 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076309433 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072901178 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063181968 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073126102 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073226229 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072766573 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06933843 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0796916 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073053344 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069145937 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073135338 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07298719 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079229052 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07616631 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075202699 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076971821 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073491386 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079515431 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073215938 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073443986 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079653816 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082096635 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079190262 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079364628 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073813044 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079202424 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079894109 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082370538 seconds)
  done (took 5.984183261 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079433739 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069873262 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08130507 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062116133 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064268577 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071746772 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062067799 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061799428 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070832877 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070509392 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072092053 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072020386 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074416348 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072272065 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072012865 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074647746 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072258484 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071877152 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070521787 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072091718 seconds)
  done (took 2.700180679 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077086075 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080985463 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067325563 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071546944 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.067537233 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072189148 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067325209 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067884964 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068299981 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06773423 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074199356 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073694109 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068072879 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072563968 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073849127 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072346364 seconds)
  done (took 2.409525998 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084232229 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.06999654 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077137717 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063603726 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067219889 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062579834 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063522348 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06170119 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062533246 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076527628 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063330218 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074775325 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063627916 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062995183 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063120315 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069131233 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06287404 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063788157 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063497993 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076814927 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070562034 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064722436 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067352786 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063641334 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069348624 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071376817 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065010892 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067267922 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06350267 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063752405 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069269812 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07028594 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063411189 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06459405 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062516817 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063628314 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063394776 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.064101924 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069248351 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06340392 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062420943 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069284539 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063692846 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064182317 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062398014 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.081238517 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062873873 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069127982 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063994696 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069290545 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063342483 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06604876 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063892241 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070758642 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066018117 seconds)
  done (took 4.940616295 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079050124 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067499322 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062203624 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061353919 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066872031 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067862775 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067639072 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067657594 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068413008 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062113656 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068222862 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067452491 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068383852 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06780588 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068225757 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068014915 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06284176 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068363273 seconds)
  done (took 2.49468322 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073259395 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067217023 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07157681 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066890599 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066809927 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066519039 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06219721 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062549394 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062952946 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066793535 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067295097 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066479334 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06244314 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066617976 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067603597 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066907586 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066498518 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062402486 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06730331 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062208144 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066898888 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062553835 seconds)
  done (took 2.723829656 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096177866 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083792964 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140340189 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079724765 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086918268 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072076309 seconds)
  done (took 1.837716514 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093142262 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09795836 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067071314 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067190177 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072572175 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070178359 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070243452 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070909978 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07526027 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075581577 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070671419 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07783374 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074959688 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077168995 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073108354 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073259238 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070630203 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070820285 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067553927 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080273661 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071302761 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075485909 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070822885 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070816604 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070901619 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076986647 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075314131 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075474425 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070409468 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075033865 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072779851 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070618033 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075225512 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075432241 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067412444 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075134703 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070866581 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079803687 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072786484 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076933077 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067043367 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073045724 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074957863 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074331794 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075181177 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071306223 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074341119 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070525558 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070428861 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085146723 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073030053 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076531862 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072451311 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075057785 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074634748 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081676979 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075224257 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076933781 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072797781 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075365837 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076893514 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07271146 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076892698 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075354164 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072941259 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076925744 seconds)
  done (took 6.185471871 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105073611 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067477801 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070628708 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07536443 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076759973 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071265824 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071521227 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071193727 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070724205 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068249722 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105950781 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070816329 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077514219 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07745804 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071139396 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071019202 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071019725 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077187103 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068238312 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082144825 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070776645 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076933518 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076920093 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077250855 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07558459 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073316017 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070835241 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071276907 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071471117 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071142771 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074502268 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07107792 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07670281 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067627029 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07728273 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070925292 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070903175 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074680542 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07089289 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073379247 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077211678 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080250398 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070462318 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070627244 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075448527 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070517278 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07048013 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067629246 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070742099 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067354012 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075240326 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075323759 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075133332 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0764483 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070703275 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070547717 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070463107 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070388812 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070567376 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072739871 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07645257 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070635397 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081277275 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070508965 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070575287 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076880136 seconds)
  done (took 6.176093389 seconds)
done (took 126.502637097 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208642082 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186592465 seconds)
  done (took 1.655014891 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074410404 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103910634 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08217917 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133537069 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07170853 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105571154 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104218872 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08345571 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071521384 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071875444 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071785711 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073972582 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136690699 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071521328 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071502348 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0740832 seconds)
  done (took 2.680648098 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105527621 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.21506944 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108518507 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069154405 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104014254 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077244652 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069168923 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084844053 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076304702 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07143796 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07721678 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075319652 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071174321 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075163765 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075922062 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077603093 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071648805 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077106564 seconds)
  done (took 2.868590588 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103660948 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093472674 seconds)
  done (took 1.483215993 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.173918749 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133257636 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201298368 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344012237 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.150909621 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.423957252 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.137912727 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.137578578 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112663224 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13386896 seconds)
  done (took 3.232544447 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104281689 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.197866929 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296413883 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120251656 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075765725 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.110867992 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12226237 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082025266 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081008524 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080749811 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08086195 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07864898 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100519563 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076850279 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075757927 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078376265 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103937292 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07503905 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07626793 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076834562 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104460313 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070204616 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076861234 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075025778 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078969909 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07864552 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071176168 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069886124 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076230531 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076030575 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07947044 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.10794203 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078795678 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105222379 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074448456 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106300321 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078790014 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07446575 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075969649 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074743115 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07771483 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077887844 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07873906 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077609681 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.07097564 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078774025 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071533806 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069618685 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080506683 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071448296 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080781186 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07944119 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10498832 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071084902 seconds)
  done (took 6.132855185 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108962017 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106808587 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071000663 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112621009 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104234415 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071080848 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105845948 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099514871 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108061851 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07111974 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069521587 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071411177 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079711195 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080990483 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116047103 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107998093 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073097056 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070837985 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108456574 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107789305 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069999372 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102076172 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098503257 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107245579 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069448423 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071231353 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069692603 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071412459 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076468559 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078483628 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070128293 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079579494 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083604631 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077430821 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06895651 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069359964 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069503195 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077995932 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078759531 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078210259 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076973323 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068987421 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069608255 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070460196 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070009846 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068730369 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07749559 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078913523 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077635476 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069992473 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070779743 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069048985 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06994767 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078271757 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076034193 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07902496 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07828381 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069032859 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069199151 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072021735 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079160046 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078403408 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078374763 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070317661 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078635859 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069806521 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082123385 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081950922 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069478284 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070667122 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069523716 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06993785 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07025812 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076663383 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076942141 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070407532 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069609398 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069350157 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078780442 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076986297 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068965417 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075775689 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068452744 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069032384 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070678781 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070602804 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076339585 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078686607 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070803248 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069164303 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069660249 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069231506 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068142154 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075713636 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077955922 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077657134 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076830718 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070329674 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07758243 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077024016 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070346645 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077225254 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069159697 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070202542 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070053502 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076333171 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076270995 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077639159 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068822607 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068120749 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074916721 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077149674 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068128517 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074963594 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077059753 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075593014 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067666309 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078056674 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068609559 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077118163 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068674842 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210372593 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070766605 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078250937 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070639264 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070122538 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070044275 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078765604 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071170792 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069472848 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070767692 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069758042 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07719295 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080997733 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071201321 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07715396 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077100494 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070934277 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077932338 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069830754 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078321495 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070563072 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070568285 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068599125 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080209064 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069917098 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069797098 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070151035 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079404112 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069618798 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079109535 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076301641 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068533592 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080118137 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078616696 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076148039 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07995788 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071200704 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069130937 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069043845 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070122531 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0761638 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077731389 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071023192 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06975751 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07678003 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079206056 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06936673 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078515389 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07729661 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077707564 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069757993 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07014493 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.07996189 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07944502 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077575342 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077316965 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077830573 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070155578 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077250056 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078237194 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069612016 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083615397 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070140242 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081329867 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077539977 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076676162 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077711458 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079077625 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079609845 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079408407 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081450226 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068969954 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069516857 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077830104 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069767337 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069642506 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076696296 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070826924 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070467758 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081416477 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070192319 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079179388 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069077258 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077692221 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068757015 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07083728 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082784253 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069890762 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070332593 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077260093 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072612472 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076321284 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07883005 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076840164 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06908962 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070952114 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078535488 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078063098 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069131124 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069333281 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071150851 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077082017 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076278367 seconds)
  done (took 18.470021136 seconds)
done (took 37.823227644 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210002829 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.1565983 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.189186717 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116634779 seconds)
  done (took 2.061412607 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.10884837 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099422604 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087788646 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066110157 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09442936 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066171134 seconds)
  done (took 1.847318875 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.298496055 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203593598 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183339021 seconds)
  done (took 2.005821814 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208946229 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197461546 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465418039 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.286607003 seconds)
  done (took 2.57704387 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140385862 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08231887 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.065187805 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083468683 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123557773 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.149425597 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093133074 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.11807227 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076346262 seconds)
  done (took 2.307924615 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148808895 seconds)
done (took 12.300179343 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.116281687 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.155717946 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072756167 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.129982661 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.0693902 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066658098 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.122137835 seconds)
    (8/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.214820898 seconds)
    (9/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076769664 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124616458 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.202507197 seconds)
    (12/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076233324 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077053852 seconds)
    (14/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085879959 seconds)
    (15/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079309251 seconds)
    (16/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076205739 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.243106152 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.243149297 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076006147 seconds)
    (20/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077259555 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.135652332 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075581952 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.348439356 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.114440422 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.201746098 seconds)
    (26/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08082775 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09303398 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.181219927 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085784203 seconds)
    (30/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.210721602 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085239297 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.200637811 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.14057127 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183416052 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.119764562 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.103798337 seconds)
    (37/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.167465999 seconds)
    (38/309) benchmarking ("sort", Float32, false)...
    done (took 0.134296088 seconds)
    (39/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.134045621 seconds)
    (40/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077464319 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.07591993 seconds)
    (42/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077332376 seconds)
    (43/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093071235 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122327308 seconds)
    (45/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077838298 seconds)
    (46/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.233102067 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074541847 seconds)
    (48/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.243473903 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102271067 seconds)
    (50/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.167988029 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065132758 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088089676 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.104693262 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.196538572 seconds)
    (55/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.218387124 seconds)
    (56/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.166919215 seconds)
    (57/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.217178602 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 0.148995733 seconds)
    (59/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092721514 seconds)
    (60/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.135230639 seconds)
    (61/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080276415 seconds)
    (62/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.147087795 seconds)
    (63/309) benchmarking ("sort", Int64, false)...
    done (took 0.067316957 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084486477 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074639327 seconds)
    (66/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.215246854 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073831074 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100073057 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091666616 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091314508 seconds)
    (71/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065856439 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074521166 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09023472 seconds)
    (74/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.23516304 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06899254 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064311643 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087405362 seconds)
    (78/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072897992 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191550769 seconds)
    (80/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.190529065 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065584919 seconds)
    (82/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075865053 seconds)
    (83/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072059184 seconds)
    (84/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074120341 seconds)
    (85/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.226396265 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.128926092 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075850302 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.279088951 seconds)
    (89/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077213676 seconds)
    (90/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067911555 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069637895 seconds)
    (92/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.130439917 seconds)
    (93/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066950879 seconds)
    (94/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065963088 seconds)
    (95/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.16739468 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100423772 seconds)
    (97/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.207164472 seconds)
    (98/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067289426 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089173881 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069165786 seconds)
    (101/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.143564412 seconds)
    (102/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06772963 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066690001 seconds)
    (104/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094620649 seconds)
    (105/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067162629 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075207935 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.132937832 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067720174 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08898802 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079013467 seconds)
    (111/309) benchmarking ("sort", Float64, false)...
    done (took 0.13211266 seconds)
    (112/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067170686 seconds)
    (113/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121081306 seconds)
    (114/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.126948596 seconds)
    (115/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089585225 seconds)
    (116/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073184148 seconds)
    (117/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.073403555 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073173166 seconds)
    (119/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.126296266 seconds)
    (120/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.07669023 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079851052 seconds)
    (122/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.126093766 seconds)
    (123/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072041177 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088806004 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.17853222 seconds)
    (126/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06667529 seconds)
    (127/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.169292461 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075716594 seconds)
    (129/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075321162 seconds)
    (130/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.127819778 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07580699 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094583404 seconds)
    (133/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074521833 seconds)
    (134/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.178186581 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067390265 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073400339 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068317589 seconds)
    (138/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075144828 seconds)
    (139/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084188447 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.0668991 seconds)
    (141/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17836276 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076677831 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135630363 seconds)
    (144/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.179999186 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.06937505 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17130318 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.121420257 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066686464 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07477749 seconds)
    (150/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07512436 seconds)
    (151/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077209963 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10938566 seconds)
    (153/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.137725894 seconds)
    (154/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.177762648 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065937208 seconds)
    (156/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066636612 seconds)
    (157/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074144476 seconds)
    (158/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065273156 seconds)
    (159/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068008356 seconds)
    (160/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074294334 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.09350565 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073685773 seconds)
    (163/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070159851 seconds)
    (164/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064921562 seconds)
    (165/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074237261 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072637391 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064923916 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069281415 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066393145 seconds)
    (170/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.135164417 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.19616966 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.06658144 seconds)
    (173/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.124720875 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066104406 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142152083 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06627819 seconds)
    (177/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074893137 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066283009 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066415379 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126198809 seconds)
    (181/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072343168 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065714768 seconds)
    (183/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.078848052 seconds)
    (184/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078777327 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067454861 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088016567 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.171885371 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074194728 seconds)
    (189/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.177325478 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066350659 seconds)
    (191/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066600232 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142773708 seconds)
    (193/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079811791 seconds)
    (194/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090477413 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065299726 seconds)
    (196/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066444942 seconds)
    (197/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.168727241 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112404256 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067651806 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.06713104 seconds)
    (201/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070129911 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065650448 seconds)
    (203/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.086647799 seconds)
    (204/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068697898 seconds)
    (205/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.06643499 seconds)
    (206/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.077972636 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065968881 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065668968 seconds)
    (209/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073960996 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073269581 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135684988 seconds)
    (212/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077898944 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.293528105 seconds)
    (214/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.069270135 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069659245 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06812795 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075667727 seconds)
    (218/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.080411031 seconds)
    (219/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.080169671 seconds)
    (220/309) benchmarking ("sort", BigInt, false)...
    done (took 0.248057286 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090003973 seconds)
    (222/309) benchmarking ("sort", Int8, false)...
    done (took 0.171103814 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06727472 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077702854 seconds)
    (225/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.080899986 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075436681 seconds)
    (227/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076394412 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137548561 seconds)
    (229/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067063818 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066931875 seconds)
    (231/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.215934995 seconds)
    (232/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080975585 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074421726 seconds)
    (234/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06720598 seconds)
    (235/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.078943087 seconds)
    (236/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073199689 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067051096 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069710034 seconds)
    (239/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066717737 seconds)
    (240/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071056208 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.174210118 seconds)
    (242/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.079964155 seconds)
    (243/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067065381 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181985387 seconds)
    (245/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067140253 seconds)
    (246/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067426057 seconds)
    (247/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065820078 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124525474 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067399068 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087303131 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067260184 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066613721 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066383324 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08879138 seconds)
    (255/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071127329 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065667139 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06849922 seconds)
    (258/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.069908414 seconds)
    (259/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.140050986 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087628201 seconds)
    (261/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.079595046 seconds)
    (262/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.166835114 seconds)
    (263/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066950724 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076409087 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068189372 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068500998 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.17246692 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119341933 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06766317 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073277355 seconds)
    (271/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067293275 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074583657 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079688927 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06673797 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066676979 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071093694 seconds)
    (277/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.088327224 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06659916 seconds)
    (279/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07685938 seconds)
    (280/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066892587 seconds)
    (281/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067867445 seconds)
    (282/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069359528 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066929919 seconds)
    (284/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069285761 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067395783 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144841609 seconds)
    (287/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07174798 seconds)
    (288/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171634042 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06673547 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075857641 seconds)
    (291/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180221819 seconds)
    (292/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093442896 seconds)
    (293/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067575408 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067244839 seconds)
    (295/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066952563 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091435079 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073504609 seconds)
    (298/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066757277 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117959576 seconds)
    (300/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067281024 seconds)
    (301/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069245907 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066512827 seconds)
    (303/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073113998 seconds)
    (304/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066888035 seconds)
    (305/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066089293 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065534901 seconds)
    (307/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067049126 seconds)
    (308/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067175865 seconds)
    (309/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066364086 seconds)
  done (took 33.078479766 seconds)
done (took 34.412345154 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086585509 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098356493 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073826877 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092756188 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08130966 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095228169 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073873219 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078728487 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081960463 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080694678 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079000917 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072855797 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075495194 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075429904 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073738664 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097196945 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080289214 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074617432 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074373594 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066219111 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074792122 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066877167 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066015664 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072791957 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077870439 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073494215 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075898151 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076140752 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066765277 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06669679 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071326732 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075019709 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066389145 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078677923 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075221444 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074956896 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076233704 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079140577 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066189381 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067084039 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076570622 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067015616 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074729316 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072480295 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071179493 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072812251 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074729273 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078664646 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097253441 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070744185 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076407481 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07717126 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078043911 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072024838 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07175156 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074489996 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072653696 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097373487 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074920746 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070917718 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076485943 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075695382 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072473246 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074290167 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074431056 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076744189 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.0787116 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072790735 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076576719 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073338251 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06584997 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074554637 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071071956 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066469699 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079772447 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079757785 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065453102 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070419749 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07413194 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074699637 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066190556 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070932794 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065780929 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071059783 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070728081 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072274919 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071708703 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.0737325 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066101665 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07510804 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073480695 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074211047 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066146841 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07896475 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066426112 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07320243 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066496429 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066424867 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066023905 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071171546 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066270569 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070468133 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07482704 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065316569 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071100792 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079454568 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066205276 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073025467 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065393611 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065665217 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077479081 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076048434 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066027288 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070554211 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065195239 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071219572 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066034693 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065697406 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065601119 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06573002 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070482511 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066084753 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070018002 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071036343 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078200629 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065835657 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071132236 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070342728 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065703435 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072914427 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065789208 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066000212 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065196654 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078839554 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069591951 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065847292 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.070912573 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0697419 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07320315 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064419049 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074096678 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071216121 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069695182 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07128137 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064124519 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076096767 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069349925 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069051272 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064094004 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064524486 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064038529 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064558134 seconds)
done (took 12.513457355 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070504239 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117029292 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092459668 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093153316 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082336713 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067133904 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074022277 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091689412 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068453572 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096186186 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088262173 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088091116 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108905436 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066115048 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06738992 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068338791 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068390722 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078573344 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.093781693 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088851263 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105559343 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067273343 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086103567 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086888316 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083780732 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088234917 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068075343 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068390261 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069912003 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089673933 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091936231 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070029258 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067986138 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089838823 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085259846 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079957369 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067932927 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075183598 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067748509 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067383427 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069127504 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.08720363 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074912302 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075369594 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068536461 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075046371 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068588925 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082713185 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087675464 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075400314 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081938425 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090716319 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070961674 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083073476 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066232562 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082556128 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076164564 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067467554 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067467431 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072267079 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067186551 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.0695748 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078258714 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.076085774 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07195956 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081671587 seconds)
  done (took 6.594001985 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085830376 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097427636 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083336686 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083628881 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066259196 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067258348 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067368343 seconds)
  done (took 1.982838699 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067942248 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087227831 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09015524 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089998254 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08378112 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091795896 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075727426 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067510419 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096128746 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067076532 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086740738 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096778148 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071425414 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07920537 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092134378 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067416511 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091510194 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067685598 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067924993 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091551535 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071923436 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094557529 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079414116 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067855477 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079713087 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06794296 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09974348 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075592152 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068849532 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069258892 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06910997 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094081148 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080067946 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079171745 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069155315 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082407784 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081393258 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071154261 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.078557764 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07921467 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080538235 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.0689992 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06665547 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069418358 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070256758 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07904881 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066320601 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068797914 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068377394 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086564875 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066620759 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079494779 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071185714 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073560752 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073702199 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072135231 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075879581 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069460803 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086617612 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068634683 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084330267 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083524272 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080479144 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08352636 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067302041 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079527725 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080977825 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068573054 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069840958 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069151757 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083665497 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070693871 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069057033 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078950018 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067624872 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091354276 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09108071 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06738735 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080652295 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068519898 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069052034 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.079658204 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091253346 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073024351 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068752376 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071924083 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069751542 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071019552 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06662172 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071654039 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06948773 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073384837 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068624733 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070768294 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069763869 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083583049 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066571041 seconds)
  done (took 8.837118727 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070292822 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068615575 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069689464 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068114246 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068802079 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06844218 seconds)
  done (took 1.865980191 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091542662 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067933443 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080554478 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068269806 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103524739 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083272517 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083757229 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077987594 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081916147 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079826817 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083898965 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086623135 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088132452 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070547701 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08339464 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069325251 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083801656 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072481566 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079460267 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070897962 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081622161 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070458801 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071231272 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088353991 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072660992 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069461527 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077304812 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07967318 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07949118 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077912519 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070371856 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071701698 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075966096 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077201652 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083672346 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076395481 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07085624 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074699093 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071320934 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07208843 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086221824 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070353168 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071102114 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074845098 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077388258 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076064584 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074675448 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077143418 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083191364 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074683648 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074627811 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.0692312 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071571339 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074960158 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076077653 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077679827 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074472348 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083252563 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070873871 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075895 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067922229 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071602568 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077005879 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071202725 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075331438 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07483535 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076559625 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070381764 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070985124 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068209241 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074400784 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068919773 seconds)
  done (took 6.923870095 seconds)
done (took 27.651509318 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.516542649 seconds)
  done (took 1.92006128 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.624153163 seconds)
  done (took 2.061252181 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.543667268 seconds)
  done (took 7.979104046 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399640116 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.469921484 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.742510974 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.1346156 seconds)
  done (took 3.216880045 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.70292012 seconds)
  done (took 2.152301386 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236721273 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225411433 seconds)
  done (took 1.919832626 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347822379 seconds)
  done (took 1.780185579 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.04853819 seconds)
  done (took 2.484854538 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.237719574 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160289695 seconds)
  done (took 1.838556423 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.443057965 seconds)
  done (took 1.877467513 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.224623916 seconds)
  done (took 5.663571993 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223493363 seconds)
  done (took 1.695377363 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.235708818 seconds)
  done (took 1.67048075 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.747483264 seconds)
  done (took 3.184422984 seconds)
done (took 40.892804072 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085015952 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086166774 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085971168 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082067827 seconds)
  done (took 1.755085604 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076181249 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071310491 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075094499 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071152505 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074939957 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071183658 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072923774 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074099466 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070966762 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071938241 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071592665 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071740695 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074317799 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073643486 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070191545 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074990208 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075452279 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071947103 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074459684 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071703166 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070254737 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074206875 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074500095 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071010743 seconds)
  done (took 3.191324969 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080024049 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074635177 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076774506 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072723418 seconds)
  done (took 1.749242367 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078596747 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.08840871 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086931809 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078198966 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089838215 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.08494813 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068024405 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068087026 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069129666 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077826491 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066933418 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094098344 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087317325 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078162911 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079994496 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064441194 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06631264 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085651999 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078615557 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07903043 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069085738 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078085606 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066944935 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088128718 seconds)
  done (took 3.311504105 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085390798 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066957322 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083789256 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092842933 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094343678 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066850177 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.082301008 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094915982 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139361595 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067141142 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073351542 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067096669 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.106110646 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067022385 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083581064 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110340651 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113898633 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070825057 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100288368 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067616326 seconds)
  done (took 3.183126065 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084614093 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070764093 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071522815 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066081241 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076978196 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073465137 seconds)
  done (took 1.895655359 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069983883 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068680533 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068570458 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06799292 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073479734 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06863423 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069924218 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068701186 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069484428 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068620027 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068120117 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067181478 seconds)
  done (took 2.27731411 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.211831055 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070791665 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073082858 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067092604 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073005608 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067683953 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08340107 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070223874 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086015545 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06858283 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068011231 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070083404 seconds)
  done (took 2.458452532 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191939259 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074817222 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221865649 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143646608 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102712161 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10962256 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109849262 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108137335 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.13295234 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097600886 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15340095 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159674711 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1036203 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126852019 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088180558 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120919196 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144293588 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153421864 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100185446 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153535698 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135182329 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119854778 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140939062 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097308375 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101396849 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116544824 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072344403 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077420036 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158685866 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122902843 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135654276 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105303746 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090150878 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170223071 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156706154 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131425229 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139589996 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081743492 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.118203709 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128329338 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193013496 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08764987 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149592673 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102330248 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077545565 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120500365 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108794893 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.112863589 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099271129 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086735967 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273201375 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173687786 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128668307 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084484168 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115265246 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105753914 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.10954639 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111952138 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16917643 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149002506 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118738332 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070399971 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104849171 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141651951 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124888195 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10463773 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117534616 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090398077 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124968174 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147891393 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12536314 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133219989 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112635133 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085292405 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114255432 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130911358 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120708216 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15941927 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115921104 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072069756 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115963016 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09585097 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078521169 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144444676 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0743764 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164138294 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096568295 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121247734 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122969066 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105681093 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1053963 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149621221 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134335036 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101689627 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084329633 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099409059 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11447453 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136663895 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084670961 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10427937 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1092427 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077444094 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125890173 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073239897 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111495788 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093147292 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112830079 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115997265 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076857485 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258420698 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100487731 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098885401 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122341924 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147560228 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085779677 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079121073 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155588971 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113672876 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099960645 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135412959 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148671202 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118267117 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094333414 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139960907 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162871151 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088083458 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150731611 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09894258 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081752406 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.103232541 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115084698 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107050994 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118955689 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079620102 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.112659002 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154064726 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073265719 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09471559 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124931759 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080046648 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078845698 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10161351 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100788271 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094529238 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098488078 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101320808 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130294619 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115468813 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101326941 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11839857 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094791986 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155993049 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085592061 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099212189 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101418835 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071464421 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126298538 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145941656 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077089694 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150709315 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117032235 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110144659 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111950109 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081027642 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129733612 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077140558 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070904193 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131829333 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107018202 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103946313 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.138695238 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256084635 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.119280177 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.113059147 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124710751 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122384337 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122513214 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103441313 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087254803 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109595128 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123885498 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072098321 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.08907186 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080219298 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099685558 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091161266 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082754244 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131836329 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115166216 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104104329 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108839481 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093858486 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140145908 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077040845 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118423709 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11606184 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092959278 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144802522 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143210055 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123660934 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098471803 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130464741 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072494467 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074151143 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087042216 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118683547 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082265467 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081980046 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109051925 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140731881 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11999522 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128688712 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116638268 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111879249 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14849085 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071598912 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117316325 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136274775 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113333135 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101498724 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090084988 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094644013 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133863819 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100373642 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169523084 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107032334 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115968142 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145043385 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097089255 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076698352 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099328821 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123073467 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245961245 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136207445 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09665342 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085270121 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103917188 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076895752 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094873648 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119535185 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113029656 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129226852 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107378295 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123294467 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076143691 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107518495 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115111741 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116025071 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082219252 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111602822 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156580108 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09386085 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111440164 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141957236 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077934609 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133544486 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162266161 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135485168 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08285121 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101287858 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114401154 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120745573 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113263221 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131851509 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10078247 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129813199 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106257371 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083295874 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086980037 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09300556 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100330412 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109169868 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100729988 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.107570308 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093145919 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123399712 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099450032 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106042278 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111593197 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097910455 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094020946 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093620662 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162919506 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110520457 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158200618 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095428522 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.133624982 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148379096 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073182438 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076508106 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078085434 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128717135 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081083317 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267384841 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.108097135 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110447259 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115430917 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131041059 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094737927 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071044972 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105160784 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125942483 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115877748 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093532341 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099827491 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14884469 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115399127 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077398326 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108464295 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110204537 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100563545 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162915153 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079698025 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103175004 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075385602 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078075556 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119638287 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142460051 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084983269 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101167781 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113619922 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107424812 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12097807 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095180585 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105659289 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123705251 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13948068 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120695594 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087791323 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106840996 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122329067 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144740606 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10031935 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097534728 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163662496 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14175613 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.14981049 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085374483 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109105232 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108336853 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10457949 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128665071 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082310801 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15089493 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079548951 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127267299 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097782055 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086423805 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120952938 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.105828134 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085554406 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133960404 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107503257 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07938108 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228836928 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108488292 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112419274 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100111521 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074897939 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131321064 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074136795 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125268736 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157758998 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07930519 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100491925 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093914964 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080743818 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099613977 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098219349 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084111826 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097010743 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160183094 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084851556 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137925625 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126182522 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106063454 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130097549 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100874306 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640974647 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078330659 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142406494 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111286173 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166731843 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096202623 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112352047 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106286935 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115526486 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134980744 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099085563 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17616083 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123626748 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.110716189 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077569598 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098383915 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099771949 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086900665 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103634451 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108212245 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108639891 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092174521 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.110774487 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116840189 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080868295 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09393987 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144961811 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110950475 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134294964 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129904769 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081880011 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11086641 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125670961 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077351344 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.110887124 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.290846536 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103305265 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098457561 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081675646 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.097411954 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160201338 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072258344 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148392504 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112738639 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105132698 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107521155 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105878192 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120961713 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099504114 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113240899 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09071335 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104982557 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106962461 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081837483 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077595134 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100332582 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106137023 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.131451114 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09349506 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097168881 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141681795 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071177172 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09519295 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108646717 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136523852 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160643214 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102939689 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081947566 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1141227 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114142399 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.107533939 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113653455 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080168238 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079634418 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08004141 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098716325 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.121184862 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10728179 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112022407 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105212552 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151484271 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082545635 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223226414 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093434719 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100821939 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087760845 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078979836 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093468166 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093252125 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099997859 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104974599 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160748811 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091723763 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087439314 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089619864 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073285982 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080858302 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118408058 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104032978 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108587158 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099129017 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.229934666 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101558265 seconds)
  done (took 56.564193043 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120604709 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.098229906 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098726155 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144903445 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122080608 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2010652 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15132549 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189708921 seconds)
  done (took 2.672349599 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070480176 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094721383 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103303153 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083631938 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06815276 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069045512 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.2297918 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082219256 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067679157 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091371608 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077929025 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069401498 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.456031936 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067060592 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068227403 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077593974 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068114282 seconds)
  done (took 3.382367087 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.380517552 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.606016334 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.35518065 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076091524 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.88750028 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091909233 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.164437068 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140014921 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082646808 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.535715263 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.371410585 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.13095813 seconds)
  done (took 18.375978564 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084003307 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076582622 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09152428 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090991086 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078639775 seconds)
  done (took 1.970491167 seconds)
done (took 104.276949764 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083018574 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.542724634 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069846474 seconds)
  done (took 2.186256031 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092561255 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.09026231 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089917256 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087340077 seconds)
  done (took 1.921028362 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076675878 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077273261 seconds)
  done (took 1.704537051 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232069327 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176772555 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094881082 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084816967 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080917782 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081598318 seconds)
  done (took 1.802724017 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074425766 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073248965 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074214972 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078009532 seconds)
  done (took 1.849502606 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.072243967 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067490276 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069576279 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072406976 seconds)
  done (took 1.832631479 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085841736 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085083303 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079877812 seconds)
  done (took 1.802322219 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102205973 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094392093 seconds)
  done (took 1.749053674 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082756497 seconds)
  done (took 1.636864809 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093113036 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101188221 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131284314 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114206654 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141613581 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11819207 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084344748 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088794872 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07905327 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086419719 seconds)
  done (took 2.590456304 seconds)
done (took 21.211588522 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080313871 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374836442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361459495 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092665323 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67297554 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357923429 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992365251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093300448 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108561576 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069703114 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08734569 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649073145 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.984143163 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32763298 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970663623 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330992759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693702485 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069851305 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068771133 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069538375 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977715427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068810366 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070285341 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069505145 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651302288 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374479324 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070735795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.330364383 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069732768 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074413767 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359406497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071888055 seconds)
  done (took 16.174140702 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07191167 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12347939 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073577123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085937613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07201898 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070928962 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072784852 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069935767 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118727526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06997014 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087833737 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06913046 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073539781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070951643 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09032858 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070198989 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072597562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070856716 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070073518 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071235497 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089539924 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069789511 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070988908 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070904116 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070977553 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083565945 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071986758 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069991036 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070604309 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074623407 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075610182 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072480951 seconds)
  done (took 4.032792421 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118839795 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126507041 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074862293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108016146 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071812801 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148239733 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094137144 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121683753 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070392357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088545685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069380464 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10483797 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071658403 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091857208 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.0709716 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073238629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071162052 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070463791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071549141 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090049088 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070328485 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071155168 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071024994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071299108 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085489526 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07213208 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070719353 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070562627 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074718854 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076773999 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072076698 seconds)
  done (took 4.302945843 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072539418 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074563672 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08201948 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082836979 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068461409 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07059638 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072837827 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069087147 seconds)
  done (took 2.164026059 seconds)
done (took 28.234245931 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080170084 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068617697 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072462278 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088313162 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075114673 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079740154 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066180703 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075758463 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073153666 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072834297 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074809089 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070692558 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071254429 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066114244 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073426767 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067726349 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082264821 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071762712 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080977991 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082221706 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070516122 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074066541 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075888484 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082069018 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081444738 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081399012 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077415242 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073426726 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069024658 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071514242 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071418086 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079282361 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081609943 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082314733 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068402783 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068577442 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07271602 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069994817 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08269036 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077099368 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070018121 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077759776 seconds)
  done (took 4.691966492 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086008627 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089223876 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082986438 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080482891 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090407938 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083617779 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086804765 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078693514 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078529862 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086759368 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074503383 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081809144 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079451132 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073617093 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077818557 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075690273 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080243201 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074629182 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078241394 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078558259 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087494796 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073648985 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088295061 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080324261 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075755105 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081468767 seconds)
  done (took 3.682302076 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074638478 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085952335 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093658662 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143632743 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11187566 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08114948 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082477614 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092782789 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097875471 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069403536 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074486535 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093618911 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093989722 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074916321 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.11251249 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08532161 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084985469 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07227707 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075969355 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09870496 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090220074 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086382164 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095079684 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08623993 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068520724 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071745746 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074318611 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085676564 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07204271 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080968284 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072296187 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0732061 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070791984 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07964754 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07188028 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068599331 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09349315 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080130944 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081185421 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069413056 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078733091 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070116195 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094761051 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128794593 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068107369 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073017469 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072893213 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08061885 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.0681092 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096100687 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081042056 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068683711 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.06940317 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068468633 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06802847 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071280338 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070314618 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071567696 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078619543 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075551451 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090561037 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073786431 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085849007 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068323076 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079369185 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068027717 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070166911 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067433576 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097806011 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070119429 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112649797 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069734515 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067508156 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080034939 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078822038 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074464864 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068656232 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085877959 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080102653 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072513474 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076986824 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072156702 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072377383 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099490927 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06935292 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068409701 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067370385 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072227557 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074802161 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069310049 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080667978 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068132716 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072100945 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086640587 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069150833 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069632342 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072560432 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071381559 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068131573 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079243035 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073376482 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069952118 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079111106 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069412245 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072081889 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081894449 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075181248 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.0679929 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071297919 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072298568 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07039096 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070087708 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072513968 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070686028 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07575664 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076060466 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074423679 seconds)
  done (took 10.788578826 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166196563 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157223021 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071578948 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14898531 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077270519 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081208171 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151788696 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09566503 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069100901 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071533473 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069696522 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.10996268 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106490332 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116846945 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082079436 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070381185 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094892466 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115525994 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.155162609 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147830991 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092377119 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077223608 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072109475 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071424674 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071354545 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079217936 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085717407 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078038606 seconds)
  done (took 4.399233205 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079015335 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104223267 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073821417 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091445621 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08884525 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069735503 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071280158 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071193719 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086266774 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078385759 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069898626 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074634538 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073635976 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072821499 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069999493 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075857406 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076413711 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069248482 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073355552 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074738292 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079435964 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094413614 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073027604 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069692596 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072627046 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069480364 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07758051 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081673746 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069817205 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105557597 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067330484 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074363884 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083532198 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070259388 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068962352 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069498999 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069299505 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069683952 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070864858 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067993757 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068056535 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073091859 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068435564 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077252927 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082600853 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071711148 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071443592 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072388439 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072239941 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066980165 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07293078 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072276683 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072285068 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076802922 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073562113 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072314837 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070498205 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096288912 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076130984 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068896657 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068802791 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068367198 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071578848 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079237754 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085309521 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072173036 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06899445 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069620201 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082179444 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082406627 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069159206 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074053721 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067218064 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071664045 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072085896 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072006198 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070562853 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068624538 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069075994 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069328516 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070245508 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069140363 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068537165 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072277197 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067909734 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071479623 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069774677 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.070891252 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080591577 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06868777 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073596964 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070589772 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068496709 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072315898 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074884702 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072357708 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080102828 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080709533 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070154676 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068027796 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082823456 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071998841 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069378226 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075448406 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073918551 seconds)
  done (took 9.395936271 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094498658 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069379613 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085563289 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092597682 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079216776 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075468569 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07954552 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069163737 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085578627 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074154236 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077181712 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067665624 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079958009 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079195332 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069786779 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079828141 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072697085 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086791906 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084238207 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068618218 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077963049 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081925767 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081440818 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083441023 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082821992 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084627549 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081463445 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079337327 seconds)
  done (took 3.840298527 seconds)
done (took 38.362783734 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.657900773 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.812408907 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.63461811 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.836985412 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.899832206 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.649990044 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.829652257 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.63180466 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.822969767 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.676632233 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.871302279 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.119329251 seconds)
done (took 64.155595577 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.653474268 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.79160046 seconds)
    (2/2) benchmarking "String"...
    done (took 1.887804199 seconds)
  done (took 5.252834044 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.823183028 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.302012916 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.867651932 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.633944472 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.640570043 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.888069305 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.425406784 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.081608587 seconds)
  done (took 29.414434882 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.811255821 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.860220456 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.342731248 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.374180118 seconds)
  done (took 15.009399034 seconds)
done (took 60.816202216 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.654405842 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.639921431 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.635166569 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.632010959 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.728482514 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.656642145 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.920675176 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.641777005 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.63485933 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.645769525 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.639669916 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.060720959 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.643778196 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.052086 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.638486154 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.635779472 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.691751021 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.335607461 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.788128724 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.649471359 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.645225412 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.63940609 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.640780624 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.646178891 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.681666124 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.635829749 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.027580014 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.651013781 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.463616669 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.637821841 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.69398441 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.677403565 seconds)
  done (took 199.53975816 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.636714812 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.673592726 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.761743128 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.674489669 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.144350272 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.824954187 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.733273612 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.230751183 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.638400998 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.657563804 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.761958819 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.635303882 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.765163319 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.616287694 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.67563889 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.731611716 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.854276878 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.793503644 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.680757541 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.783714078 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.638837433 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.568889274 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.552979819 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.766542421 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.641904525 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.645105995 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.660444872 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.649005894 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.821094463 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.84516518 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.644388583 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.641933467 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.835669872 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.506142789 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.659798893 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.659727883 seconds)
  done (took 164.586718897 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.83150105 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.638760596 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.637177668 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.638120451 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.637222583 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.643712698 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.63956602 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.760690143 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.760814258 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.291243032 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.317466709 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.692040237 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.637788306 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.394852261 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.637368113 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.70338874 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.650703721 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.641373465 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.655012109 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.6652835 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.640573114 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.639157927 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.765015132 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.65244079 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.638133334 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.647279629 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.63939798 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.644765049 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.025550747 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.638398053 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.702007824 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.642238593 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.646415251 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.879665966 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.639645802 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.640710456 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.471238963 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.77388251 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.720547345 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.642113199 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.645719238 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.639364945 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.858693153 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.63908815 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.641919367 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.640947226 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.64080971 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.754116583 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.641470961 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.760796415 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.641438488 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.11751555 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.640512936 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.640465105 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.64185566 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.840495569 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.230622609 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.642641658 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.64310967 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.643608219 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.639948349 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.641029208 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.640945757 seconds)
    (63/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.647720548 seconds)
    (64/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.862273471 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.711319661 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.643532058 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.64290193 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.64620027 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.642837194 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.658349843 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.642384876 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.652030003 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.657534739 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.799839097 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.765527002 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.643006633 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.709452204 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.733771785 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.643120226 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.643076403 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.643360498 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.643343167 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.722848067 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.640773461 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.71998863 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.651870825 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.64275741 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.694449233 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.711576711 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.642391026 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.467627419 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.643831772 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.642673249 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.879081453 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.705560204 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.642760163 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.645971251 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.719684957 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.762716012 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.357300491 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.645706345 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.805323729 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.715716802 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.642265651 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.749693181 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.644592464 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.723020003 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.649276011 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.646627261 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.676847805 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.644932937 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.657225165 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.645185342 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.016955459 seconds)
  done (took 384.782089581 seconds)
done (took 752.370582379 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.249398833 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.213544197 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.310428658 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.233064102 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.212783391 seconds)
  done (took 12.799915806 seconds)
done (took 14.379270181 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.723858018 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.727350042 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.662459271 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.724186832 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.66044753 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.725093083 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.708290378 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.666910206 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.693357398 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.667885617 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.69480465 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.664801217 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.6544735 seconds)
  done (took 23.554351129 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.876250224 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.870341482 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.708012006 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.868043553 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.683175135 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.872456177 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.794365914 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.784376911 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.778602192 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.654899606 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.64993413 seconds)
  done (took 21.1216877 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.875266069 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.877323397 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.713058925 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.871615014 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.687805501 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.86749372 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.798434243 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.792068332 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.785432091 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.675480177 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.650550896 seconds)
  done (took 21.175954479 seconds)
done (took 67.433914004 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.647390315 seconds)
  done (took 3.229620323 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.666825772 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.824081559 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.649209047 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.649308775 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.648542738 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.647687231 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.649142982 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.646750018 seconds)
  done (took 14.964927526 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.647867497 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.647612988 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.647499231 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.648689573 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.646403146 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.647176866 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.646379364 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.647690526 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.646977206 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.64865512 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.649319341 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.647690233 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.648190104 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.647110412 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.64735904 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.648667983 seconds)
  done (took 27.946772084 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.647531014 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.647048252 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.647150476 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.649768582 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.648813797 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.648343353 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.649416386 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.649017883 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.649632955 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.647599557 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.648676134 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.64595146 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.64767411 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.646837631 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.646763817 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.64756073 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.646272119 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.6453616 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.649616953 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.646792938 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.646484356 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.645349203 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.646683217 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.646968643 seconds)
  done (took 41.129357825 seconds)
done (took 88.851104636 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.36190961 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.492829618 seconds)
  done (took 9.436741988 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.653279888 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.645620255 seconds)
  done (took 4.958157601 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.647321423 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.645610358 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.647615434 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.648028616 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.646095132 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.647448897 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.647583331 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.647455816 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.646196682 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.648765324 seconds)
  done (took 18.052996783 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.649102608 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.648178419 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.646173735 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.648092937 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.649191667 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.64558388 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.647031109 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.64733897 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.646748661 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.648655166 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.648126486 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.648490336 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.647317413 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.647918289 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.645559524 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.649557853 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.647820852 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.647312905 seconds)
  done (took 31.241190158 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.647265536 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.646901961 seconds)
  done (took 4.875370841 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.648426318 seconds)
    (2/7) benchmarking "second"...
    done (took 1.649362043 seconds)
    (3/7) benchmarking "month"...
    done (took 1.647635603 seconds)
    (4/7) benchmarking "year"...
    done (took 1.648031603 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.646534621 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.647661674 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.64950479 seconds)
  done (took 13.119777956 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.647486309 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.798330079 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.861879796 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.278023742 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.647770481 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.651946155 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.596517591 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.652274844 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.651216233 seconds)
  done (took 18.369530778 seconds)
done (took 101.634601881 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.510805188 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.647964486 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.913623764 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.777269892 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.668286041 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.941065403 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.662784938 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.921416637 seconds)
done (took 41.626089444 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.674674738 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.442977993 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.478286215 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.674857196 seconds)
  done (took 15.181057729 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.651150974 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.960277548 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.674509938 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.486449154 seconds)
  done (took 21.42497539 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.009936831 seconds)
    (2/2) benchmarking "read"...
    done (took 2.000456568 seconds)
  done (took 5.601470203 seconds)
done (took 50.469770295 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.651221029 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.648959898 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.651998484 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.652748907 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.650153897 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.650744684 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.652194137 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.649125373 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.650624233 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.649993631 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.649960467 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.650421585 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.650953827 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.650423822 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.652142621 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.651302645 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.65086787 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.654026477 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.652357225 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.649757349 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.651342643 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.651213519 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.650100018 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.650238456 seconds)
  done (took 41.209034008 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.651377624 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.652538043 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.649358681 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.652761345 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.651769916 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.650945896 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.652216548 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.652553382 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.652200886 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.651402866 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.652150722 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.650964933 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.651823529 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.650507794 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.650090616 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.651404777 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.651105878 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.652093698 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.651279178 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.653054065 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.649836865 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.649904497 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.651662577 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.65056497 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.650551708 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.651620335 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.651733385 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.653141539 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.651841409 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.651507082 seconds)
  done (took 51.131107129 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.651452978 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.6540621 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.65332017 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.652663622 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.65235574 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.651577876 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.652269632 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.652177571 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.65452684 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.653486505 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.652770767 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.652945792 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.652140957 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.652921838 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.653386578 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.653360623 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.651786995 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.654136794 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.652918371 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.654807289 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.652743164 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.65327901 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.654832944 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.654756305 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.653527223 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.65355271 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.654753965 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.653582732 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.654160238 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.654347136 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.6567256 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.654075694 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.655620309 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.652826872 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.653608265 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.654504805 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.654185349 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.655289325 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.655114283 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.655182897 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.653777195 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.65520796 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.654421488 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.655433934 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.655177436 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.654363749 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.655156704 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.654424084 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.652657026 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.653236651 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.654135521 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.654849187 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.654243013 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.655528905 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.65540984 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.656922742 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.654217585 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.656058333 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.656343164 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.656361967 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.655466213 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.654044643 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.654560385 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.654804497 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.655768415 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.655541635 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.655744278 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.657901856 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.655552593 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.656184544 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.657254774 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.655517608 seconds)
  done (took 120.702426636 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.656205641 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.65674253 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.654861527 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.657276597 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.657798578 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.658568683 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.656804473 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.657629271 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.657368259 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.65712978 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.656963559 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.658198123 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.659172261 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.657535589 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.657098574 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.657459504 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.65708323 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.659038508 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.657977215 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.656577334 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.656561791 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.658263386 seconds)
  done (took 38.051976434 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.65836446 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.657506255 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.657649561 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.656417135 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.656627801 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.65524872 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.657385245 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.657552405 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.65792747 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.65543912 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.65624808 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.656705252 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.657776012 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.657322297 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.657894995 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.65738251 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.658004727 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.657329782 seconds)
  done (took 31.421239005 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.659577403 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.658470337 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.659713327 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.659384322 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.658501679 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.658480155 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.66004165 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.658438989 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.657210583 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.658763604 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.658905284 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.656990905 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.655985096 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.657928604 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.660038699 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.658510771 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.659166649 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.659242417 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.659535694 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.660082054 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.658909748 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.659966828 seconds)
  done (took 38.088459783 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.659138996 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.658029523 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.657359783 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.656623558 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.659888602 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.659111036 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.656862117 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.656675831 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.657294837 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.657448038 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.65760363 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.657695345 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.659255384 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.659323322 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.659757817 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.660801721 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.660700115 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.659165088 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.660421767 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.659528501 seconds)
  done (took 34.766616615 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.660568243 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.660144876 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.660862248 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.660942444 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.659882117 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.659527779 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.662275267 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.661107509 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.659277327 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.661147076 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.662207544 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.66122236 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.661569194 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.659607448 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.660884612 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.660530955 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.661322855 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.662270512 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.661863508 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.660424477 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.659695977 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.662737197 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.662090772 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.662495737 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.66034188 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.66155824 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.66086873 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.661338401 seconds)
  done (took 48.104620227 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.661008074 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.660884169 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.659386117 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.663767224 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.661240308 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.660954192 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.66193105 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.663124242 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.66368774 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.661176577 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.661954989 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.659764685 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.662837044 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.662164742 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.66310253 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.661690746 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.662619075 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.662045148 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.661106998 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.662985914 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.663136752 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.661666984 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.662768847 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.661844404 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.662915371 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.663545066 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.662056004 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.663890306 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.663168044 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.661481342 seconds)
  done (took 51.459667246 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.682913793 seconds)
    (2/2) benchmarking "in"...
    done (took 1.683609105 seconds)
  done (took 4.963137977 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.662371367 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.662193333 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.662531648 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.662906893 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.663237954 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.663911035 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.661986358 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.662325905 seconds)
  done (took 14.897463724 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.665759163 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.666066594 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.664601254 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.664837321 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.66391081 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.662787466 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.670390767 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.665319931 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.666319398 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.667248738 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.674568368 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.674513213 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.666250623 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.665109071 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.664925066 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.668343801 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.664332279 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.663812974 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.664464512 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.664798072 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.663339752 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.667454749 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.667847959 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.664509904 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.667721005 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.676469973 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.669385805 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.666106501 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.667938442 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.670172978 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.665296639 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.664572504 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.666164265 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.665563437 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.665949229 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.665779037 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.673277545 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.665153399 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.672235699 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.666900643 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.665414816 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.665261579 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.669858025 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.66908632 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.668709852 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.664211845 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.664652094 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.664991671 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.66883724 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.671564788 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.675529592 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.666205336 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.665988797 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.672775594 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.668505623 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.674031314 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.666543414 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.670369752 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.678315035 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.675476432 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.679203335 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.67564957 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.668639587 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.66857427 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.67818944 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.695032245 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.67366632 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.665557071 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.667429546 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.666344634 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.675201759 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.679095208 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.679175177 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.667299681 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.667982319 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.668223949 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.669225872 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.667958236 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.675554965 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.671874597 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.669566544 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.667970418 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.675754093 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.696132469 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.670306927 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.667818972 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.667762832 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.670082656 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.670672228 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.679485852 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.66808549 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.666359088 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.666639442 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.670578421 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.672132597 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.669104661 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.671107483 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.669802775 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.666212478 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.667964016 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.667223325 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.673197994 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.680946025 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.670100913 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.669114511 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.675040898 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.669749941 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.671175388 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.676959458 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.669536157 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.668150811 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.670058465 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.675879928 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.669348315 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.672357011 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.682118634 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.667922219 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.671329031 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.669519297 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.671063654 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.682045748 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.700322086 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.671268217 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.67073745 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.67559119 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.681795407 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.669441675 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.671975527 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.66968773 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.667018097 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.669992546 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.673382725 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.669578484 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.671666813 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.670852711 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.671637936 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.672294036 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.672447851 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.669767705 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.671851018 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.673382538 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.674073017 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.674544556 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.673247052 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.672008323 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.671525277 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.674981237 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.674192916 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.673492381 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.675335856 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.670934113 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.672923943 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.675220804 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.672962677 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.673607839 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.673189864 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.674498292 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.673530172 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.670438368 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.672688794 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.671243831 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.674849562 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.679158928 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.672174041 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.676931098 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.675065606 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.67039929 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.671077571 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.673590402 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.673971865 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.67220077 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.673283132 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.675027858 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.679231334 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.67314004 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.671846196 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.674078745 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.673542992 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.671547843 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.672773082 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.678565255 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.684501778 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.674548386 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.676447261 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.674054426 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.673777333 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.672954686 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.674553877 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.675119121 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.673634414 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.676951218 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.681125083 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.687190213 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.684754146 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.673135887 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.675760594 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.676024095 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.677715998 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.678460765 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.674366702 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.67237504 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.67370736 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.674755579 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.673675761 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.677976762 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.675012776 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.673381894 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.673183495 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.674025769 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.674916631 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.672814625 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.678348162 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.677376507 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.673074803 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.675014802 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.67189976 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.674819632 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.672867963 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.674763546 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.676873309 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.67463279 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.673984019 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.682243047 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.675627297 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.676717997 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.678056768 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.675654649 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.673186931 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.676052007 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.678296472 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.676000756 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.68386969 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.675135772 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.677499224 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.681121326 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.676012024 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.675017988 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.679375741 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.673557017 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.674238195 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.679976513 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.686137615 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.675859586 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.677680538 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.676920569 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.678138223 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.676511863 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.682893709 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.678755473 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.678832989 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.674819316 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.676724637 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.675278107 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.678778571 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.676186031 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.677174286 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.678947096 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.67471472 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.676822619 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.678324075 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.677235966 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.675717636 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.676329951 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.679460922 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.685850116 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.680566242 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.6795976 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.680440498 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.680551627 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.682106707 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.677402769 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.676829341 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.678317692 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.688439389 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.687380187 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.684228712 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.679193999 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.677669897 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.686091716 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.679822353 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.685471706 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.67965514 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.678048851 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.678730923 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.676761119 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.674130876 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.679067906 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.679626581 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.679491531 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.679987138 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.682282923 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.677585315 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.678618384 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.676625158 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.676276566 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.678139471 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.680709345 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.677652357 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.682345828 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.682102327 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.67856661 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.678003221 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.686508949 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.680967445 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.680992246 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.680047292 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.680507029 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.67782592 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.679999308 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.67931558 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.682415541 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.689451427 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.681756057 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.691863946 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.679149167 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.687949 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.679419748 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.684145859 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.688512845 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.678310673 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.680920964 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.679598566 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.677799836 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.68779546 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.681875412 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.680092696 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.687178563 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.68126171 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.678482935 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.67958728 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.67977459 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.68134224 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.67987194 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.690324979 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.68086214 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.68573963 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.683049023 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.6828457 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.677893434 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.679124916 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.683198217 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.684936175 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.681616228 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.682213425 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.680457255 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.683011213 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.679635878 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.680353339 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.67936209 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.680494278 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.682196397 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.687682928 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.683726788 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.686185532 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.68036274 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.68791482 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.68393699 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.690463297 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.681422652 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.682495067 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.681531809 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.681980827 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.682471301 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.680424014 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.683855423 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.68121156 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.683402288 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.688471082 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.680406816 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.683998451 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.68213995 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.682983474 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.683290221 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.692713928 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.708898443 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.683704838 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.685931186 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.68102124 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.684272582 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.687814444 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.682153969 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.682456855 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.685162117 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.695735499 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.691686038 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.684614552 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.681078082 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.683508768 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.683069271 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.680512954 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.682561232 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.682860997 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.682907013 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.682964355 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.680679985 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.688073556 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.682892562 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.686195495 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.686434428 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.686793863 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.694390653 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.684145669 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.683908845 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.685850997 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.683206573 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.685891879 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.687055534 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.686292662 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.684898372 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.684524834 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.684915714 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.691183489 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.693309043 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.685091739 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.685731049 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.685765799 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.682916107 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.684783079 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.684785217 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.683513991 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.683112489 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.686746491 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.684366753 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.686154454 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.684142171 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.680971888 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.685265236 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.684738215 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.687431258 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.695763304 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.686013571 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.685811634 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.684304839 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.684081312 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.685618661 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.687620284 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.693320756 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.68997448 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.698512531 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.695481023 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.688212307 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.68650633 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.688785832 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.697620201 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.686225325 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.687390385 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.685634401 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.68674525 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.685425483 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.692452029 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.687238658 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.693376241 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.688989193 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.685780794 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.694578171 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.687225867 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.68815254 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.687451262 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.692954422 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.686507199 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.684062976 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.686354751 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.687834025 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.694347883 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.68879272 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.686507908 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.688013069 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.683735384 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.688206387 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.691745926 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.687193612 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.687207359 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.684558242 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.689567352 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.687537922 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.684797313 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.685348465 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.685471318 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.68774806 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.691563963 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.696069267 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.68664317 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.69073821 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.688391563 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.689594116 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.688667849 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.686934404 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.68477877 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.684730419 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.687860234 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.688135653 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.687229165 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.69131292 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.685378908 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.688750707 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.69383807 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.686802777 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.690582708 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.703159251 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.696242208 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.687392694 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.688417652 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.691698702 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.690512527 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.686749412 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.689035685 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.689253514 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.691311792 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.687101467 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.687777523 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.687174961 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.691074994 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.705333138 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.689620629 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.690014225 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.690484683 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.695493989 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.690442208 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.687919747 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.688968672 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.694307436 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.692661707 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.697937122 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.688689653 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.695630938 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.688965546 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.692270746 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.692745701 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.692460849 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.69991157 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.692570429 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.689071281 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.690668199 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.69525976 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.707474378 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.691137841 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.70065555 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.722865057 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.691893862 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.693258911 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.689781448 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.691936063 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.689056457 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.693013142 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.691131028 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.690187416 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.688544838 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.69066565 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.692899785 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.696170134 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.69110744 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.689741603 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.690557154 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.692031791 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.692518002 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.687404446 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.690233162 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.691919609 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.68970567 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.691897044 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.691753363 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.692996231 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.704408914 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.705437716 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.692219393 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.689588513 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.692436463 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.695124898 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.696627619 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.703880843 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.700134565 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.69179951 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.692195869 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.694526541 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.692368734 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.691903294 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.694676476 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.691956722 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.691927338 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.691828765 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.702883696 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.702152231 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.696744647 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.693921669 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.693677094 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.692286985 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.694830382 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.691542818 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.691451878 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.696999007 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.692640244 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.698464657 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.692546561 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.692183183 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.697121309 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.701827108 seconds)
  done (took 1003.448417613 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.691332654 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.693763251 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.691786695 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.690866449 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.69375934 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.691264178 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.693012276 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.693341096 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.694011216 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.691225467 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.691289147 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.693160586 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.692583837 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.693090685 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.692557565 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.690182792 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.691283628 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.693167636 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.691390362 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.69267057 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.694351298 seconds)
  done (took 37.165399387 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.691807245 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.693359997 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.69323258 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.693954454 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.693321024 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.694684747 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.692082811 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.694842622 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.696482493 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693385383 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.693031048 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692606636 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.694450916 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.696857579 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69300243 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.694312992 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.692749428 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.692139895 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.691469982 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.695754123 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.693198092 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.694644135 seconds)
  done (took 38.887571343 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.693455626 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.695731765 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.696186208 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.69532424 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.695119743 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.693276848 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.694786365 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.69477473 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.697067566 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.699160583 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.695978477 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.69683527 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.704980164 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.704878941 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.69875167 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.694841815 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.840864794 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.69481108 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.694038367 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.694732554 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.693915893 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.701832167 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.69580192 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.696730362 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.695074992 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.695378505 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.695938599 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.697086561 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.695573647 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.697397819 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.701099197 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.695804007 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.698030884 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.700673072 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.697892967 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.695366811 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.702718769 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.696240871 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.69546021 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.694497921 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.706834568 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.724371691 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.697721913 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.701635659 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.697372368 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.6980082 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.702247747 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.708975201 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.701716484 seconds)
  done (took 84.985633895 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.699919439 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.702725254 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.69958003 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.701961557 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.701584893 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.700393271 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.70045388 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.700961795 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.701194114 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.701379891 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.703135525 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.70056211 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.699422105 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.69916532 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.699292868 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.698948531 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.700418278 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.701178434 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.702953762 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.700819266 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.701421294 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.699820532 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.69966913 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.701580536 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.701075662 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.70044131 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.702026921 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.698683571 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.700522196 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.702003926 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.700026103 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.703195348 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.7022779 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.702220695 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.700140452 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.699756317 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.701043909 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.701540812 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.702331516 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.700848038 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.702687961 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.69935493 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.700859254 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.69919756 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.698778119 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.699771353 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.702377352 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.697809611 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.697892011 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.697711467 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.699577035 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.698991071 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.70032811 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.700212448 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.698642393 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.700249658 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.699396579 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.701276551 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.701850739 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.700640734 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.70064504 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.701803294 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.700738315 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.699104856 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.699411626 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.699302788 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.699648014 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.698595559 seconds)
  done (took 117.26998919 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.702333235 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.701921083 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.698673131 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.701837418 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.698370822 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.699743163 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.704655817 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.698854125 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.69921429 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.700560005 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.699357353 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.701092026 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.698729965 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.699457983 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.701394691 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.698557475 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.700576199 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.700536989 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.702989263 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.700775836 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.698395697 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.700173452 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.70003298 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.702875244 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.701366339 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.699091974 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.698326383 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.697493659 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.700296039 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.700058495 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.700803203 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.696327564 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.69595198 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.696429044 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.696921072 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.696033483 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.699221763 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.695320099 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.693716964 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.694051473 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.693558388 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.695106289 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.695660873 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.693230645 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.691714182 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.692917624 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.693706518 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.693472827 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.694324636 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.691476099 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.693177865 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.691136018 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.692536414 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.695467185 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.694144495 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.693470921 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.69337082 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.692735646 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.694241166 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.693945455 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.693004178 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.693274318 seconds)
  done (took 106.86313597 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.692260175 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.691012147 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.693224574 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.694040383 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.693613638 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.693609168 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.694306217 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.692440356 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.694916459 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.692962294 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.694091478 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.69415628 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.695947634 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692779808 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.692980145 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.694153782 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693485147 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.696284999 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.694916981 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.692630258 seconds)
  done (took 35.501252989 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.693607509 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.692737887 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.691656924 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.693790674 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.694306213 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.696915515 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.693485543 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.694346366 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.691409275 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.693581889 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.692763913 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.696328145 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.693406837 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.693147474 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.693084008 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.695417448 seconds)
  done (took 28.72745166 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.694679933 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.693809056 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.695030198 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.695725311 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.694301316 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.694202298 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.698181091 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.6948517 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.695341316 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.693882249 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.69490079 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.693877308 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.694095827 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.695869698 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.696335457 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.695255625 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.695582072 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.693893459 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.694446079 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.695941121 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.693960478 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.696191488 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.694479343 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.694312606 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.694902146 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.694895167 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.69447104 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.694215797 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.694143163 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.69279184 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.69554046 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.694597915 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.694051777 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.693640834 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.695850802 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.698879686 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.691285486 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.692937489 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.692491621 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.692051614 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.692804491 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.698701479 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.691172479 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.690933996 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.692612074 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.690717741 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.692768705 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.695196972 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.6891229 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.68756207 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.689141235 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.689320878 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.688270077 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.688453233 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.689252698 seconds)
  done (took 94.78006237 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.688153141 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.689705679 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.689731059 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.691744756 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.690512143 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.688841567 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.689607484 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.686980188 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.690312383 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.690132666 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.688821952 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.689061214 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.688598783 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.687737444 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.687367756 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.689318815 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.689963122 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.689832899 seconds)
  done (took 32.029307965 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.688006665 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.688503226 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.691356544 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.687943396 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.689240141 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.690135469 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.69139621 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.687649833 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.688766052 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.686778337 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.688881271 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.691385317 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.687788657 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.687956813 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.689206948 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689922475 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.689572067 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.688889277 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.68747771 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.688172789 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.690524406 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.689976382 seconds)
  done (took 38.779774263 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.689495429 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.689220803 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.705369527 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.713950072 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.711321075 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.727546171 seconds)
  done (took 11.858266101 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69053233 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.690563059 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.689431111 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.69011623 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.687822859 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.691613305 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.689198629 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.689083052 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689469908 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.692152574 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.688919251 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.688153328 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.689146082 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.692916597 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689179299 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.690319443 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.688694976 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.685018615 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.688129758 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689801257 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.686978484 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.689085839 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.685334393 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.687377733 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.688504858 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.687921566 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.686242677 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.686825265 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.684951091 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.687873329 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.686930273 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.689978041 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.684455061 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.684683264 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.682202061 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.686760511 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.68646416 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.688734907 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.684507943 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.683579073 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.686360048 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.681283885 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.684938841 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.685646279 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.684123846 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.685200753 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.680956412 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.682443126 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.682952543 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.683548252 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.683391373 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.680238735 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.682236742 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.683961291 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.680465711 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.685782357 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.679205271 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.67987041 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.680043512 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.680658177 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.679405779 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.684452831 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.68096327 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.678920901 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.675867239 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.682791411 seconds)
  done (took 112.878383662 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.68411777 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.679881749 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.675469578 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.678166396 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.682659916 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.680691197 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.681475831 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.681898649 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.678410379 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.678552572 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.679861399 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.679308385 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.680881551 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.682722761 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.678399873 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.679935182 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.68121442 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.678584889 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.679362097 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.677835046 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.679387675 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.681624079 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.678081426 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.679267434 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.680552676 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.681014344 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.677367986 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.679793011 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.679766016 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.679761951 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.680647423 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.676801672 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.678200105 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.679059457 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.678079884 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.680546747 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.680130765 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.677530639 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.677858936 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.678695186 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.677217506 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.679122596 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.676854206 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.677137078 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.677567325 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.675756474 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.679263875 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.677873598 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.677850654 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.677384266 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.679142904 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.677260811 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.677285364 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.676785413 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.678515286 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.677920277 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.6777184 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.674752338 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.675567769 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.680172826 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.675789723 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.678292909 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.6768501 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.678476016 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.679496585 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.680451318 seconds)
  done (took 112.418228608 seconds)
done (took 2331.976215994 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.765587266 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.699304949 seconds)
  done (took 15.076385431 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.842041546 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.79163944 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.677294343 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.691604304 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.673517885 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.703748945 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.704508274 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.672823296 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.674822294 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.677534034 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.674468957 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.863549147 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.734415997 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.675126533 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.673585137 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.768357136 seconds)
  done (took 49.112706539 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.677142847 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.680406896 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.688040486 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.682058933 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.676967037 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.690068793 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.709433169 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.684212676 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.712297138 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.687217064 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.745543885 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.686856361 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.675779902 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.726739435 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.689697278 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.691862563 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.768549599 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.751532245 seconds)
  done (took 32.230240352 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.758606393 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.682882396 seconds)
  done (took 10.053824619 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.693410208 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.708020118 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.772563618 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.699899864 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.674004143 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.695966864 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.713496041 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.709527895 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.704053678 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.701851214 seconds)
  done (took 68.683626587 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.683406561 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.678551539 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.673907071 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.675228346 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.670889313 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.67234195 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.677114714 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.670029836 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.331107201 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.71233541 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.680265087 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.676919071 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.671666162 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.676157846 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.671586008 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.699732245 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.786067065 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.670475247 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.671860204 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.678718927 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.672345682 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.72982578 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.68373074 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.67336482 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.702168292 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.33220066 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.67858585 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.678325871 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.781070659 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.670865777 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.6728793 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.856414224 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.681861393 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.136487516 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.931415709 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.676961774 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.685273314 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.68031043 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.670949422 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.789445386 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.67338537 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.679467706 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.580264703 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.911907409 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.796135256 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.715895409 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.972149582 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.687429626 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.674400665 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.702309803 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.675114885 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.67494908 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.685013388 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.18352435 seconds)
  done (took 121.930600945 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.670247051 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.018280095 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.838441765 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.674217183 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.955391317 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.878759393 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.673570247 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.720519952 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.674983594 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.899915006 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.927173724 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.7742842 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.674456921 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.676248481 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.674098747 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.671047387 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.83060067 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.745173553 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.674281069 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.669837955 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.699158919 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.91534736 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.79346026 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.675343867 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.70012046 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.882464655 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.791586734 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.7780112 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.444731838 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.671381165 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.737476596 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.676853166 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.675027352 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.668084891 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.831705394 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.76796084 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.75421999 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.67145056 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.673712743 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.673530078 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.420630144 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.870600446 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.770367915 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.802381009 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.926409347 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.877171951 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.448298615 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.672672402 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.404173578 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.837958096 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.904489893 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.903877355 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.794396359 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.676777571 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.213226826 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.670285463 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.672801671 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.919906736 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.895023102 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.770806599 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.678196122 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.674873207 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.673305487 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.965241932 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.680069279 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.768349238 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.6750996 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.672979896 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.770029531 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.770703881 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.905974768 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.886142762 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.70390725 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.013645623 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.185145791 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.921885927 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.740828853 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.919099796 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.672707371 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.673942515 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.749373813 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.521109834 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.928491359 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.957019648 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.91801646 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.704859288 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.398196896 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.673660475 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.9034165 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.891850232 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.933087476 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.920514468 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.912833085 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.983856366 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.673930488 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.673888398 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.986035071 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.797386588 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.677005082 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.020563371 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.903426511 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.2007598 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.701554345 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.974593015 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.803793888 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.677192749 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.304935747 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.675163551 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.902948271 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.71479311 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.67852922 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.676514511 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.891714959 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.66346812 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.678090571 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.322634061 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.736294214 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.677290439 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.907888862 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.678333193 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.946889542 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.675866051 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.910311578 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.125525522 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.705897423 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.903598308 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.920244529 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.686589373 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.916614035 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.917325651 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.78852186 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.896238984 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.305059403 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.672952018 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.959586831 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.683300942 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.676838249 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.84708499 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.681202054 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.816670786 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.679390997 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.970659051 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.698732601 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.90726463 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.684759301 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.929987517 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.710024862 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.724372777 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.684797456 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.810686001 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.678344829 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.505147658 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.835126926 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.682882398 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.675829526 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.898265348 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.677054084 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.825900248 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.905253316 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.697339863 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.750228203 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.335850194 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.678268115 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.757632504 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.697709184 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.067423902 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.680550418 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.92983101 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.681463548 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.680492685 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.681626228 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.963247568 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.8544867 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.68228318 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.679026462 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.581423184 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.678287661 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.675749218 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.861331071 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.055307298 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.679078628 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.882349237 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.681971972 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.806120167 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.68209631 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.753454014 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.016724777 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.679769303 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.680358188 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.678596479 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.681324392 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.682699093 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.941376602 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.707197496 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.180859671 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.815663735 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.952383386 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.986786035 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.923564567 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.719924133 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.682379423 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.930961556 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.68486767 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.743934027 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.683658711 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.700407462 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.910352689 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.68119665 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.888294896 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.952613392 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.528242999 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.727984504 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.683311152 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.676907603 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.681615287 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.827557061 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.761160608 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.686743364 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.681955014 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.797286197 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.800750599 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.888442274 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.68370967 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.805391157 seconds)
  done (took 860.233382713 seconds)
done (took 1158.928812864 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.681467109 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.684779358 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.681336215 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.684973706 seconds)
  done (took 28.345814792 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.689487915 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.68481647 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.681280265 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.680658418 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.682469453 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.685543016 seconds)
  done (took 11.718366943 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.696492295 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.682438456 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.681899586 seconds)
  done (took 20.67313158 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.75061565 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.060525595 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.811360561 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.094727056 seconds)
  done (took 9.332813813 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.684703391 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.682647874 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.683004256 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.681583118 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.692366603 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.693673894 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.679104211 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.683747297 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.690502769 seconds)
  done (took 16.784471416 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.692849014 seconds)
done (took 92.16434848 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.695462521 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.786805726 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.746521458 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.989012357 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.818190812 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.978497029 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.815073803 seconds)
    (8/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.872972204 seconds)
    (9/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.707795837 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.681498787 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.786685262 seconds)
    (12/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.686197502 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.699626568 seconds)
    (14/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.99973013 seconds)
    (15/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.814857011 seconds)
    (16/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.770405806 seconds)
    (17/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.684232393 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.926229709 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.961937402 seconds)
    (20/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.69591444 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.707640651 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.70844269 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.687437986 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.698817351 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.046400796 seconds)
    (26/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.68935769 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.508030242 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.783088375 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.008226759 seconds)
    (30/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.847462009 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.778541535 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.685630585 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.919763466 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.685765904 seconds)
    (35/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.507294219 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.303336305 seconds)
    (37/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.802118851 seconds)
    (38/309) benchmarking ("sort", Float32, false)...
    done (took 5.419243999 seconds)
    (39/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.758326605 seconds)
    (40/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.819121623 seconds)
    (41/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.826112176 seconds)
    (42/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.703408581 seconds)
    (43/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.686168314 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 8.085051242 seconds)
    (45/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.72905236 seconds)
    (46/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.582504221 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.856274218 seconds)
    (48/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.470574429 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.302597253 seconds)
    (50/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.868771008 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.790065118 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.94147557 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.295369613 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.055695359 seconds)
    (55/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.026820976 seconds)
    (56/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.771123675 seconds)
    (57/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.013857606 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 1.902705961 seconds)
    (59/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.540671159 seconds)
    (60/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.627083929 seconds)
    (61/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.235145438 seconds)
    (62/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.786561786 seconds)
    (63/309) benchmarking ("sort", Int64, false)...
    done (took 5.419121576 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.890831123 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.682793548 seconds)
    (66/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 8.184849529 seconds)
    (67/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.932352901 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.961477132 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.368352145 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.007793533 seconds)
    (71/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.836836906 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.701290256 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.681156304 seconds)
    (74/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.236877905 seconds)
    (75/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.942825329 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.77164165 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.686594897 seconds)
    (78/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.801835081 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.981614717 seconds)
    (80/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.061039376 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.943713567 seconds)
    (82/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.686355538 seconds)
    (83/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.833092873 seconds)
    (84/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.703028493 seconds)
    (85/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.97196108 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.812483309 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.698283431 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.783812511 seconds)
    (89/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.683851983 seconds)
    (90/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.684587451 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.765867511 seconds)
    (92/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.052050363 seconds)
    (93/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.923992892 seconds)
    (94/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.689866002 seconds)
    (95/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.924622864 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.023049372 seconds)
    (97/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.033119784 seconds)
    (98/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.899617631 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.574551556 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.683109751 seconds)
    (101/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.766813543 seconds)
    (102/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.682362499 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 4.140861671 seconds)
    (104/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.717483267 seconds)
    (105/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.851583911 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.681119567 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.344833841 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.700321121 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.077777454 seconds)
    (110/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.340775688 seconds)
    (111/309) benchmarking ("sort", Float64, false)...
    done (took 5.465219926 seconds)
    (112/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.862919279 seconds)
    (113/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.686621207 seconds)
    (114/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.784973283 seconds)
    (115/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.694556234 seconds)
    (116/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.696586921 seconds)
    (117/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.056673945 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.833977524 seconds)
    (119/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.784039663 seconds)
    (120/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.689229658 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.255950361 seconds)
    (122/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.983181846 seconds)
    (123/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.765649871 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.074413641 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.117227054 seconds)
    (126/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.04318623 seconds)
    (127/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.925256381 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.881127572 seconds)
    (129/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.70558005 seconds)
    (130/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.757128643 seconds)
    (131/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.70682474 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.652935443 seconds)
    (133/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.81652317 seconds)
    (134/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.683303555 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.459806565 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.69695496 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.682008892 seconds)
    (138/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.797051236 seconds)
    (139/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.684285546 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.465176771 seconds)
    (141/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.683124107 seconds)
    (142/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.712804874 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.686858899 seconds)
    (144/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.899539027 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.841793403 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.795357135 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.813252794 seconds)
    (148/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.791942565 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.93910176 seconds)
    (150/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.706263898 seconds)
    (151/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.688128212 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.877759924 seconds)
    (153/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.88150393 seconds)
    (154/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.907210942 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.942138109 seconds)
    (156/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.689897674 seconds)
    (157/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.974626477 seconds)
    (158/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.820818786 seconds)
    (159/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.686376622 seconds)
    (160/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.999035613 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.702495305 seconds)
    (162/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.922564844 seconds)
    (163/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.75160712 seconds)
    (164/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.762547289 seconds)
    (165/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.705549637 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.703245428 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.699340791 seconds)
    (168/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.008764437 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.43025015 seconds)
    (170/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.132146468 seconds)
    (171/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.010669334 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.806254105 seconds)
    (173/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.761306208 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.000515265 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.689724793 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.875998777 seconds)
    (177/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.821108904 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.424817647 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.081839638 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.788694607 seconds)
    (181/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.687679743 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.871259162 seconds)
    (183/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.945224117 seconds)
    (184/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.687698428 seconds)
    (185/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.68828818 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.254856523 seconds)
    (187/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.921199848 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.714519865 seconds)
    (189/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.687378159 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 7.35892435 seconds)
    (191/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.471848267 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.70484276 seconds)
    (193/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.616871532 seconds)
    (194/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.715720015 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.774844107 seconds)
    (196/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.889731523 seconds)
    (197/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.943859292 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.835968125 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.697339441 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.211186175 seconds)
    (201/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.481687492 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.90050599 seconds)
    (203/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.075046862 seconds)
    (204/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.763147545 seconds)
    (205/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.023164945 seconds)
    (206/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.955222414 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.79360085 seconds)
    (208/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.804155824 seconds)
    (209/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.859035229 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.76202404 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.699875663 seconds)
    (212/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.192994305 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.707597219 seconds)
    (214/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.81424591 seconds)
    (215/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.077945936 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.061049406 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.934965969 seconds)
    (218/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.844789092 seconds)
    (219/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.843454176 seconds)
    (220/309) benchmarking ("sort", BigInt, false)...
    done (took 6.702842892 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.676283586 seconds)
    (222/309) benchmarking ("sort", Int8, false)...
    done (took 4.58214575 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.702927295 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.406029285 seconds)
    (225/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.894239627 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.931791912 seconds)
    (227/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.699340582 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 7.900142788 seconds)
    (229/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.809474383 seconds)
    (230/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.146696837 seconds)
    (231/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.70644598 seconds)
    (232/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.962988861 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.727294294 seconds)
    (234/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.993791561 seconds)
    (235/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.877669929 seconds)
    (236/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.715426197 seconds)
    (237/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.870602296 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.057102873 seconds)
    (239/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.700889068 seconds)
    (240/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.377813983 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.941787692 seconds)
    (242/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.956063986 seconds)
    (243/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.810795337 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.705026045 seconds)
    (245/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.783256943 seconds)
    (246/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.499196567 seconds)
    (247/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.788551248 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.825540205 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.699510875 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.924015222 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.840189769 seconds)
    (252/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.930143396 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.783142167 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.612414108 seconds)
    (255/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.807057784 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.799821558 seconds)
    (257/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.702599474 seconds)
    (258/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.018105547 seconds)
    (259/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.942751772 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.680819405 seconds)
    (261/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.848774845 seconds)
    (262/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.822401423 seconds)
    (263/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.952628593 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.035244918 seconds)
    (265/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.700420148 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.802274633 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.80212926 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.710395265 seconds)
    (269/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.410896897 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.720378385 seconds)
    (271/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.810692656 seconds)
    (272/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.729667375 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.390964186 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.1066141 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.005492027 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.792964731 seconds)
    (277/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.039001476 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.033290248 seconds)
    (279/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.161277708 seconds)
    (280/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.896075022 seconds)
    (281/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.711806124 seconds)
    (282/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.95946132 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.099495996 seconds)
    (284/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.784784025 seconds)
    (285/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.985884378 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.70496756 seconds)
    (287/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.721719609 seconds)
    (288/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.591671315 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.047448501 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.46907863 seconds)
    (291/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.701929136 seconds)
    (292/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.729384542 seconds)
    (293/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.03293868 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.708803359 seconds)
    (295/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.894926481 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.495646916 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.737910199 seconds)
    (298/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.149290536 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.713818832 seconds)
    (300/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.776377371 seconds)
    (301/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 3.388736843 seconds)
    (302/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.043483406 seconds)
    (303/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.731440708 seconds)
    (304/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.620174462 seconds)
    (305/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.089592746 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.916159044 seconds)
    (307/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.922294247 seconds)
    (308/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.048328715 seconds)
    (309/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.87031961 seconds)
  done (took 952.358155576 seconds)
done (took 954.038751126 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.732844859 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.724773194 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.707487478 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.727636188 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.818126726 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.753263423 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.71945614 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.710733828 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.757665764 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.756580667 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.704759151 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.751159617 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.705721363 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.708798444 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.705188378 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.722469901 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.021431934 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.738110366 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.725128353 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.71977202 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.725817743 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.706327209 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.758955743 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.752084052 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.712513447 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.711252452 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.710634926 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.727873667 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.819076702 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.708926926 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.713212219 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.720501777 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.02173682 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.737105069 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.705507167 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.72747872 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.722233576 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.719262027 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.711271906 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.739720229 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.108763632 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.747866966 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.709174626 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.707559512 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.707747439 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.715177211 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.709100144 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.716564129 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.724800444 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.725208542 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.104185247 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.766416336 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.710405688 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.709188483 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.722094283 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.708938951 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.712875231 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.724600353 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.729384129 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.728692734 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.007912336 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.746232899 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.71299446 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.727945136 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.719811185 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.141084302 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.750103695 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.713702519 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.110348868 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.758552909 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.138530285 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.761027567 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.713606916 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.724665047 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.742161163 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.024809375 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.73931557 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.708731652 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.719396836 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.707959325 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.722345087 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.72743231 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.715520958 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.710654009 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.725844204 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.755787097 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.725092766 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.710655429 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.721425048 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.730023793 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.718361247 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.7227417 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.714807898 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.709311106 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.722973201 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.714537296 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.713105746 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.713192416 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.714869827 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.724220736 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.109943346 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.767403902 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.709008147 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.707887087 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.712642585 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.724261237 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.110611481 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.752263068 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.735256562 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.762382422 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.712819982 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.009699487 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.743731352 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.727378019 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.722226362 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.714211222 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.710815462 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.009201808 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.132721335 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.769607414 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.71525367 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.711294918 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.728756716 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.714397899 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.708989357 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.024692592 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.748102508 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.72825187 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.833760797 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.725922763 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.744902096 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.710436569 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.716218139 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.762295421 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.727355993 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.745060305 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.714976918 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.729662962 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.730144721 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.710319349 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.725665754 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.724773654 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.713260272 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.724286167 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.710828113 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.763812129 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.728804356 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.727950775 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.734756572 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.840244123 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.711689714 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.012109795 seconds)
done (took 269.773700756 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.791228949 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.710271451 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.805821848 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.714859862 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.80391586 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.787198645 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.712239611 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.712888618 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.711544031 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.211336955 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.71173787 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.719992559 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.710845047 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.710575462 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.784082307 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.709830644 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.712005158 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.15733658 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.712870043 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.790379086 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.714794849 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.713095511 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.713823105 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.200274159 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.714400968 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.713584292 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.79654407 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.711468431 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.148907511 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.712111998 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.71262466 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.149088415 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.791723027 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.73831829 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.719454637 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.717723096 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.80325656 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.726339934 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.780640808 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.780581935 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.808849396 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.747447647 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.713176882 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.710287456 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.715244664 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.714145368 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.714219942 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.745011994 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.713347139 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.719957491 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.158085786 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.719616411 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.719379199 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.711832222 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.713389914 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.743007769 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.712897214 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.717976414 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.795230038 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.71537474 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.78114802 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.201668747 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.216150268 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.714614871 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.714717354 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.716073209 seconds)
  done (took 174.735245683 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.782964505 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.791372504 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.780827896 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.719039165 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.764432939 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.782093261 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.719145778 seconds)
  done (took 13.984337226 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.721505101 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.71520474 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.765236811 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.764938115 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.714794716 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.87250429 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.715788207 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.729471486 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.720522876 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.74353648 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.717368553 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.716408693 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.722322745 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.713582617 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.764653053 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.727713596 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.832712084 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.718826495 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.714788916 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.86403 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.720706778 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.72301398 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.742002138 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.728357186 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.718202827 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.724323116 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.295720527 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.715242856 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.716154813 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.718233346 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.716241143 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.758417874 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.717371968 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.715185783 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.719045463 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.830089151 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.71782529 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.717328734 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.717569299 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.716723912 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.715629884 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.717227787 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.717630766 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.718178775 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.717593066 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.740706061 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.71890212 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.717543651 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.718256767 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.718626501 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.745401785 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.716778279 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.718039909 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.723705187 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.761741764 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.723888477 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.721893203 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.716143472 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.715180232 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.717945275 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.868323869 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.769298648 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.716988687 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.767107328 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.718472493 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.719274009 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.718798366 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.719662296 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.807655718 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.718214212 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.768125551 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.719620349 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.878900411 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.744361924 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.719730238 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.723352961 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.722256149 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.718236736 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.716974924 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.72647599 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.718791836 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.722834595 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.727477541 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.725673007 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.719081629 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.832539517 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.861047839 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.718514001 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.720321839 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.728379925 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.719039482 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.763569318 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.718259026 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.719048087 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.777229943 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.835404592 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.746788002 seconds)
  done (took 190.907017583 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.728761702 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.729811261 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.721833351 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.735347566 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.724231424 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.720147323 seconds)
  done (took 12.009808251 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.722551337 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.724171093 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.719635338 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.720547477 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.720198346 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.723056998 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.720471564 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.722932978 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.723954485 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.720364902 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.721643711 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.722677077 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.723395378 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.723735655 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.720803414 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.719605713 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.721512926 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.721001284 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.722237919 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.721303144 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.972571016 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.722230586 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.721550274 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.723678197 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.727385328 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.721893477 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.737703586 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.723054229 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.723495534 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.73163923 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.728117553 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.723154682 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.72382329 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.732889175 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.732009619 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.72553475 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.726376139 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.721699993 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.722725289 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.72082203 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.720970874 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.724072862 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.721575332 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.724105669 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.725573192 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.731255446 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.72721082 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.737583724 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.722835595 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.722809424 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.722618584 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.724252014 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.722376883 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.722151393 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.727925443 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.73025267 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.727778094 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.723500695 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.72277166 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.724137255 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.729016645 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.724986971 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.726274699 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.729978231 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.730200557 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.72362181 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.72757591 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.72948927 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.728230344 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.72416233 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.725696866 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.723806264 seconds)
  done (took 127.076454712 seconds)
done (took 520.37380953 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.999923881 seconds)
  done (took 8.653178041 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.733906543 seconds)
  done (took 8.450679904 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.286145634 seconds)
  done (took 9.942646318 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.752028106 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.754791222 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.743494649 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.724135626 seconds)
  done (took 28.657966803 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.004933976 seconds)
  done (took 8.658484246 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.747498896 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.721719727 seconds)
  done (took 15.197001104 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.739198351 seconds)
  done (took 8.397258983 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.051468277 seconds)
  done (took 8.712623137 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.744774098 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.732080697 seconds)
  done (took 15.155260159 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.726721553 seconds)
  done (took 8.381845135 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.98453219 seconds)
  done (took 9.743057728 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.757336694 seconds)
  done (took 8.486570392 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.816933355 seconds)
  done (took 8.47417947 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.852592937 seconds)
  done (took 8.507829938 seconds)
done (took 157.072339216 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.730930496 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.723527707 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.725539588 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.722901055 seconds)
  done (took 28.557473178 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.761139535 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.761526668 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.76562485 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.771377956 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.76166142 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.776782592 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.752247118 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.750711562 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.771965128 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.763629521 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.777137196 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.763386471 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.760599106 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.753198552 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.767386795 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.761566587 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.771186056 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.760504407 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.754579553 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.763127746 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.730214268 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.769832122 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.762682779 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.728985461 seconds)
  done (took 43.918697599 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.920040491 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.798843096 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.883300915 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.782376922 seconds)
  done (took 9.041672947 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.78029732 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.786296678 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.79103038 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.831562952 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.856871437 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.790978772 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.750227516 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.755329475 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.735387348 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.780499858 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.857249891 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.77587126 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.868472365 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.727871717 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.910866746 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.728302931 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.727787462 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.780725286 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.832947732 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.843992926 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.728961529 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.780341548 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.783542386 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.780649394 seconds)
  done (took 44.642067584 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.729640062 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.738370565 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.736935003 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.730284921 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.73431347 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.732168784 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.737079498 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.72909348 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.75160282 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.731602842 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.731400028 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.730921443 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.734165678 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.730556118 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.7304729 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.745463995 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.744392854 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.731409675 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.736918468 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.736885673 seconds)
  done (took 36.361829827 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.728428425 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.577821081 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.077352713 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.982023868 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.730929292 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.72841576 seconds)
  done (took 30.484511515 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.746380629 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.737951221 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.732325361 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.790352425 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.87504038 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.737526586 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.736662842 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.743321706 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.779694197 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.798077184 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.751046736 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.761495771 seconds)
  done (took 22.849131916 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.733879244 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.731889716 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.732106109 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.743552675 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.742283107 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.738541535 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.739666185 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.732955424 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.743638524 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.750948263 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.740182367 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.743963171 seconds)
  done (took 42.541920307 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807924938 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.60466831 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183146272 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200366205 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.255358789 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934615535 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.73144474 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.814091315 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.731454164 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.999780092 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.132961345 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941345201 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.976456274 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.538659776 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.732730561 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.217618892 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026605361 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952914795 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.759874324 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388893806 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846008449 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.244348458 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.451662569 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.847187678 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933831274 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.84885806 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.986945983 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.684964982 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.780642208 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733740472 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735282677 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.731336337 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.003885897 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851567647 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801290731 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735568135 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.149091262 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.436566465 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.738794662 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.445056519 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.329348072 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.85515033 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.732898642 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.732433011 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.657509937 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.238881004 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822154596 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.734454862 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.430726874 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.730544006 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736339251 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80584427 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.733741225 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.537884555 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.418015407 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.9992976 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.732635225 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735388518 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.291973419 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772856492 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.358469128 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.666979034 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.827939927 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.45025192 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200635276 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.889743683 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.732032132 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735061775 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.658449054 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.449629418 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854722437 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.870061934 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.748525726 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37438519 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029091467 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.224820032 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.790161715 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009267339 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.526624634 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.665417163 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948734758 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.67841192 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.659962889 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.561936819 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.662550062 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951682447 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773297398 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.345008855 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771963989 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.816268311 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.739904565 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748074749 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.737185375 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.948111147 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.628671056 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.734717804 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.070650774 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.993753427 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750968622 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.819923941 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.660747853 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.73693605 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98061123 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.937319458 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.969575203 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.226893824 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.828114174 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.671905839 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.750307412 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.659830897 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.744913115 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.011259321 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.797983116 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776971194 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860605638 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.683342486 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986973962 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.718610322 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.835128944 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.149051445 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.980733476 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.083627345 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.984298599 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.797669337 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.740363367 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.737096828 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.461071941 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.352925396 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.954026386 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.753195923 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.227050817 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.745236094 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.735631702 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.67211566 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.398772069 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.148575939 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.822033868 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.952912397 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.692516216 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.01278204 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.664191613 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.875245993 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.724714484 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.947764468 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.394735365 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.82788337 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98523177 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.973975433 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.967792291 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.748873786 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754368879 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829835666 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.754277512 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.162665714 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.98587465 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.73988405 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.739141379 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.473460762 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.798698121 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.741781813 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.743047402 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.289945821 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017358623 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.763822395 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.741578414 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.614876082 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.750080397 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799490499 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.740791626 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.741343512 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.259990474 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.245140457 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.741986913 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.400411746 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95425675 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.744471363 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.401085201 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921914719 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.751554635 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.016822207 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808698937 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.66503177 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.440693533 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.442133641 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.740332928 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.66602069 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.743317768 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.742505566 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746071291 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.930960906 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.024468257 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.791973418 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.458659313 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.851344692 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744475091 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.742810768 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.740082347 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.231044778 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785140407 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362896846 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.748763522 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.867685653 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.752212011 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.667545772 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.74234702 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.742649665 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.741951225 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.691010727 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790584252 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.454700717 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955474742 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9903909 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.149023283 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.749195091 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.459510232 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.866585493 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.755536883 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.090397815 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394273722 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.753489666 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806155547 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.748051913 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.469792472 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482393707 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304387244 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041960911 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066203672 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104651674 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.235962579 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.956154652 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.828143125 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968599112 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.263098966 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.798931012 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.832766079 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.679360667 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.756950968 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.400724592 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100523727 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.751222384 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958595068 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041022477 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.157979674 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883372494 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.945712808 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773139226 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.540424695 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.791306192 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.27744523 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763550854 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.251430606 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953994373 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824358666 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.097069845 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.826376015 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.744049134 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089401223 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789265892 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.447315367 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.095661449 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.127496155 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.277295166 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979473522 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.744663114 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.18024318 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101201014 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.926901487 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.862245611 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.672501051 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.749615795 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.748266196 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.755426628 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.715601805 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.573873469 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.988052548 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.748886673 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973133634 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.849743851 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115060638 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.65051294 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.746411268 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.744886834 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996706059 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405978557 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897607538 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.03574107 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.311281879 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.753376304 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.672236876 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.67254423 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.446935473 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.751644223 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711047789 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958640024 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.854578434 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.428623191 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.114422592 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055423076 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.990221497 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.756195827 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025056577 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025437259 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.238260712 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766932566 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.843340219 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.241823359 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.443124151 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.959370336 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.975892934 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279873119 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.961827149 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223349643 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.720862156 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.746651965 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.953235935 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.958281523 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.171020819 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927282897 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.455413221 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.763099683 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104094087 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809606824 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.168766736 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.939025177 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.834674106 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.753488171 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824143133 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.750621085 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.753881837 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.753239507 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755179347 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.168072103 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.868895132 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.758081103 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.824623936 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807029855 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.322894582 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.754087098 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.025076563 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105908561 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.088627724 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813420021 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.745665429 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.755810013 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.673658409 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873825644 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.186227521 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.018060552 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.866385113 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.880395176 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767420951 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.108134797 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.990084366 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052695604 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.019228973 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.630759769 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367982179 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.863141151 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.963885098 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.753147043 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.949714897 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966883248 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060650455 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308911605 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.871400312 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.9348063 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.020054574 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.104366146 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.749480513 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324989145 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.754541534 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.142978202 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.785958881 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.169146382 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013394845 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.749106393 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871565967 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.752250736 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.951566498 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.200089718 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.467700132 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102226519 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.605201634 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.751076997 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.029079283 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084241912 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0537151 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823200515 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75610034 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.438792772 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881879951 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.629880007 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.964873846 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.75013079 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950896295 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.458600413 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.75241471 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031497288 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05721537 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.748267661 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.652394269 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.783020457 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.751890646 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.963102693 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969002821 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.998160852 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754185914 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.754832452 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.558250136 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03212222 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81493835 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.676615449 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.749162256 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.795476115 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.976538733 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76684892 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.264503759 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.45061062 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037442 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.659632946 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.766907971 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.141885566 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.136274161 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086848029 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.271073654 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972122513 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.306824358 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.582752495 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124332598 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.753053074 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.134268996 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129405293 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.752455074 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.229442895 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858344663 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.027172301 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077660562 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.756692822 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.538531261 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.788498931 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963454573 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.110671027 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.682488879 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.754896179 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.80042442 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.753376585 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.736148926 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.758440606 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.694433607 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.178311829 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.590748805 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309406046 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.752612662 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.86902381 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.161638652 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.283717765 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854322079 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.772212548 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.759726024 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.452090916 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.038303383 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.998594502 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.24234692 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.845369049 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.75305248 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.752742707 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.673519551 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.93435014 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.940428509 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041504158 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.090482154 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.856829007 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753533795 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.960567389 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957110045 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.185624765 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.893094971 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.860570171 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864503699 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.695529847 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.461437833 seconds)
  done (took 1601.994070832 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.75644477 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.779464769 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.783473161 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.840187962 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.77539304 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.773580554 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.82126115 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.855089146 seconds)
  done (took 56.069058604 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.759161733 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.913397864 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.764301728 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.761589992 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.763505485 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.763005136 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.919716325 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.771391378 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.760714466 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.765877727 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.760927415 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.758179383 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.033931116 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.778201885 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.761232415 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.763074865 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.785962772 seconds)
  done (took 72.281725347 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.760792749 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.923661805 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.786332002 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.759237384 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.459029195 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.769099193 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.677603453 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.817366347 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.761146946 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.227551249 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.053931448 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.794747581 seconds)
  done (took 88.478087187 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.770781717 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.762346935 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.761365631 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.761662596 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.764970385 seconds)
  done (took 10.517810052 seconds)
done (took 2089.415307737 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.166117002 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.948152849 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.011025488 seconds)
  done (took 5.645617045 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.90120062 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.951955055 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.065102717 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.071155544 seconds)
  done (took 9.682095135 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.062602088 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.128333172 seconds)
  done (took 5.878835666 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.074385206 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.778141959 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.130414467 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.76270849 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.761217736 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.760145623 seconds)
  done (took 21.976089152 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.762231728 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.760616156 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.762183223 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.761457581 seconds)
  done (took 8.734617967 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.75789685 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.463626348 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.760062512 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.771182998 seconds)
  done (took 20.440315289 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.910492244 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.876612968 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.912428789 seconds)
  done (took 7.38685827 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.904778592 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.614209352 seconds)
  done (took 6.207010846 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.899942949 seconds)
  done (took 3.58877195 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.787865978 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.028910771 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.246454608 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.794547999 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.382540225 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.008174282 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.104431332 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.986713111 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.206166608 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.239420435 seconds)
  done (took 24.475118097 seconds)
done (took 128.852078004 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.309434582 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.791805948 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.974303414 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.12442178 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.000785393 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.967557727 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.986307798 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.115864416 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.806269797 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.794408415 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.133261887 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.000653095 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.933138574 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.785597872 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.930106728 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.782945185 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.996395968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.151195314 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.87467808 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.041898899 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.9869435 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.768089127 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.961069004 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.781414532 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.997529644 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.919574352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.311825589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.784529211 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.945604675 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.319150567 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.917574614 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.178044254 seconds)
  done (took 165.061632315 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.766403977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.761973016 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.764432437 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.762510509 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.218253783 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.762561448 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.762913095 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.762168736 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.217019251 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.213040566 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.763932781 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.204814526 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.766521227 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.76293891 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.763504973 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.762509185 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.383778254 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.764649473 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.763354798 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.762988284 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.764891516 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.042956793 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.767369013 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.051141054 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.377631198 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.764967598 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.764320432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.76447431 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.7636328 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.762499956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.764792641 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.764663223 seconds)
  done (took 205.740218979 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.765166606 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.767649697 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.762316226 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.765514584 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.764439564 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.765073768 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.761728498 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.763791686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.528134323 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.515252583 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.76504255 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.765375697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.764588353 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.763501596 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.765458672 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.76612468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.764030948 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.749988861 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.76727673 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.765625866 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.769270332 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.376478372 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.766522859 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.358796259 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.764841697 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.768870909 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.765257989 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.76415362 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.765038282 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.767179613 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.765112008 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.76564576 seconds)
  done (took 216.888044695 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.007930758 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.767754317 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.76920007 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.761706458 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.768505364 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.767688633 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.747202453 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.018291405 seconds)
  done (took 18.304972828 seconds)
done (took 607.693136247 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.164213331 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.996044349 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.942772202 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.792664962 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.054603732 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.836464744 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.789054037 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.858905909 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.615811429 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.86410062 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.424342676 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.809242041 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.520636831 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.813392852 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.911742006 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.847479307 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.338110124 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.436080989 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.96687886 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.875801256 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.962280673 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.68831644 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.873026604 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.639156238 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.552010834 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.738721368 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.797653582 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.351918482 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.798622425 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.94874102 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.488209536 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.037017554 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.806150286 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.787674784 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.842782459 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.821077449 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.97668854 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.804518289 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.91520403 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.487514921 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.872325637 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.519621773 seconds)
  done (took 98.261325811 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.784448062 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.777810056 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.777807531 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.777632225 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.787291354 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.774797043 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.774961769 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.776534273 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.775960273 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.777143196 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.776305589 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.784863553 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.776230679 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.785549448 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.777713533 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.777337745 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.775293243 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.784394068 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.776080883 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.775141018 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.776746654 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.776738293 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.771288805 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.776380891 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.777192876 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.776675081 seconds)
  done (took 47.941714109 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.771760001 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.941830861 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.017438682 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.789643105 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.773794683 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.77468042 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.79050653 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.775632138 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.773370194 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.775422383 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.862461753 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.777669799 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.792478863 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.019397447 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.792418759 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.771612452 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.772128181 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.773473593 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.950989632 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.788181976 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.792176949 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.776384194 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.79316505 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.785759535 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.775112788 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.77341114 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.777401168 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.215895015 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.780479165 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.863837674 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.829212703 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.795103401 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.159479334 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.028436784 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.826361481 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.779847324 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.772754228 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.867261213 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.778315051 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.774208038 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.792048622 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.779586994 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.019506508 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.298856934 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.787185457 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.773408237 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.227101661 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.878207128 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.813179866 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.782121525 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.024077751 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.790382014 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.772818206 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.774918045 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.811054194 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.779333899 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.772749502 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.087016271 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.784743818 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.790473927 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.776082873 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.776060962 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.95950427 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.78292573 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.942638121 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.784750691 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.782254921 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.776211491 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.020531063 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.79101276 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.309096519 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.789127775 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.775366239 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.866013945 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.948126852 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.250710726 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.78543111 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.963306873 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.175342749 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.79754875 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.783609384 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.206903606 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.80342378 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.78097973 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.777214769 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.77679535 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.77460125 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.818228355 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.790987532 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.222965924 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.309868785 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.103006679 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.79914978 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.791078041 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.77591021 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.086559987 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.78308537 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.775231606 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.013873738 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.314687047 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.790626314 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.786084843 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.292671439 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.791444608 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.794164166 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.785249092 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.025943748 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.793506917 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.818041903 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.777944489 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.784655723 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.782075547 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.794211372 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.782744691 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.7777762 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.282428624 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.886810918 seconds)
  done (took 220.957318567 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.779424431 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.778072781 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.774057655 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.779152865 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.779846275 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.777527797 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.776397996 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.776701967 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.778394281 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.774707847 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.776647561 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.775383074 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.777692036 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.78272601 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.783495836 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.779693441 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.379366766 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.777502154 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.777026706 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.775529106 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.42623707 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.781648186 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.779275494 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.775866087 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.778058865 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.778435803 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.780886276 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.780700882 seconds)
  done (took 164.747671005 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.777189399 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.889791893 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.793153829 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.805560709 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.78366776 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.777569846 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.877587692 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.798924031 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.785439494 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.77695419 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.77912384 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.83919608 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.787163244 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.876895589 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.811426355 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.887376455 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.8847302 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.787623118 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.780286553 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.780523071 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.80999066 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.787519281 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.841262924 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.90244903 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.793916754 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.894149115 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.796178018 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.780614643 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.778963628 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.894115327 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.795260612 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.840097733 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.803693025 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.795659888 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.898122457 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.892747529 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.884488898 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.887430991 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.78743988 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.781755033 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.780190534 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.780268791 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.893685683 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.796450418 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.782349291 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.895722381 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.796027259 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.780889468 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.782258272 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.780350182 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.794393036 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.799271016 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.845345856 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.90991762 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.811962587 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.803772118 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.879811674 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.906850599 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.780756449 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.881290937 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.790164704 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.894030157 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.79863177 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.780429957 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.78290826 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.78788841 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.810380222 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.882646008 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.888666234 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.789810491 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.879846278 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.817159791 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.786212481 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.784183128 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.782037726 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.896006558 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.897338484 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.817478804 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.816219528 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.812059475 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.788121004 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.782859594 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.783402456 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.800325816 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.78696034 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.897050622 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.897115185 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.791120999 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.781646108 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.784720377 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.784626237 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.806904065 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.902026616 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.814195862 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.887226627 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.85086177 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.853239906 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.792645255 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.795846092 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.78782439 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.844641277 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.795520752 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.79280347 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.069874213 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.845476219 seconds)
  done (took 193.32872935 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.156952829 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.832462725 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.839343239 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.087600827 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.140609131 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.707437616 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.825615419 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.82762913 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.855925067 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.01543934 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.892814132 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.847454028 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.816614745 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.804268072 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.82823385 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.855741794 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.838591827 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.162591973 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.050175998 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.020559017 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.817223489 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.132314142 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.143623413 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.389981751 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.878423535 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.229590867 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.388606358 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.96047553 seconds)
  done (took 59.065155329 seconds)
done (took 785.994771816 seconds)
SAVING RESULT...
DONE!
